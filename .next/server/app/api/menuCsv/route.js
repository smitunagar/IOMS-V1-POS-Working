/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/menuCsv/route";
exports.ids = ["app/api/menuCsv/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/@opentelemetry/instrumentation/build/esm/platform/node sync recursive":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync ***!
  \***********************************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/@opentelemetry/instrumentation/build/esm/platform/node sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "(rsc)/./node_modules/require-in-the-middle sync recursive":
/*!**************************************************!*\
  !*** ./node_modules/require-in-the-middle/ sync ***!
  \**************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/require-in-the-middle sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("express");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "async_hooks":
/*!******************************!*\
  !*** external "async_hooks" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("async_hooks");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dgram":
/*!************************!*\
  !*** external "dgram" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("dgram");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("http2");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "perf_hooks":
/*!*****************************!*\
  !*** external "perf_hooks" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("perf_hooks");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ "node:net":
/*!***************************!*\
  !*** external "node:net" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:net");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ }),

/***/ "node:perf_hooks":
/*!**********************************!*\
  !*** external "node:perf_hooks" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:perf_hooks");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream/web");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:url");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:zlib");

/***/ }),

/***/ "?4d6b":
/*!********************************!*\
  !*** supports-color (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FmenuCsv%2Froute&page=%2Fapi%2FmenuCsv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FmenuCsv%2Froute.ts&appDir=%2FUsers%2Fnishantchaturvedi%2FDesktop%2FIOMS%2FIOMS-V1-POS-Working%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnishantchaturvedi%2FDesktop%2FIOMS%2FIOMS-V1-POS-Working&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FmenuCsv%2Froute&page=%2Fapi%2FmenuCsv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FmenuCsv%2Froute.ts&appDir=%2FUsers%2Fnishantchaturvedi%2FDesktop%2FIOMS%2FIOMS-V1-POS-Working%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnishantchaturvedi%2FDesktop%2FIOMS%2FIOMS-V1-POS-Working&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_nishantchaturvedi_Desktop_IOMS_IOMS_V1_POS_Working_src_app_api_menuCsv_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/menuCsv/route.ts */ \"(rsc)/./src/app/api/menuCsv/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/menuCsv/route\",\n        pathname: \"/api/menuCsv\",\n        filename: \"route\",\n        bundlePath: \"app/api/menuCsv/route\"\n    },\n    resolvedPagePath: \"/Users/nishantchaturvedi/Desktop/IOMS/IOMS-V1-POS-Working/src/app/api/menuCsv/route.ts\",\n    nextConfigOutput,\n    userland: _Users_nishantchaturvedi_Desktop_IOMS_IOMS_V1_POS_Working_src_app_api_menuCsv_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/menuCsv/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtZW51Q3N2JTJGcm91dGUmcGFnZT0lMkZhcGklMkZtZW51Q3N2JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbWVudUNzdiUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm5pc2hhbnRjaGF0dXJ2ZWRpJTJGRGVza3RvcCUyRklPTVMlMkZJT01TLVYxLVBPUy1Xb3JraW5nJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm5pc2hhbnRjaGF0dXJ2ZWRpJTJGRGVza3RvcCUyRklPTVMlMkZJT01TLVYxLVBPUy1Xb3JraW5nJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNzQztBQUNuSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYm1lc2l0ZXIzNjAtbWFya2V0cGxhY2UvPzZmODMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL25pc2hhbnRjaGF0dXJ2ZWRpL0Rlc2t0b3AvSU9NUy9JT01TLVYxLVBPUy1Xb3JraW5nL3NyYy9hcHAvYXBpL21lbnVDc3Yvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL21lbnVDc3Yvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9tZW51Q3N2XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9tZW51Q3N2L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL25pc2hhbnRjaGF0dXJ2ZWRpL0Rlc2t0b3AvSU9NUy9JT01TLVYxLVBPUy1Xb3JraW5nL3NyYy9hcHAvYXBpL21lbnVDc3Yvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL21lbnVDc3Yvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FmenuCsv%2Froute&page=%2Fapi%2FmenuCsv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FmenuCsv%2Froute.ts&appDir=%2FUsers%2Fnishantchaturvedi%2FDesktop%2FIOMS%2FIOMS-V1-POS-Working%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnishantchaturvedi%2FDesktop%2FIOMS%2FIOMS-V1-POS-Working&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/ai/flows/generate-ingredients-list.ts":
/*!***************************************************!*\
  !*** ./src/ai/flows/generate-ingredients-list.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateIngredientsList: () => (/* binding */ generateIngredientsList)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ai_genkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/ai/genkit */ \"(rsc)/./src/ai/genkit.ts\");\n/* harmony import */ var _ingredient_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ingredient-types */ \"(rsc)/./src/ai/flows/ingredient-types.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"82727833da42bba9f14649d67150c335743a1b8d\":\"generateIngredientsList\"} */ \n\n\n\nconst prompt = _ai_genkit__WEBPACK_IMPORTED_MODULE_2__.ai.definePrompt({\n    name: \"generateIngredientsListPrompt\",\n    input: {\n        schema: _ingredient_types__WEBPACK_IMPORTED_MODULE_3__.GenerateIngredientsListInputSchema\n    },\n    output: {\n        schema: _ingredient_types__WEBPACK_IMPORTED_MODULE_3__.GenerateIngredientsListOutputSchema\n    },\n    prompt: `You are a chef. Generate a list of ingredients needed for the dish \"{{dishName}}\" for {{numberOfServings}} servings.\n\nIMPORTANT:\n- The language of the ingredient names and units must always match the language of the dish name. If the dish name is in German, all ingredient names and units must be in German. If the dish name is in English, use English. Do not translate or mix languages.\n- Always include the main protein or key ingredient (e.g., if the dish is \"Palak Chicken\" or \"Chicken Palak\", always include \"Chicken\" as an ingredient).\n\nFor each ingredient, provide its name, quantity (as a number), and unit (e.g., \"g\", \"ml\", \"pcs\", \"kg\").\nNever return a quantity of 0. If unsure, estimate a typical amount for one serving based on common recipes or chef experience.\nReturn the output as a JSON object with a single key \"ingredients\".\nThe \"ingredients\" key should have a value of an array of objects, where each object has \"name\" (string), \"quantity\" (number), and \"unit\" (string) fields.\nBe as accurate as possible.\n\nExample (English):\n{\n  \"ingredients\": [\n    { \"name\": \"Chicken Breast\", \"quantity\": 200, \"unit\": \"g\" },\n    { \"name\": \"Spinach\", \"quantity\": 150, \"unit\": \"g\" },\n    { \"name\": \"Onion\", \"quantity\": 50, \"unit\": \"g\" }\n  ]\n}\n\nExample (German):\n{\n  \"ingredients\": [\n    { \"name\": \"Hähnchenbrust\", \"quantity\": 200, \"unit\": \"g\" },\n    { \"name\": \"Spinat\", \"quantity\": 150, \"unit\": \"g\" },\n    { \"name\": \"Zwiebel\", \"quantity\": 50, \"unit\": \"g\" }\n  ]\n}\n\nEnsure the output strictly follows this JSON format.`\n});\nconst generateIngredientsListFlow = _ai_genkit__WEBPACK_IMPORTED_MODULE_2__.ai.defineFlow({\n    name: \"generateIngredientsListFlow\",\n    inputSchema: _ingredient_types__WEBPACK_IMPORTED_MODULE_3__.GenerateIngredientsListInputSchema,\n    outputSchema: _ingredient_types__WEBPACK_IMPORTED_MODULE_3__.GenerateIngredientsListOutputSchema\n}, async (input)=>{\n    const { output } = await prompt(input);\n    if (!output) {\n        throw new Error(\"AI did not return an output.\");\n    }\n    return output;\n});\nasync function generateIngredientsList(input) {\n    return generateIngredientsListFlow(input);\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_4__.ensureServerEntryExports)([\n    generateIngredientsList\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(\"82727833da42bba9f14649d67150c335743a1b8d\", generateIngredientsList);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYWkvZmxvd3MvZ2VuZXJhdGUtaW5ncmVkaWVudHMtbGlzdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFaUM7QUFPTDtBQUU1QixNQUFNRyxTQUFTSCwwQ0FBRUEsQ0FBQ0ksWUFBWSxDQUFDO0lBQzdCQyxNQUFNO0lBQ05DLE9BQU87UUFBRUMsUUFBUU4saUZBQWtDQTtJQUFDO0lBQ3BETyxRQUFRO1FBQUVELFFBQVFMLGtGQUFtQ0E7SUFBQztJQUN0REMsUUFBUSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0RBOEJ5QyxDQUFDO0FBQ3JEO0FBRUEsTUFBTU0sOEJBQThCVCwwQ0FBRUEsQ0FBQ1UsVUFBVSxDQUMvQztJQUNFTCxNQUFNO0lBQ05NLGFBQWFWLGlGQUFrQ0E7SUFDL0NXLGNBQWNWLGtGQUFtQ0E7QUFDbkQsR0FDQSxPQUFNSTtJQUNKLE1BQU0sRUFBRUUsTUFBTSxFQUFFLEdBQUcsTUFBTUwsT0FBT0c7SUFDaEMsSUFBSSxDQUFDRSxRQUFRO1FBQ1gsTUFBTSxJQUFJSyxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0w7QUFDVDtBQUdLLGVBQWVNLHdCQUF3QlIsS0FBbUM7SUFDL0UsT0FBT0csNEJBQTRCSDtBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYm1lc2l0ZXIzNjAtbWFya2V0cGxhY2UvLi9zcmMvYWkvZmxvd3MvZ2VuZXJhdGUtaW5ncmVkaWVudHMtbGlzdC50cz9mNmIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHNlcnZlclwiO1xuXG5pbXBvcnQgeyBhaSB9IGZyb20gJ0AvYWkvZ2Vua2l0JztcbmltcG9ydCB7XG4gIEdlbmVyYXRlSW5ncmVkaWVudHNMaXN0SW5wdXQsXG4gIEdlbmVyYXRlSW5ncmVkaWVudHNMaXN0T3V0cHV0LFxuICBHZW5lcmF0ZUluZ3JlZGllbnRzTGlzdElucHV0U2NoZW1hLFxuICBHZW5lcmF0ZUluZ3JlZGllbnRzTGlzdE91dHB1dFNjaGVtYSxcbiAgSW5ncmVkaWVudFNjaGVtYVxufSBmcm9tICcuL2luZ3JlZGllbnQtdHlwZXMnO1xuXG5jb25zdCBwcm9tcHQgPSBhaS5kZWZpbmVQcm9tcHQoe1xuICBuYW1lOiAnZ2VuZXJhdGVJbmdyZWRpZW50c0xpc3RQcm9tcHQnLFxuICBpbnB1dDogeyBzY2hlbWE6IEdlbmVyYXRlSW5ncmVkaWVudHNMaXN0SW5wdXRTY2hlbWEgfSxcbiAgb3V0cHV0OiB7IHNjaGVtYTogR2VuZXJhdGVJbmdyZWRpZW50c0xpc3RPdXRwdXRTY2hlbWEgfSxcbiAgcHJvbXB0OiBgWW91IGFyZSBhIGNoZWYuIEdlbmVyYXRlIGEgbGlzdCBvZiBpbmdyZWRpZW50cyBuZWVkZWQgZm9yIHRoZSBkaXNoIFwie3tkaXNoTmFtZX19XCIgZm9yIHt7bnVtYmVyT2ZTZXJ2aW5nc319IHNlcnZpbmdzLlxuXG5JTVBPUlRBTlQ6XG4tIFRoZSBsYW5ndWFnZSBvZiB0aGUgaW5ncmVkaWVudCBuYW1lcyBhbmQgdW5pdHMgbXVzdCBhbHdheXMgbWF0Y2ggdGhlIGxhbmd1YWdlIG9mIHRoZSBkaXNoIG5hbWUuIElmIHRoZSBkaXNoIG5hbWUgaXMgaW4gR2VybWFuLCBhbGwgaW5ncmVkaWVudCBuYW1lcyBhbmQgdW5pdHMgbXVzdCBiZSBpbiBHZXJtYW4uIElmIHRoZSBkaXNoIG5hbWUgaXMgaW4gRW5nbGlzaCwgdXNlIEVuZ2xpc2guIERvIG5vdCB0cmFuc2xhdGUgb3IgbWl4IGxhbmd1YWdlcy5cbi0gQWx3YXlzIGluY2x1ZGUgdGhlIG1haW4gcHJvdGVpbiBvciBrZXkgaW5ncmVkaWVudCAoZS5nLiwgaWYgdGhlIGRpc2ggaXMgXCJQYWxhayBDaGlja2VuXCIgb3IgXCJDaGlja2VuIFBhbGFrXCIsIGFsd2F5cyBpbmNsdWRlIFwiQ2hpY2tlblwiIGFzIGFuIGluZ3JlZGllbnQpLlxuXG5Gb3IgZWFjaCBpbmdyZWRpZW50LCBwcm92aWRlIGl0cyBuYW1lLCBxdWFudGl0eSAoYXMgYSBudW1iZXIpLCBhbmQgdW5pdCAoZS5nLiwgXCJnXCIsIFwibWxcIiwgXCJwY3NcIiwgXCJrZ1wiKS5cbk5ldmVyIHJldHVybiBhIHF1YW50aXR5IG9mIDAuIElmIHVuc3VyZSwgZXN0aW1hdGUgYSB0eXBpY2FsIGFtb3VudCBmb3Igb25lIHNlcnZpbmcgYmFzZWQgb24gY29tbW9uIHJlY2lwZXMgb3IgY2hlZiBleHBlcmllbmNlLlxuUmV0dXJuIHRoZSBvdXRwdXQgYXMgYSBKU09OIG9iamVjdCB3aXRoIGEgc2luZ2xlIGtleSBcImluZ3JlZGllbnRzXCIuXG5UaGUgXCJpbmdyZWRpZW50c1wiIGtleSBzaG91bGQgaGF2ZSBhIHZhbHVlIG9mIGFuIGFycmF5IG9mIG9iamVjdHMsIHdoZXJlIGVhY2ggb2JqZWN0IGhhcyBcIm5hbWVcIiAoc3RyaW5nKSwgXCJxdWFudGl0eVwiIChudW1iZXIpLCBhbmQgXCJ1bml0XCIgKHN0cmluZykgZmllbGRzLlxuQmUgYXMgYWNjdXJhdGUgYXMgcG9zc2libGUuXG5cbkV4YW1wbGUgKEVuZ2xpc2gpOlxue1xuICBcImluZ3JlZGllbnRzXCI6IFtcbiAgICB7IFwibmFtZVwiOiBcIkNoaWNrZW4gQnJlYXN0XCIsIFwicXVhbnRpdHlcIjogMjAwLCBcInVuaXRcIjogXCJnXCIgfSxcbiAgICB7IFwibmFtZVwiOiBcIlNwaW5hY2hcIiwgXCJxdWFudGl0eVwiOiAxNTAsIFwidW5pdFwiOiBcImdcIiB9LFxuICAgIHsgXCJuYW1lXCI6IFwiT25pb25cIiwgXCJxdWFudGl0eVwiOiA1MCwgXCJ1bml0XCI6IFwiZ1wiIH1cbiAgXVxufVxuXG5FeGFtcGxlIChHZXJtYW4pOlxue1xuICBcImluZ3JlZGllbnRzXCI6IFtcbiAgICB7IFwibmFtZVwiOiBcIkjDpGhuY2hlbmJydXN0XCIsIFwicXVhbnRpdHlcIjogMjAwLCBcInVuaXRcIjogXCJnXCIgfSxcbiAgICB7IFwibmFtZVwiOiBcIlNwaW5hdFwiLCBcInF1YW50aXR5XCI6IDE1MCwgXCJ1bml0XCI6IFwiZ1wiIH0sXG4gICAgeyBcIm5hbWVcIjogXCJad2llYmVsXCIsIFwicXVhbnRpdHlcIjogNTAsIFwidW5pdFwiOiBcImdcIiB9XG4gIF1cbn1cblxuRW5zdXJlIHRoZSBvdXRwdXQgc3RyaWN0bHkgZm9sbG93cyB0aGlzIEpTT04gZm9ybWF0LmAsXG59KTtcblxuY29uc3QgZ2VuZXJhdGVJbmdyZWRpZW50c0xpc3RGbG93ID0gYWkuZGVmaW5lRmxvdyhcbiAge1xuICAgIG5hbWU6ICdnZW5lcmF0ZUluZ3JlZGllbnRzTGlzdEZsb3cnLFxuICAgIGlucHV0U2NoZW1hOiBHZW5lcmF0ZUluZ3JlZGllbnRzTGlzdElucHV0U2NoZW1hLFxuICAgIG91dHB1dFNjaGVtYTogR2VuZXJhdGVJbmdyZWRpZW50c0xpc3RPdXRwdXRTY2hlbWEsXG4gIH0sXG4gIGFzeW5jIGlucHV0ID0+IHtcbiAgICBjb25zdCB7IG91dHB1dCB9ID0gYXdhaXQgcHJvbXB0KGlucHV0KTtcbiAgICBpZiAoIW91dHB1dCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBSSBkaWQgbm90IHJldHVybiBhbiBvdXRwdXQuJyk7XG4gICAgfVxuICAgIHJldHVybiBvdXRwdXQ7XG4gIH1cbik7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUluZ3JlZGllbnRzTGlzdChpbnB1dDogR2VuZXJhdGVJbmdyZWRpZW50c0xpc3RJbnB1dCk6IFByb21pc2U8R2VuZXJhdGVJbmdyZWRpZW50c0xpc3RPdXRwdXQ+IHtcbiAgcmV0dXJuIGdlbmVyYXRlSW5ncmVkaWVudHNMaXN0RmxvdyhpbnB1dCk7XG59XG4iXSwibmFtZXMiOlsiYWkiLCJHZW5lcmF0ZUluZ3JlZGllbnRzTGlzdElucHV0U2NoZW1hIiwiR2VuZXJhdGVJbmdyZWRpZW50c0xpc3RPdXRwdXRTY2hlbWEiLCJwcm9tcHQiLCJkZWZpbmVQcm9tcHQiLCJuYW1lIiwiaW5wdXQiLCJzY2hlbWEiLCJvdXRwdXQiLCJnZW5lcmF0ZUluZ3JlZGllbnRzTGlzdEZsb3ciLCJkZWZpbmVGbG93IiwiaW5wdXRTY2hlbWEiLCJvdXRwdXRTY2hlbWEiLCJFcnJvciIsImdlbmVyYXRlSW5ncmVkaWVudHNMaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/ai/flows/generate-ingredients-list.ts\n");

/***/ }),

/***/ "(rsc)/./src/ai/flows/ingredient-types.ts":
/*!******************************************!*\
  !*** ./src/ai/flows/ingredient-types.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GenerateIngredientsListInputSchema: () => (/* binding */ GenerateIngredientsListInputSchema),\n/* harmony export */   GenerateIngredientsListOutputSchema: () => (/* binding */ GenerateIngredientsListOutputSchema),\n/* harmony export */   IngredientSchema: () => (/* binding */ IngredientSchema),\n/* harmony export */   SuggestExpiryDateInputSchema: () => (/* binding */ SuggestExpiryDateInputSchema),\n/* harmony export */   SuggestExpiryDateOutputSchema: () => (/* binding */ SuggestExpiryDateOutputSchema)\n/* harmony export */ });\n/* harmony import */ var genkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! genkit */ \"(rsc)/./node_modules/genkit/lib/index.mjs\");\n\nconst GenerateIngredientsListInputSchema = genkit__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    dishName: genkit__WEBPACK_IMPORTED_MODULE_0__.z.string().describe(\"The name of the dish to generate ingredients for.\"),\n    numberOfServings: genkit__WEBPACK_IMPORTED_MODULE_0__.z.number().describe(\"The number of servings the ingredients should be for.\")\n});\nconst IngredientSchema = genkit__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    name: genkit__WEBPACK_IMPORTED_MODULE_0__.z.string().describe(\"The name of the ingredient.\"),\n    quantity: genkit__WEBPACK_IMPORTED_MODULE_0__.z.number().describe(\"The quantity of the ingredient (numeric value).\"),\n    unit: genkit__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('The unit for the quantity (e.g., \"g\", \"ml\", \"pcs\", \"kg\").')\n});\nconst GenerateIngredientsListOutputSchema = genkit__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    ingredients: genkit__WEBPACK_IMPORTED_MODULE_0__.z.array(IngredientSchema).describe(\"A list of ingredients with their names, quantities, and units.\")\n});\n// New schemas for expiry date suggestion\nconst SuggestExpiryDateInputSchema = genkit__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    productName: genkit__WEBPACK_IMPORTED_MODULE_0__.z.string().describe(\"The name of the product.\"),\n    productCategory: genkit__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().describe('The category of the product (e.g., \"Tea\", \"Spices\", \"Sweets\").'),\n    productWeight: genkit__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().describe('The weight/unit of the product (e.g., \"500g\", \"1000g\", \"20 pkt\").'),\n    manufacturingDate: genkit__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().describe(\"The manufacturing date if available.\")\n});\nconst SuggestExpiryDateOutputSchema = genkit__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    suggestedExpiryDate: genkit__WEBPACK_IMPORTED_MODULE_0__.z.string().describe(\"The suggested expiry date in YYYY-MM-DD format.\"),\n    shelfLifeDays: genkit__WEBPACK_IMPORTED_MODULE_0__.z.number().describe(\"The estimated shelf life in days.\"),\n    storageRecommendation: genkit__WEBPACK_IMPORTED_MODULE_0__.z.string().describe(\"Storage recommendation for the product.\"),\n    confidence: genkit__WEBPACK_IMPORTED_MODULE_0__.z.string().describe(\"Confidence level of the suggestion (High, Medium, Low).\")\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYWkvZmxvd3MvaW5ncmVkaWVudC10eXBlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkI7QUFFcEIsTUFBTUMscUNBQXFDRCxxQ0FBQ0EsQ0FBQ0UsTUFBTSxDQUFDO0lBQ3pEQyxVQUFVSCxxQ0FBQ0EsQ0FBQ0ksTUFBTSxHQUFHQyxRQUFRLENBQUM7SUFDOUJDLGtCQUFrQk4scUNBQUNBLENBQUNPLE1BQU0sR0FBR0YsUUFBUSxDQUFDO0FBQ3hDLEdBQUc7QUFHSSxNQUFNRyxtQkFBbUJSLHFDQUFDQSxDQUFDRSxNQUFNLENBQUM7SUFDdkNPLE1BQU1ULHFDQUFDQSxDQUFDSSxNQUFNLEdBQUdDLFFBQVEsQ0FBQztJQUMxQkssVUFBVVYscUNBQUNBLENBQUNPLE1BQU0sR0FBR0YsUUFBUSxDQUFDO0lBQzlCTSxNQUFNWCxxQ0FBQ0EsQ0FBQ0ksTUFBTSxHQUFHQyxRQUFRLENBQUM7QUFDNUIsR0FBRztBQUVJLE1BQU1PLHNDQUFzQ1oscUNBQUNBLENBQUNFLE1BQU0sQ0FBQztJQUMxRFcsYUFBYWIscUNBQUNBLENBQUNjLEtBQUssQ0FBQ04sa0JBQWtCSCxRQUFRLENBQUM7QUFDbEQsR0FBRztBQUdILHlDQUF5QztBQUNsQyxNQUFNVSwrQkFBK0JmLHFDQUFDQSxDQUFDRSxNQUFNLENBQUM7SUFDbkRjLGFBQWFoQixxQ0FBQ0EsQ0FBQ0ksTUFBTSxHQUFHQyxRQUFRLENBQUM7SUFDakNZLGlCQUFpQmpCLHFDQUFDQSxDQUFDSSxNQUFNLEdBQUdjLFFBQVEsR0FBR2IsUUFBUSxDQUFDO0lBQ2hEYyxlQUFlbkIscUNBQUNBLENBQUNJLE1BQU0sR0FBR2MsUUFBUSxHQUFHYixRQUFRLENBQUM7SUFDOUNlLG1CQUFtQnBCLHFDQUFDQSxDQUFDSSxNQUFNLEdBQUdjLFFBQVEsR0FBR2IsUUFBUSxDQUFDO0FBQ3BELEdBQUc7QUFHSSxNQUFNZ0IsZ0NBQWdDckIscUNBQUNBLENBQUNFLE1BQU0sQ0FBQztJQUNwRG9CLHFCQUFxQnRCLHFDQUFDQSxDQUFDSSxNQUFNLEdBQUdDLFFBQVEsQ0FBQztJQUN6Q2tCLGVBQWV2QixxQ0FBQ0EsQ0FBQ08sTUFBTSxHQUFHRixRQUFRLENBQUM7SUFDbkNtQix1QkFBdUJ4QixxQ0FBQ0EsQ0FBQ0ksTUFBTSxHQUFHQyxRQUFRLENBQUM7SUFDM0NvQixZQUFZekIscUNBQUNBLENBQUNJLE1BQU0sR0FBR0MsUUFBUSxDQUFDO0FBQ2xDLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJtZXNpdGVyMzYwLW1hcmtldHBsYWNlLy4vc3JjL2FpL2Zsb3dzL2luZ3JlZGllbnQtdHlwZXMudHM/NWM1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6IH0gZnJvbSAnZ2Vua2l0JztcblxuZXhwb3J0IGNvbnN0IEdlbmVyYXRlSW5ncmVkaWVudHNMaXN0SW5wdXRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGRpc2hOYW1lOiB6LnN0cmluZygpLmRlc2NyaWJlKCdUaGUgbmFtZSBvZiB0aGUgZGlzaCB0byBnZW5lcmF0ZSBpbmdyZWRpZW50cyBmb3IuJyksXG4gIG51bWJlck9mU2VydmluZ3M6IHoubnVtYmVyKCkuZGVzY3JpYmUoJ1RoZSBudW1iZXIgb2Ygc2VydmluZ3MgdGhlIGluZ3JlZGllbnRzIHNob3VsZCBiZSBmb3IuJyksXG59KTtcbmV4cG9ydCB0eXBlIEdlbmVyYXRlSW5ncmVkaWVudHNMaXN0SW5wdXQgPSB6LmluZmVyPHR5cGVvZiBHZW5lcmF0ZUluZ3JlZGllbnRzTGlzdElucHV0U2NoZW1hPjtcblxuZXhwb3J0IGNvbnN0IEluZ3JlZGllbnRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIG5hbWU6IHouc3RyaW5nKCkuZGVzY3JpYmUoJ1RoZSBuYW1lIG9mIHRoZSBpbmdyZWRpZW50LicpLFxuICBxdWFudGl0eTogei5udW1iZXIoKS5kZXNjcmliZSgnVGhlIHF1YW50aXR5IG9mIHRoZSBpbmdyZWRpZW50IChudW1lcmljIHZhbHVlKS4nKSxcbiAgdW5pdDogei5zdHJpbmcoKS5kZXNjcmliZSgnVGhlIHVuaXQgZm9yIHRoZSBxdWFudGl0eSAoZS5nLiwgXCJnXCIsIFwibWxcIiwgXCJwY3NcIiwgXCJrZ1wiKS4nKSxcbn0pO1xuXG5leHBvcnQgY29uc3QgR2VuZXJhdGVJbmdyZWRpZW50c0xpc3RPdXRwdXRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGluZ3JlZGllbnRzOiB6LmFycmF5KEluZ3JlZGllbnRTY2hlbWEpLmRlc2NyaWJlKCdBIGxpc3Qgb2YgaW5ncmVkaWVudHMgd2l0aCB0aGVpciBuYW1lcywgcXVhbnRpdGllcywgYW5kIHVuaXRzLicpLFxufSk7XG5leHBvcnQgdHlwZSBHZW5lcmF0ZUluZ3JlZGllbnRzTGlzdE91dHB1dCA9IHouaW5mZXI8dHlwZW9mIEdlbmVyYXRlSW5ncmVkaWVudHNMaXN0T3V0cHV0U2NoZW1hPjtcblxuLy8gTmV3IHNjaGVtYXMgZm9yIGV4cGlyeSBkYXRlIHN1Z2dlc3Rpb25cbmV4cG9ydCBjb25zdCBTdWdnZXN0RXhwaXJ5RGF0ZUlucHV0U2NoZW1hID0gei5vYmplY3Qoe1xuICBwcm9kdWN0TmFtZTogei5zdHJpbmcoKS5kZXNjcmliZSgnVGhlIG5hbWUgb2YgdGhlIHByb2R1Y3QuJyksXG4gIHByb2R1Y3RDYXRlZ29yeTogei5zdHJpbmcoKS5vcHRpb25hbCgpLmRlc2NyaWJlKCdUaGUgY2F0ZWdvcnkgb2YgdGhlIHByb2R1Y3QgKGUuZy4sIFwiVGVhXCIsIFwiU3BpY2VzXCIsIFwiU3dlZXRzXCIpLicpLFxuICBwcm9kdWN0V2VpZ2h0OiB6LnN0cmluZygpLm9wdGlvbmFsKCkuZGVzY3JpYmUoJ1RoZSB3ZWlnaHQvdW5pdCBvZiB0aGUgcHJvZHVjdCAoZS5nLiwgXCI1MDBnXCIsIFwiMTAwMGdcIiwgXCIyMCBwa3RcIikuJyksXG4gIG1hbnVmYWN0dXJpbmdEYXRlOiB6LnN0cmluZygpLm9wdGlvbmFsKCkuZGVzY3JpYmUoJ1RoZSBtYW51ZmFjdHVyaW5nIGRhdGUgaWYgYXZhaWxhYmxlLicpLFxufSk7XG5leHBvcnQgdHlwZSBTdWdnZXN0RXhwaXJ5RGF0ZUlucHV0ID0gei5pbmZlcjx0eXBlb2YgU3VnZ2VzdEV4cGlyeURhdGVJbnB1dFNjaGVtYT47XG5cbmV4cG9ydCBjb25zdCBTdWdnZXN0RXhwaXJ5RGF0ZU91dHB1dFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgc3VnZ2VzdGVkRXhwaXJ5RGF0ZTogei5zdHJpbmcoKS5kZXNjcmliZSgnVGhlIHN1Z2dlc3RlZCBleHBpcnkgZGF0ZSBpbiBZWVlZLU1NLUREIGZvcm1hdC4nKSxcbiAgc2hlbGZMaWZlRGF5czogei5udW1iZXIoKS5kZXNjcmliZSgnVGhlIGVzdGltYXRlZCBzaGVsZiBsaWZlIGluIGRheXMuJyksXG4gIHN0b3JhZ2VSZWNvbW1lbmRhdGlvbjogei5zdHJpbmcoKS5kZXNjcmliZSgnU3RvcmFnZSByZWNvbW1lbmRhdGlvbiBmb3IgdGhlIHByb2R1Y3QuJyksXG4gIGNvbmZpZGVuY2U6IHouc3RyaW5nKCkuZGVzY3JpYmUoJ0NvbmZpZGVuY2UgbGV2ZWwgb2YgdGhlIHN1Z2dlc3Rpb24gKEhpZ2gsIE1lZGl1bSwgTG93KS4nKSxcbn0pO1xuZXhwb3J0IHR5cGUgU3VnZ2VzdEV4cGlyeURhdGVPdXRwdXQgPSB6LmluZmVyPHR5cGVvZiBTdWdnZXN0RXhwaXJ5RGF0ZU91dHB1dFNjaGVtYT47XG4iXSwibmFtZXMiOlsieiIsIkdlbmVyYXRlSW5ncmVkaWVudHNMaXN0SW5wdXRTY2hlbWEiLCJvYmplY3QiLCJkaXNoTmFtZSIsInN0cmluZyIsImRlc2NyaWJlIiwibnVtYmVyT2ZTZXJ2aW5ncyIsIm51bWJlciIsIkluZ3JlZGllbnRTY2hlbWEiLCJuYW1lIiwicXVhbnRpdHkiLCJ1bml0IiwiR2VuZXJhdGVJbmdyZWRpZW50c0xpc3RPdXRwdXRTY2hlbWEiLCJpbmdyZWRpZW50cyIsImFycmF5IiwiU3VnZ2VzdEV4cGlyeURhdGVJbnB1dFNjaGVtYSIsInByb2R1Y3ROYW1lIiwicHJvZHVjdENhdGVnb3J5Iiwib3B0aW9uYWwiLCJwcm9kdWN0V2VpZ2h0IiwibWFudWZhY3R1cmluZ0RhdGUiLCJTdWdnZXN0RXhwaXJ5RGF0ZU91dHB1dFNjaGVtYSIsInN1Z2dlc3RlZEV4cGlyeURhdGUiLCJzaGVsZkxpZmVEYXlzIiwic3RvcmFnZVJlY29tbWVuZGF0aW9uIiwiY29uZmlkZW5jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/ai/flows/ingredient-types.ts\n");

/***/ }),

/***/ "(rsc)/./src/ai/genkit.ts":
/*!**************************!*\
  !*** ./src/ai/genkit.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ai: () => (/* binding */ ai)\n/* harmony export */ });\n/* harmony import */ var genkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! genkit */ \"(rsc)/./node_modules/genkit/lib/index.mjs\");\n/* harmony import */ var _genkit_ai_googleai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @genkit-ai/googleai */ \"(rsc)/./node_modules/@genkit-ai/googleai/lib/index.mjs\");\n\n\nconst ai = (0,genkit__WEBPACK_IMPORTED_MODULE_0__.genkit)({\n    plugins: [\n        (0,_genkit_ai_googleai__WEBPACK_IMPORTED_MODULE_1__.googleAI)()\n    ],\n    model: \"googleai/gemini-2.0-flash\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYWkvZ2Vua2l0LnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QjtBQUNlO0FBRXRDLE1BQU1FLEtBQUtGLDhDQUFNQSxDQUFDO0lBQ3ZCRyxTQUFTO1FBQUNGLDZEQUFRQTtLQUFHO0lBQ3JCRyxPQUFPO0FBQ1QsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYm1lc2l0ZXIzNjAtbWFya2V0cGxhY2UvLi9zcmMvYWkvZ2Vua2l0LnRzPzdjZTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZW5raXR9IGZyb20gJ2dlbmtpdCc7XG5pbXBvcnQge2dvb2dsZUFJfSBmcm9tICdAZ2Vua2l0LWFpL2dvb2dsZWFpJztcblxuZXhwb3J0IGNvbnN0IGFpID0gZ2Vua2l0KHtcbiAgcGx1Z2luczogW2dvb2dsZUFJKCldLFxuICBtb2RlbDogJ2dvb2dsZWFpL2dlbWluaS0yLjAtZmxhc2gnLFxufSk7ICJdLCJuYW1lcyI6WyJnZW5raXQiLCJnb29nbGVBSSIsImFpIiwicGx1Z2lucyIsIm1vZGVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/ai/genkit.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/api/menuCsv/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/menuCsv/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var csv_parse_sync__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! csv-parse/sync */ \"(rsc)/./node_modules/csv-parse/lib/sync.js\");\n/* harmony import */ var _lib_aiMenuExtractor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/aiMenuExtractor */ \"(rsc)/./src/lib/aiMenuExtractor.ts\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst MENU_JSON_PATH = path__WEBPACK_IMPORTED_MODULE_4___default().join(process.cwd(), \"menu-data.json\");\nasync function GET() {\n    // Return saved menu items for Order Entry\n    try {\n        if (fs__WEBPACK_IMPORTED_MODULE_3___default().existsSync(MENU_JSON_PATH)) {\n            const data = fs__WEBPACK_IMPORTED_MODULE_3___default().readFileSync(MENU_JSON_PATH, \"utf-8\");\n            const menu = JSON.parse(data);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                menu\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            menu: []\n        });\n    } catch (err) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            menu: []\n        });\n    }\n}\nconst runtime = \"nodejs\"; // Ensure Node.js APIs are available\nasync function POST(request) {\n    // If JSON, handle save or delete\n    const url = new URL(request.url, \"http://localhost\");\n    const action = url.searchParams.get(\"action\");\n    if (action === \"delete\") {\n        if (fs__WEBPACK_IMPORTED_MODULE_3___default().existsSync(MENU_JSON_PATH)) {\n            fs__WEBPACK_IMPORTED_MODULE_3___default().unlinkSync(MENU_JSON_PATH);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true\n        });\n    }\n    const contentType = request.headers.get(\"content-type\") || \"\";\n    if (contentType.includes(\"application/json\")) {\n        const body = await request.json();\n        if (body.action === \"save\" && Array.isArray(body.menuItems)) {\n            // Save menuItems to file\n            fs__WEBPACK_IMPORTED_MODULE_3___default().writeFileSync(MENU_JSON_PATH, JSON.stringify(body.menuItems, null, 2), \"utf-8\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Invalid save request\"\n        }, {\n            status: 400\n        });\n    }\n    const formData = await request.formData();\n    const file = formData.get(\"file\");\n    if (!file || typeof file === \"string\") {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"No file uploaded.\"\n        }, {\n            status: 400\n        });\n    }\n    const arrayBuffer = await file.arrayBuffer();\n    const buffer = Buffer.from(arrayBuffer);\n    const filename = file.name || \"\";\n    const isPdf = filename.toLowerCase().endsWith(\".pdf\");\n    const isCsv = filename.toLowerCase().endsWith(\".csv\");\n    let menuItems = [];\n    try {\n        if (isPdf) {\n            // Use Gemini for PDF extraction\n            menuItems = await (0,_lib_aiMenuExtractor__WEBPACK_IMPORTED_MODULE_2__.extractMenuItemsFromPdfWithGemini)(buffer);\n        } else if (isCsv) {\n            // Parse CSV\n            const csvText = buffer.toString(\"utf-8\");\n            menuItems = (0,csv_parse_sync__WEBPACK_IMPORTED_MODULE_1__.parse)(csvText, {\n                columns: true,\n                skip_empty_lines: true\n            });\n        } else {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unsupported file type. Please upload a PDF or CSV.\"\n            }, {\n                status: 400\n            });\n        }\n        // Do NOT write extracted menuItems to file here (revert to old flow)\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            menuItems\n        });\n    } catch (error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message || \"Failed to extract menu items.\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Function to clean menu item names by removing price information\nfunction cleanMenuItemName(name) {\n    if (!name) return name;\n    // Remove price patterns like \"- 12.90 EUR\", \"- $12.90\", \"- 12.90\", \"- \u001c12.90\"\n    return name.replace(/\\s*-\\s*\\d+[\\.,]\\d+\\s*(EUR|USD|GBP|  |$  |  )\\s*$/i, \"\") // Remove \"- 12.90 EUR\" patterns\n    .replace(/\\s*-\\s*\\d+[\\.,]\\d+\\s*$/i, \"\") // Remove \"- 12.90\" patterns  \n    .replace(/\\s*\\(\\d+[\\.,]\\d+\\s*(EUR|USD|GBP|  |$  |  )\\)\\s*$/i, \"\") // Remove \"(12.90 EUR)\" patterns\n    .replace(/\\s*\\$\\d+[\\.,]\\d+\\s*$/i, \"\") // Remove \"$12.90\" patterns\n    .replace(/\\s*  \\d+[\\.,]\\d+\\s*$/i, \"\") // Remove \" 12.90\" patterns\n    .replace(/\\s*  \\d+[\\.,]\\d+\\s*$/i, \"\") // Remove \" 12.90\" patterns\n    .trim();\n} // ... (rest of the code from the Noman branch version) ... \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/menuCsv/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/aiMenuExtractor.ts":
/*!************************************!*\
  !*** ./src/lib/aiMenuExtractor.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractMenuFromPdf: () => (/* binding */ extractMenuFromPdf),\n/* harmony export */   extractMenuItemsFromPdfWithGemini: () => (/* binding */ extractMenuItemsFromPdfWithGemini)\n/* harmony export */ });\n/* harmony import */ var _ai_genkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/ai/genkit */ \"(rsc)/./src/ai/genkit.ts\");\n/* harmony import */ var jsonrepair__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jsonrepair */ \"(rsc)/./node_modules/jsonrepair/lib/esm/regular/jsonrepair.js\");\n/* harmony import */ var _inventoryService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inventoryService */ \"(rsc)/./src/lib/inventoryService.ts\");\n/* harmony import */ var _menuService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./menuService */ \"(rsc)/./src/lib/menuService.ts\");\n/* harmony import */ var _ai_flows_generate_ingredients_list__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/ai/flows/generate-ingredients-list */ \"(rsc)/./src/ai/flows/generate-ingredients-list.ts\");\n\n\n\n\n\n/**\n * Last-ditch recovery for broken, truncated Gemini arrays.\n * Cuts off after last valid object and closes with a bracket.\n */ function recoverLongestValidArray(jsonString) {\n    jsonString = jsonString.replace(/,\\s*([\\]}])/g, \"$1\");\n    let arrStart = jsonString.indexOf(\"[\");\n    let lastObjClose = jsonString.lastIndexOf(\"}\");\n    if (arrStart === -1 || lastObjClose === -1 || lastObjClose < arrStart) return \"[]\";\n    let cut = jsonString.slice(arrStart, lastObjClose + 1);\n    if (!cut.trim().endsWith(\"]\")) cut += \"\\n]\\n\";\n    return cut;\n}\n/**\n * Helper for batching with concurrency limit\n */ async function batchWithConcurrencyLimit(items, fn, limit) {\n    const results = [];\n    let idx = 0;\n    const executing = [];\n    async function run(item, i) {\n        results[i] = await fn(item);\n    }\n    while(idx < items.length){\n        const i = idx;\n        const p = run(items[i], i);\n        executing.push(p);\n        idx++;\n        if (executing.length >= limit) {\n            await Promise.race(executing);\n            // Remove finished\n            for(let j = executing.length - 1; j >= 0; j--){\n                if (typeof executing[j]?.then === \"function\") {\n                    executing.splice(j, 1);\n                }\n            }\n        }\n    }\n    await Promise.all(executing);\n    return results;\n}\n/**\n * Extracts menu data from a PDF using Gemini and robust post-processing.\n */ async function extractMenuFromPdf({ pdfDataUri, userId, numberOfServings = 1 }) {\n    const prompt = `\nYou are an expert at reading restaurant menu PDFs in any language (e.g., German, English, French, etc.). Extract every dish, drink, or menu item as a JSON object.\n\nFor each menu item, extract:\n- \"name\": Dish or beverage name, exactly as printed, but **never include the price or currency in the name**. The name must NOT contain any price or currency. Only the actual name, in the original language.\n- \"price\": The price string for the item (e.g., \"3,20 €\", \"2.50 EUR\", \"$4.00\"). If no price, use an empty string.\n- \"category\": Section/category name (e.g., \"Pizza\", \"Biere\", \"Salate\", \"Getränke (Drinks)\"). If not shown, use \"Other\". Always preserve the original language.\n- \"ingredients\": Array of ingredient names if shown in menu. If not listed, use [].\n\n**If a menu item has multiple variants (e.g., sizes or volumes with different prices), group all variants under a single menu item object. Add a 'sizes' array: each entry should have 'size' (exactly as shown in the menu, e.g., '0.3 l') and 'price'. Do not convert, round, or change the size string.**\n\n**Return only a single valid JSON array of objects.** No explanations, no markdown, no text before or after the array.\n\nExample output:\n[\n  {\"name\":\"Coca-Cola\",\"category\":\"Soft Drinks\",\"sizes\":[{\"size\":\"0.3 l\",\"price\":\"2,00 €\"},{\"size\":\"0.5 l\",\"price\":\"3,00 €\"},{\"size\":\"1.0 l\",\"price\":\"5,00 €\"}],\"ingredients\":[]},\n  {\"name\":\"Zwiefalter-Engele, helles Bier\",\"price\":\"3,20 €\",\"category\":\"Biere\",\"ingredients\":[], \"size\": \"0,33l\"},\n  {\"name\":\"Zwiefalter-Urweizen Dunkel\",\"price\":\"4,20 €\",\"category\":\"Biere\",\"ingredients\":[], \"size\": \"0,5l\"},\n  {\"name\":\"Water Bottle\",\"price\":\"2,00 €\",\"category\":\"Getränke (Drinks)\",\"ingredients\":[], \"size\": \"0,3l\"},\n  {\"name\":\"Water Bottle\",\"price\":\"3,00 €\",\"category\":\"Getränke (Drinks)\",\"ingredients\":[], \"size\": \"0,5l\"},\n  {\"name\":\"Chicken Curry\",\"price\":\"10,00 €\",\"category\":\"Spezialitäten vom Huhn mit Reis\",\"ingredients\":[]},\n  {\"name\":\"Chicken Korma\",\"price\":\"10,00 €\",\"category\":\"Spezialitäten vom Huhn mit Reis\",\"ingredients\":[\"Mandeln\", \"Sahne\", \"Kokosnuss\", \"feinen Gewürzen\"]},\n  {\"name\":\"Glas Prosecco 15% vol\",\"price\":\"5,90 €\",\"category\":\"Aperitifs\",\"ingredients\":[], \"size\": \"0,2l\"},\n  {\"name\":\"Indischer Weißwein\",\"price\":\"6,90 €\",\"category\":\"Indische Weine\",\"ingredients\":[], \"size\": \"0,2l\"},\n  {\"name\":\"Indischer Weißwein\",\"price\":\"21,00 €\",\"category\":\"Indische Weine\",\"ingredients\":[], \"size\": \"0,75l\"}\n]\n\n// BAD EXAMPLE (do NOT do this!):\n// {\"name\": \"Water Bottle (0,3l) 2,00 € (0,5l) 3,00 €\", \"price\": \"\", ...}\n`;\n    // Call Gemini via Genkit\n    const result = await _ai_genkit__WEBPACK_IMPORTED_MODULE_0__.ai.generate([\n        {\n            text: prompt\n        },\n        {\n            media: {\n                url: pdfDataUri\n            }\n        }\n    ]);\n    console.log(\"GENKIT RAW RESULT:\", result);\n    // Extract text, from code block or raw\n    let text = typeof result.text === \"string\" ? result.text : \"\";\n    let cleanText = \"\";\n    const jsonMatch = text.match(/```json([\\s\\S]*?)```/) || text.match(/```([\\s\\S]*?)```/);\n    if (jsonMatch) {\n        cleanText = jsonMatch[1].trim();\n    } else {\n        cleanText = text.trim();\n    }\n    // Remove trailing code fences and comments, just in case\n    cleanText = cleanText.replace(/```/g, \"\").replace(/^\\s*\\/\\/.*$/gm, \"\").trim();\n    // DEBUG: See what we are trying to parse\n    console.log(\"CLEAN JSON TO PARSE:\", cleanText);\n    let items = [];\n    try {\n        // 1. Try straight parse\n        items = JSON.parse(cleanText);\n    } catch (e) {\n        // 2. Try jsonrepair\n        try {\n            items = JSON.parse((0,jsonrepair__WEBPACK_IMPORTED_MODULE_4__.jsonrepair)(cleanText));\n        } catch (e2) {\n            // 3. Try best-effort recovery for truncation\n            try {\n                const partial = recoverLongestValidArray(cleanText);\n                items = JSON.parse(partial);\n            } catch (e3) {\n                // 4. Give up, show nothing\n                items = [];\n            }\n        }\n    }\n    // Post-process: If a single item contains multiple variants in price or name, split them into separate items\n    const variantRegex = /([0-9]+[\\.,][0-9]+\\s*(l|cl|ml|g|kg|L|CL|ML|G|KG)?)[^\\d]*(\\d+[\\.,]\\d+\\s*(€|EUR|USD|GBP|\\$))/gi;\n    let expanded = [];\n    for (const item of items){\n        if (item && typeof item.price === \"string\" && variantRegex.test(item.price)) {\n            // e.g. price: \"(0,3l) 2,00 € (0,5l) 3,00 €\"\n            const matches = [\n                ...item.price.matchAll(variantRegex)\n            ];\n            if (matches.length > 1) {\n                for (const match of matches){\n                    expanded.push({\n                        ...item,\n                        price: match[3].trim(),\n                        size: match[1].trim()\n                    });\n                }\n                continue;\n            }\n        }\n        expanded.push(item);\n    }\n    // Post-process: If price is missing but name contains a price, extract it\n    const priceRegex = /[-–—]\\s*(\\d+[\\.,]\\d+)\\s*(EUR|USD|GBP|€|\\$)?/i;\n    const processed = Array.isArray(expanded) ? expanded.map((item)=>{\n        if (item && typeof item.name === \"string\" && (!item.price || item.price === \"\")) {\n            const match = item.name.match(priceRegex);\n            if (match) {\n                const priceStr = match[1] + (match[2] ? \" \" + match[2] : \"\");\n                return {\n                    ...item,\n                    price: priceStr.trim(),\n                    name: item.name.replace(priceRegex, \"\").trim().replace(/[-–—]\\s*$/, \"\").trim()\n                };\n            }\n        }\n        return item;\n    }) : [];\n    // Only filter for valid name field\n    const filtered = Array.isArray(processed) ? processed.filter((item)=>item && typeof item.name === \"string\" && item.name.length > 0) : [];\n    // Merge items with same name/category into a single object with sizes array\n    const mergedMap = new Map();\n    for (const item of filtered){\n        const key = `${item.name}||${item.category}`;\n        if (!mergedMap.has(key)) {\n            // Start new entry\n            mergedMap.set(key, {\n                ...item,\n                sizes: item.size || item.sizes ? [] : undefined\n            });\n        }\n        const merged = mergedMap.get(key);\n        // If item has size/price, add to sizes array\n        if (item.size || item.price && item.price !== \"\") {\n            if (!merged.sizes) merged.sizes = [];\n            merged.sizes.push({\n                size: item.size || item.sizes && item.sizes[0]?.size || \"\",\n                price: item.price || item.sizes && item.sizes[0]?.price || \"\"\n            });\n        }\n    }\n    // Finalize merged list\n    const merged = Array.from(mergedMap.values()).map((item)=>{\n        if (item.sizes && item.sizes.length === 1 && (!item.sizes[0].size || item.sizes[0].size.trim() === \"\")) {\n            // Only one size and it's empty: move price to top-level\n            return {\n                ...item,\n                price: item.sizes[0].price,\n                sizes: undefined\n            };\n        } else if (item.sizes && item.sizes.length > 0) {\n            // Remove top-level price/size if multiple sizes\n            const { price, size, ...rest } = item;\n            return {\n                ...rest,\n                sizes: item.sizes\n            };\n        } else {\n            // Single size or no sizes\n            return item;\n        }\n    });\n    // After merging and before returning, ensure every item has a unique id\n    const mergedWithIds = merged.map((item)=>{\n        if (item.id && typeof item.id === \"string\" && item.id.length > 0) return item;\n        // Generate a unique id from name, category, price, and size (if present)\n        let id = `${item.name}__${item.category}`;\n        if (item.price) id += `__${item.price}`;\n        if (item.size) id += `__${item.size}`;\n        if (item.sizes && Array.isArray(item.sizes) && item.sizes.length > 0) {\n            id += \"__\" + item.sizes.map((sz)=>`${sz.size}_${sz.price}`).join(\"__\");\n        }\n        return {\n            ...item,\n            id\n        };\n    });\n    // Ingredient enrichment logic\n    let inventory = [];\n    let menuDishes = [];\n    if (userId) {\n        try {\n            inventory = (0,_inventoryService__WEBPACK_IMPORTED_MODULE_1__.getInventory)(userId);\n        } catch  {}\n        try {\n            menuDishes = (0,_menuService__WEBPACK_IMPORTED_MODULE_2__.getDishes)(userId);\n        } catch  {}\n    }\n    // Helper to find ingredient with quantity in inventory or menu\n    function findIngredientWithQuantity(ingredientName) {\n        // Check inventory\n        if (inventory && Array.isArray(inventory)) {\n            const inv = inventory.find((i)=>i.name.toLowerCase() === ingredientName.toLowerCase());\n            if (inv && inv.quantity && inv.unit) {\n                return {\n                    name: inv.name,\n                    quantity: inv.quantity,\n                    unit: inv.unit\n                };\n            }\n        }\n        // Check menu\n        if (menuDishes && Array.isArray(menuDishes)) {\n            for (const dish of menuDishes){\n                if (dish.ingredients && Array.isArray(dish.ingredients)) {\n                    for (const ing of dish.ingredients){\n                        if (typeof ing === \"object\" && ing.inventoryItemName && ing.inventoryItemName.toLowerCase() === ingredientName.toLowerCase()) {\n                            return {\n                                name: ing.inventoryItemName,\n                                quantity: ing.quantityPerDish,\n                                unit: ing.unit\n                            };\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    // Collect all AI ingredient generation tasks\n    const aiTasks = [];\n    for(let i = 0; i < mergedWithIds.length; i++){\n        const item = mergedWithIds[i];\n        if (item.ingredients && Array.isArray(item.ingredients) && item.ingredients.length > 0) {\n            const missing = [];\n            for (const ing of item.ingredients){\n                let found = findIngredientWithQuantity(ing);\n                if (!found) missing.push(ing);\n            }\n            if (missing.length > 0) {\n                aiTasks.push({\n                    idx: i,\n                    name: item.name,\n                    missing\n                });\n            }\n        } else if (item.name) {\n            aiTasks.push({\n                idx: i,\n                name: item.name,\n                missing: []\n            });\n        }\n    }\n    // Batch AI calls for ingredient generation (concurrency limit 5)\n    const aiResults = await batchWithConcurrencyLimit(aiTasks, async (task)=>{\n        try {\n            return await (0,_ai_flows_generate_ingredients_list__WEBPACK_IMPORTED_MODULE_3__.generateIngredientsList)({\n                dishName: task.name,\n                numberOfServings\n            });\n        } catch  {\n            return {\n                ingredients: []\n            };\n        }\n    }, 5);\n    // Map AI results back to menu items\n    for(let i = 0; i < aiTasks.length; i++){\n        const { idx, missing } = aiTasks[i];\n        const aiResult = aiResults[i];\n        if (!mergedWithIds[idx].ingredients || mergedWithIds[idx].ingredients.length === 0) {\n            // No ingredients, use full AI list\n            // Normalize to { inventoryItemName, quantityPerDish, unit }\n            mergedWithIds[idx].ingredients = aiResult.ingredients.map((ing)=>({\n                    inventoryItemName: ing.name,\n                    quantityPerDish: ing.quantity,\n                    unit: ing.unit\n                }));\n        } else {\n            // If original ingredients are just names (strings), and AI returns objects, use AI's list directly\n            if (Array.isArray(mergedWithIds[idx].ingredients) && mergedWithIds[idx].ingredients.every((ing)=>typeof ing === \"string\") && Array.isArray(aiResult.ingredients) && aiResult.ingredients.length > 0 && aiResult.ingredients.every((aii)=>typeof aii === \"object\" && \"name\" in aii && \"quantity\" in aii && \"unit\" in aii)) {\n                mergedWithIds[idx].ingredients = aiResult.ingredients;\n            } else {\n                // Only fill in missing ingredients\n                const enriched = [];\n                for (const ing of mergedWithIds[idx].ingredients){\n                    let found = findIngredientWithQuantity(ing);\n                    if (found) {\n                        enriched.push(found);\n                    } else {\n                        // Find in AI result\n                        const aiIng = aiResult.ingredients.find((aii)=>aii.name.toLowerCase() === (typeof ing === \"string\" ? ing.toLowerCase() : \"\"));\n                        if (aiIng) {\n                            enriched.push(aiIng);\n                        } else {\n                            enriched.push({\n                                name: typeof ing === \"string\" ? ing : \"\",\n                                quantity: 0,\n                                unit: \"\"\n                            });\n                        }\n                    }\n                }\n                // Normalize to { inventoryItemName, quantityPerDish, unit }\n                mergedWithIds[idx].ingredients = enriched.map((ing)=>({\n                        inventoryItemName: ing.name,\n                        quantityPerDish: ing.quantity,\n                        unit: ing.unit\n                    }));\n            }\n        }\n    }\n    return mergedWithIds;\n}\n// Alias for compatibility with API handler\nasync function extractMenuItemsFromPdfWithGemini(buffer) {\n    // Convert buffer to data URI\n    const pdfDataUri = `data:application/pdf;base64,${buffer.toString(\"base64\")}`;\n    const items = await extractMenuFromPdf({\n        pdfDataUri\n    });\n    return items;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/aiMenuExtractor.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/inventoryService.ts":
/*!*************************************!*\
  !*** ./src/lib/inventoryService.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addIngredientToInventoryIfNotExists: () => (/* binding */ addIngredientToInventoryIfNotExists),\n/* harmony export */   addInventoryItem: () => (/* binding */ addInventoryItem),\n/* harmony export */   addOrUpdateIngredientInInventory: () => (/* binding */ addOrUpdateIngredientInInventory),\n/* harmony export */   getInventory: () => (/* binding */ getInventory),\n/* harmony export */   getInventoryAlerts: () => (/* binding */ getInventoryAlerts),\n/* harmony export */   getInventoryAlertsDetailed: () => (/* binding */ getInventoryAlertsDetailed),\n/* harmony export */   recordIngredientUsage: () => (/* binding */ recordIngredientUsage),\n/* harmony export */   removeInventoryItem: () => (/* binding */ removeInventoryItem),\n/* harmony export */   saveInventory: () => (/* binding */ saveInventory),\n/* harmony export */   updateInventoryAlerts: () => (/* binding */ updateInventoryAlerts),\n/* harmony export */   updateInventoryItem: () => (/* binding */ updateInventoryItem)\n/* harmony export */ });\n// Inventory Service\n// Provides functions to manage inventory in localStorage\nconst INVENTORY_KEY_PREFIX = \"inventory_\";\nfunction getInventory(userId) {\n    if (true) return [];\n    const data = localStorage.getItem(INVENTORY_KEY_PREFIX + userId);\n    if (!data) return [];\n    try {\n        return JSON.parse(data);\n    } catch  {\n        return [];\n    }\n}\nfunction addInventoryItem(userId, item) {\n    if (true) return null;\n    const inventory = getInventory(userId);\n    const newItem = {\n        ...item,\n        id: item.id || Date.now().toString(),\n        quantityUsed: item.quantityUsed || 0,\n        totalUsed: item.totalUsed || 0\n    };\n    inventory.push(newItem);\n    localStorage.setItem(INVENTORY_KEY_PREFIX + userId, JSON.stringify(inventory));\n    return newItem;\n}\nfunction updateInventoryItem(userId, item) {\n    if (true) return false;\n    const inventory = getInventory(userId);\n    const idx = inventory.findIndex((i)=>i.id === item.id);\n    if (idx === -1) return false;\n    inventory[idx] = item;\n    // Always persist the updated inventory array\n    localStorage.setItem(INVENTORY_KEY_PREFIX + userId, JSON.stringify(inventory));\n    return true;\n}\nfunction removeInventoryItem(userId, itemId) {\n    if (true) return false;\n    const inventory = getInventory(userId);\n    const newInventory = inventory.filter((i)=>i.id !== itemId);\n    if (newInventory.length === inventory.length) return false;\n    localStorage.setItem(INVENTORY_KEY_PREFIX + userId, JSON.stringify(newInventory));\n    return true;\n}\nfunction addOrUpdateIngredientInInventory(userId, ingredient) {\n    const inventory = getInventory(userId);\n    const idx = inventory.findIndex((i)=>i.name.toLowerCase() === ingredient.name.toLowerCase());\n    if (idx !== -1) {\n        inventory[idx] = {\n            ...inventory[idx],\n            ...ingredient,\n            quantityUsed: inventory[idx].quantityUsed || 0,\n            totalUsed: inventory[idx].totalUsed || 0\n        };\n    } else {\n        inventory.push({\n            ...ingredient,\n            id: ingredient.id || Date.now().toString(),\n            quantityUsed: ingredient.quantityUsed || 0,\n            totalUsed: ingredient.totalUsed || 0\n        });\n    }\n    localStorage.setItem(INVENTORY_KEY_PREFIX + userId, JSON.stringify(inventory));\n    return ingredient;\n}\nfunction addIngredientToInventoryIfNotExists(userId, ingredient) {\n    const inventory = getInventory(userId);\n    const exists = inventory.some((i)=>i.name.toLowerCase() === ingredient.name.toLowerCase());\n    if (!exists) {\n        addInventoryItem(userId, ingredient);\n        return true;\n    }\n    return false;\n}\nfunction getInventoryAlerts(userId) {\n    const inventory = getInventory(userId);\n    return inventory.filter((i)=>i.lowStockThreshold && i.quantity <= i.lowStockThreshold).map((i)=>`Low stock: ${i.name} (${i.quantity} ${i.unit})`);\n}\nfunction updateInventoryAlerts(userId) {\n    if (true) return;\n    // Placeholder: In a real app, this would update alert state in a DB or context\n    // For now, just triggers a localStorage event\n    localStorage.setItem(\"inventory_alerts_\" + userId, Date.now().toString());\n}\nfunction saveInventory(userId, inventory) {\n    localStorage.setItem(INVENTORY_KEY_PREFIX + userId, JSON.stringify(inventory));\n}\n// Generate inventory alerts for low stock items\nfunction getInventoryAlertsDetailed(userId) {\n    const inventory = getInventory(userId);\n    return inventory.filter((i)=>i.lowStockThreshold !== undefined && i.quantity <= (i.lowStockThreshold ?? 0)).map((i)=>({\n            itemId: i.id,\n            itemName: i.name,\n            quantity: i.quantity,\n            unit: i.unit,\n            message: `Low stock: ${i.name} (${i.quantity} ${i.unit})`\n        }));\n}\n// Placeholder for recordIngredientUsage to resolve import in posInventoryIntegration\nfunction recordIngredientUsage(userId, dish, quantity) {\n// No-op placeholder\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/inventoryService.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/menuService.ts":
/*!********************************!*\
  !*** ./src/lib/menuService.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addDish: () => (/* binding */ addDish),\n/* harmony export */   addDishToMenu: () => (/* binding */ addDishToMenu),\n/* harmony export */   getDishes: () => (/* binding */ getDishes),\n/* harmony export */   removeDish: () => (/* binding */ removeDish),\n/* harmony export */   saveDishes: () => (/* binding */ saveDishes),\n/* harmony export */   updateDish: () => (/* binding */ updateDish)\n/* harmony export */ });\n// Menu Service\n// Provides functions to manage menu items in localStorage\nconst MENU_KEY_PREFIX = \"menu_\";\nfunction getDishes(userId) {\n    if (true) return [];\n    const data = localStorage.getItem(MENU_KEY_PREFIX + userId);\n    if (!data) return [];\n    try {\n        return JSON.parse(data);\n    } catch  {\n        return [];\n    }\n}\nfunction saveDishes(userId, dishes) {\n    localStorage.setItem(MENU_KEY_PREFIX + userId, JSON.stringify(dishes));\n}\nfunction addDish(userId, dish) {\n    if (true) return null;\n    const dishes = getDishes(userId);\n    const newDish = {\n        ...dish,\n        id: dish.id || Date.now().toString()\n    };\n    dishes.push(newDish);\n    saveDishes(userId, dishes);\n    return newDish;\n}\nfunction updateDish(userId, dish) {\n    if (true) return false;\n    const dishes = getDishes(userId);\n    const idx = dishes.findIndex((d)=>d.id === dish.id);\n    if (idx === -1) return false;\n    dishes[idx] = dish;\n    saveDishes(userId, dishes);\n    return true;\n}\nfunction removeDish(userId, dishId) {\n    if (true) return false;\n    const dishes = getDishes(userId);\n    const newDishes = dishes.filter((d)=>d.id !== dishId);\n    if (newDishes.length === dishes.length) return false;\n    saveDishes(userId, newDishes);\n    return true;\n}\nconst addDishToMenu = addDish;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21lbnVTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLGVBQWU7QUFDZiwwREFBMEQ7QUE0QjFELE1BQU1BLGtCQUFrQjtBQUVqQixTQUFTQyxVQUFVQyxNQUFjO0lBQ3RDLElBQUksSUFBa0IsRUFBYSxPQUFPLEVBQUU7SUFDNUMsTUFBTUMsT0FBT0MsYUFBYUMsT0FBTyxDQUFDTCxrQkFBa0JFO0lBQ3BELElBQUksQ0FBQ0MsTUFBTSxPQUFPLEVBQUU7SUFDcEIsSUFBSTtRQUNGLE9BQU9HLEtBQUtDLEtBQUssQ0FBQ0o7SUFDcEIsRUFBRSxPQUFNO1FBQ04sT0FBTyxFQUFFO0lBQ1g7QUFDRjtBQUVPLFNBQVNLLFdBQVdOLE1BQWMsRUFBRU8sTUFBa0I7SUFDM0RMLGFBQWFNLE9BQU8sQ0FBQ1Ysa0JBQWtCRSxRQUFRSSxLQUFLSyxTQUFTLENBQUNGO0FBQ2hFO0FBRU8sU0FBU0csUUFBUVYsTUFBYyxFQUFFVyxJQUFjO0lBQ3BELElBQUksSUFBa0IsRUFBYSxPQUFPO0lBQzFDLE1BQU1KLFNBQVNSLFVBQVVDO0lBQ3pCLE1BQU1ZLFVBQVU7UUFBRSxHQUFHRCxJQUFJO1FBQUVFLElBQUlGLEtBQUtFLEVBQUUsSUFBSUMsS0FBS0MsR0FBRyxHQUFHQyxRQUFRO0lBQUc7SUFDaEVULE9BQU9VLElBQUksQ0FBQ0w7SUFDWk4sV0FBV04sUUFBUU87SUFDbkIsT0FBT0s7QUFDVDtBQUVPLFNBQVNNLFdBQVdsQixNQUFjLEVBQUVXLElBQWM7SUFDdkQsSUFBSSxJQUFrQixFQUFhLE9BQU87SUFDMUMsTUFBTUosU0FBU1IsVUFBVUM7SUFDekIsTUFBTW1CLE1BQU1aLE9BQU9hLFNBQVMsQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRVIsRUFBRSxLQUFLRixLQUFLRSxFQUFFO0lBQ2xELElBQUlNLFFBQVEsQ0FBQyxHQUFHLE9BQU87SUFDdkJaLE1BQU0sQ0FBQ1ksSUFBSSxHQUFHUjtJQUNkTCxXQUFXTixRQUFRTztJQUNuQixPQUFPO0FBQ1Q7QUFFTyxTQUFTZSxXQUFXdEIsTUFBYyxFQUFFdUIsTUFBYztJQUN2RCxJQUFJLElBQWtCLEVBQWEsT0FBTztJQUMxQyxNQUFNaEIsU0FBU1IsVUFBVUM7SUFDekIsTUFBTXdCLFlBQVlqQixPQUFPa0IsTUFBTSxDQUFDSixDQUFBQSxJQUFLQSxFQUFFUixFQUFFLEtBQUtVO0lBQzlDLElBQUlDLFVBQVVFLE1BQU0sS0FBS25CLE9BQU9tQixNQUFNLEVBQUUsT0FBTztJQUMvQ3BCLFdBQVdOLFFBQVF3QjtJQUNuQixPQUFPO0FBQ1Q7QUFFTyxNQUFNRyxnQkFBZ0JqQixRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VibWVzaXRlcjM2MC1tYXJrZXRwbGFjZS8uL3NyYy9saWIvbWVudVNlcnZpY2UudHM/Mjc4NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNZW51IFNlcnZpY2Vcbi8vIFByb3ZpZGVzIGZ1bmN0aW9ucyB0byBtYW5hZ2UgbWVudSBpdGVtcyBpbiBsb2NhbFN0b3JhZ2VcblxuZXhwb3J0IGludGVyZmFjZSBJbmdyZWRpZW50UXVhbnRpdHkge1xuICBpbnZlbnRvcnlJdGVtTmFtZTogc3RyaW5nO1xuICBxdWFudGl0eVBlckRpc2g6IG51bWJlcjtcbiAgdW5pdDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1lbnVJdGVtIHtcbiAgaWQ6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBwcmljZTogbnVtYmVyO1xuICBjYXRlZ29yeT86IHN0cmluZztcbiAgaW5ncmVkaWVudHM/OiAoc3RyaW5nIHwgSW5ncmVkaWVudFF1YW50aXR5KVtdO1xuICBpbWFnZT86IHN0cmluZztcbiAgYWlIaW50Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERpc2gge1xuICBpZDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIHByaWNlOiBudW1iZXI7XG4gIGNhdGVnb3J5Pzogc3RyaW5nO1xuICBpbmdyZWRpZW50cz86IChzdHJpbmcgfCBJbmdyZWRpZW50UXVhbnRpdHkpW107XG4gIGltYWdlPzogc3RyaW5nO1xuICBhaUhpbnQ/OiBzdHJpbmc7XG59XG5cbmNvbnN0IE1FTlVfS0VZX1BSRUZJWCA9ICdtZW51Xyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREaXNoZXModXNlcklkOiBzdHJpbmcpOiBNZW51SXRlbVtdIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gW107XG4gIGNvbnN0IGRhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShNRU5VX0tFWV9QUkVGSVggKyB1c2VySWQpO1xuICBpZiAoIWRhdGEpIHJldHVybiBbXTtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShkYXRhKSBhcyBNZW51SXRlbVtdO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gW107XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVEaXNoZXModXNlcklkOiBzdHJpbmcsIGRpc2hlczogTWVudUl0ZW1bXSk6IHZvaWQge1xuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShNRU5VX0tFWV9QUkVGSVggKyB1c2VySWQsIEpTT04uc3RyaW5naWZ5KGRpc2hlcykpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkRGlzaCh1c2VySWQ6IHN0cmluZywgZGlzaDogTWVudUl0ZW0pOiBNZW51SXRlbSB8IG51bGwge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybiBudWxsO1xuICBjb25zdCBkaXNoZXMgPSBnZXREaXNoZXModXNlcklkKTtcbiAgY29uc3QgbmV3RGlzaCA9IHsgLi4uZGlzaCwgaWQ6IGRpc2guaWQgfHwgRGF0ZS5ub3coKS50b1N0cmluZygpIH07XG4gIGRpc2hlcy5wdXNoKG5ld0Rpc2gpO1xuICBzYXZlRGlzaGVzKHVzZXJJZCwgZGlzaGVzKTtcbiAgcmV0dXJuIG5ld0Rpc2g7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVEaXNoKHVzZXJJZDogc3RyaW5nLCBkaXNoOiBNZW51SXRlbSk6IGJvb2xlYW4ge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybiBmYWxzZTtcbiAgY29uc3QgZGlzaGVzID0gZ2V0RGlzaGVzKHVzZXJJZCk7XG4gIGNvbnN0IGlkeCA9IGRpc2hlcy5maW5kSW5kZXgoZCA9PiBkLmlkID09PSBkaXNoLmlkKTtcbiAgaWYgKGlkeCA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgZGlzaGVzW2lkeF0gPSBkaXNoO1xuICBzYXZlRGlzaGVzKHVzZXJJZCwgZGlzaGVzKTtcbiAgcmV0dXJuIHRydWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVEaXNoKHVzZXJJZDogc3RyaW5nLCBkaXNoSWQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybiBmYWxzZTtcbiAgY29uc3QgZGlzaGVzID0gZ2V0RGlzaGVzKHVzZXJJZCk7XG4gIGNvbnN0IG5ld0Rpc2hlcyA9IGRpc2hlcy5maWx0ZXIoZCA9PiBkLmlkICE9PSBkaXNoSWQpO1xuICBpZiAobmV3RGlzaGVzLmxlbmd0aCA9PT0gZGlzaGVzLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICBzYXZlRGlzaGVzKHVzZXJJZCwgbmV3RGlzaGVzKTtcbiAgcmV0dXJuIHRydWU7XG59XG5cbmV4cG9ydCBjb25zdCBhZGREaXNoVG9NZW51ID0gYWRkRGlzaDsgIl0sIm5hbWVzIjpbIk1FTlVfS0VZX1BSRUZJWCIsImdldERpc2hlcyIsInVzZXJJZCIsImRhdGEiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiSlNPTiIsInBhcnNlIiwic2F2ZURpc2hlcyIsImRpc2hlcyIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJhZGREaXNoIiwiZGlzaCIsIm5ld0Rpc2giLCJpZCIsIkRhdGUiLCJub3ciLCJ0b1N0cmluZyIsInB1c2giLCJ1cGRhdGVEaXNoIiwiaWR4IiwiZmluZEluZGV4IiwiZCIsInJlbW92ZURpc2giLCJkaXNoSWQiLCJuZXdEaXNoZXMiLCJmaWx0ZXIiLCJsZW5ndGgiLCJhZGREaXNoVG9NZW51Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/menuService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@opentelemetry","vendor-chunks/next","vendor-chunks/@grpc","vendor-chunks/handlebars","vendor-chunks/thriftrw","vendor-chunks/@genkit-ai","vendor-chunks/protobufjs","vendor-chunks/zod","vendor-chunks/yaml","vendor-chunks/ajv","vendor-chunks/zod-to-json-schema","vendor-chunks/@google","vendor-chunks/bufrw","vendor-chunks/semver","vendor-chunks/long","vendor-chunks/json5","vendor-chunks/opentracing","vendor-chunks/genkit","vendor-chunks/require-in-the-middle","vendor-chunks/@protobufjs","vendor-chunks/jaeger-client","vendor-chunks/@js-sdsl","vendor-chunks/resolve","vendor-chunks/fast-uri","vendor-chunks/dotprompt","vendor-chunks/lodash.camelcase","vendor-chunks/ajv-formats","vendor-chunks/uri-templates","vendor-chunks/partial-json","vendor-chunks/hexer","vendor-chunks/node-int64","vendor-chunks/is-core-module","vendor-chunks/import-in-the-middle","vendor-chunks/error","vendor-chunks/xorshift","vendor-chunks/shimmer","vendor-chunks/get-port","vendor-chunks/json-schema-traverse","vendor-chunks/function-bind","vendor-chunks/path-parse","vendor-chunks/fast-deep-equal","vendor-chunks/module-details-from-path","vendor-chunks/string-template","vendor-chunks/xtend","vendor-chunks/ansi-color","vendor-chunks/hasown","vendor-chunks/csv-parse","vendor-chunks/jsonrepair"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FmenuCsv%2Froute&page=%2Fapi%2FmenuCsv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FmenuCsv%2Froute.ts&appDir=%2FUsers%2Fnishantchaturvedi%2FDesktop%2FIOMS%2FIOMS-V1-POS-Working%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnishantchaturvedi%2FDesktop%2FIOMS%2FIOMS-V1-POS-Working&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();