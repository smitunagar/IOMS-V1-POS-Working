{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  LoggerProviderConfig,\n  LogRecordLimits,\n  BufferConfig,\n  BatchLogRecordProcessorBrowserConfig,\n} from './types';\nexport { LoggerProvider } from './LoggerProvider';\nexport { LogRecord } from './LogRecord';\nexport { LogRecordProcessor } from './LogRecordProcessor';\nexport { ReadableLogRecord } from './export/ReadableLogRecord';\nexport { NoopLogRecordProcessor } from './export/NoopLogRecordProcessor';\nexport { ConsoleLogRecordExporter } from './export/ConsoleLogRecordExporter';\nexport { LogRecordExporter } from './export/LogRecordExporter';\nexport { SimpleLogRecordProcessor } from './export/SimpleLogRecordProcessor';\nexport { InMemoryLogRecordExporter } from './export/InMemoryLogRecordExporter';\nexport { BatchLogRecordProcessor } from './platform';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"file":"LogRecord.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/LogRecord.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AttributeValue, diag } from '@opentelemetry/api';\nimport type * as logsAPI from '@opentelemetry/api-logs';\nimport * as api from '@opentelemetry/api';\nimport {\n  timeInputToHrTime,\n  isAttributeValue,\n  InstrumentationScope,\n} from '@opentelemetry/core';\nimport type { IResource } from '@opentelemetry/resources';\n\nimport type { ReadableLogRecord } from './export/ReadableLogRecord';\nimport type { LogRecordLimits } from './types';\nimport { LogAttributes, LogBody } from '@opentelemetry/api-logs';\nimport { LoggerProviderSharedState } from './internal/LoggerProviderSharedState';\n\nexport class LogRecord implements ReadableLogRecord {\n  readonly hrTime: api.HrTime;\n  readonly hrTimeObserved: api.HrTime;\n  readonly spanContext?: api.SpanContext;\n  readonly resource: IResource;\n  readonly instrumentationScope: InstrumentationScope;\n  readonly attributes: logsAPI.LogAttributes = {};\n  private _severityText?: string;\n  private _severityNumber?: logsAPI.SeverityNumber;\n  private _body?: LogBody;\n  private totalAttributesCount: number = 0;\n\n  private _isReadonly: boolean = false;\n  private readonly _logRecordLimits: Required<LogRecordLimits>;\n\n  set severityText(severityText: string | undefined) {\n    if (this._isLogRecordReadonly()) {\n      return;\n    }\n    this._severityText = severityText;\n  }\n  get severityText(): string | undefined {\n    return this._severityText;\n  }\n\n  set severityNumber(severityNumber: logsAPI.SeverityNumber | undefined) {\n    if (this._isLogRecordReadonly()) {\n      return;\n    }\n    this._severityNumber = severityNumber;\n  }\n  get severityNumber(): logsAPI.SeverityNumber | undefined {\n    return this._severityNumber;\n  }\n\n  set body(body: LogBody | undefined) {\n    if (this._isLogRecordReadonly()) {\n      return;\n    }\n    this._body = body;\n  }\n  get body(): LogBody | undefined {\n    return this._body;\n  }\n\n  get droppedAttributesCount(): number {\n    return this.totalAttributesCount - Object.keys(this.attributes).length;\n  }\n\n  constructor(\n    _sharedState: LoggerProviderSharedState,\n    instrumentationScope: InstrumentationScope,\n    logRecord: logsAPI.LogRecord\n  ) {\n    const {\n      timestamp,\n      observedTimestamp,\n      severityNumber,\n      severityText,\n      body,\n      attributes = {},\n      context,\n    } = logRecord;\n\n    const now = Date.now();\n    this.hrTime = timeInputToHrTime(timestamp ?? now);\n    this.hrTimeObserved = timeInputToHrTime(observedTimestamp ?? now);\n\n    if (context) {\n      const spanContext = api.trace.getSpanContext(context);\n      if (spanContext && api.isSpanContextValid(spanContext)) {\n        this.spanContext = spanContext;\n      }\n    }\n    this.severityNumber = severityNumber;\n    this.severityText = severityText;\n    this.body = body;\n    this.resource = _sharedState.resource;\n    this.instrumentationScope = instrumentationScope;\n    this._logRecordLimits = _sharedState.logRecordLimits;\n    this.setAttributes(attributes);\n  }\n\n  public setAttribute(key: string, value?: LogAttributes | AttributeValue) {\n    if (this._isLogRecordReadonly()) {\n      return this;\n    }\n    if (value === null) {\n      return this;\n    }\n    if (key.length === 0) {\n      api.diag.warn(`Invalid attribute key: ${key}`);\n      return this;\n    }\n    if (\n      !isAttributeValue(value) &&\n      !(\n        typeof value === 'object' &&\n        !Array.isArray(value) &&\n        Object.keys(value).length > 0\n      )\n    ) {\n      api.diag.warn(`Invalid attribute value set for key: ${key}`);\n      return this;\n    }\n    this.totalAttributesCount += 1;\n    if (\n      Object.keys(this.attributes).length >=\n        this._logRecordLimits.attributeCountLimit &&\n      !Object.prototype.hasOwnProperty.call(this.attributes, key)\n    ) {\n      // This logic is to create drop message at most once per LogRecord to prevent excessive logging.\n      if (this.droppedAttributesCount === 1) {\n        api.diag.warn('Dropping extra attributes.');\n      }\n      return this;\n    }\n    if (isAttributeValue(value)) {\n      this.attributes[key] = this._truncateToSize(value);\n    } else {\n      this.attributes[key] = value;\n    }\n    return this;\n  }\n\n  public setAttributes(attributes: LogAttributes) {\n    for (const [k, v] of Object.entries(attributes)) {\n      this.setAttribute(k, v);\n    }\n    return this;\n  }\n\n  public setBody(body: LogBody) {\n    this.body = body;\n    return this;\n  }\n\n  public setSeverityNumber(severityNumber: logsAPI.SeverityNumber) {\n    this.severityNumber = severityNumber;\n    return this;\n  }\n\n  public setSeverityText(severityText: string) {\n    this.severityText = severityText;\n    return this;\n  }\n\n  /**\n   * @internal\n   * A LogRecordProcessor may freely modify logRecord for the duration of the OnEmit call.\n   * If logRecord is needed after OnEmit returns (i.e. for asynchronous processing) only reads are permitted.\n   */\n  _makeReadonly() {\n    this._isReadonly = true;\n  }\n\n  private _truncateToSize(value: AttributeValue): AttributeValue {\n    const limit = this._logRecordLimits.attributeValueLengthLimit;\n    // Check limit\n    if (limit <= 0) {\n      // Negative values are invalid, so do not truncate\n      api.diag.warn(`Attribute value limit must be positive, got ${limit}`);\n      return value;\n    }\n\n    // String\n    if (typeof value === 'string') {\n      return this._truncateToLimitUtil(value, limit);\n    }\n\n    // Array of strings\n    if (Array.isArray(value)) {\n      return (value as []).map(val =>\n        typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val\n      );\n    }\n\n    // Other types, no need to apply value length limit\n    return value;\n  }\n\n  private _truncateToLimitUtil(value: string, limit: number): string {\n    if (value.length <= limit) {\n      return value;\n    }\n    return value.substring(0, limit);\n  }\n\n  private _isLogRecordReadonly(): boolean {\n    if (this._isReadonly) {\n      diag.warn('Can not execute the operation on emitted log record');\n    }\n    return this._isReadonly;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"file":"Logger.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/Logger.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as logsAPI from '@opentelemetry/api-logs';\nimport type { InstrumentationScope } from '@opentelemetry/core';\nimport { context } from '@opentelemetry/api';\n\nimport { LogRecord } from './LogRecord';\nimport { LoggerProviderSharedState } from './internal/LoggerProviderSharedState';\n\nexport class Logger implements logsAPI.Logger {\n  constructor(\n    public readonly instrumentationScope: InstrumentationScope,\n    private _sharedState: LoggerProviderSharedState\n  ) {}\n\n  public emit(logRecord: logsAPI.LogRecord): void {\n    const currentContext = logRecord.context || context.active();\n    /**\n     * If a Logger was obtained with include_trace_context=true,\n     * the LogRecords it emits MUST automatically include the Trace Context from the active Context,\n     * if Context has not been explicitly set.\n     */\n    const logRecordInstance = new LogRecord(\n      this._sharedState,\n      this.instrumentationScope,\n      {\n        context: currentContext,\n        ...logRecord,\n      }\n    );\n    /**\n     * the explicitly passed Context,\n     * the current Context, or an empty Context if the Logger was obtained with include_trace_context=false\n     */\n    this._sharedState.activeProcessor.onEmit(logRecordInstance, currentContext);\n    /**\n     * A LogRecordProcessor may freely modify logRecord for the duration of the OnEmit call.\n     * If logRecord is needed after OnEmit returns (i.e. for asynchronous processing) only reads are permitted.\n     */\n    logRecordInstance._makeReadonly();\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAIH,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAE7C,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;;;;;;;;;;;;;AAGxC,IAAA,SAAA;IACE,SAAA,OACkB,oBAA0C,EAClD,YAAuC;QAD/B,IAAA,CAAA,oBAAoB,GAApB,oBAAoB,CAAsB;QAClD,IAAA,CAAA,YAAY,GAAZ,YAAY,CAA2B;IAC9C,CAAC;IAEG,OAAA,SAAA,CAAA,IAAI,GAAX,SAAY,SAA4B;QACtC,IAAM,cAAc,GAAG,SAAS,CAAC,OAAO,yIAAI,WAAO,CAAC,MAAM,EAAE,CAAC;QAC7D;;;;WAIG,CACH,IAAM,iBAAiB,GAAG,kLAAI,YAAS,CACrC,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,oBAAoB,EAAA,SAAA;YAEvB,OAAO,EAAE,cAAc;QAAA,GACpB,SAAS,EAEf,CAAC;QACF;;;WAGG,CACH,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;QAC5E;;;WAGG,CACH,iBAAiB,CAAC,aAAa,EAAE,CAAC;IACpC,CAAC;IACH,OAAA,MAAC;AAAD,CAAC,AAhCD,IAgCC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"file":"config.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/config.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  getEnv,\n  getEnvWithoutDefaults,\n} from '@opentelemetry/core';\nimport { LogRecordLimits } from './types';\n\nexport function loadDefaultConfig() {\n  return {\n    forceFlushTimeoutMillis: 30000,\n    logRecordLimits: {\n      attributeValueLengthLimit:\n        getEnv().OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: getEnv().OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT,\n    },\n    includeTraceContext: true,\n  };\n}\n\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param logRecordLimits User provided limits configuration\n */\nexport function reconfigureLimits(\n  logRecordLimits: LogRecordLimits\n): Required<LogRecordLimits> {\n  const parsedEnvConfig = getEnvWithoutDefaults();\n\n  return {\n    /**\n     * Reassign log record attribute count limit to use first non null value defined by user or use default value\n     */\n    attributeCountLimit:\n      logRecordLimits.attributeCountLimit ??\n      parsedEnvConfig.OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT ??\n      parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT ??\n      DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    /**\n     * Reassign log record attribute value length limit to use first non null value defined by user or use default value\n     */\n    attributeValueLengthLimit:\n      logRecordLimits.attributeValueLengthLimit ??\n      parsedEnvConfig.OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n      parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n      DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  };\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,OAAO,EACL,6BAA6B,EAC7B,oCAAoC,EACpC,MAAM,EACN,qBAAqB,GACtB,MAAM,qBAAqB,CAAC;;;AAGvB,SAAU,iBAAiB;IAC/B,OAAO;QACL,uBAAuB,EAAE,KAAK;QAC9B,eAAe,EAAE;YACf,yBAAyB,mMACvB,SAAA,AAAM,EAAE,EAAC,2CAA2C;YACtD,mBAAmB,GAAE,yMAAA,AAAM,EAAE,EAAC,oCAAoC;SACnE;QACD,mBAAmB,EAAE,IAAI;KAC1B,CAAC;AACJ,CAAC;AAOK,SAAU,iBAAiB,CAC/B,eAAgC;;IAEhC,IAAM,eAAe,oMAAG,wBAAA,AAAqB,EAAE,CAAC;IAEhD,OAAO;QACL;;WAEG,CACH,mBAAmB,EACjB,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,eAAe,CAAC,mBAAmB,MAAA,QAAA,OAAA,KAAA,IAAA,KACnC,eAAe,CAAC,oCAAoC,MAAA,QAAA,OAAA,KAAA,IAAA,KACpD,eAAe,CAAC,0BAA0B,MAAA,QAAA,OAAA,KAAA,IAAA,uLAC1C,gCAA6B;QAC/B;;WAEG,CACH,yBAAyB,EACvB,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,eAAe,CAAC,yBAAyB,MAAA,QAAA,OAAA,KAAA,IAAA,KACzC,eAAe,CAAC,2CAA2C,MAAA,QAAA,OAAA,KAAA,IAAA,KAC3D,eAAe,CAAC,iCAAiC,MAAA,QAAA,OAAA,KAAA,IAAA,uLACjD,uCAAoC;KACvC,CAAC;AACJ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"file":"MultiLogRecordProcessor.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/MultiLogRecordProcessor.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { callWithTimeout } from '@opentelemetry/core';\nimport type { Context } from '@opentelemetry/api';\nimport type { LogRecordProcessor } from './LogRecordProcessor';\nimport type { LogRecord } from './LogRecord';\n\n/**\n * Implementation of the {@link LogRecordProcessor} that simply forwards all\n * received events to a list of {@link LogRecordProcessor}s.\n */\nexport class MultiLogRecordProcessor implements LogRecordProcessor {\n  constructor(\n    public readonly processors: LogRecordProcessor[],\n    public readonly forceFlushTimeoutMillis: number\n  ) {}\n\n  public async forceFlush(): Promise<void> {\n    const timeout = this.forceFlushTimeoutMillis;\n    await Promise.all(\n      this.processors.map(processor =>\n        callWithTimeout(processor.forceFlush(), timeout)\n      )\n    );\n  }\n\n  public onEmit(logRecord: LogRecord, context?: Context): void {\n    this.processors.forEach(processors =>\n      processors.onEmit(logRecord, context)\n    );\n  }\n\n  public async shutdown(): Promise<void> {\n    await Promise.all(this.processors.map(processor => processor.shutdown()));\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKtD;;;GAGG,CACH,IAAA,0BAAA;IACE,SAAA,wBACkB,UAAgC,EAChC,uBAA+B;QAD/B,IAAA,CAAA,UAAU,GAAV,UAAU,CAAsB;QAChC,IAAA,CAAA,uBAAuB,GAAvB,uBAAuB,CAAQ;IAC9C,CAAC;IAES,wBAAA,SAAA,CAAA,UAAU,GAAvB;;;;;;wBACQ,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC;wBAC7C,OAAA;4BAAA,EAAA,OAAA;4BAAM,OAAO,CAAC,GAAG,CACf,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAA,SAAS;gCAC3B,WAAA,gMAAA,AAAe,EAAC,SAAS,CAAC,UAAU,EAAE,EAAE,OAAO,CAAC;4BAAhD,CAAgD,CACjD,CACF;yBAAA,CAAA;;wBAJD,GAAA,IAAA,EAIC,CAAC;;;;;;;KACH;IAEM,wBAAA,SAAA,CAAA,MAAM,GAAb,SAAc,SAAoB,EAAE,OAAiB;QACnD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAA,UAAU;YAChC,OAAA,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC;QAArC,CAAqC,CACtC,CAAC;IACJ,CAAC;IAEY,wBAAA,SAAA,CAAA,QAAQ,GAArB;;;;;wBACE,OAAA;4BAAA,EAAA,OAAA;4BAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAA,SAAS;gCAAI,OAAA,SAAS,CAAC,QAAQ,EAAE;4BAApB,CAAoB,CAAC,CAAC;yBAAA,CAAA;;wBAAzE,GAAA,IAAA,EAAyE,CAAC;;;;;;;KAC3E;IACH,OAAA,uBAAC;AAAD,CAAC,AAxBD,IAwBC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"file":"NoopLogRecordProcessor.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/export/NoopLogRecordProcessor.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { LogRecordProcessor } from '../LogRecordProcessor';\nimport { ReadableLogRecord } from './ReadableLogRecord';\n\nexport class NoopLogRecordProcessor implements LogRecordProcessor {\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  onEmit(_logRecord: ReadableLogRecord, _context: Context): void {}\n\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAMH,IAAA,yBAAA;IAAA,SAAA,0BAUA,CAAC;IATC,uBAAA,SAAA,CAAA,UAAU,GAAV;QACE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,uBAAA,SAAA,CAAA,MAAM,GAAN,SAAO,UAA6B,EAAE,QAAiB,GAAS,CAAC;IAEjE,uBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACH,OAAA,sBAAC;AAAD,CAAC,AAVD,IAUC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"file":"LoggerProviderSharedState.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/internal/LoggerProviderSharedState.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@opentelemetry/api-logs';\nimport { IResource } from '@opentelemetry/resources';\nimport { LogRecordProcessor } from '../LogRecordProcessor';\nimport { LogRecordLimits } from '../types';\nimport { NoopLogRecordProcessor } from '../export/NoopLogRecordProcessor';\n\nexport class LoggerProviderSharedState {\n  readonly loggers: Map<string, Logger> = new Map();\n  activeProcessor: LogRecordProcessor;\n  readonly registeredLogRecordProcessors: LogRecordProcessor[] = [];\n\n  constructor(\n    readonly resource: IResource,\n    readonly forceFlushTimeoutMillis: number,\n    readonly logRecordLimits: Required<LogRecordLimits>\n  ) {\n    this.activeProcessor = new NoopLogRecordProcessor();\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAMH,OAAO,EAAE,sBAAsB,EAAE,MAAM,kCAAkC,CAAC;;AAE1E,IAAA,4BAAA;IAKE,SAAA,0BACW,QAAmB,EACnB,uBAA+B,EAC/B,eAA0C;QAF1C,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAW;QACnB,IAAA,CAAA,uBAAuB,GAAvB,uBAAuB,CAAQ;QAC/B,IAAA,CAAA,eAAe,GAAf,eAAe,CAA2B;QAP5C,IAAA,CAAA,OAAO,GAAwB,IAAI,GAAG,EAAE,CAAC;QAEzC,IAAA,CAAA,6BAA6B,GAAyB,EAAE,CAAC;QAOhE,IAAI,CAAC,eAAe,GAAG,yMAAI,yBAAsB,EAAE,CAAC;IACtD,CAAC;IACH,OAAA,yBAAC;AAAD,CAAC,AAZD,IAYC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 676, "column": 0}, "map": {"version":3,"file":"LoggerProvider.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/LoggerProvider.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport type * as logsAPI from '@opentelemetry/api-logs';\nimport { NOOP_LOGGER } from '@opentelemetry/api-logs';\nimport { Resource } from '@opentelemetry/resources';\nimport { BindOnceFuture, merge } from '@opentelemetry/core';\n\nimport type { LoggerProviderConfig } from './types';\nimport type { LogRecordProcessor } from './LogRecordProcessor';\nimport { Logger } from './Logger';\nimport { loadDefaultConfig, reconfigureLimits } from './config';\nimport { MultiLogRecordProcessor } from './MultiLogRecordProcessor';\nimport { LoggerProviderSharedState } from './internal/LoggerProviderSharedState';\n\nexport const DEFAULT_LOGGER_NAME = 'unknown';\n\nexport class LoggerProvider implements logsAPI.LoggerProvider {\n  private _shutdownOnce: BindOnceFuture<void>;\n  private readonly _sharedState: LoggerProviderSharedState;\n\n  constructor(config: LoggerProviderConfig = {}) {\n    const mergedConfig = merge({}, loadDefaultConfig(), config);\n    const resource = Resource.default().merge(\n      mergedConfig.resource ?? Resource.empty()\n    );\n    this._sharedState = new LoggerProviderSharedState(\n      resource,\n      mergedConfig.forceFlushTimeoutMillis,\n      reconfigureLimits(mergedConfig.logRecordLimits)\n    );\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n  }\n\n  /**\n   * Get a logger with the configuration of the LoggerProvider.\n   */\n  public getLogger(\n    name: string,\n    version?: string,\n    options?: logsAPI.LoggerOptions\n  ): logsAPI.Logger {\n    if (this._shutdownOnce.isCalled) {\n      diag.warn('A shutdown LoggerProvider cannot provide a Logger');\n      return NOOP_LOGGER;\n    }\n\n    if (!name) {\n      diag.warn('Logger requested without instrumentation scope name.');\n    }\n    const loggerName = name || DEFAULT_LOGGER_NAME;\n    const key = `${loggerName}@${version || ''}:${options?.schemaUrl || ''}`;\n    if (!this._sharedState.loggers.has(key)) {\n      this._sharedState.loggers.set(\n        key,\n        new Logger(\n          { name: loggerName, version, schemaUrl: options?.schemaUrl },\n          this._sharedState\n        )\n      );\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this._sharedState.loggers.get(key)!;\n  }\n\n  /**\n   * Adds a new {@link LogRecordProcessor} to this logger.\n   * @param processor the new LogRecordProcessor to be added.\n   */\n  public addLogRecordProcessor(processor: LogRecordProcessor) {\n    if (this._sharedState.registeredLogRecordProcessors.length === 0) {\n      // since we might have enabled by default a batchProcessor, we disable it\n      // before adding the new one\n      this._sharedState.activeProcessor\n        .shutdown()\n        .catch(err =>\n          diag.error(\n            'Error while trying to shutdown current log record processor',\n            err\n          )\n        );\n    }\n    this._sharedState.registeredLogRecordProcessors.push(processor);\n    this._sharedState.activeProcessor = new MultiLogRecordProcessor(\n      this._sharedState.registeredLogRecordProcessors,\n      this._sharedState.forceFlushTimeoutMillis\n    );\n  }\n\n  /**\n   * Notifies all registered LogRecordProcessor to flush any buffered data.\n   *\n   * Returns a promise which is resolved when all flushes are complete.\n   */\n  public forceFlush(): Promise<void> {\n    // do not flush after shutdown\n    if (this._shutdownOnce.isCalled) {\n      diag.warn('invalid attempt to force flush after LoggerProvider shutdown');\n      return this._shutdownOnce.promise;\n    }\n    return this._sharedState.activeProcessor.forceFlush();\n  }\n\n  /**\n   * Flush all buffered data and shut down the LoggerProvider and all registered\n   * LogRecordProcessor.\n   *\n   * Returns a promise which is resolved when all flushes are complete.\n   */\n  public shutdown(): Promise<void> {\n    if (this._shutdownOnce.isCalled) {\n      diag.warn('shutdown may only be called once per LoggerProvider');\n      return this._shutdownOnce.promise;\n    }\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown(): Promise<void> {\n    return this._sharedState.activeProcessor.shutdown();\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 796, "column": 0}, "map": {"version":3,"file":"ConsoleLogRecordExporter.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/export/ConsoleLogRecordExporter.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExportResult, hrTimeToMicroseconds } from '@opentelemetry/core';\nimport { ExportResultCode } from '@opentelemetry/core';\n\nimport type { ReadableLogRecord } from './ReadableLogRecord';\nimport type { LogRecordExporter } from './LogRecordExporter';\n\n/**\n * This is implementation of {@link LogRecordExporter} that prints LogRecords to the\n * console. This class can be used for diagnostic purposes.\n */\n\n/* eslint-disable no-console */\nexport class ConsoleLogRecordExporter implements LogRecordExporter {\n  /**\n   * Export logs.\n   * @param logs\n   * @param resultCallback\n   */\n  public export(\n    logs: ReadableLogRecord[],\n    resultCallback: (result: ExportResult) => void\n  ) {\n    this._sendLogRecords(logs, resultCallback);\n  }\n\n  /**\n   * Shutdown the exporter.\n   */\n  public shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  /**\n   * converts logRecord info into more readable format\n   * @param logRecord\n   */\n  private _exportInfo(logRecord: ReadableLogRecord) {\n    return {\n      resource: {\n        attributes: logRecord.resource.attributes,\n      },\n      timestamp: hrTimeToMicroseconds(logRecord.hrTime),\n      traceId: logRecord.spanContext?.traceId,\n      spanId: logRecord.spanContext?.spanId,\n      traceFlags: logRecord.spanContext?.traceFlags,\n      severityText: logRecord.severityText,\n      severityNumber: logRecord.severityNumber,\n      body: logRecord.body,\n      attributes: logRecord.attributes,\n    };\n  }\n\n  /**\n   * Showing logs  in console\n   * @param logRecords\n   * @param done\n   */\n  private _sendLogRecords(\n    logRecords: ReadableLogRecord[],\n    done?: (result: ExportResult) => void\n  ): void {\n    for (const logRecord of logRecords) {\n      console.dir(this._exportInfo(logRecord), { depth: 3 });\n    }\n    done?.({ code: ExportResultCode.SUCCESS });\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAgB,oBAAoB,EAAE,MAAM,qBAAqB,CAAC;AACzE,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;;;;;AAKvD;;;GAGG,CAEH,6BAAA,EAA+B,CAC/B,IAAA,2BAAA;IAAA,SAAA,4BAsDA,CAAC;IArDC;;;;OAIG,CACI,yBAAA,SAAA,CAAA,MAAM,GAAb,SACE,IAAyB,EACzB,cAA8C;QAE9C,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAC7C,CAAC;IAED;;OAEG,CACI,yBAAA,SAAA,CAAA,QAAQ,GAAf;QACE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED;;;OAGG,CACK,yBAAA,SAAA,CAAA,WAAW,GAAnB,SAAoB,SAA4B;;QAC9C,OAAO;YACL,QAAQ,EAAE;gBACR,UAAU,EAAE,SAAS,CAAC,QAAQ,CAAC,UAAU;aAC1C;YACD,SAAS,EAAE,uMAAA,AAAoB,EAAC,SAAS,CAAC,MAAM,CAAC;YACjD,OAAO,EAAE,CAAA,KAAA,SAAS,CAAC,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,OAAO;YACvC,MAAM,EAAE,CAAA,KAAA,SAAS,CAAC,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM;YACrC,UAAU,EAAE,CAAA,KAAA,SAAS,CAAC,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,UAAU;YAC7C,YAAY,EAAE,SAAS,CAAC,YAAY;YACpC,cAAc,EAAE,SAAS,CAAC,cAAc;YACxC,IAAI,EAAE,SAAS,CAAC,IAAI;YACpB,UAAU,EAAE,SAAS,CAAC,UAAU;SACjC,CAAC;IACJ,CAAC;IAED;;;;OAIG,CACK,yBAAA,SAAA,CAAA,eAAe,GAAvB,SACE,UAA+B,EAC/B,IAAqC;;;YAErC,IAAwB,IAAA,eAAA,SAAA,UAAU,CAAA,EAAA,iBAAA,aAAA,IAAA,EAAA,EAAA,CAAA,eAAA,IAAA,EAAA,iBAAA,aAAA,IAAA,GAAE;gBAA/B,IAAM,SAAS,GAAA,eAAA,KAAA;gBAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;oBAAE,KAAK,EAAE,CAAC;gBAAA,CAAE,CAAC,CAAC;aACxD;;;;;;;;;;;;QACD,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAA,KAAA,IAAJ,IAAI,CAAG;YAAE,IAAI,4KAAE,mBAAgB,CAAC,OAAO;QAAA,CAAE,CAAC,CAAC;IAC7C,CAAC;IACH,OAAA,wBAAC;AAAD,CAAC,AAtDD,IAsDC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 905, "column": 0}, "map": {"version":3,"file":"SimpleLogRecordProcessor.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/export/SimpleLogRecordProcessor.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExportResult } from '@opentelemetry/core';\nimport {\n  BindOnceFuture,\n  ExportResultCode,\n  globalErrorHandler,\n  internal,\n} from '@opentelemetry/core';\nimport type { LogRecordExporter } from './LogRecordExporter';\nimport type { LogRecordProcessor } from '../LogRecordProcessor';\nimport type { LogRecord } from './../LogRecord';\n\nexport class SimpleLogRecordProcessor implements LogRecordProcessor {\n  private _shutdownOnce: BindOnceFuture<void>;\n  private _unresolvedExports: Set<Promise<void>>;\n\n  constructor(private readonly _exporter: LogRecordExporter) {\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n    this._unresolvedExports = new Set<Promise<void>>();\n  }\n\n  public onEmit(logRecord: LogRecord): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    const doExport = () =>\n      internal\n        ._export(this._exporter, [logRecord])\n        .then((result: ExportResult) => {\n          if (result.code !== ExportResultCode.SUCCESS) {\n            globalErrorHandler(\n              result.error ??\n                new Error(\n                  `SimpleLogRecordProcessor: log record export failed (status ${result})`\n                )\n            );\n          }\n        })\n        .catch(globalErrorHandler);\n\n    // Avoid scheduling a promise to make the behavior more predictable and easier to test\n    if (logRecord.resource.asyncAttributesPending) {\n      const exportPromise = logRecord.resource\n        .waitForAsyncAttributes?.()\n        .then(() => {\n          // Using TS Non-null assertion operator because exportPromise could not be null in here\n          // if waitForAsyncAttributes is not present this code will never be reached\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this._unresolvedExports.delete(exportPromise!);\n          return doExport();\n        }, globalErrorHandler);\n\n      // store the unresolved exports\n      if (exportPromise != null) {\n        this._unresolvedExports.add(exportPromise);\n      }\n    } else {\n      void doExport();\n    }\n  }\n\n  public async forceFlush(): Promise<void> {\n    // await unresolved resources before resolving\n    await Promise.all(Array.from(this._unresolvedExports));\n  }\n\n  public shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown(): Promise<void> {\n    return this._exporter.shutdown();\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;AAGH,OAAO,EACL,cAAc,EACd,gBAAgB,EAChB,kBAAkB,EAClB,QAAQ,GACT,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAK7B,IAAA,2BAAA;IAIE,SAAA,yBAA6B,SAA4B;QAA5B,IAAA,CAAA,SAAS,GAAT,SAAS,CAAmB;QACvD,IAAI,CAAC,aAAa,GAAG,mLAAI,iBAAc,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAAiB,CAAC;IACrD,CAAC;IAEM,yBAAA,SAAA,CAAA,MAAM,GAAb,SAAc,SAAoB;QAAlC,IAAA,QAAA,IAAA,CAuCC;;QAtCC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC/B,OAAO;SACR;QAED,IAAM,QAAQ,GAAG;YACf,OAAA,8LAAQ,CACL,OAAO,CAAC,KAAI,CAAC,SAAS,EAAE;gBAAC,SAAS;aAAC,CAAC,CACpC,IAAI,CAAC,SAAC,MAAoB;;gBACzB,IAAI,MAAM,CAAC,IAAI,KAAK,6LAAgB,CAAC,OAAO,EAAE;0NAC5C,qBAAA,AAAkB,EAChB,CAAA,KAAA,MAAM,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KACV,IAAI,KAAK,CACP,gEAA8D,MAAM,GAAA,GAAG,CACxE,CACJ,CAAC;iBACH;YACH,CAAC,CAAC,CACD,KAAK,mMAAC,qBAAkB,CAAC;QAZ5B,CAY4B,CAAC;QAE/B,sFAAsF;QACtF,IAAI,SAAS,CAAC,QAAQ,CAAC,sBAAsB,EAAE;YAC7C,IAAM,eAAa,GAAG,CAAA,KAAA,CAAA,KAAA,SAAS,CAAC,QAAQ,EACrC,sBAAsB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,CAAA,IACtB,IAAI,CAAC;gBACJ,uFAAuF;gBACvF,2EAA2E;gBAC3E,oEAAoE;gBACpE,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,eAAc,CAAC,CAAC;gBAC/C,OAAO,QAAQ,EAAE,CAAC;YACpB,CAAC,oMAAE,qBAAkB,CAAC,CAAC;YAEzB,+BAA+B;YAC/B,IAAI,eAAa,IAAI,IAAI,EAAE;gBACzB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,eAAa,CAAC,CAAC;aAC5C;SACF,MAAM;YACL,KAAK,QAAQ,EAAE,CAAC;SACjB;IACH,CAAC;IAEY,yBAAA,SAAA,CAAA,UAAU,GAAvB;;;;;wBACE,8CAA8C;wBAC9C,OAAA;4BAAA,EAAA,OAAA;4BAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;yBAAA,CAAA;;wBADtD,8CAA8C;wBAC9C,GAAA,IAAA,EAAsD,CAAC;;;;;;;KACxD;IAEM,yBAAA,SAAA,CAAA,QAAQ,GAAf;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IAEO,yBAAA,SAAA,CAAA,SAAS,GAAjB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC;IACH,OAAA,wBAAC;AAAD,CAAC,AA9DD,IA8DC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1125, "column": 0}, "map": {"version":3,"file":"InMemoryLogRecordExporter.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/export/InMemoryLogRecordExporter.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExportResult } from '@opentelemetry/core';\nimport { ExportResultCode } from '@opentelemetry/core';\n\nimport type { ReadableLogRecord } from './ReadableLogRecord';\nimport type { LogRecordExporter } from './LogRecordExporter';\n\n/**\n * This class can be used for testing purposes. It stores the exported LogRecords\n * in a list in memory that can be retrieved using the `getFinishedLogRecords()`\n * method.\n */\nexport class InMemoryLogRecordExporter implements LogRecordExporter {\n  private _finishedLogRecords: ReadableLogRecord[] = [];\n\n  /**\n   * Indicates if the exporter has been \"shutdown.\"\n   * When false, exported log records will not be stored in-memory.\n   */\n  protected _stopped = false;\n\n  public export(\n    logs: ReadableLogRecord[],\n    resultCallback: (result: ExportResult) => void\n  ) {\n    if (this._stopped) {\n      return resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Exporter has been stopped'),\n      });\n    }\n\n    this._finishedLogRecords.push(...logs);\n    resultCallback({ code: ExportResultCode.SUCCESS });\n  }\n\n  public shutdown(): Promise<void> {\n    this._stopped = true;\n    this.reset();\n    return Promise.resolve();\n  }\n\n  public getFinishedLogRecords(): ReadableLogRecord[] {\n    return this._finishedLogRecords;\n  }\n\n  public reset(): void {\n    this._finishedLogRecords = [];\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAGH,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKvD;;;;GAIG,CACH,IAAA,4BAAA;IAAA,SAAA;QACU,IAAA,CAAA,mBAAmB,GAAwB,EAAE,CAAC;QAEtD;;;WAGG,CACO,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAC;IA8B7B,CAAC;IA5BQ,0BAAA,SAAA,CAAA,MAAM,GAAb,SACE,IAAyB,EACzB,cAA8C;;QAE9C,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO,cAAc,CAAC;gBACpB,IAAI,4KAAE,mBAAgB,CAAC,MAAM;gBAC7B,KAAK,EAAE,IAAI,KAAK,CAAC,2BAA2B,CAAC;aAC9C,CAAC,CAAC;SACJ;QAED,CAAA,KAAA,IAAI,CAAC,mBAAmB,CAAA,CAAC,IAAI,CAAA,KAAA,CAAA,IAAA,cAAA,EAAA,EAAA,OAAI,IAAI,GAAA,QAAE;QACvC,cAAc,CAAC;YAAE,IAAI,4KAAE,mBAAgB,CAAC,OAAO;QAAA,CAAE,CAAC,CAAC;IACrD,CAAC;IAEM,0BAAA,SAAA,CAAA,QAAQ,GAAf;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAEM,0BAAA,SAAA,CAAA,qBAAqB,GAA5B;QACE,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAEM,0BAAA,SAAA,CAAA,KAAK,GAAZ;QACE,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAChC,CAAC;IACH,OAAA,yBAAC;AAAD,CAAC,AArCD,IAqCC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1218, "column": 0}, "map": {"version":3,"file":"BatchLogRecordProcessorBase.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/export/BatchLogRecordProcessorBase.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExportResult } from '@opentelemetry/core';\nimport { diag } from '@opentelemetry/api';\nimport {\n  ExportResultCode,\n  getEnv,\n  globalErrorHandler,\n  unrefTimer,\n  BindOnceFuture,\n  internal,\n  callWithTimeout,\n} from '@opentelemetry/core';\n\nimport type { BufferConfig } from '../types';\nimport type { LogRecord } from '../LogRecord';\nimport type { LogRecordExporter } from './LogRecordExporter';\nimport type { LogRecordProcessor } from '../LogRecordProcessor';\n\nexport abstract class BatchLogRecordProcessorBase<T extends BufferConfig>\n  implements LogRecordProcessor\n{\n  private readonly _maxExportBatchSize: number;\n  private readonly _maxQueueSize: number;\n  private readonly _scheduledDelayMillis: number;\n  private readonly _exportTimeoutMillis: number;\n\n  private _finishedLogRecords: LogRecord[] = [];\n  private _timer: NodeJS.Timeout | undefined;\n  private _shutdownOnce: BindOnceFuture<void>;\n\n  constructor(\n    private readonly _exporter: LogRecordExporter,\n    config?: T\n  ) {\n    const env = getEnv();\n    this._maxExportBatchSize =\n      config?.maxExportBatchSize ?? env.OTEL_BLRP_MAX_EXPORT_BATCH_SIZE;\n    this._maxQueueSize = config?.maxQueueSize ?? env.OTEL_BLRP_MAX_QUEUE_SIZE;\n    this._scheduledDelayMillis =\n      config?.scheduledDelayMillis ?? env.OTEL_BLRP_SCHEDULE_DELAY;\n    this._exportTimeoutMillis =\n      config?.exportTimeoutMillis ?? env.OTEL_BLRP_EXPORT_TIMEOUT;\n\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n\n    if (this._maxExportBatchSize > this._maxQueueSize) {\n      diag.warn(\n        'BatchLogRecordProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize'\n      );\n      this._maxExportBatchSize = this._maxQueueSize;\n    }\n  }\n\n  public onEmit(logRecord: LogRecord): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n    this._addToBuffer(logRecord);\n  }\n\n  public forceFlush(): Promise<void> {\n    if (this._shutdownOnce.isCalled) {\n      return this._shutdownOnce.promise;\n    }\n    return this._flushAll();\n  }\n\n  public shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private async _shutdown(): Promise<void> {\n    this.onShutdown();\n    await this._flushAll();\n    await this._exporter.shutdown();\n  }\n\n  /** Add a LogRecord in the buffer. */\n  private _addToBuffer(logRecord: LogRecord) {\n    if (this._finishedLogRecords.length >= this._maxQueueSize) {\n      return;\n    }\n    this._finishedLogRecords.push(logRecord);\n    this._maybeStartTimer();\n  }\n\n  /**\n   * Send all LogRecords to the exporter respecting the batch size limit\n   * This function is used only on forceFlush or shutdown,\n   * for all other cases _flush should be used\n   * */\n  private _flushAll(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      const batchCount = Math.ceil(\n        this._finishedLogRecords.length / this._maxExportBatchSize\n      );\n      for (let i = 0; i < batchCount; i++) {\n        promises.push(this._flushOneBatch());\n      }\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n\n  private _flushOneBatch(): Promise<void> {\n    this._clearTimer();\n    if (this._finishedLogRecords.length === 0) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      callWithTimeout(\n        this._export(\n          this._finishedLogRecords.splice(0, this._maxExportBatchSize)\n        ),\n        this._exportTimeoutMillis\n      )\n        .then(() => resolve())\n        .catch(reject);\n    });\n  }\n\n  private _maybeStartTimer() {\n    if (this._timer !== undefined) {\n      return;\n    }\n    this._timer = setTimeout(() => {\n      this._flushOneBatch()\n        .then(() => {\n          if (this._finishedLogRecords.length > 0) {\n            this._clearTimer();\n            this._maybeStartTimer();\n          }\n        })\n        .catch(e => {\n          globalErrorHandler(e);\n        });\n    }, this._scheduledDelayMillis);\n    unrefTimer(this._timer);\n  }\n\n  private _clearTimer() {\n    if (this._timer !== undefined) {\n      clearTimeout(this._timer);\n      this._timer = undefined;\n    }\n  }\n\n  private _export(logRecords: LogRecord[]): Promise<void> {\n    const doExport = () =>\n      internal\n        ._export(this._exporter, logRecords)\n        .then((result: ExportResult) => {\n          if (result.code !== ExportResultCode.SUCCESS) {\n            globalErrorHandler(\n              result.error ??\n                new Error(\n                  `BatchLogRecordProcessor: log record export failed (status ${result})`\n                )\n            );\n          }\n        })\n        .catch(globalErrorHandler);\n\n    const pendingResources = logRecords\n      .map(logRecord => logRecord.resource)\n      .filter(resource => resource.asyncAttributesPending);\n\n    // Avoid scheduling a promise to make the behavior more predictable and easier to test\n    if (pendingResources.length === 0) {\n      return doExport();\n    } else {\n      return Promise.all(\n        pendingResources.map(resource => resource.waitForAsyncAttributes?.())\n      ).then(doExport, globalErrorHandler);\n    }\n  }\n\n  protected abstract onShutdown(): void;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1518, "column": 0}, "map": {"version":3,"file":"BatchLogRecordProcessor.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-logs/src/platform/node/export/BatchLogRecordProcessor.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BufferConfig } from '../../../types';\nimport { BatchLogRecordProcessorBase } from '../../../export/BatchLogRecordProcessorBase';\n\nexport class BatchLogRecordProcessor extends BatchLogRecordProcessorBase<BufferConfig> {\n  protected onShutdown(): void {}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAGH,OAAO,EAAE,2BAA2B,EAAE,MAAM,6CAA6C,CAAC;;;;;;;;;;;;;;;;;;;;;;AAE1F,IAAA,0BAAA,SAAA,MAAA;IAA6C,UAAA,yBAAA,QAAyC;IAAtF,SAAA;;IAEA,CAAC;IADW,wBAAA,SAAA,CAAA,UAAU,GAApB,YAA8B,CAAC;IACjC,OAAA,uBAAC;AAAD,CAAC,AAFD,2MAA6C,8BAA2B,GAEvE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1613, "column": 0}, "map": {"version":3,"file":"NoopLogger.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/NoopLogger.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from './types/Logger';\nimport { LogRecord } from './types/LogRecord';\n\nexport class NoopLogger implements Logger {\n  emit(_logRecord: LogRecord): void {}\n}\n\nexport const NOOP_LOGGER = new NoopLogger();\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAKH,IAAA,aAAA;IAAA,SAAA,cAEA,CAAC;IADC,WAAA,SAAA,CAAA,IAAI,GAAJ,SAAK,UAAqB,GAAS,CAAC;IACtC,OAAA,UAAC;AAAD,CAAC,AAFD,IAEC;;AAEM,IAAM,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1644, "column": 0}, "map": {"version":3,"file":"globalThis.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/platform/node/globalThis.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins\nexport const _globalThis = typeof globalThis === 'object' ? globalThis : global;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,8DAAA,EAAgE,CAChE,oEAAoE;;;;AAC7D,IAAM,WAAW,GAAG,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1669, "column": 0}, "map": {"version":3,"file":"global-utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/internal/global-utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { _globalThis } from '../platform';\n\nexport const GLOBAL_LOGS_API_KEY = Symbol.for('io.opentelemetry.js.api.logs');\n\ntype Get<T> = (version: number) => T;\ntype OtelGlobal = Partial<{\n  [GLOBAL_LOGS_API_KEY]: Get<LoggerProvider>;\n}>;\n\nexport const _global = _globalThis as OtelGlobal;\n\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter<T>(\n  requiredVersion: number,\n  instance: T,\n  fallback: T\n): Get<T> {\n  return (version: number): T =>\n    version === requiredVersion ? instance : fallback;\n}\n\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 1;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;AAGH,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;;AAEnC,IAAM,mBAAmB,GAAG,MAAM,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;AAOvE,IAAM,OAAO,sMAAG,cAAyB,CAAC;AAU3C,SAAU,UAAU,CACxB,eAAuB,EACvB,QAAW,EACX,QAAW;IAEX,OAAO,SAAC,OAAe;QACrB,OAAA,OAAO,KAAK,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ;IAAjD,CAAiD,CAAC;AACtD,CAAC;AASM,IAAM,mCAAmC,GAAG,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1705, "column": 0}, "map": {"version":3,"file":"NoopLoggerProvider.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/NoopLoggerProvider.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NoopLogger } from './NoopLogger';\n\nexport class NoopLoggerProvider implements LoggerProvider {\n  getLogger(\n    _name: string,\n    _version?: string | undefined,\n    _options?: LoggerOptions | undefined\n  ): Logger {\n    return new NoopLogger();\n  }\n}\n\nexport const NOOP_LOGGER_PROVIDER = new NoopLoggerProvider();\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAKH,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;;AAE1C,IAAA,qBAAA;IAAA,SAAA,sBAQA,CAAC;IAPC,mBAAA,SAAA,CAAA,SAAS,GAAT,SACE,KAAa,EACb,QAA6B,EAC7B,QAAoC;QAEpC,OAAO,mLAAI,aAAU,EAAE,CAAC;IAC1B,CAAC;IACH,OAAA,kBAAC;AAAD,CAAC,AARD,IAQC;;AAEM,IAAM,oBAAoB,GAAG,IAAI,kBAAkB,EAAE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1740, "column": 0}, "map": {"version":3,"file":"logs.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/api/logs.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  API_BACKWARDS_COMPATIBILITY_VERSION,\n  GLOBAL_LOGS_API_KEY,\n  _global,\n  makeGetter,\n} from '../internal/global-utils';\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { NOOP_LOGGER_PROVIDER } from '../NoopLoggerProvider';\nimport { Logger } from '../types/Logger';\nimport { LoggerOptions } from '../types/LoggerOptions';\n\nexport class LogsAPI {\n  private static _instance?: LogsAPI;\n\n  private constructor() {}\n\n  public static getInstance(): LogsAPI {\n    if (!this._instance) {\n      this._instance = new LogsAPI();\n    }\n\n    return this._instance;\n  }\n\n  public setGlobalLoggerProvider(provider: LoggerProvider): LoggerProvider {\n    if (_global[GLOBAL_LOGS_API_KEY]) {\n      return this.getLoggerProvider();\n    }\n\n    _global[GLOBAL_LOGS_API_KEY] = makeGetter<LoggerProvider>(\n      API_BACKWARDS_COMPATIBILITY_VERSION,\n      provider,\n      NOOP_LOGGER_PROVIDER\n    );\n\n    return provider;\n  }\n\n  /**\n   * Returns the global logger provider.\n   *\n   * @returns LoggerProvider\n   */\n  public getLoggerProvider(): LoggerProvider {\n    return (\n      _global[GLOBAL_LOGS_API_KEY]?.(API_BACKWARDS_COMPATIBILITY_VERSION) ??\n      NOOP_LOGGER_PROVIDER\n    );\n  }\n\n  /**\n   * Returns a logger from the global logger provider.\n   *\n   * @returns Logger\n   */\n  public getLogger(\n    name: string,\n    version?: string,\n    options?: LoggerOptions\n  ): Logger {\n    return this.getLoggerProvider().getLogger(name, version, options);\n  }\n\n  /** Remove the global logger provider */\n  public disable(): void {\n    delete _global[GLOBAL_LOGS_API_KEY];\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EACL,mCAAmC,EACnC,mBAAmB,EACnB,OAAO,EACP,UAAU,GACX,MAAM,0BAA0B,CAAC;AAElC,OAAO,EAAE,oBAAoB,EAAE,MAAM,uBAAuB,CAAC;;;AAI7D,IAAA,UAAA;IAGE,SAAA,WAAuB,CAAC;IAEV,QAAA,WAAW,GAAzB;QACE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;SAChC;QAED,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,QAAA,SAAA,CAAA,uBAAuB,GAA9B,SAA+B,QAAwB;QACrD,oMAAI,UAAO,iMAAC,sBAAmB,CAAC,EAAE;YAChC,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACjC;wMAED,UAAO,iMAAC,sBAAmB,CAAC,uMAAG,aAAA,AAAU,iMACvC,uCAAmC,EACnC,QAAQ,yLACR,uBAAoB,CACrB,CAAC;QAEF,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;;;OAIG,CACI,QAAA,SAAA,CAAA,iBAAiB,GAAxB;;QACE,OAAO,AACL,CAAA,KAAA,CAAA,qMAAA,UAAO,iMAAC,sBAAmB,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,iMAA5B,UAAO,EAAwB,sOAAmC,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,4LACnE,uBAAoB,CACrB,CAAC;IACJ,CAAC;IAED;;;;OAIG,CACI,QAAA,SAAA,CAAA,SAAS,GAAhB,SACE,IAAY,EACZ,OAAgB,EAChB,OAAuB;QAEvB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACpE,CAAC;IAED,sCAAA,EAAwC,CACjC,QAAA,SAAA,CAAA,OAAO,GAAd;QACE,uMAAO,UAAO,iMAAC,sBAAmB,CAAC,CAAC;IACtC,CAAC;IACH,OAAA,OAAC;AAAD,CAAC,AAxDD,IAwDC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1804, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './types/Logger';\nexport * from './types/LoggerProvider';\nexport * from './types/LogRecord';\nexport * from './types/LoggerOptions';\nexport * from './types/AnyValue';\nexport * from './NoopLogger';\nexport * from './NoopLoggerProvider';\n\nimport { LogsAPI } from './api/logs';\nexport const logs = LogsAPI.getInstance();\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAUH,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;;;;;;;;;AAC9B,IAAM,IAAI,mLAAG,UAAO,CAAC,WAAW,EAAE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1845, "column": 0}, "map": {"version":3,"file":"Logger.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/types/Logger.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogRecord } from './LogRecord';\n\nexport interface Logger {\n  /**\n   * Emit a log record. This method should only be used by log appenders.\n   *\n   * @param logRecord\n   */\n  emit(logRecord: LogRecord): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1868, "column": 0}, "map": {"version":3,"file":"LoggerProvider.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/types/LoggerProvider.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from './Logger';\nimport { LoggerOptions } from './LoggerOptions';\n\n/**\n * A registry for creating named {@link Logger}s.\n */\nexport interface LoggerProvider {\n  /**\n   * Returns a Logger, creating one if one with the given name, version, and\n   * schemaUrl pair is not already created.\n   *\n   * @param name The name of the logger or instrumentation library.\n   * @param version The version of the logger or instrumentation library.\n   * @param options The options of the logger or instrumentation library.\n   * @returns Logger A Logger with the given name and version\n   */\n  getLogger(name: string, version?: string, options?: LoggerOptions): Logger;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1891, "column": 0}, "map": {"version":3,"file":"LogRecord.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/types/LogRecord.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, TimeInput } from '@opentelemetry/api';\nimport { AnyValue, AnyValueMap } from './AnyValue';\n\nexport type LogBody = AnyValue;\nexport type LogAttributes = AnyValueMap;\n\nexport enum SeverityNumber {\n  UNSPECIFIED = 0,\n  TRACE = 1,\n  TRACE2 = 2,\n  TRACE3 = 3,\n  TRACE4 = 4,\n  DEBUG = 5,\n  DEBUG2 = 6,\n  DEBUG3 = 7,\n  DEBUG4 = 8,\n  INFO = 9,\n  INFO2 = 10,\n  INFO3 = 11,\n  INFO4 = 12,\n  WARN = 13,\n  WARN2 = 14,\n  WARN3 = 15,\n  WARN4 = 16,\n  ERROR = 17,\n  ERROR2 = 18,\n  ERROR3 = 19,\n  ERROR4 = 20,\n  FATAL = 21,\n  FATAL2 = 22,\n  FATAL3 = 23,\n  FATAL4 = 24,\n}\n\nexport interface LogRecord {\n  /**\n   * The time when the log record occurred as UNIX Epoch time in nanoseconds.\n   */\n  timestamp?: TimeInput;\n\n  /**\n   * Time when the event was observed by the collection system.\n   */\n  observedTimestamp?: TimeInput;\n\n  /**\n   * Numerical value of the severity.\n   */\n  severityNumber?: SeverityNumber;\n\n  /**\n   * The severity text.\n   */\n  severityText?: string;\n\n  /**\n   * A value containing the body of the log record.\n   */\n  body?: LogBody;\n\n  /**\n   * Attributes that define the log record.\n   */\n  attributes?: LogAttributes;\n\n  /**\n   * The Context associated with the LogRecord.\n   */\n  context?: Context;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAQH,IAAY,cA0BX;AA1BD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,cAAA,CAAA,cAAA,GAAA,EAAA,GAAA,aAAe,CAAA;IACf,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAS,CAAA;IACT,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAS,CAAA;IACT,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAQ,CAAA;IACR,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,OAAA,GAAA,GAAA,GAAA,MAAS,CAAA;IACT,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;IACX,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;IACX,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;IACX,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;IACX,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;IACX,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;AACb,CAAC,EA1BW,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GA0BzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1942, "column": 0}, "map": {"version":3,"file":"LoggerOptions.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/types/LoggerOptions.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Attributes } from '@opentelemetry/api';\nexport interface LoggerOptions {\n  /**\n   * The schemaUrl of the tracer or instrumentation library\n   * @default ''\n   */\n  schemaUrl?: string;\n\n  /**\n   * The instrumentation scope attributes to associate with emitted telemetry\n   */\n  scopeAttributes?: Attributes;\n\n  /**\n   * Specifies whether the Trace Context should automatically be passed on to the LogRecords emitted by the Logger.\n   * @default true\n   */\n  includeTraceContext?: boolean;\n}\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1951, "column": 0}, "map": {"version":3,"file":"AnyValue.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/api-logs/src/types/AnyValue.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AttributeValue } from '@opentelemetry/api';\n\n/**\n * AnyValueMap is a map from string to AnyValue (attribute value or a nested map)\n */\nexport interface AnyValueMap {\n  [attributeKey: string]: AnyValue | undefined;\n}\n\n/**\n * AnyValue is a either an attribute value or a map of AnyValue(s)\n */\nexport type AnyValue = AttributeValue | AnyValueMap;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2011, "column": 0}, "map": {"version":3,"file":"AbstractAsyncHooksContextManager.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/context-async-hooks/src/AbstractAsyncHooksContextManager.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextManager, Context } from '@opentelemetry/api';\nimport { EventEmitter } from 'events';\n\ntype Func<T> = (...args: unknown[]) => T;\n\n/**\n * Store a map for each event of all original listeners and their \"patched\"\n * version. So when a listener is removed by the user, the corresponding\n * patched function will be also removed.\n */\ninterface PatchMap {\n  [name: string]: WeakMap<Func<void>, Func<void>>;\n}\n\nconst ADD_LISTENER_METHODS = [\n  'addListener' as const,\n  'on' as const,\n  'once' as const,\n  'prependListener' as const,\n  'prependOnceListener' as const,\n];\n\nexport abstract class AbstractAsyncHooksContextManager\n  implements ContextManager\n{\n  abstract active(): Context;\n\n  abstract with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F>;\n\n  abstract enable(): this;\n\n  abstract disable(): this;\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T): T {\n    if (target instanceof EventEmitter) {\n      return this._bindEventEmitter(context, target);\n    }\n\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    }\n    return target;\n  }\n\n  private _bindFunction<T extends Function>(context: Context, target: T): T {\n    const manager = this;\n    const contextWrapper = function (this: never, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    /**\n     * It isn't possible to tell Typescript that contextWrapper is the same as T\n     * so we forced to cast as any here.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return contextWrapper as any;\n  }\n\n  /**\n   * By default, EventEmitter call their callback with their context, which we do\n   * not want, instead we will bind a specific context to all callbacks that\n   * go through it.\n   * @param context the context we want to bind\n   * @param ee EventEmitter an instance of EventEmitter to patch\n   */\n  private _bindEventEmitter<T extends EventEmitter>(\n    context: Context,\n    ee: T\n  ): T {\n    const map = this._getPatchMap(ee);\n    if (map !== undefined) return ee;\n    this._createPatchMap(ee);\n\n    // patch methods that add a listener to propagate context\n    ADD_LISTENER_METHODS.forEach(methodName => {\n      if (ee[methodName] === undefined) return;\n      ee[methodName] = this._patchAddListener(ee, ee[methodName], context);\n    });\n    // patch methods that remove a listener\n    if (typeof ee.removeListener === 'function') {\n      ee.removeListener = this._patchRemoveListener(ee, ee.removeListener);\n    }\n    if (typeof ee.off === 'function') {\n      ee.off = this._patchRemoveListener(ee, ee.off);\n    }\n    // patch method that remove all listeners\n    if (typeof ee.removeAllListeners === 'function') {\n      ee.removeAllListeners = this._patchRemoveAllListeners(\n        ee,\n        ee.removeAllListeners\n      );\n    }\n    return ee;\n  }\n\n  /**\n   * Patch methods that remove a given listener so that we match the \"patched\"\n   * version of that listener (the one that propagate context).\n   * @param ee EventEmitter instance\n   * @param original reference to the patched method\n   */\n  private _patchRemoveListener(ee: EventEmitter, original: Function) {\n    const contextManager = this;\n    return function (this: never, event: string, listener: Func<void>) {\n      const events = contextManager._getPatchMap(ee)?.[event];\n      if (events === undefined) {\n        return original.call(this, event, listener);\n      }\n      const patchedListener = events.get(listener);\n      return original.call(this, event, patchedListener || listener);\n    };\n  }\n\n  /**\n   * Patch methods that remove all listeners so we remove our\n   * internal references for a given event.\n   * @param ee EventEmitter instance\n   * @param original reference to the patched method\n   */\n  private _patchRemoveAllListeners(ee: EventEmitter, original: Function) {\n    const contextManager = this;\n    return function (this: never, event: string) {\n      const map = contextManager._getPatchMap(ee);\n      if (map !== undefined) {\n        if (arguments.length === 0) {\n          contextManager._createPatchMap(ee);\n        } else if (map[event] !== undefined) {\n          delete map[event];\n        }\n      }\n      return original.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Patch methods on an event emitter instance that can add listeners so we\n   * can force them to propagate a given context.\n   * @param ee EventEmitter instance\n   * @param original reference to the patched method\n   * @param [context] context to propagate when calling listeners\n   */\n  private _patchAddListener(\n    ee: EventEmitter,\n    original: Function,\n    context: Context\n  ) {\n    const contextManager = this;\n    return function (this: never, event: string, listener: Func<void>) {\n      /**\n       * This check is required to prevent double-wrapping the listener.\n       * The implementation for ee.once wraps the listener and calls ee.on.\n       * Without this check, we would wrap that wrapped listener.\n       * This causes an issue because ee.removeListener depends on the onceWrapper\n       * to properly remove the listener. If we wrap their wrapper, we break\n       * that detection.\n       */\n      if (contextManager._wrapped) {\n        return original.call(this, event, listener);\n      }\n      let map = contextManager._getPatchMap(ee);\n      if (map === undefined) {\n        map = contextManager._createPatchMap(ee);\n      }\n      let listeners = map[event];\n      if (listeners === undefined) {\n        listeners = new WeakMap();\n        map[event] = listeners;\n      }\n      const patchedListener = contextManager.bind(context, listener);\n      // store a weak reference of the user listener to ours\n      listeners.set(listener, patchedListener);\n\n      /**\n       * See comment at the start of this function for the explanation of this property.\n       */\n      contextManager._wrapped = true;\n      try {\n        return original.call(this, event, patchedListener);\n      } finally {\n        contextManager._wrapped = false;\n      }\n    };\n  }\n\n  private _createPatchMap(ee: EventEmitter): PatchMap {\n    const map = Object.create(null);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (ee as any)[this._kOtListeners] = map;\n    return map;\n  }\n  private _getPatchMap(ee: EventEmitter): PatchMap | undefined {\n    return (ee as never)[this._kOtListeners];\n  }\n\n  private readonly _kOtListeners = Symbol('OtListeners');\n  private _wrapped = false;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2195, "column": 0}, "map": {"version":3,"file":"AsyncHooksContextManager.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/context-async-hooks/src/AsyncHooksContextManager.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ROOT_CONTEXT } from '@opentelemetry/api';\nimport * as asyncHooks from 'async_hooks';\nimport { AbstractAsyncHooksContextManager } from './AbstractAsyncHooksContextManager';\n\nexport class AsyncHooksContextManager extends AbstractAsyncHooksContextManager {\n  private _asyncHook: asyncHooks.AsyncHook;\n  private _contexts: Map<number, Context> = new Map();\n  private _stack: Array<Context | undefined> = [];\n\n  constructor() {\n    super();\n    this._asyncHook = asyncHooks.createHook({\n      init: this._init.bind(this),\n      before: this._before.bind(this),\n      after: this._after.bind(this),\n      destroy: this._destroy.bind(this),\n      promiseResolve: this._destroy.bind(this),\n    });\n  }\n\n  active(): Context {\n    return this._stack[this._stack.length - 1] ?? ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    this._enterContext(context);\n    try {\n      return fn.call(thisArg!, ...args);\n    } finally {\n      this._exitContext();\n    }\n  }\n\n  enable(): this {\n    this._asyncHook.enable();\n    return this;\n  }\n\n  disable(): this {\n    this._asyncHook.disable();\n    this._contexts.clear();\n    this._stack = [];\n    return this;\n  }\n\n  /**\n   * Init hook will be called when userland create a async context, setting the\n   * context as the current one if it exist.\n   * @param uid id of the async context\n   * @param type the resource type\n   */\n  private _init(uid: number, type: string) {\n    // ignore TIMERWRAP as they combine timers with same timeout which can lead to\n    // false context propagation. TIMERWRAP has been removed in node 11\n    // every timer has it's own `Timeout` resource anyway which is used to propagate\n    // context.\n    if (type === 'TIMERWRAP') return;\n\n    const context = this._stack[this._stack.length - 1];\n    if (context !== undefined) {\n      this._contexts.set(uid, context);\n    }\n  }\n\n  /**\n   * Destroy hook will be called when a given context is no longer used so we can\n   * remove its attached context.\n   * @param uid uid of the async context\n   */\n  private _destroy(uid: number) {\n    this._contexts.delete(uid);\n  }\n\n  /**\n   * Before hook is called just before executing a async context.\n   * @param uid uid of the async context\n   */\n  private _before(uid: number) {\n    const context = this._contexts.get(uid);\n    if (context !== undefined) {\n      this._enterContext(context);\n    }\n  }\n\n  /**\n   * After hook is called just after completing the execution of a async context.\n   */\n  private _after() {\n    this._exitContext();\n  }\n\n  /**\n   * Set the given context as active\n   */\n  private _enterContext(context: Context) {\n    this._stack.push(context);\n  }\n\n  /**\n   * Remove the context at the root of the stack\n   */\n  private _exitContext() {\n    this._stack.pop();\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2306, "column": 0}, "map": {"version":3,"file":"AsyncLocalStorageContextManager.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/context-async-hooks/src/AsyncLocalStorageContextManager.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ROOT_CONTEXT } from '@opentelemetry/api';\nimport { AsyncLocalStorage } from 'async_hooks';\nimport { AbstractAsyncHooksContextManager } from './AbstractAsyncHooksContextManager';\n\nexport class AsyncLocalStorageContextManager extends AbstractAsyncHooksContextManager {\n  private _asyncLocalStorage: AsyncLocalStorage<Context>;\n\n  constructor() {\n    super();\n    this._asyncLocalStorage = new AsyncLocalStorage();\n  }\n\n  active(): Context {\n    return this._asyncLocalStorage.getStore() ?? ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const cb = thisArg == null ? fn : fn.bind(thisArg);\n    return this._asyncLocalStorage.run(context, cb as never, ...args);\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    this._asyncLocalStorage.disable();\n    return this;\n  }\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAA2D;AAC3D,MAAA,uCAAgD;AAChD,MAAA,mFAAsF;AAEtF,MAAa,+BAAgC,SAAQ,mCAAA,gCAAgC;IAGnF,aAAA;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,kBAAkB,GAAG,IAAI,cAAA,iBAAiB,EAAE,CAAC;IACpD,CAAC;IAED,MAAM,GAAA;;QACJ,OAAO,CAAA,KAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,MAAA,YAAY,CAAC;IAC5D,CAAC;IAED,IAAI,CACF,OAAgB,EAChB,EAAK,EACL,OAA8B,EAC9B,GAAG,IAAO,EAAA;QAEV,MAAM,EAAE,GAAG,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,EAAE,EAAW,EAAE,GAAG,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,MAAM,GAAA;QACJ,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,GAAA;QACL,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAClC,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA9BD,QAAA,+BAAA,GAAA,gCA8BC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2355, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/context-async-hooks/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { AsyncHooksContextManager } from './AsyncHooksContextManager';\nexport { AsyncLocalStorageContextManager } from './AsyncLocalStorageContextManager';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,mEAAsE;AAA7D,OAAA,cAAA,CAAA,SAAA,4BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,2BAAA,wBAAwB;IAAA;AAAA,GAAA;AACjC,IAAA,iFAAoF;AAA3E,OAAA,cAAA,CAAA,SAAA,mCAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,kCAAA,+BAA+B;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2394, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-b3/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './B3Propagator';\nexport * from './constants';\nexport * from './types';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2427, "column": 0}, "map": {"version":3,"file":"common.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-b3/src/common.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContextKey } from '@opentelemetry/api';\n\n/** shared context for storing an extracted b3 debug flag */\nexport const B3_DEBUG_FLAG_KEY = createContextKey(\n  'OpenTelemetry Context Key B3 Debug Flag'\n);\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;;AAG/C,IAAM,iBAAiB,6IAAG,mBAAA,AAAgB,EAC/C,yCAAyC,CAC1C,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2453, "column": 0}, "map": {"version":3,"file":"constants.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-b3/src/constants.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** B3 single-header key */\nexport const B3_CONTEXT_HEADER = 'b3';\n\n/* b3 multi-header keys */\nexport const X_B3_TRACE_ID = 'x-b3-traceid';\nexport const X_B3_SPAN_ID = 'x-b3-spanid';\nexport const X_B3_SAMPLED = 'x-b3-sampled';\nexport const X_B3_PARENT_SPAN_ID = 'x-b3-parentspanid';\nexport const X_B3_FLAGS = 'x-b3-flags';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,yBAAA,EAA2B;;;;;;;;AACpB,IAAM,iBAAiB,GAAG,IAAI,CAAC;AAG/B,IAAM,aAAa,GAAG,cAAc,CAAC;AACrC,IAAM,YAAY,GAAG,aAAa,CAAC;AACnC,IAAM,YAAY,GAAG,cAAc,CAAC;AACpC,IAAM,mBAAmB,GAAG,mBAAmB,CAAC;AAChD,IAAM,UAAU,GAAG,YAAY,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2487, "column": 0}, "map": {"version":3,"file":"B3MultiPropagator.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-b3/src/B3MultiPropagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  isValidSpanId,\n  isValidTraceId,\n  trace,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from '@opentelemetry/core';\nimport { B3_DEBUG_FLAG_KEY } from './common';\nimport {\n  X_B3_FLAGS,\n  X_B3_PARENT_SPAN_ID,\n  X_B3_SAMPLED,\n  X_B3_SPAN_ID,\n  X_B3_TRACE_ID,\n} from './constants';\n\nconst VALID_SAMPLED_VALUES = new Set([true, 'true', 'True', '1', 1]);\nconst VALID_UNSAMPLED_VALUES = new Set([false, 'false', 'False', '0', 0]);\n\nfunction isValidSampledValue(sampled: TraceFlags | undefined): boolean {\n  return sampled === TraceFlags.SAMPLED || sampled === TraceFlags.NONE;\n}\n\nfunction parseHeader(header: unknown) {\n  return Array.isArray(header) ? header[0] : header;\n}\n\nfunction getHeaderValue(carrier: unknown, getter: TextMapGetter, key: string) {\n  const header = getter.get(carrier, key);\n  return parseHeader(header);\n}\n\nfunction getTraceId(carrier: unknown, getter: TextMapGetter): string {\n  const traceId = getHeaderValue(carrier, getter, X_B3_TRACE_ID);\n  if (typeof traceId === 'string') {\n    return traceId.padStart(32, '0');\n  }\n  return '';\n}\n\nfunction getSpanId(carrier: unknown, getter: TextMapGetter): string {\n  const spanId = getHeaderValue(carrier, getter, X_B3_SPAN_ID);\n  if (typeof spanId === 'string') {\n    return spanId;\n  }\n  return '';\n}\n\nfunction getDebug(carrier: unknown, getter: TextMapGetter): string | undefined {\n  const debug = getHeaderValue(carrier, getter, X_B3_FLAGS);\n  return debug === '1' ? '1' : undefined;\n}\n\nfunction getTraceFlags(\n  carrier: unknown,\n  getter: TextMapGetter\n): TraceFlags | undefined {\n  const traceFlags = getHeaderValue(carrier, getter, X_B3_SAMPLED);\n  const debug = getDebug(carrier, getter);\n  if (debug === '1' || VALID_SAMPLED_VALUES.has(traceFlags)) {\n    return TraceFlags.SAMPLED;\n  }\n  if (traceFlags === undefined || VALID_UNSAMPLED_VALUES.has(traceFlags)) {\n    return TraceFlags.NONE;\n  }\n  // This indicates to isValidSampledValue that this is not valid\n  return;\n}\n\n/**\n * Propagator for the B3 multiple-header HTTP format.\n * Based on: https://github.com/openzipkin/b3-propagation\n */\nexport class B3MultiPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      !isSpanContextValid(spanContext) ||\n      isTracingSuppressed(context)\n    )\n      return;\n\n    const debug = context.getValue(B3_DEBUG_FLAG_KEY);\n    setter.set(carrier, X_B3_TRACE_ID, spanContext.traceId);\n    setter.set(carrier, X_B3_SPAN_ID, spanContext.spanId);\n    // According to the B3 spec, if the debug flag is set,\n    // the sampled flag shouldn't be propagated as well.\n    if (debug === '1') {\n      setter.set(carrier, X_B3_FLAGS, debug);\n    } else if (spanContext.traceFlags !== undefined) {\n      // We set the header only if there is an existing sampling decision.\n      // Otherwise we will omit it => Absent.\n      setter.set(\n        carrier,\n        X_B3_SAMPLED,\n        (TraceFlags.SAMPLED & spanContext.traceFlags) === TraceFlags.SAMPLED\n          ? '1'\n          : '0'\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceId = getTraceId(carrier, getter);\n    const spanId = getSpanId(carrier, getter);\n    const traceFlags = getTraceFlags(carrier, getter) as TraceFlags;\n    const debug = getDebug(carrier, getter);\n\n    if (\n      isValidTraceId(traceId) &&\n      isValidSpanId(spanId) &&\n      isValidSampledValue(traceFlags)\n    ) {\n      context = context.setValue(B3_DEBUG_FLAG_KEY, debug);\n      return trace.setSpanContext(context, {\n        traceId,\n        spanId,\n        isRemote: true,\n        traceFlags,\n      });\n    }\n    return context;\n  }\n\n  fields(): string[] {\n    return [\n      X_B3_TRACE_ID,\n      X_B3_SPAN_ID,\n      X_B3_FLAGS,\n      X_B3_SAMPLED,\n      X_B3_PARENT_SPAN_ID,\n    ];\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2622, "column": 0}, "map": {"version":3,"file":"B3SinglePropagator.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-b3/src/B3SinglePropagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  isValidSpanId,\n  isValidTraceId,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from '@opentelemetry/core';\nimport { B3_DEBUG_FLAG_KEY } from './common';\nimport { B3_CONTEXT_HEADER } from './constants';\n\nconst B3_CONTEXT_REGEX =\n  /((?:[0-9a-f]{16}){1,2})-([0-9a-f]{16})(?:-([01d](?![0-9a-f])))?(?:-([0-9a-f]{16}))?/;\nconst PADDING = '0'.repeat(16);\nconst SAMPLED_VALUES = new Set(['d', '1']);\nconst DEBUG_STATE = 'd';\n\nfunction convertToTraceId128(traceId: string): string {\n  return traceId.length === 32 ? traceId : `${PADDING}${traceId}`;\n}\n\nfunction convertToTraceFlags(samplingState: string | undefined): TraceFlags {\n  if (samplingState && SAMPLED_VALUES.has(samplingState)) {\n    return TraceFlags.SAMPLED;\n  }\n  return TraceFlags.NONE;\n}\n\n/**\n * Propagator for the B3 single-header HTTP format.\n * Based on: https://github.com/openzipkin/b3-propagation\n */\nexport class B3SinglePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      !isSpanContextValid(spanContext) ||\n      isTracingSuppressed(context)\n    )\n      return;\n\n    const samplingState =\n      context.getValue(B3_DEBUG_FLAG_KEY) || spanContext.traceFlags & 0x1;\n    const value = `${spanContext.traceId}-${spanContext.spanId}-${samplingState}`;\n    setter.set(carrier, B3_CONTEXT_HEADER, value);\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const header = getter.get(carrier, B3_CONTEXT_HEADER);\n    const b3Context = Array.isArray(header) ? header[0] : header;\n    if (typeof b3Context !== 'string') return context;\n\n    const match = b3Context.match(B3_CONTEXT_REGEX);\n    if (!match) return context;\n\n    const [, extractedTraceId, spanId, samplingState] = match;\n    const traceId = convertToTraceId128(extractedTraceId);\n\n    if (!isValidTraceId(traceId) || !isValidSpanId(spanId)) return context;\n\n    const traceFlags = convertToTraceFlags(samplingState);\n\n    if (samplingState === DEBUG_STATE) {\n      context = context.setValue(B3_DEBUG_FLAG_KEY, samplingState);\n    }\n\n    return trace.setSpanContext(context, {\n      traceId,\n      spanId,\n      isRemote: true,\n      traceFlags,\n    });\n  }\n\n  fields(): string[] {\n    return [B3_CONTEXT_HEADER];\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2729, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-b3/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Enumeration of B3 inject encodings */\nexport enum B3InjectEncoding {\n  SINGLE_HEADER,\n  MULTI_HEADER,\n}\n\n/** Configuration for the B3Propagator */\nexport interface B3PropagatorConfig {\n  injectEncoding?: B3InjectEncoding;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,uCAAA,EAAyC;;;AACzC,IAAY,gBAGX;AAHD,CAAA,SAAY,gBAAgB;IAC1B,gBAAA,CAAA,gBAAA,CAAA,gBAAA,GAAA,EAAA,GAAA,eAAa,CAAA;IACb,gBAAA,CAAA,gBAAA,CAAA,eAAA,GAAA,EAAA,GAAA,cAAY,CAAA;AACd,CAAC,EAHW,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAG3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2757, "column": 0}, "map": {"version":3,"file":"B3Propagator.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-b3/src/B3Propagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from '@opentelemetry/core';\nimport { B3MultiPropagator } from './B3MultiPropagator';\nimport { B3SinglePropagator } from './B3SinglePropagator';\nimport { B3_CONTEXT_HEADER } from './constants';\nimport { B3InjectEncoding, B3PropagatorConfig } from './types';\n\n/**\n * Propagator that extracts B3 context in both single and multi-header variants,\n * with configurable injection format defaulting to B3 single-header. Due to\n * the asymmetry in injection and extraction formats this is not suitable to\n * be implemented as a composite propagator.\n * Based on: https://github.com/openzipkin/b3-propagation\n */\nexport class B3Propagator implements TextMapPropagator {\n  private readonly _b3MultiPropagator: B3MultiPropagator =\n    new B3MultiPropagator();\n  private readonly _b3SinglePropagator: B3SinglePropagator =\n    new B3SinglePropagator();\n  private readonly _inject: (\n    context: Context,\n    carrier: unknown,\n    setter: TextMapSetter\n  ) => void;\n  public readonly _fields: string[];\n\n  constructor(config: B3PropagatorConfig = {}) {\n    if (config.injectEncoding === B3InjectEncoding.MULTI_HEADER) {\n      this._inject = this._b3MultiPropagator.inject;\n      this._fields = this._b3MultiPropagator.fields();\n    } else {\n      this._inject = this._b3SinglePropagator.inject;\n      this._fields = this._b3SinglePropagator.fields();\n    }\n  }\n\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    if (isTracingSuppressed(context)) {\n      return;\n    }\n    this._inject(context, carrier, setter);\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const header = getter.get(carrier, B3_CONTEXT_HEADER);\n    const b3Context = Array.isArray(header) ? header[0] : header;\n\n    if (b3Context) {\n      return this._b3SinglePropagator.extract(context, carrier, getter);\n    } else {\n      return this._b3MultiPropagator.extract(context, carrier, getter);\n    }\n  }\n\n  fields(): string[] {\n    return this._fields;\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAQH,OAAO,EAAE,mBAAmB,EAAE,MAAM,qBAAqB,CAAC;AAC1D,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC1D,OAAO,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAChD,OAAO,EAAE,gBAAgB,EAAsB,MAAM,SAAS,CAAC;;;;;;AAE/D;;;;;;GAMG,CACH,IAAA,eAAA;IAYE,SAAA,aAAY,MAA+B;QAA/B,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAA,CAA+B;QAAA;QAX1B,IAAA,CAAA,kBAAkB,GACjC,+LAAI,oBAAiB,EAAE,CAAC;QACT,IAAA,CAAA,mBAAmB,GAClC,gMAAI,qBAAkB,EAAE,CAAC;QASzB,IAAI,MAAM,CAAC,cAAc,oLAAK,mBAAgB,CAAC,YAAY,EAAE;YAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;SACjD,MAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;SAClD;IACH,CAAC;IAED,aAAA,SAAA,CAAA,MAAM,GAAN,SAAO,OAAgB,EAAE,OAAgB,EAAE,MAAqB;QAC9D,IAAI,oNAAA,AAAmB,EAAC,OAAO,CAAC,EAAE;YAChC,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,aAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,OAAgB,EAAE,OAAgB,EAAE,MAAqB;QAC/D,IAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,qLAAE,oBAAiB,CAAC,CAAC;QACtD,IAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAE7D,IAAI,SAAS,EAAE;YACb,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SACnE,MAAM;YACL,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SAClE;IACH,CAAC;IAED,aAAA,SAAA,CAAA,MAAM,GAAN;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACH,OAAA,YAAC;AAAD,CAAC,AA3CD,IA2CC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2871, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-jaeger/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './JaegerPropagator';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2902, "column": 0}, "map": {"version":3,"file":"JaegerPropagator.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-jaeger/src/JaegerPropagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  propagation,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from '@opentelemetry/core';\nimport { JaegerPropagatorConfig } from './types';\n\nexport const UBER_TRACE_ID_HEADER = 'uber-trace-id';\nexport const UBER_BAGGAGE_HEADER_PREFIX = 'uberctx';\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n * {trace-id}:{span-id}:{parent-span-id}:{flags}\n * {trace-id}\n * 64-bit or 128-bit random number in base16 format.\n * Can be variable length, shorter values are 0-padded on the left.\n * Value of 0 is invalid.\n * {span-id}\n * 64-bit random number in base16 format.\n * {parent-span-id}\n * Set to 0 because this field is deprecated.\n * {flags}\n * One byte bitmap, as two hex digits.\n * Inspired by jaeger-client-node project.\n */\nexport class JaegerPropagator implements TextMapPropagator {\n  private readonly _jaegerTraceHeader: string;\n  private readonly _jaegerBaggageHeaderPrefix: string;\n\n  constructor(customTraceHeader?: string);\n  constructor(config?: JaegerPropagatorConfig);\n  constructor(config?: JaegerPropagatorConfig | string) {\n    if (typeof config === 'string') {\n      this._jaegerTraceHeader = config;\n      this._jaegerBaggageHeaderPrefix = UBER_BAGGAGE_HEADER_PREFIX;\n    } else {\n      this._jaegerTraceHeader =\n        config?.customTraceHeader || UBER_TRACE_ID_HEADER;\n      this._jaegerBaggageHeaderPrefix =\n        config?.customBaggageHeaderPrefix || UBER_BAGGAGE_HEADER_PREFIX;\n    }\n  }\n\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    const baggage = propagation.getBaggage(context);\n    if (spanContext && isTracingSuppressed(context) === false) {\n      const traceFlags = `0${(\n        spanContext.traceFlags || TraceFlags.NONE\n      ).toString(16)}`;\n\n      setter.set(\n        carrier,\n        this._jaegerTraceHeader,\n        `${spanContext.traceId}:${spanContext.spanId}:0:${traceFlags}`\n      );\n    }\n\n    if (baggage) {\n      for (const [key, entry] of baggage.getAllEntries()) {\n        setter.set(\n          carrier,\n          `${this._jaegerBaggageHeaderPrefix}-${key}`,\n          encodeURIComponent(entry.value)\n        );\n      }\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const uberTraceIdHeader = getter.get(carrier, this._jaegerTraceHeader);\n    const uberTraceId = Array.isArray(uberTraceIdHeader)\n      ? uberTraceIdHeader[0]\n      : uberTraceIdHeader;\n    const baggageValues = getter\n      .keys(carrier)\n      .filter(key => key.startsWith(`${this._jaegerBaggageHeaderPrefix}-`))\n      .map(key => {\n        const value = getter.get(carrier, key);\n        return {\n          key: key.substring(this._jaegerBaggageHeaderPrefix.length + 1),\n          value: Array.isArray(value) ? value[0] : value,\n        };\n      });\n\n    let newContext = context;\n    // if the trace id header is present and valid, inject it into the context\n    if (typeof uberTraceId === 'string') {\n      const spanContext = deserializeSpanContext(uberTraceId);\n      if (spanContext) {\n        newContext = trace.setSpanContext(newContext, spanContext);\n      }\n    }\n    if (baggageValues.length === 0) return newContext;\n\n    // if baggage values are present, inject it into the current baggage\n    let currentBaggage =\n      propagation.getBaggage(context) ?? propagation.createBaggage();\n    for (const baggageEntry of baggageValues) {\n      if (baggageEntry.value === undefined) continue;\n      currentBaggage = currentBaggage.setEntry(baggageEntry.key, {\n        value: decodeURIComponent(baggageEntry.value),\n      });\n    }\n    newContext = propagation.setBaggage(newContext, currentBaggage);\n\n    return newContext;\n  }\n\n  fields(): string[] {\n    return [this._jaegerTraceHeader];\n  }\n}\n\nconst VALID_HEX_RE = /^[0-9a-f]{1,2}$/i;\n\n/**\n * @param {string} serializedString - a serialized span context.\n * @return {SpanContext} - returns a span context represented by the serializedString.\n **/\nfunction deserializeSpanContext(serializedString: string): SpanContext | null {\n  const headers = decodeURIComponent(serializedString).split(':');\n  if (headers.length !== 4) {\n    return null;\n  }\n\n  const [_traceId, _spanId, , flags] = headers;\n\n  const traceId = _traceId.padStart(32, '0');\n  const spanId = _spanId.padStart(16, '0');\n  const traceFlags = VALID_HEX_RE.test(flags) ? parseInt(flags, 16) & 1 : 1;\n\n  return { traceId, spanId, isRemote: true, traceFlags };\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3118, "column": 0}, "map": {"version":3,"file":"NodeTracerProvider.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-trace-node/src/NodeTracerProvider.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  AsyncHooksContextManager,\n  AsyncLocalStorageContextManager,\n} from '@opentelemetry/context-async-hooks';\nimport { B3Propagator, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  BasicTracerProvider,\n  PROPAGATOR_FACTORY,\n  SDKRegistrationConfig,\n} from '@opentelemetry/sdk-trace-base';\nimport * as semver from 'semver';\nimport { NodeTracerConfig } from './config';\nimport { JaegerPropagator } from '@opentelemetry/propagator-jaeger';\n\n/**\n * Register this TracerProvider for use with the OpenTelemetry API.\n * Undefined values may be replaced with defaults, and\n * null values will be skipped.\n *\n * @param config Configuration object for SDK registration\n */\nexport class NodeTracerProvider extends BasicTracerProvider {\n  protected static override readonly _registeredPropagators = new Map<\n    string,\n    PROPAGATOR_FACTORY\n  >([\n    ...BasicTracerProvider._registeredPropagators,\n    [\n      'b3',\n      () =>\n        new B3Propagator({ injectEncoding: B3InjectEncoding.SINGLE_HEADER }),\n    ],\n    [\n      'b3multi',\n      () => new B3Propagator({ injectEncoding: B3InjectEncoding.MULTI_HEADER }),\n    ],\n    ['jaeger', () => new JaegerPropagator()],\n  ]);\n\n  constructor(config: NodeTracerConfig = {}) {\n    super(config);\n  }\n\n  override register(config: SDKRegistrationConfig = {}): void {\n    if (config.contextManager === undefined) {\n      const ContextManager = semver.gte(process.version, '14.8.0')\n        ? AsyncLocalStorageContextManager\n        : AsyncHooksContextManager;\n      config.contextManager = new ContextManager();\n      config.contextManager.enable();\n    }\n\n    super.register(config);\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,MAAA,sEAG4C;AAC5C,MAAA,0DAA8E;AAC9E,MAAA,4DAIuC;AACvC,MAAA,2BAAiC;AAEjC,MAAA,kEAAoE;AAEpE;;;;;;GAMG,CACH,MAAa,kBAAmB,SAAQ,iBAAA,mBAAmB;IAkBzD,YAAY,SAA2B,CAAA,CAAE,CAAA;QACvC,KAAK,CAAC,MAAM,CAAC,CAAC;IAChB,CAAC;IAEQ,QAAQ,CAAC,SAAgC,CAAA,CAAE,EAAA;QAClD,IAAI,MAAM,CAAC,cAAc,KAAK,SAAS,EAAE;YACvC,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,GACxD,sBAAA,+BAA+B,GAC/B,sBAAA,wBAAwB,CAAC;YAC7B,MAAM,CAAC,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;YAC7C,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;SAChC;QAED,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;;AAhCH,QAAA,kBAAA,GAAA,mBAiCC;AAhCoC,mBAAA,sBAAsB,GAAG,IAAI,GAAG,CAGjE;OACG,iBAAA,mBAAmB,CAAC,sBAAsB;IAC7C;QACE,IAAI;QACJ,GAAG,CACD,CADG,GACC,gBAAA,YAAY,CAAC;gBAAE,cAAc,EAAE,gBAAA,gBAAgB,CAAC,aAAa;YAAA,CAAE,CAAC;KACvE;IACD;QACE,SAAS;QACT,GAAG,CAAG,CAAD,GAAK,gBAAA,YAAY,CAAC;gBAAE,cAAc,EAAE,gBAAA,gBAAgB,CAAC,YAAY;YAAA,CAAE,CAAC;KAC1E;IACD;QAAC,QAAQ;QAAE,GAAG,CAAG,CAAD,GAAK,oBAAA,gBAAgB,EAAE;KAAC;CACzC,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3186, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-trace-node/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { NodeTracerConfig } from './config';\nexport * from './NodeTracerProvider';\nexport * from '@opentelemetry/sdk-trace-base';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAGH,uJAAA,SAAqC;AACrC,0IAAA,SAA8C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3227, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { registerInstrumentations } from './autoLoader';\nexport { InstrumentationBase } from './platform/index';\nexport { InstrumentationNodeModuleDefinition } from './instrumentationNodeModuleDefinition';\nexport { InstrumentationNodeModuleFile } from './instrumentationNodeModuleFile';\nexport * from './types';\nexport * from './types_internal';\nexport * from './utils';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3264, "column": 0}, "map": {"version":3,"file":"autoLoaderUtils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/autoLoaderUtils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider, MeterProvider } from '@opentelemetry/api';\nimport { Instrumentation } from './types';\nimport { LoggerProvider } from '@opentelemetry/api-logs';\n\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nexport function enableInstrumentations(\n  instrumentations: Instrumentation[],\n  tracerProvider?: TracerProvider,\n  meterProvider?: MeterProvider,\n  loggerProvider?: LoggerProvider\n): void {\n  for (let i = 0, j = instrumentations.length; i < j; i++) {\n    const instrumentation = instrumentations[i];\n    if (tracerProvider) {\n      instrumentation.setTracerProvider(tracerProvider);\n    }\n    if (meterProvider) {\n      instrumentation.setMeterProvider(meterProvider);\n    }\n    if (loggerProvider && instrumentation.setLoggerProvider) {\n      instrumentation.setLoggerProvider(loggerProvider);\n    }\n    // instrumentations have been already enabled during creation\n    // so enable only if user prevented that by setting enabled to false\n    // this is to prevent double enabling but when calling register all\n    // instrumentations should be now enabled\n    if (!instrumentation.getConfig().enabled) {\n      instrumentation.enable();\n    }\n  }\n}\n\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nexport function disableInstrumentations(\n  instrumentations: Instrumentation[]\n): void {\n  instrumentations.forEach(instrumentation => instrumentation.disable());\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAMH;;;;;GAKG;;;;AACG,SAAU,sBAAsB,CACpC,gBAAmC,EACnC,cAA+B,EAC/B,aAA6B,EAC7B,cAA+B;IAE/B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QACvD,IAAM,eAAe,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,cAAc,EAAE;YAClB,eAAe,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;SACnD;QACD,IAAI,aAAa,EAAE;YACjB,eAAe,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;SACjD;QACD,IAAI,cAAc,IAAI,eAAe,CAAC,iBAAiB,EAAE;YACvD,eAAe,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;SACnD;QACD,6DAA6D;QAC7D,oEAAoE;QACpE,mEAAmE;QACnE,yCAAyC;QACzC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE;YACxC,eAAe,CAAC,MAAM,EAAE,CAAC;SAC1B;KACF;AACH,CAAC;AAMK,SAAU,uBAAuB,CACrC,gBAAmC;IAEnC,gBAAgB,CAAC,OAAO,CAAC,SAAA,eAAe;QAAI,OAAA,eAAe,CAAC,OAAO,EAAE;IAAzB,CAAyB,CAAC,CAAC;AACzE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3319, "column": 0}, "map": {"version":3,"file":"autoLoader.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/autoLoader.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trace, metrics } from '@opentelemetry/api';\nimport { logs } from '@opentelemetry/api-logs';\nimport {\n  disableInstrumentations,\n  enableInstrumentations,\n} from './autoLoaderUtils';\nimport { AutoLoaderOptions } from './types_internal';\n\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nexport function registerInstrumentations(\n  options: AutoLoaderOptions\n): () => void {\n  const tracerProvider = options.tracerProvider || trace.getTracerProvider();\n  const meterProvider = options.meterProvider || metrics.getMeterProvider();\n  const loggerProvider = options.loggerProvider || logs.getLoggerProvider();\n  const instrumentations = options.instrumentations?.flat() ?? [];\n\n  enableInstrumentations(\n    instrumentations,\n    tracerProvider,\n    meterProvider,\n    loggerProvider\n  );\n\n  return () => {\n    disableInstrumentations(instrumentations);\n  };\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AACpD,OAAO,EAAE,IAAI,EAAE,MAAM,yBAAyB,CAAC;AAC/C,OAAO,EACL,uBAAuB,EACvB,sBAAsB,GACvB,MAAM,mBAAmB,CAAC;;;;AASrB,SAAU,wBAAwB,CACtC,OAA0B;;IAE1B,IAAM,cAAc,GAAG,OAAO,CAAC,cAAc,0IAAI,QAAK,CAAC,iBAAiB,EAAE,CAAC;IAC3E,IAAM,aAAa,GAAG,OAAO,CAAC,aAAa,0IAAI,UAAO,CAAC,gBAAgB,EAAE,CAAC;IAC1E,IAAM,cAAc,GAAG,OAAO,CAAC,cAAc,8LAAI,OAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1E,IAAM,gBAAgB,GAAG,CAAA,KAAA,CAAA,KAAA,OAAO,CAAC,gBAAgB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,IAAI,EAAE,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;gMAEhE,yBAAA,AAAsB,EACpB,gBAAgB,EAChB,cAAc,EACd,aAAa,EACb,cAAc,CACf,CAAC;IAEF,OAAO;oMACL,0BAAA,AAAuB,EAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC,CAAC;AACJ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3359, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  DiagLogger,\n  metrics,\n  Meter,\n  MeterProvider,\n  trace,\n  Tracer,\n  TracerProvider,\n  Span,\n} from '@opentelemetry/api';\nimport { Logger, LoggerProvider, logs } from '@opentelemetry/api-logs';\nimport * as shimmer from 'shimmer';\nimport {\n  InstrumentationModuleDefinition,\n  Instrumentation,\n  InstrumentationConfig,\n  SpanCustomizationHook,\n} from './types';\n\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nexport abstract class InstrumentationAbstract<\n  ConfigType extends InstrumentationConfig = InstrumentationConfig,\n> implements Instrumentation<ConfigType>\n{\n  protected _config: ConfigType;\n\n  private _tracer: Tracer;\n  private _meter: Meter;\n  private _logger: Logger;\n  protected _diag: DiagLogger;\n\n  constructor(\n    public readonly instrumentationName: string,\n    public readonly instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    // copy config first level properties to ensure they are immutable.\n    // nested properties are not copied, thus are mutable from the outside.\n    this._config = {\n      enabled: true,\n      ...config,\n    };\n\n    this._diag = diag.createComponentLogger({\n      namespace: instrumentationName,\n    });\n\n    this._tracer = trace.getTracer(instrumentationName, instrumentationVersion);\n    this._meter = metrics.getMeter(instrumentationName, instrumentationVersion);\n    this._logger = logs.getLogger(instrumentationName, instrumentationVersion);\n    this._updateMetricInstruments();\n  }\n\n  /* Api to wrap instrumented method */\n  protected _wrap = shimmer.wrap;\n  /* Api to unwrap instrumented methods */\n  protected _unwrap = shimmer.unwrap;\n  /* Api to mass wrap instrumented method */\n  protected _massWrap = shimmer.massWrap;\n  /* Api to mass unwrap instrumented methods */\n  protected _massUnwrap = shimmer.massUnwrap;\n\n  /* Returns meter */\n  protected get meter(): Meter {\n    return this._meter;\n  }\n\n  /**\n   * Sets MeterProvider to this plugin\n   * @param meterProvider\n   */\n  public setMeterProvider(meterProvider: MeterProvider): void {\n    this._meter = meterProvider.getMeter(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n\n    this._updateMetricInstruments();\n  }\n\n  /* Returns logger */\n  protected get logger(): Logger {\n    return this._logger;\n  }\n\n  /**\n   * Sets LoggerProvider to this plugin\n   * @param loggerProvider\n   */\n  public setLoggerProvider(loggerProvider: LoggerProvider): void {\n    this._logger = loggerProvider.getLogger(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /**\n   * @experimental\n   *\n   * Get module definitions defined by {@link init}.\n   * This can be used for experimental compile-time instrumentation.\n   *\n   * @returns an array of {@link InstrumentationModuleDefinition}\n   */\n  public getModuleDefinitions(): InstrumentationModuleDefinition[] {\n    const initResult = this.init() ?? [];\n    if (!Array.isArray(initResult)) {\n      return [initResult];\n    }\n\n    return initResult;\n  }\n\n  /**\n   * Sets the new metric instruments with the current Meter.\n   */\n  protected _updateMetricInstruments(): void {\n    return;\n  }\n\n  /* Returns InstrumentationConfig */\n  public getConfig(): ConfigType {\n    return this._config;\n  }\n\n  /**\n   * Sets InstrumentationConfig to this plugin\n   * @param InstrumentationConfig\n   */\n  public setConfig(config: ConfigType): void {\n    // copy config first level properties to ensure they are immutable.\n    // nested properties are not copied, thus are mutable from the outside.\n    this._config = { ...config };\n  }\n\n  /**\n   * Sets TraceProvider to this plugin\n   * @param tracerProvider\n   */\n  public setTracerProvider(tracerProvider: TracerProvider): void {\n    this._tracer = tracerProvider.getTracer(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /* Returns tracer */\n  protected get tracer(): Tracer {\n    return this._tracer;\n  }\n\n  /* Disable plugin */\n  public abstract enable(): void;\n\n  /* Enable plugin */\n  public abstract disable(): void;\n\n  /**\n   * Init method in which plugin should define _modules and patches for\n   * methods.\n   */\n  protected abstract init():\n    | InstrumentationModuleDefinition\n    | InstrumentationModuleDefinition[]\n    | void;\n\n  /**\n   * Execute span customization hook, if configured, and log any errors.\n   * Any semantics of the trigger and info are defined by the specific instrumentation.\n   * @param hookHandler The optional hook handler which the user has configured via instrumentation config\n   * @param triggerName The name of the trigger for executing the hook for logging purposes\n   * @param span The span to which the hook should be applied\n   * @param info The info object to be passed to the hook, with useful data the hook may use\n   */\n  protected _runSpanCustomizationHook<SpanCustomizationInfoType>(\n    hookHandler: SpanCustomizationHook<SpanCustomizationInfoType> | undefined,\n    triggerName: string,\n    span: Span,\n    info: SpanCustomizationInfoType\n  ) {\n    if (!hookHandler) {\n      return;\n    }\n\n    try {\n      hookHandler(span, info);\n    } catch (e) {\n      this._diag.error(\n        `Error running span customization hook due to exception in handler`,\n        { triggerName },\n        e\n      );\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3517, "column": 0}, "map": {"version":3,"file":"ModuleNameTrie.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/platform/node/ModuleNameTrie.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Hooked } from './RequireInTheMiddleSingleton';\n\nexport const ModuleNameSeparator = '/';\n\n/**\n * Node in a `ModuleNameTrie`\n */\nclass ModuleNameTrieNode {\n  hooks: Array<{ hook: Hooked; insertedId: number }> = [];\n  children: Map<string, ModuleNameTrieNode> = new Map();\n}\n\ntype ModuleNameTrieSearchOptions = {\n  /**\n   * Whether to return the results in insertion order\n   */\n  maintainInsertionOrder?: boolean;\n  /**\n   * Whether to return only full matches\n   */\n  fullOnly?: boolean;\n};\n\n/**\n * Trie containing nodes that represent a part of a module name (i.e. the parts separated by forward slash)\n */\nexport class ModuleNameTrie {\n  private _trie: ModuleNameTrieNode = new ModuleNameTrieNode();\n  private _counter: number = 0;\n\n  /**\n   * Insert a module hook into the trie\n   *\n   * @param {Hooked} hook Hook\n   */\n  insert(hook: Hooked) {\n    let trieNode = this._trie;\n\n    for (const moduleNamePart of hook.moduleName.split(ModuleNameSeparator)) {\n      let nextNode = trieNode.children.get(moduleNamePart);\n      if (!nextNode) {\n        nextNode = new ModuleNameTrieNode();\n        trieNode.children.set(moduleNamePart, nextNode);\n      }\n      trieNode = nextNode;\n    }\n    trieNode.hooks.push({ hook, insertedId: this._counter++ });\n  }\n\n  /**\n   * Search for matching hooks in the trie\n   *\n   * @param {string} moduleName Module name\n   * @param {boolean} maintainInsertionOrder Whether to return the results in insertion order\n   * @param {boolean} fullOnly Whether to return only full matches\n   * @returns {Hooked[]} Matching hooks\n   */\n  search(\n    moduleName: string,\n    { maintainInsertionOrder, fullOnly }: ModuleNameTrieSearchOptions = {}\n  ): Hooked[] {\n    let trieNode = this._trie;\n    const results: ModuleNameTrieNode['hooks'] = [];\n    let foundFull = true;\n\n    for (const moduleNamePart of moduleName.split(ModuleNameSeparator)) {\n      const nextNode = trieNode.children.get(moduleNamePart);\n      if (!nextNode) {\n        foundFull = false;\n        break;\n      }\n      if (!fullOnly) {\n        results.push(...nextNode.hooks);\n      }\n      trieNode = nextNode;\n    }\n\n    if (fullOnly && foundFull) {\n      results.push(...trieNode.hooks);\n    }\n\n    if (results.length === 0) {\n      return [];\n    }\n    if (results.length === 1) {\n      return [results[0].hook];\n    }\n    if (maintainInsertionOrder) {\n      results.sort((a, b) => a.insertedId - b.insertedId);\n    }\n    return results.map(({ hook }) => hook);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3695, "column": 0}, "map": {"version":3,"file":"RequireInTheMiddleSingleton.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/platform/node/RequireInTheMiddleSingleton.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { OnRequireFn } from 'require-in-the-middle';\nimport { Hook } from 'require-in-the-middle';\nimport * as path from 'path';\nimport { ModuleNameTrie, ModuleNameSeparator } from './ModuleNameTrie';\n\nexport type Hooked = {\n  moduleName: string;\n  onRequire: OnRequireFn;\n};\n\n/**\n * Whether Mocha is running in this process\n * Inspired by https://github.com/AndreasPizsa/detect-mocha\n *\n * @type {boolean}\n */\nconst isMocha = [\n  'afterEach',\n  'after',\n  'beforeEach',\n  'before',\n  'describe',\n  'it',\n].every(fn => {\n  // @ts-expect-error TS7053: Element implicitly has an 'any' type\n  return typeof global[fn] === 'function';\n});\n\n/**\n * Singleton class for `require-in-the-middle`\n * Allows instrumentation plugins to patch modules with only a single `require` patch\n * WARNING: Because this class will create its own `require-in-the-middle` (RITM) instance,\n * we should minimize the number of new instances of this class.\n * Multiple instances of `@opentelemetry/instrumentation` (e.g. multiple versions) in a single process\n * will result in multiple instances of RITM, which will have an impact\n * on the performance of instrumentation hooks being applied.\n */\nexport class RequireInTheMiddleSingleton {\n  private _moduleNameTrie: ModuleNameTrie = new ModuleNameTrie();\n  private static _instance?: RequireInTheMiddleSingleton;\n\n  private constructor() {\n    this._initialize();\n  }\n\n  private _initialize() {\n    new Hook(\n      // Intercept all `require` calls; we will filter the matching ones below\n      null,\n      { internals: true },\n      (exports, name, basedir) => {\n        // For internal files on Windows, `name` will use backslash as the path separator\n        const normalizedModuleName = normalizePathSeparators(name);\n\n        const matches = this._moduleNameTrie.search(normalizedModuleName, {\n          maintainInsertionOrder: true,\n          // For core modules (e.g. `fs`), do not match on sub-paths (e.g. `fs/promises').\n          // This matches the behavior of `require-in-the-middle`.\n          // `basedir` is always `undefined` for core modules.\n          fullOnly: basedir === undefined,\n        });\n\n        for (const { onRequire } of matches) {\n          exports = onRequire(exports, name, basedir);\n        }\n\n        return exports;\n      }\n    );\n  }\n\n  /**\n   * Register a hook with `require-in-the-middle`\n   *\n   * @param {string} moduleName Module name\n   * @param {OnRequireFn} onRequire Hook function\n   * @returns {Hooked} Registered hook\n   */\n  register(moduleName: string, onRequire: OnRequireFn): Hooked {\n    const hooked = { moduleName, onRequire };\n    this._moduleNameTrie.insert(hooked);\n    return hooked;\n  }\n\n  /**\n   * Get the `RequireInTheMiddleSingleton` singleton\n   *\n   * @returns {RequireInTheMiddleSingleton} Singleton of `RequireInTheMiddleSingleton`\n   */\n  static getInstance(): RequireInTheMiddleSingleton {\n    // Mocha runs all test suites in the same process\n    // This prevents test suites from sharing a singleton\n    if (isMocha) return new RequireInTheMiddleSingleton();\n\n    return (this._instance =\n      this._instance ?? new RequireInTheMiddleSingleton());\n  }\n}\n\n/**\n * Normalize the path separators to forward slash in a module name or path\n *\n * @param {string} moduleNameOrPath Module name or path\n * @returns {string} Normalized module name or path\n */\nfunction normalizePathSeparators(moduleNameOrPath: string): string {\n  return path.sep !== ModuleNameSeparator\n    ? moduleNameOrPath.split(path.sep).join(ModuleNameSeparator)\n    : moduleNameOrPath;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAGH,OAAO,EAAE,IAAI,EAAE,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAC7B,OAAO,EAAE,cAAc,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;AAOvE;;;;;GAKG,CACH,IAAM,OAAO,GAAG;IACd,WAAW;IACX,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,IAAI;CACL,CAAC,KAAK,CAAC,SAAA,EAAE;IACR,gEAAgE;IAChE,OAAO,OAAO,MAAM,CAAC,EAAE,CAAC,KAAK,UAAU,CAAC;AAC1C,CAAC,CAAC,CAAC;AAEH;;;;;;;;GAQG,CACH,IAAA,8BAAA;IAIE,SAAA;QAHQ,IAAA,CAAA,eAAe,GAAmB,+MAAI,iBAAc,EAAE,CAAC;QAI7D,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEO,4BAAA,SAAA,CAAA,WAAW,GAAnB;QAAA,IAAA,QAAA,IAAA,CAwBC;QAvBC,0JAAI,OAAI,CACN,wEAAwE;QACxE,IAAI,EACJ;YAAE,SAAS,EAAE,IAAI;QAAA,CAAE,EACnB,SAAC,OAAO,EAAE,IAAI,EAAE,OAAO;;YACrB,iFAAiF;YACjF,IAAM,oBAAoB,GAAG,uBAAuB,CAAC,IAAI,CAAC,CAAC;YAE3D,IAAM,OAAO,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,oBAAoB,EAAE;gBAChE,sBAAsB,EAAE,IAAI;gBAC5B,gFAAgF;gBAChF,wDAAwD;gBACxD,oDAAoD;gBACpD,QAAQ,EAAE,OAAO,KAAK,SAAS;aAChC,CAAC,CAAC;;gBAEH,IAA4B,IAAA,YAAA,SAAA,OAAO,CAAA,EAAA,cAAA,UAAA,IAAA,EAAA,EAAA,CAAA,YAAA,IAAA,EAAA,cAAA,UAAA,IAAA,GAAE;oBAAxB,IAAA,SAAS,GAAA,YAAA,KAAA,CAAA,SAAA;oBACpB,OAAO,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;iBAC7C;;;;;;;;;;;;YAED,OAAO,OAAO,CAAC;QACjB,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;;;OAMG,CACH,4BAAA,SAAA,CAAA,QAAQ,GAAR,SAAS,UAAkB,EAAE,SAAsB;QACjD,IAAM,MAAM,GAAG;YAAE,UAAU,EAAA,UAAA;YAAE,SAAS,EAAA,SAAA;QAAA,CAAE,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;OAIG,CACI,4BAAA,WAAW,GAAlB;;QACE,iDAAiD;QACjD,qDAAqD;QACrD,IAAI,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,CAAC;QAEtD,OAAO,AAAC,IAAI,CAAC,SAAS,GACpB,CAAA,KAAA,IAAI,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,2BAA2B,EAAE,CAAC,CAAC;IACzD,CAAC;IACH,OAAA,2BAAC;AAAD,CAAC,AA5DD,IA4DC;;AAED;;;;;GAKG,CACH,SAAS,uBAAuB,CAAC,gBAAwB;IACvD,yGAAO,IAAI,CAAC,CAAG,gNAAK,sBAAmB,GACnC,gBAAgB,CAAC,KAAK,mGAAC,IAAI,CAAC,CAAG,CAAC,CAAC,IAAI,4MAAC,sBAAmB,CAAC,GAC1D,gBAAgB,CAAC;AACvB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3838, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from './types';\n\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddle<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): T {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport async function safeExecuteInTheMiddleAsync<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): Promise<T> {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = await execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASG,SAAU,sBAAsB,CACpC,OAAgB,EAChB,QAA+D,EAC/D,oBAA8B;IAE9B,IAAI,KAAwB,CAAC;IAC7B,IAAI,MAAqB,CAAC;IAC1B,IAAI;QACF,MAAM,GAAG,OAAO,EAAE,CAAC;KACpB,CAAC,OAAO,CAAC,EAAE;QACV,KAAK,GAAG,CAAC,CAAC;KACX,QAAS;QACR,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACxB,IAAI,KAAK,IAAI,CAAC,oBAAoB,EAAE;YAClC,6CAA6C;YAC7C,MAAM,KAAK,CAAC;SACb;QACD,6CAA6C;QAC7C,OAAO,MAAW,CAAC;KACpB;AACH,CAAC;AAOK,SAAgB,2BAA2B,CAC/C,OAAgB,EAChB,QAA+D,EAC/D,oBAA8B;;;;;;;;;;;;oBAKnB,OAAA;wBAAA,EAAA,OAAA;wBAAM,OAAO,EAAE;qBAAA,CAAA;;oBAAxB,MAAM,GAAG,GAAA,IAAA,EAAe,CAAC;;;;;;;oBAEzB,KAAK,GAAG,GAAC,CAAC;;;;;;oBAEV,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;oBACxB,IAAI,KAAK,IAAI,CAAC,oBAAoB,EAAE;wBAClC,6CAA6C;wBAC7C,MAAM,KAAK,CAAC;qBACb;oBACD,6CAA6C;oBAC7C,OAAA;wBAAA,EAAA,QAAA;wBAAO,MAAW;qBAAA,CAAC;;;;;;;;CAEtB;AAKK,SAAU,SAAS,CAAC,IAAa;IACrC,OAAO,AACL,OAAO,IAAI,KAAK,UAAU,IAC1B,OAAQ,IAAoB,CAAC,UAAU,KAAK,UAAU,IACtD,OAAQ,IAAoB,CAAC,QAAQ,KAAK,UAAU,IACnD,IAAoB,CAAC,SAAS,KAAK,IAAI,CACzC,CAAC;AACJ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4054, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/platform/node/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '../../types';\nimport * as path from 'path';\nimport { types as utilTypes } from 'util';\nimport { satisfies } from 'semver';\nimport { wrap, unwrap, massWrap, massUnwrap } from 'shimmer';\nimport { InstrumentationAbstract } from '../../instrumentation';\nimport {\n  RequireInTheMiddleSingleton,\n  Hooked,\n} from './RequireInTheMiddleSingleton';\nimport type { HookFn } from 'import-in-the-middle';\nimport { Hook as HookImport } from 'import-in-the-middle';\nimport {\n  InstrumentationConfig,\n  InstrumentationModuleDefinition,\n} from '../../types';\nimport { diag } from '@opentelemetry/api';\nimport type { OnRequireFn } from 'require-in-the-middle';\nimport { Hook as HookRequire } from 'require-in-the-middle';\nimport { readFileSync } from 'fs';\nimport { isWrapped } from '../../utils';\n\n/**\n * Base abstract class for instrumenting node plugins\n */\nexport abstract class InstrumentationBase<\n    ConfigType extends InstrumentationConfig = InstrumentationConfig,\n  >\n  extends InstrumentationAbstract<ConfigType>\n  implements types.Instrumentation<ConfigType>\n{\n  private _modules: InstrumentationModuleDefinition[];\n  private _hooks: (Hooked | HookRequire)[] = [];\n  private _requireInTheMiddleSingleton: RequireInTheMiddleSingleton =\n    RequireInTheMiddleSingleton.getInstance();\n  private _enabled = false;\n\n  constructor(\n    instrumentationName: string,\n    instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    super(instrumentationName, instrumentationVersion, config);\n\n    let modules = this.init();\n\n    if (modules && !Array.isArray(modules)) {\n      modules = [modules];\n    }\n\n    this._modules = (modules as InstrumentationModuleDefinition[]) || [];\n\n    if (this._modules.length === 0) {\n      diag.debug(\n        'No modules instrumentation has been defined for ' +\n          `'${this.instrumentationName}@${this.instrumentationVersion}'` +\n          ', nothing will be patched'\n      );\n    }\n\n    if (this._config.enabled) {\n      this.enable();\n    }\n  }\n\n  protected override _wrap: typeof wrap = (moduleExports, name, wrapper) => {\n    if (isWrapped(moduleExports[name])) {\n      this._unwrap(moduleExports, name);\n    }\n    if (!utilTypes.isProxy(moduleExports)) {\n      return wrap(moduleExports, name, wrapper);\n    } else {\n      const wrapped = wrap(Object.assign({}, moduleExports), name, wrapper);\n\n      return Object.defineProperty(moduleExports, name, {\n        value: wrapped,\n      });\n    }\n  };\n\n  protected override _unwrap: typeof unwrap = (moduleExports, name) => {\n    if (!utilTypes.isProxy(moduleExports)) {\n      return unwrap(moduleExports, name);\n    } else {\n      return Object.defineProperty(moduleExports, name, {\n        value: moduleExports[name],\n      });\n    }\n  };\n\n  protected override _massWrap: typeof massWrap = (\n    moduleExportsArray,\n    names,\n    wrapper\n  ) => {\n    if (!moduleExportsArray) {\n      diag.error('must provide one or more modules to patch');\n      return;\n    } else if (!Array.isArray(moduleExportsArray)) {\n      moduleExportsArray = [moduleExportsArray];\n    }\n\n    if (!(names && Array.isArray(names))) {\n      diag.error('must provide one or more functions to wrap on modules');\n      return;\n    }\n\n    moduleExportsArray.forEach(moduleExports => {\n      names.forEach(name => {\n        this._wrap(moduleExports, name, wrapper);\n      });\n    });\n  };\n\n  protected override _massUnwrap: typeof massUnwrap = (\n    moduleExportsArray,\n    names\n  ) => {\n    if (!moduleExportsArray) {\n      diag.error('must provide one or more modules to patch');\n      return;\n    } else if (!Array.isArray(moduleExportsArray)) {\n      moduleExportsArray = [moduleExportsArray];\n    }\n\n    if (!(names && Array.isArray(names))) {\n      diag.error('must provide one or more functions to wrap on modules');\n      return;\n    }\n\n    moduleExportsArray.forEach(moduleExports => {\n      names.forEach(name => {\n        this._unwrap(moduleExports, name);\n      });\n    });\n  };\n\n  private _warnOnPreloadedModules(): void {\n    this._modules.forEach((module: InstrumentationModuleDefinition) => {\n      const { name } = module;\n      try {\n        const resolvedModule = require.resolve(name);\n        if (require.cache[resolvedModule]) {\n          // Module is already cached, which means the instrumentation hook might not work\n          this._diag.warn(\n            `Module ${name} has been loaded before ${this.instrumentationName} so it might not work, please initialize it before requiring ${name}`\n          );\n        }\n      } catch {\n        // Module isn't available, we can simply skip\n      }\n    });\n  }\n\n  private _extractPackageVersion(baseDir: string): string | undefined {\n    try {\n      const json = readFileSync(path.join(baseDir, 'package.json'), {\n        encoding: 'utf8',\n      });\n      const version = JSON.parse(json).version;\n      return typeof version === 'string' ? version : undefined;\n    } catch (error) {\n      diag.warn('Failed extracting version', baseDir);\n    }\n\n    return undefined;\n  }\n\n  private _onRequire<T>(\n    module: InstrumentationModuleDefinition,\n    exports: T,\n    name: string,\n    baseDir?: string | void\n  ): T {\n    if (!baseDir) {\n      if (typeof module.patch === 'function') {\n        module.moduleExports = exports;\n        if (this._enabled) {\n          this._diag.debug(\n            'Applying instrumentation patch for nodejs core module on require hook',\n            {\n              module: module.name,\n            }\n          );\n          return module.patch(exports);\n        }\n      }\n      return exports;\n    }\n\n    const version = this._extractPackageVersion(baseDir);\n    module.moduleVersion = version;\n    if (module.name === name) {\n      // main module\n      if (\n        isSupported(module.supportedVersions, version, module.includePrerelease)\n      ) {\n        if (typeof module.patch === 'function') {\n          module.moduleExports = exports;\n          if (this._enabled) {\n            this._diag.debug(\n              'Applying instrumentation patch for module on require hook',\n              {\n                module: module.name,\n                version: module.moduleVersion,\n                baseDir,\n              }\n            );\n            return module.patch(exports, module.moduleVersion);\n          }\n        }\n      }\n      return exports;\n    }\n    // internal file\n    const files = module.files ?? [];\n    const normalizedName = path.normalize(name);\n    const supportedFileInstrumentations = files\n      .filter(f => f.name === normalizedName)\n      .filter(f =>\n        isSupported(f.supportedVersions, version, module.includePrerelease)\n      );\n    return supportedFileInstrumentations.reduce<T>((patchedExports, file) => {\n      file.moduleExports = patchedExports;\n      if (this._enabled) {\n        this._diag.debug(\n          'Applying instrumentation patch for nodejs module file on require hook',\n          {\n            module: module.name,\n            version: module.moduleVersion,\n            fileName: file.name,\n            baseDir,\n          }\n        );\n\n        // patch signature is not typed, so we cast it assuming it's correct\n        return file.patch(patchedExports, module.moduleVersion) as T;\n      }\n      return patchedExports;\n    }, exports);\n  }\n\n  public enable(): void {\n    if (this._enabled) {\n      return;\n    }\n    this._enabled = true;\n\n    // already hooked, just call patch again\n    if (this._hooks.length > 0) {\n      for (const module of this._modules) {\n        if (typeof module.patch === 'function' && module.moduleExports) {\n          this._diag.debug(\n            'Applying instrumentation patch for nodejs module on instrumentation enabled',\n            {\n              module: module.name,\n              version: module.moduleVersion,\n            }\n          );\n          module.patch(module.moduleExports, module.moduleVersion);\n        }\n        for (const file of module.files) {\n          if (file.moduleExports) {\n            this._diag.debug(\n              'Applying instrumentation patch for nodejs module file on instrumentation enabled',\n              {\n                module: module.name,\n                version: module.moduleVersion,\n                fileName: file.name,\n              }\n            );\n            file.patch(file.moduleExports, module.moduleVersion);\n          }\n        }\n      }\n      return;\n    }\n\n    this._warnOnPreloadedModules();\n    for (const module of this._modules) {\n      const hookFn: HookFn = (exports, name, baseDir) => {\n        return this._onRequire<typeof exports>(module, exports, name, baseDir);\n      };\n      const onRequire: OnRequireFn = (exports, name, baseDir) => {\n        return this._onRequire<typeof exports>(module, exports, name, baseDir);\n      };\n\n      // `RequireInTheMiddleSingleton` does not support absolute paths.\n      // For an absolute paths, we must create a separate instance of the\n      // require-in-the-middle `Hook`.\n      const hook = path.isAbsolute(module.name)\n        ? new HookRequire([module.name], { internals: true }, onRequire)\n        : this._requireInTheMiddleSingleton.register(module.name, onRequire);\n\n      this._hooks.push(hook);\n      const esmHook = new HookImport(\n        [module.name],\n        { internals: false },\n        <HookFn>hookFn\n      );\n      this._hooks.push(esmHook);\n    }\n  }\n\n  public disable(): void {\n    if (!this._enabled) {\n      return;\n    }\n    this._enabled = false;\n\n    for (const module of this._modules) {\n      if (typeof module.unpatch === 'function' && module.moduleExports) {\n        this._diag.debug(\n          'Removing instrumentation patch for nodejs module on instrumentation disabled',\n          {\n            module: module.name,\n            version: module.moduleVersion,\n          }\n        );\n        module.unpatch(module.moduleExports, module.moduleVersion);\n      }\n      for (const file of module.files) {\n        if (file.moduleExports) {\n          this._diag.debug(\n            'Removing instrumentation patch for nodejs module file on instrumentation disabled',\n            {\n              module: module.name,\n              version: module.moduleVersion,\n              fileName: file.name,\n            }\n          );\n          file.unpatch(file.moduleExports, module.moduleVersion);\n        }\n      }\n    }\n  }\n\n  public isEnabled(): boolean {\n    return this._enabled;\n  }\n}\n\nfunction isSupported(\n  supportedVersions: string[],\n  version?: string,\n  includePrerelease?: boolean\n): boolean {\n  if (typeof version === 'undefined') {\n    // If we don't have the version, accept the wildcard case only\n    return supportedVersions.includes('*');\n  }\n\n  return supportedVersions.some(supportedVersion => {\n    return satisfies(version, supportedVersion, { includePrerelease });\n  });\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4472, "column": 0}, "map": {"version":3,"file":"instrumentationNodeModuleDefinition.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/instrumentationNodeModuleDefinition.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  InstrumentationModuleDefinition,\n  InstrumentationModuleFile,\n} from './types';\n\nexport class InstrumentationNodeModuleDefinition\n  implements InstrumentationModuleDefinition\n{\n  files: InstrumentationModuleFile[];\n  constructor(\n    public name: string,\n    public supportedVersions: string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public patch?: (exports: any, moduleVersion?: string) => any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public unpatch?: (exports: any, moduleVersion?: string) => void,\n    files?: InstrumentationModuleFile[]\n  ) {\n    this.files = files || [];\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAOH,IAAA,sCAAA;IAIE,SAAA,oCACS,IAAY,EACZ,iBAA2B,EAClC,8DAA8D;IACvD,KAAqD,EAC5D,8DAA8D;IACvD,OAAwD,EAC/D,KAAmC;QAN5B,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAQ;QACZ,IAAA,CAAA,iBAAiB,GAAjB,iBAAiB,CAAU;QAE3B,IAAA,CAAA,KAAK,GAAL,KAAK,CAAgD;QAErD,IAAA,CAAA,OAAO,GAAP,OAAO,CAAiD;QAG/D,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;IAC3B,CAAC;IACH,OAAA,mCAAC;AAAD,CAAC,AAfD,IAeC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4509, "column": 0}, "map": {"version":3,"file":"instrumentationNodeModuleFile.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/instrumentationNodeModuleFile.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationModuleFile } from './types';\nimport { normalize } from './platform/index';\n\nexport class InstrumentationNodeModuleFile\n  implements InstrumentationModuleFile\n{\n  public name: string;\n  constructor(\n    name: string,\n    public supportedVersions: string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public patch: (moduleExports: any, moduleVersion?: string) => any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public unpatch: (moduleExports?: any, moduleVersion?: string) => void\n  ) {\n    this.name = normalize(name);\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;;AAE7C,IAAA,gCAAA;IAIE,SAAA,8BACE,IAAY,EACL,iBAA2B,EAClC,8DAA8D;IACvD,KAA0D,EACjE,8DAA8D;IACvD,OAA8D;QAJ9D,IAAA,CAAA,iBAAiB,GAAjB,iBAAiB,CAAU;QAE3B,IAAA,CAAA,KAAK,GAAL,KAAK,CAAqD;QAE1D,IAAA,CAAA,OAAO,GAAP,OAAO,CAAuD;QAErE,IAAI,CAAC,IAAI,yGAAG,YAAA,AAAS,EAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IACH,OAAA,6BAAC;AAAD,CAAC,AAdD,IAcC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4547, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider, MeterProvider, Span } from '@opentelemetry/api';\nimport { LoggerProvider } from '@opentelemetry/api-logs';\n\n/** Interface Instrumentation to apply patch. */\nexport interface Instrumentation<\n  ConfigType extends InstrumentationConfig = InstrumentationConfig,\n> {\n  /** Instrumentation Name  */\n  instrumentationName: string;\n\n  /** Instrumentation Version  */\n  instrumentationVersion: string;\n\n  /**\n   * Instrumentation Description - please describe all useful information\n   * as Instrumentation might patch different version of different modules,\n   * or support different browsers etc.\n   */\n  instrumentationDescription?: string;\n\n  /** Method to disable the instrumentation  */\n  disable(): void;\n\n  /** Method to enable the instrumentation  */\n  enable(): void;\n\n  /** Method to set tracer provider  */\n  setTracerProvider(tracerProvider: TracerProvider): void;\n\n  /** Method to set meter provider  */\n  setMeterProvider(meterProvider: MeterProvider): void;\n\n  /** Method to set logger provider  */\n  setLoggerProvider?(loggerProvider: LoggerProvider): void;\n\n  /** Method to set instrumentation config  */\n  setConfig(config: ConfigType): void;\n\n  /** Method to get instrumentation config  */\n  getConfig(): ConfigType;\n}\n\n/**\n * Base interface for configuration options common to all instrumentations.\n * This interface can be extended by individual instrumentations to include\n * additional configuration options specific to that instrumentation.\n * All configuration options must be optional.\n */\nexport interface InstrumentationConfig {\n  /**\n   * Whether to enable the plugin.\n   * @default true\n   */\n  enabled?: boolean;\n}\n\n/**\n * This interface defines the params that are be added to the wrapped function\n * using the \"shimmer.wrap\"\n */\nexport interface ShimWrapped extends Function {\n  __wrapped: boolean;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __unwrap: Function;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __original: Function;\n}\n\nexport interface InstrumentationModuleFile {\n  /** Name of file to be patched with relative path */\n  name: string;\n\n  moduleExports?: unknown;\n\n  /** Supported versions for the file.\n   *\n   * A module version is supported if one of the supportedVersions in the array satisfies the module version.\n   * The syntax of the version is checked with the `satisfies` function of \"The semantic versioner for npm\", see\n   * [`semver` package](https://www.npmjs.com/package/semver)\n   * If the version is not supported, we won't apply instrumentation patch.\n   * If omitted, all versions of the module will be patched.\n   *\n   * It is recommended to always specify a range that is bound to a major version, to avoid breaking changes.\n   * New major versions should be reviewed and tested before being added to the supportedVersions array.\n   *\n   * Example: ['>=1.2.3 <3']\n   */\n  supportedVersions: string[];\n\n  /** Method to patch the instrumentation  */\n  patch(moduleExports: unknown, moduleVersion?: string): unknown;\n\n  /** Method to unpatch the instrumentation  */\n  unpatch(moduleExports?: unknown, moduleVersion?: string): void;\n}\n\nexport interface InstrumentationModuleDefinition {\n  /** Module name or path  */\n  name: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  moduleExports?: any;\n\n  /** Instrumented module version */\n  moduleVersion?: string;\n\n  /** Supported version of module.\n   *\n   * A module version is supported if one of the supportedVersions in the array satisfies the module version.\n   * The syntax of the version is checked with the `satisfies` function of \"The semantic versioner for npm\", see\n   * [`semver` package](https://www.npmjs.com/package/semver)\n   * If the version is not supported, we won't apply instrumentation patch (see `enable` method).\n   * If omitted, all versions of the module will be patched.\n   *\n   * It is recommended to always specify a range that is bound to a major version, to avoid breaking changes.\n   * New major versions should be reviewed and tested before being added to the supportedVersions array.\n   *\n   * Example: ['>=1.2.3 <3']\n   */\n  supportedVersions: string[];\n\n  /** Module internal files to be patched  */\n  files: InstrumentationModuleFile[];\n\n  /** If set to true, the includePrerelease check will be included when calling semver.satisfies */\n  includePrerelease?: boolean;\n\n  /** Method to patch the instrumentation  */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  patch?: (moduleExports: any, moduleVersion?: string) => any;\n\n  /** Method to unpatch the instrumentation  */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  unpatch?: (moduleExports: any, moduleVersion?: string) => void;\n}\n\n/**\n * SpanCustomizationHook is a common way for instrumentations to expose extension points\n * where users can add custom behavior to a span based on info object passed to the hook at different times of the span lifecycle.\n * This is an advanced feature, commonly used to add additional or non-spec-compliant attributes to the span,\n * capture payloads, modify the span in some way, or carry some other side effect.\n *\n * The hook is registered with the instrumentation specific config by implementing an handler function with this signature,\n * and if the hook is present, it will be called with the span and the event information\n * when the event is emitted.\n *\n * When and under what conditions the hook is called and what data is passed\n * in the info argument, is specific to each instrumentation and life-cycle event\n * and should be documented where it is used.\n *\n * Instrumentation may define multiple hooks, for different spans, or different span life-cycle events.\n */\nexport type SpanCustomizationHook<SpanCustomizationInfoType> = (\n  span: Span,\n  info: SpanCustomizationInfoType\n) => void;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4570, "column": 0}, "map": {"version":3,"file":"types_internal.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation/src/types_internal.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider, MeterProvider } from '@opentelemetry/api';\nimport { Instrumentation } from './types';\nimport { LoggerProvider } from '@opentelemetry/api-logs';\n\nexport interface AutoLoaderResult {\n  instrumentations: Instrumentation[];\n}\n\nexport interface AutoLoaderOptions {\n  instrumentations?: (Instrumentation | Instrumentation[])[];\n  tracerProvider?: TracerProvider;\n  meterProvider?: MeterProvider;\n  loggerProvider?: LoggerProvider;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4633, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-proto/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { OTLPTraceExporter } from './platform';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4664, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-proto/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.52.1';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,4DAA4D;;;;AACrD,IAAM,OAAO,GAAG,QAAQ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4689, "column": 0}, "map": {"version":3,"file":"OTLPTraceExporter.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-proto/src/platform/node/OTLPTraceExporter.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReadableSpan, SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nimport {\n  OTLPExporterNodeConfigBase,\n  appendResourcePathToUrl,\n  appendRootPathToUrlIfNeeded,\n  OTLPExporterNodeBase,\n  parseHeaders,\n} from '@opentelemetry/otlp-exporter-base';\nimport {\n  IExportTraceServiceResponse,\n  ProtobufTraceSerializer,\n} from '@opentelemetry/otlp-transformer';\nimport { VERSION } from '../../version';\n\nconst DEFAULT_COLLECTOR_RESOURCE_PATH = 'v1/traces';\nconst DEFAULT_COLLECTOR_URL = `http://localhost:4318/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;\nconst USER_AGENT = {\n  'User-Agent': `OTel-OTLP-Exporter-JavaScript/${VERSION}`,\n};\n\n/**\n * Collector Trace Exporter for Node with protobuf\n */\nexport class OTLPTraceExporter\n  extends OTLPExporterNodeBase<ReadableSpan, IExportTraceServiceResponse>\n  implements SpanExporter\n{\n  constructor(config: OTLPExporterNodeConfigBase = {}) {\n    super(config, ProtobufTraceSerializer, 'application/x-protobuf');\n    this.headers = {\n      ...this.headers,\n      ...USER_AGENT,\n      ...baggageUtils.parseKeyPairsIntoRecord(\n        getEnv().OTEL_EXPORTER_OTLP_TRACES_HEADERS\n      ),\n      ...parseHeaders(config?.headers),\n    };\n  }\n\n  getDefaultUrl(config: OTLPExporterNodeConfigBase) {\n    return typeof config.url === 'string'\n      ? config.url\n      : getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length > 0\n      ? appendRootPathToUrlIfNeeded(getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT)\n      : getEnv().OTEL_EXPORTER_OTLP_ENDPOINT.length > 0\n      ? appendResourcePathToUrl(\n          getEnv().OTEL_EXPORTER_OTLP_ENDPOINT,\n          DEFAULT_COLLECTOR_RESOURCE_PATH\n        )\n      : DEFAULT_COLLECTOR_URL;\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAGH,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAEL,uBAAuB,EACvB,2BAA2B,EAC3B,oBAAoB,EACpB,YAAY,GACb,MAAM,mCAAmC,CAAC;;AAC3C,OAAO,EAEL,uBAAuB,GACxB,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAExC,IAAM,+BAA+B,GAAG,WAAW,CAAC;AACpD,IAAM,qBAAqB,GAAG,2BAAyB,+BAAiC,CAAC;AACzF,IAAM,UAAU,GAAG;IACjB,YAAY,EAAE,sOAAiC,UAAS;CACzD,CAAC;AAEF;;GAEG,CACH,IAAA,oBAAA,SAAA,MAAA;IACU,UAAA,mBAAA,QAA+D;IAGvE,SAAA,kBAAY,MAAuC;QAAvC,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAA,CAAuC;QAAA;QAAnD,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,MAAM,sMAAE,0BAAuB,EAAE,wBAAwB,CAAC,IAAA,IAAA,CASjE;QARC,KAAI,CAAC,OAAO,GAAA,SAAA,SAAA,SAAA,SAAA,CAAA,GACP,KAAI,CAAC,OAAO,GACZ,UAAU,yNACV,eAAY,CAAC,uBAAuB,kMACrC,SAAA,AAAM,EAAE,EAAC,iCAAiC,CAC3C,IACE,wMAAA,AAAY,EAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,OAAO,CAAC,CACjC,CAAC;;IACJ,CAAC;IAED,kBAAA,SAAA,CAAA,aAAa,GAAb,SAAc,MAAkC;QAC9C,OAAO,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,GACjC,MAAM,CAAC,GAAG,oMACV,SAAA,AAAM,EAAE,EAAC,kCAAkC,CAAC,MAAM,GAAG,CAAC,6LACtD,8BAAA,AAA2B,mMAAC,SAAA,AAAM,EAAE,EAAC,kCAAkC,CAAC,IACxE,yMAAA,AAAM,EAAE,EAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,6LAC/C,0BAAA,AAAuB,mMACrB,SAAA,AAAM,EAAE,EAAC,2BAA2B,EACpC,+BAA+B,CAChC,GACD,qBAAqB,CAAC;IAC5B,CAAC;IACH,OAAA,iBAAC;AAAD,CAAC,AA5BD,2NACU,uBAAoB,GA2B7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4798, "column": 0}, "map": {"version":3,"file":"util.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-exporter-base/src/util.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv } from '@opentelemetry/core';\n\nconst DEFAULT_TRACE_TIMEOUT = 10000;\nexport const DEFAULT_EXPORT_MAX_ATTEMPTS = 5;\nexport const DEFAULT_EXPORT_INITIAL_BACKOFF = 1000;\nexport const DEFAULT_EXPORT_MAX_BACKOFF = 5000;\nexport const DEFAULT_EXPORT_BACKOFF_MULTIPLIER = 1.5;\n\n/**\n * Parses headers from config leaving only those that have defined values\n * @param partialHeaders\n */\nexport function parseHeaders(\n  partialHeaders: Partial<Record<string, unknown>> = {}\n): Record<string, string> {\n  const headers: Record<string, string> = {};\n  Object.entries(partialHeaders).forEach(([key, value]) => {\n    if (typeof value !== 'undefined') {\n      headers[key] = String(value);\n    } else {\n      diag.warn(\n        `Header \"${key}\" has invalid value (${value}) and will be ignored`\n      );\n    }\n  });\n  return headers;\n}\n\n/**\n * Adds path (version + signal) to a no per-signal endpoint\n * @param url\n * @param path\n * @returns url + path\n */\nexport function appendResourcePathToUrl(url: string, path: string): string {\n  if (!url.endsWith('/')) {\n    url = url + '/';\n  }\n  return url + path;\n}\n\n/**\n * Adds root path to signal specific endpoint when endpoint contains no path part and no root path\n * @param url\n * @returns url\n */\nexport function appendRootPathToUrlIfNeeded(url: string): string {\n  try {\n    const parsedUrl = new URL(url);\n    if (parsedUrl.pathname === '') {\n      parsedUrl.pathname = parsedUrl.pathname + '/';\n    }\n    return parsedUrl.toString();\n  } catch {\n    diag.warn(`Could not parse export URL: '${url}'`);\n    return url;\n  }\n}\n\n/**\n * Configure exporter trace timeout value from passed in value or environment variables\n * @param timeoutMillis\n * @returns timeout value in milliseconds\n */\nexport function configureExporterTimeout(\n  timeoutMillis: number | undefined\n): number {\n  if (typeof timeoutMillis === 'number') {\n    if (timeoutMillis <= 0) {\n      // OTLP exporter configured timeout - using default value of 10000ms\n      return invalidTimeout(timeoutMillis, DEFAULT_TRACE_TIMEOUT);\n    }\n    return timeoutMillis;\n  } else {\n    return getExporterTimeoutFromEnv();\n  }\n}\n\nfunction getExporterTimeoutFromEnv(): number {\n  const definedTimeout = Number(\n    getEnv().OTEL_EXPORTER_OTLP_TRACES_TIMEOUT ??\n      getEnv().OTEL_EXPORTER_OTLP_TIMEOUT\n  );\n\n  if (definedTimeout <= 0) {\n    // OTLP exporter configured timeout - using default value of 10000ms\n    return invalidTimeout(definedTimeout, DEFAULT_TRACE_TIMEOUT);\n  } else {\n    return definedTimeout;\n  }\n}\n\n// OTLP exporter configured timeout - using default value of 10000ms\nexport function invalidTimeout(\n  timeout: number,\n  defaultTimeout: number\n): number {\n  diag.warn('Timeout must be greater than 0', timeout);\n\n  return defaultTimeout;\n}\n\nexport function isExportRetryable(statusCode: number): boolean {\n  const retryCodes = [429, 502, 503, 504];\n\n  return retryCodes.includes(statusCode);\n}\n\nexport function parseRetryAfterToMills(retryAfter?: string | null): number {\n  if (retryAfter == null) {\n    return -1;\n  }\n  const seconds = Number.parseInt(retryAfter, 10);\n  if (Number.isInteger(seconds)) {\n    return seconds > 0 ? seconds * 1000 : -1;\n  }\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#directives\n  const delay = new Date(retryAfter).getTime() - Date.now();\n\n  if (delay >= 0) {\n    return delay;\n  }\n  return 0;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4941, "column": 0}, "map": {"version":3,"file":"OTLPExporterBase.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-exporter-base/src/OTLPExporterBase.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport {\n  ExportResult,\n  ExportResultCode,\n  BindOnceFuture,\n} from '@opentelemetry/core';\nimport {\n  OTLPExporterError,\n  OTLPExporterConfigBase,\n  ExportServiceError,\n} from './types';\nimport { configureExporterTimeout } from './util';\n\n/**\n * Collector Exporter abstract base class\n */\nexport abstract class OTLPExporterBase<\n  T extends OTLPExporterConfigBase,\n  ExportItem,\n> {\n  public readonly url: string;\n  public readonly hostname: string | undefined;\n  public readonly timeoutMillis: number;\n  protected _concurrencyLimit: number;\n  protected _sendingPromises: Promise<unknown>[] = [];\n  protected _shutdownOnce: BindOnceFuture<void>;\n\n  /**\n   * @param config\n   */\n  constructor(config: T = {} as T) {\n    this.url = this.getDefaultUrl(config);\n    if (typeof config.hostname === 'string') {\n      this.hostname = config.hostname;\n    }\n\n    this.shutdown = this.shutdown.bind(this);\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n\n    this._concurrencyLimit =\n      typeof config.concurrencyLimit === 'number'\n        ? config.concurrencyLimit\n        : 30;\n\n    this.timeoutMillis = configureExporterTimeout(config.timeoutMillis);\n\n    // platform dependent\n    this.onInit(config);\n  }\n\n  /**\n   * Export items.\n   * @param items\n   * @param resultCallback\n   */\n  export(\n    items: ExportItem[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    if (this._shutdownOnce.isCalled) {\n      resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Exporter has been shutdown'),\n      });\n      return;\n    }\n\n    if (this._sendingPromises.length >= this._concurrencyLimit) {\n      resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Concurrent export limit reached'),\n      });\n      return;\n    }\n\n    this._export(items)\n      .then(() => {\n        resultCallback({ code: ExportResultCode.SUCCESS });\n      })\n      .catch((error: ExportServiceError) => {\n        resultCallback({ code: ExportResultCode.FAILED, error });\n      });\n  }\n\n  private _export(items: ExportItem[]): Promise<unknown> {\n    return new Promise<void>((resolve, reject) => {\n      try {\n        diag.debug('items to be sent', items);\n        this.send(items, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * Shutdown the exporter.\n   */\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  /**\n   * Exports any pending spans in the exporter\n   */\n  forceFlush(): Promise<void> {\n    return Promise.all(this._sendingPromises).then(() => {\n      /** ignore resolved values */\n    });\n  }\n\n  /**\n   * Called by _shutdownOnce with BindOnceFuture\n   */\n  private _shutdown(): Promise<void> {\n    diag.debug('shutdown started');\n    this.onShutdown();\n    return this.forceFlush();\n  }\n\n  abstract onShutdown(): void;\n  abstract onInit(config: T): void;\n  abstract send(\n    items: ExportItem[],\n    onSuccess: () => void,\n    onError: (error: OTLPExporterError) => void\n  ): void;\n  abstract getDefaultUrl(config: T): string;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5055, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-exporter-base/src/platform/node/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type * as http from 'http';\nimport type * as https from 'https';\n\nimport { OTLPExporterConfigBase } from '../../types';\n\n/**\n * Collector Exporter node base config\n */\nexport interface OTLPExporterNodeConfigBase extends OTLPExporterConfigBase {\n  keepAlive?: boolean;\n  compression?: CompressionAlgorithm;\n  httpAgentOptions?: http.AgentOptions | https.AgentOptions;\n}\n\nexport enum CompressionAlgorithm {\n  NONE = 'none',\n  GZIP = 'gzip',\n}\n"],"names":[],"mappings":";;;AA6BA,IAAY,oBAGX;AAHD,CAAA,SAAY,oBAAoB;IAC9B,oBAAA,CAAA,OAAA,GAAA,MAAa,CAAA;IACb,oBAAA,CAAA,OAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAHW,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAG/B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5069, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-exporter-base/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Interface for handling error\n */\nexport class OTLPExporterError extends Error {\n  readonly code?: number;\n  override readonly name: string = 'OTLPExporterError';\n  readonly data?: string;\n\n  constructor(message?: string, code?: number, data?: string) {\n    super(message);\n    this.data = data;\n    this.code = code;\n  }\n}\n\n/**\n * Interface for handling export service errors\n */\nexport interface ExportServiceError {\n  name: string;\n  code: number;\n  details: string;\n  metadata: { [key: string]: unknown };\n  message: string;\n  stack: string;\n}\n\n/**\n * Collector Exporter base config\n */\nexport interface OTLPExporterConfigBase {\n  headers?: Partial<Record<string, unknown>>;\n  hostname?: string;\n  url?: string;\n  concurrencyLimit?: number;\n  /** Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms. */\n  timeoutMillis?: number;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;;;;;;AAEH;;GAEG,CACH,IAAA,oBAAA,SAAA,MAAA;IAAuC,UAAA,mBAAA,QAAK;IAK1C,SAAA,kBAAY,OAAgB,EAAE,IAAa,EAAE,IAAa;QAA1D,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAGf;QAPiB,MAAA,IAAI,GAAW,mBAAmB,CAAC;QAKnD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACnB,CAAC;IACH,OAAA,iBAAC;AAAD,CAAC,AAVD,CAAuC,KAAK,GAU3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5127, "column": 0}, "map": {"version":3,"file":"util.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-exporter-base/src/platform/node/util.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as url from 'url';\nimport * as http from 'http';\nimport * as https from 'https';\nimport * as zlib from 'zlib';\nimport { Readable } from 'stream';\nimport { OTLPExporterNodeBase } from './OTLPExporterNodeBase';\nimport { OTLPExporterNodeConfigBase } from '.';\nimport { diag } from '@opentelemetry/api';\nimport { CompressionAlgorithm } from './types';\nimport { getEnv } from '@opentelemetry/core';\nimport { OTLPExporterError } from '../../types';\nimport {\n  DEFAULT_EXPORT_MAX_ATTEMPTS,\n  DEFAULT_EXPORT_INITIAL_BACKOFF,\n  DEFAULT_EXPORT_BACKOFF_MULTIPLIER,\n  DEFAULT_EXPORT_MAX_BACKOFF,\n  isExportRetryable,\n  parseRetryAfterToMills,\n} from '../../util';\n\n/**\n * Sends data using http\n * @param collector\n * @param data\n * @param contentType\n * @param onSuccess\n * @param onError\n */\nexport function sendWithHttp<ExportItem, ServiceResponse>(\n  collector: OTLPExporterNodeBase<ExportItem, ServiceResponse>,\n  data: string | Uint8Array,\n  contentType: string,\n  onSuccess: () => void,\n  onError: (error: OTLPExporterError) => void\n): void {\n  const exporterTimeout = collector.timeoutMillis;\n  const parsedUrl = new url.URL(collector.url);\n  const nodeVersion = Number(process.versions.node.split('.')[0]);\n  let retryTimer: ReturnType<typeof setTimeout>;\n  let req: http.ClientRequest;\n  let reqIsDestroyed = false;\n\n  const exporterTimer = setTimeout(() => {\n    clearTimeout(retryTimer);\n    reqIsDestroyed = true;\n\n    if (req.destroyed) {\n      const err = new OTLPExporterError('Request Timeout');\n      onError(err);\n    } else {\n      // req.abort() was deprecated since v14\n      nodeVersion >= 14 ? req.destroy() : req.abort();\n    }\n  }, exporterTimeout);\n\n  const options: http.RequestOptions | https.RequestOptions = {\n    hostname: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.pathname,\n    method: 'POST',\n    headers: {\n      'Content-Type': contentType,\n      ...collector.headers,\n    },\n    agent: collector.agent,\n  };\n\n  const request = parsedUrl.protocol === 'http:' ? http.request : https.request;\n\n  const sendWithRetry = (\n    retries = DEFAULT_EXPORT_MAX_ATTEMPTS,\n    minDelay = DEFAULT_EXPORT_INITIAL_BACKOFF\n  ) => {\n    req = request(options, (res: http.IncomingMessage) => {\n      let responseData = '';\n      res.on('data', chunk => (responseData += chunk));\n\n      res.on('aborted', () => {\n        if (reqIsDestroyed) {\n          const err = new OTLPExporterError('Request Timeout');\n          onError(err);\n        }\n      });\n\n      res.on('end', () => {\n        if (reqIsDestroyed === false) {\n          if (res.statusCode && res.statusCode < 299) {\n            diag.debug(`statusCode: ${res.statusCode}`, responseData);\n            onSuccess();\n            // clear all timers since request was completed and promise was resolved\n            clearTimeout(exporterTimer);\n            clearTimeout(retryTimer);\n          } else if (\n            res.statusCode &&\n            isExportRetryable(res.statusCode) &&\n            retries > 0\n          ) {\n            let retryTime: number;\n            minDelay = DEFAULT_EXPORT_BACKOFF_MULTIPLIER * minDelay;\n\n            // retry after interval specified in Retry-After header\n            if (res.headers['retry-after']) {\n              retryTime = parseRetryAfterToMills(res.headers['retry-after']!);\n            } else {\n              // exponential backoff with jitter\n              retryTime = Math.round(\n                Math.random() * (DEFAULT_EXPORT_MAX_BACKOFF - minDelay) +\n                  minDelay\n              );\n            }\n\n            retryTimer = setTimeout(() => {\n              sendWithRetry(retries - 1, minDelay);\n            }, retryTime);\n          } else {\n            const error = new OTLPExporterError(\n              res.statusMessage,\n              res.statusCode,\n              responseData\n            );\n            onError(error);\n            // clear all timers since request was completed and promise was resolved\n            clearTimeout(exporterTimer);\n            clearTimeout(retryTimer);\n          }\n        }\n      });\n    });\n\n    req.on('error', (error: Error | any) => {\n      if (reqIsDestroyed) {\n        const err = new OTLPExporterError('Request Timeout', error.code);\n        onError(err);\n      } else {\n        onError(error);\n      }\n      clearTimeout(exporterTimer);\n      clearTimeout(retryTimer);\n    });\n\n    req.on('abort', () => {\n      if (reqIsDestroyed) {\n        const err = new OTLPExporterError('Request Timeout');\n        onError(err);\n      }\n      clearTimeout(exporterTimer);\n      clearTimeout(retryTimer);\n    });\n\n    switch (collector.compression) {\n      case CompressionAlgorithm.GZIP: {\n        req.setHeader('Content-Encoding', 'gzip');\n        const dataStream = readableFromUnit8Array(data);\n        dataStream\n          .on('error', onError)\n          .pipe(zlib.createGzip())\n          .on('error', onError)\n          .pipe(req);\n\n        break;\n      }\n      default:\n        req.end(Buffer.from(data));\n        break;\n    }\n  };\n  sendWithRetry();\n}\n\nfunction readableFromUnit8Array(buff: string | Uint8Array): Readable {\n  const readable = new Readable();\n  readable.push(buff);\n  readable.push(null);\n\n  return readable;\n}\n\nexport function createHttpAgent(\n  config: OTLPExporterNodeConfigBase\n): http.Agent | https.Agent | undefined {\n  if (config.httpAgentOptions && config.keepAlive === false) {\n    diag.warn('httpAgentOptions is used only when keepAlive is true');\n    return undefined;\n  }\n\n  if (config.keepAlive === false || !config.url) return undefined;\n\n  try {\n    const parsedUrl = new url.URL(config.url as string);\n    const Agent = parsedUrl.protocol === 'http:' ? http.Agent : https.Agent;\n    return new Agent({ keepAlive: true, ...config.httpAgentOptions });\n  } catch (err) {\n    diag.error(\n      `collector exporter failed to create http agent. err: ${err.message}`\n    );\n    return undefined;\n  }\n}\n\nexport function configureCompression(\n  compression: CompressionAlgorithm | undefined\n): CompressionAlgorithm {\n  if (compression) {\n    return compression;\n  } else {\n    const definedCompression =\n      getEnv().OTEL_EXPORTER_OTLP_TRACES_COMPRESSION ||\n      getEnv().OTEL_EXPORTER_OTLP_COMPRESSION;\n    return definedCompression === CompressionAlgorithm.GZIP\n      ? CompressionAlgorithm.GZIP\n      : CompressionAlgorithm.NONE;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5324, "column": 0}, "map": {"version":3,"file":"OTLPExporterNodeBase.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-exporter-base/src/platform/node/OTLPExporterNodeBase.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as http from 'http';\nimport type * as https from 'https';\n\nimport { OTLPExporterBase } from '../../OTLPExporterBase';\nimport { OTLPExporterNodeConfigBase, CompressionAlgorithm } from './types';\nimport * as otlpTypes from '../../types';\nimport { parseHeaders } from '../../util';\nimport { createHttpAgent, sendWithHttp, configureCompression } from './util';\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nimport { ISerializer } from '@opentelemetry/otlp-transformer';\n\n/**\n * Collector Metric Exporter abstract base class\n */\nexport abstract class OTLPExporterNodeBase<\n  ExportItem,\n  ServiceResponse,\n> extends OTLPExporterBase<OTLPExporterNodeConfigBase, ExportItem> {\n  DEFAULT_HEADERS: Record<string, string> = {};\n  headers: Record<string, string>;\n  agent: http.Agent | https.Agent | undefined;\n  compression: CompressionAlgorithm;\n  private _serializer: ISerializer<ExportItem[], ServiceResponse>;\n  private _contentType: string;\n\n  constructor(\n    config: OTLPExporterNodeConfigBase = {},\n    serializer: ISerializer<ExportItem[], ServiceResponse>,\n    contentType: string\n  ) {\n    super(config);\n    this._contentType = contentType;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if ((config as any).metadata) {\n      diag.warn('Metadata cannot be set when using http');\n    }\n    this.headers = Object.assign(\n      this.DEFAULT_HEADERS,\n      parseHeaders(config.headers),\n      baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_HEADERS)\n    );\n    this.agent = createHttpAgent(config);\n    this.compression = configureCompression(config.compression);\n    this._serializer = serializer;\n  }\n\n  onInit(_config: OTLPExporterNodeConfigBase): void {}\n\n  send(\n    objects: ExportItem[],\n    onSuccess: () => void,\n    onError: (error: otlpTypes.OTLPExporterError) => void\n  ): void {\n    if (this._shutdownOnce.isCalled) {\n      diag.debug('Shutdown already started. Cannot send objects');\n      return;\n    }\n\n    const promise = new Promise<void>((resolve, reject) => {\n      sendWithHttp(\n        this,\n        this._serializer.serializeRequest(objects) ?? new Uint8Array(),\n        this._contentType,\n        resolve,\n        reject\n      );\n    }).then(onSuccess, onError);\n\n    this._sendingPromises.push(promise);\n    const popPromise = () => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    };\n    promise.then(popPromise, popPromise);\n  }\n\n  onShutdown(): void {}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAKH,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAG1D,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,YAAY,EAAE,oBAAoB,EAAE,MAAM,QAAQ,CAAC;AAC7E,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;;AAC1C,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AAG3D;;GAEG,CACH,IAAA,uBAAA,SAAA,MAAA;IAGU,UAAA,sBAAA,QAAwD;IAQhE,SAAA,qBACE,MAAuC,EACvC,UAAsD,EACtD,WAAmB;QAFnB,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAA,CAAuC;QAAA;QADzC,IAAA,QAKE,OAAA,IAAA,CAAA,IAAA,EAAM,MAAM,CAAC,IAAA,IAAA,CAcd;QA1BD,MAAA,eAAe,GAA2B,CAAA,CAAE,CAAC;QAa3C,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,8DAA8D;QAC9D,IAAK,MAAc,CAAC,QAAQ,EAAE;kJAC5B,OAAI,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;SACrD;QACD,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAC1B,KAAI,CAAC,eAAe,4LACpB,eAAA,AAAY,EAAC,MAAM,CAAC,OAAO,CAAC,wNAC5B,eAAY,CAAC,uBAAuB,EAAC,yMAAA,AAAM,EAAE,EAAC,0BAA0B,CAAC,CAC1E,CAAC;QACF,KAAI,CAAC,KAAK,iNAAG,kBAAA,AAAe,EAAC,MAAM,CAAC,CAAC;QACrC,KAAI,CAAC,WAAW,OAAG,iOAAA,AAAoB,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC5D,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;;IAChC,CAAC;IAED,qBAAA,SAAA,CAAA,MAAM,GAAN,SAAO,OAAmC,GAAS,CAAC;IAEpD,qBAAA,SAAA,CAAA,IAAI,GAAJ,SACE,OAAqB,EACrB,SAAqB,EACrB,OAAqD;QAHvD,IAAA,QAAA,IAAA,CA0BC;QArBC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC/B,6IAAI,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;YAC5D,OAAO;SACR;QAED,IAAM,OAAO,GAAG,IAAI,OAAO,CAAO,SAAC,OAAO,EAAE,MAAM;;aAChD,4NAAA,AAAY,EACV,KAAI,EACJ,CAAA,KAAA,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,EAAE,EAC9D,KAAI,CAAC,YAAY,EACjB,OAAO,EACP,MAAM,CACP,CAAC;QACJ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAE5B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,IAAM,UAAU,GAAG;YACjB,IAAM,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACrD,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IACvC,CAAC;IAED,qBAAA,SAAA,CAAA,UAAU,GAAV,YAAoB,CAAC;IACvB,OAAA,oBAAC;AAAD,CAAC,AA/DD,mMAGU,mBAAgB,GA4DzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5422, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-exporter-base/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './platform';\nexport { OTLPExporterBase } from './OTLPExporterBase';\nexport {\n  OTLPExporterError,\n  OTLPExporterConfigBase,\n  ExportServiceError,\n} from './types';\nexport {\n  parseHeaders,\n  appendResourcePathToUrl,\n  appendRootPathToUrlIfNeeded,\n  configureExporterTimeout,\n  invalidTimeout,\n} from './util';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5456, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-exporter-base/src/platform/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  OTLPExporterNodeBase,\n  sendWithHttp,\n  createHttpAgent,\n  configureCompression,\n  OTLPExporterNodeConfigBase,\n  CompressionAlgorithm,\n} from './node';\nexport { OTLPExporterBrowserBase, sendWithXhr } from './browser';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5488, "column": 0}, "map": {"version":3,"file":"util.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-exporter-base/src/platform/browser/util.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { OTLPExporterError } from '../../types';\nimport {\n  DEFAULT_EXPORT_MAX_ATTEMPTS,\n  DEFAULT_EXPORT_INITIAL_BACKOFF,\n  DEFAULT_EXPORT_BACKOFF_MULTIPLIER,\n  DEFAULT_EXPORT_MAX_BACKOFF,\n  isExportRetryable,\n  parseRetryAfterToMills,\n} from '../../util';\n\n/**\n * Send metrics/spans using browser navigator.sendBeacon\n * @param body\n * @param url\n * @param blobPropertyBag\n * @param onSuccess\n * @param onError\n */\nexport function sendWithBeacon(\n  body: Uint8Array,\n  url: string,\n  blobPropertyBag: BlobPropertyBag,\n  onSuccess: () => void,\n  onError: (error: OTLPExporterError) => void\n): void {\n  if (navigator.sendBeacon(url, new Blob([body], blobPropertyBag))) {\n    diag.debug('sendBeacon - can send', body);\n    onSuccess();\n  } else {\n    const error = new OTLPExporterError(`sendBeacon - cannot send ${body}`);\n    onError(error);\n  }\n}\n\n/**\n * function to send metrics/spans using browser XMLHttpRequest\n *     used when navigator.sendBeacon is not available\n * @param body\n * @param url\n * @param headers\n * @param onSuccess\n * @param onError\n */\nexport function sendWithXhr(\n  body: Uint8Array,\n  url: string,\n  headers: Record<string, string>,\n  exporterTimeout: number,\n  onSuccess: () => void,\n  onError: (error: OTLPExporterError) => void\n): void {\n  let retryTimer: ReturnType<typeof setTimeout>;\n  let xhr: XMLHttpRequest;\n  let reqIsDestroyed = false;\n\n  const exporterTimer = setTimeout(() => {\n    clearTimeout(retryTimer);\n    reqIsDestroyed = true;\n\n    if (xhr.readyState === XMLHttpRequest.DONE) {\n      const err = new OTLPExporterError('Request Timeout');\n      onError(err);\n    } else {\n      xhr.abort();\n    }\n  }, exporterTimeout);\n\n  const sendWithRetry = (\n    retries = DEFAULT_EXPORT_MAX_ATTEMPTS,\n    minDelay = DEFAULT_EXPORT_INITIAL_BACKOFF\n  ) => {\n    xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n\n    const defaultHeaders = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    };\n\n    Object.entries({\n      ...defaultHeaders,\n      ...headers,\n    }).forEach(([k, v]) => {\n      xhr.setRequestHeader(k, v);\n    });\n\n    xhr.send(body);\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE && reqIsDestroyed === false) {\n        if (xhr.status >= 200 && xhr.status <= 299) {\n          diag.debug('xhr success', body);\n          onSuccess();\n          clearTimeout(exporterTimer);\n          clearTimeout(retryTimer);\n        } else if (xhr.status && isExportRetryable(xhr.status) && retries > 0) {\n          let retryTime: number;\n          minDelay = DEFAULT_EXPORT_BACKOFF_MULTIPLIER * minDelay;\n\n          // retry after interval specified in Retry-After header\n          if (xhr.getResponseHeader('Retry-After')) {\n            retryTime = parseRetryAfterToMills(\n              xhr.getResponseHeader('Retry-After')!\n            );\n          } else {\n            // exponential backoff with jitter\n            retryTime = Math.round(\n              Math.random() * (DEFAULT_EXPORT_MAX_BACKOFF - minDelay) + minDelay\n            );\n          }\n\n          retryTimer = setTimeout(() => {\n            sendWithRetry(retries - 1, minDelay);\n          }, retryTime);\n        } else {\n          const error = new OTLPExporterError(\n            `Failed to export with XHR (status: ${xhr.status})`,\n            xhr.status\n          );\n          onError(error);\n          clearTimeout(exporterTimer);\n          clearTimeout(retryTimer);\n        }\n      }\n    };\n\n    xhr.onabort = () => {\n      if (reqIsDestroyed) {\n        const err = new OTLPExporterError('Request Timeout');\n        onError(err);\n      }\n      clearTimeout(exporterTimer);\n      clearTimeout(retryTimer);\n    };\n\n    xhr.onerror = () => {\n      if (reqIsDestroyed) {\n        const err = new OTLPExporterError('Request Timeout');\n        onError(err);\n      }\n      clearTimeout(exporterTimer);\n      clearTimeout(retryTimer);\n    };\n  };\n\n  sendWithRetry();\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5637, "column": 0}, "map": {"version":3,"file":"OTLPExporterBrowserBase.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-exporter-base/src/platform/browser/OTLPExporterBrowserBase.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OTLPExporterBase } from '../../OTLPExporterBase';\nimport { OTLPExporterConfigBase } from '../../types';\nimport * as otlpTypes from '../../types';\nimport { parseHeaders } from '../../util';\nimport { sendWithBeacon, sendWithXhr } from './util';\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nimport { ISerializer } from '@opentelemetry/otlp-transformer';\n\n/**\n * Collector Metric Exporter abstract base class\n */\nexport abstract class OTLPExporterBrowserBase<\n  ExportItem,\n  ServiceResponse,\n> extends OTLPExporterBase<OTLPExporterConfigBase, ExportItem> {\n  protected _headers: Record<string, string>;\n  private _useXHR: boolean = false;\n  private _contentType: string;\n  private _serializer: ISerializer<ExportItem[], ServiceResponse>;\n\n  /**\n   * @param config\n   * @param serializer\n   * @param contentType\n   */\n  constructor(\n    config: OTLPExporterConfigBase = {},\n    serializer: ISerializer<ExportItem[], ServiceResponse>,\n    contentType: string\n  ) {\n    super(config);\n    this._serializer = serializer;\n    this._contentType = contentType;\n    this._useXHR =\n      !!config.headers || typeof navigator.sendBeacon !== 'function';\n    if (this._useXHR) {\n      this._headers = Object.assign(\n        {},\n        parseHeaders(config.headers),\n        baggageUtils.parseKeyPairsIntoRecord(\n          getEnv().OTEL_EXPORTER_OTLP_HEADERS\n        )\n      );\n    } else {\n      this._headers = {};\n    }\n  }\n\n  onInit(): void {}\n\n  onShutdown(): void {}\n\n  send(\n    items: ExportItem[],\n    onSuccess: () => void,\n    onError: (error: otlpTypes.OTLPExporterError) => void\n  ): void {\n    if (this._shutdownOnce.isCalled) {\n      diag.debug('Shutdown already started. Cannot send objects');\n      return;\n    }\n    const body = this._serializer.serializeRequest(items) ?? new Uint8Array();\n\n    const promise = new Promise<void>((resolve, reject) => {\n      if (this._useXHR) {\n        sendWithXhr(\n          body,\n          this.url,\n          {\n            ...this._headers,\n            'Content-Type': this._contentType,\n          },\n          this.timeoutMillis,\n          resolve,\n          reject\n        );\n      } else {\n        sendWithBeacon(\n          body,\n          this.url,\n          { type: this._contentType },\n          resolve,\n          reject\n        );\n      }\n    }).then(onSuccess, onError);\n\n    this._sendingPromises.push(promise);\n    const popPromise = () => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    };\n    promise.then(popPromise, popPromise);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5846, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-http/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './platform';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5877, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-http/src/platform/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './node';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5908, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-http/src/platform/node/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './OTLPTraceExporter';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5939, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-http/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.52.1';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,4DAA4D;;;;AACrD,IAAM,OAAO,GAAG,QAAQ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5964, "column": 0}, "map": {"version":3,"file":"OTLPTraceExporter.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-http/src/platform/node/OTLPTraceExporter.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReadableSpan, SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nimport {\n  OTLPExporterNodeBase,\n  parseHeaders,\n} from '@opentelemetry/otlp-exporter-base';\nimport {\n  OTLPExporterNodeConfigBase,\n  appendResourcePathToUrl,\n  appendRootPathToUrlIfNeeded,\n} from '@opentelemetry/otlp-exporter-base';\nimport { IExportTraceServiceResponse } from '@opentelemetry/otlp-transformer';\nimport { VERSION } from '../../version';\nimport { JsonTraceSerializer } from '@opentelemetry/otlp-transformer';\n\nconst DEFAULT_COLLECTOR_RESOURCE_PATH = 'v1/traces';\nconst DEFAULT_COLLECTOR_URL = `http://localhost:4318/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;\nconst USER_AGENT = {\n  'User-Agent': `OTel-OTLP-Exporter-JavaScript/${VERSION}`,\n};\n\n/**\n * Collector Trace Exporter for Node\n */\nexport class OTLPTraceExporter\n  extends OTLPExporterNodeBase<ReadableSpan, IExportTraceServiceResponse>\n  implements SpanExporter\n{\n  constructor(config: OTLPExporterNodeConfigBase = {}) {\n    super(config, JsonTraceSerializer, 'application/json');\n    this.headers = {\n      ...this.headers,\n      ...USER_AGENT,\n      ...baggageUtils.parseKeyPairsIntoRecord(\n        getEnv().OTEL_EXPORTER_OTLP_TRACES_HEADERS\n      ),\n      ...parseHeaders(config?.headers),\n    };\n  }\n\n  getDefaultUrl(config: OTLPExporterNodeConfigBase): string {\n    return typeof config.url === 'string'\n      ? config.url\n      : getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length > 0\n      ? appendRootPathToUrlIfNeeded(getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT)\n      : getEnv().OTEL_EXPORTER_OTLP_ENDPOINT.length > 0\n      ? appendResourcePathToUrl(\n          getEnv().OTEL_EXPORTER_OTLP_ENDPOINT,\n          DEFAULT_COLLECTOR_RESOURCE_PATH\n        )\n      : DEFAULT_COLLECTOR_URL;\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAGH,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EACL,oBAAoB,EACpB,YAAY,GACb,MAAM,mCAAmC,CAAC;;AAO3C,OAAO,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AACxC,OAAO,EAAE,mBAAmB,EAAE,MAAM,iCAAiC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEtE,IAAM,+BAA+B,GAAG,WAAW,CAAC;AACpD,IAAM,qBAAqB,GAAG,2BAAyB,+BAAiC,CAAC;AACzF,IAAM,UAAU,GAAG;IACjB,YAAY,EAAE,qOAAiC,UAAS;CACzD,CAAC;AAEF;;GAEG,CACH,IAAA,oBAAA,SAAA,MAAA;IACU,UAAA,mBAAA,QAA+D;IAGvE,SAAA,kBAAY,MAAuC;QAAvC,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAA,CAAuC;QAAA;QAAnD,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,MAAM,kMAAE,sBAAmB,EAAE,kBAAkB,CAAC,IAAA,IAAA,CASvD;QARC,KAAI,CAAC,OAAO,GAAA,SAAA,SAAA,SAAA,SAAA,CAAA,GACP,KAAI,CAAC,OAAO,GACZ,UAAU,yNACV,eAAY,CAAC,uBAAuB,kMACrC,SAAA,AAAM,EAAE,EAAC,iCAAiC,CAC3C,IACE,wMAAA,AAAY,EAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,OAAO,CAAC,CACjC,CAAC;;IACJ,CAAC;IAED,kBAAA,SAAA,CAAA,aAAa,GAAb,SAAc,MAAkC;QAC9C,OAAO,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,GACjC,MAAM,CAAC,GAAG,oMACV,SAAA,AAAM,EAAE,EAAC,kCAAkC,CAAC,MAAM,GAAG,CAAC,6LACtD,8BAAA,AAA2B,mMAAC,SAAA,AAAM,EAAE,EAAC,kCAAkC,CAAC,IACxE,yMAAA,AAAM,EAAE,EAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,6LAC/C,0BAAA,AAAuB,mMACrB,SAAA,AAAM,EAAE,EAAC,2BAA2B,EACpC,+BAA+B,CAChC,GACD,qBAAqB,CAAC;IAC5B,CAAC;IACH,OAAA,iBAAC;AAAD,CAAC,AA5BD,2NACU,uBAAoB,GA2B7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6117, "column": 0}, "map": {"version":3,"file":"create-service-client-constructor.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-grpc-exporter-base/src/create-service-client-constructor.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as grpc from '@grpc/grpc-js';\n\n/**\n * Creates a unary service client constructor that, when instantiated, does not serialize/deserialize anything.\n * Allows for passing in {@link Buffer} directly, serialization can be handled via protobufjs or custom implementations.\n *\n * @param path service path\n * @param name service name\n */\nexport function createServiceClientConstructor(\n  path: string,\n  name: string\n): grpc.ServiceClientConstructor {\n  const serviceDefinition = {\n    export: {\n      path: path,\n      requestStream: false,\n      responseStream: false,\n      requestSerialize: (arg: Buffer) => {\n        return arg;\n      },\n      requestDeserialize: (arg: Buffer) => {\n        return arg;\n      },\n      responseSerialize: (arg: Buffer) => {\n        return arg;\n      },\n      responseDeserialize: (arg: Buffer) => {\n        return arg;\n      },\n    },\n  };\n\n  return grpc.makeGenericClientConstructor(serviceDefinition, name);\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,gCAAsC;AAEtC;;;;;;GAMG,CACH,SAAgB,8BAA8B,CAC5C,IAAY,EACZ,IAAY;IAEZ,MAAM,iBAAiB,GAAG;QACxB,MAAM,EAAE;YACN,IAAI,EAAE,IAAI;YACV,aAAa,EAAE,KAAK;YACpB,cAAc,EAAE,KAAK;YACrB,gBAAgB,EAAE,CAAC,GAAW,EAAE,EAAE;gBAChC,OAAO,GAAG,CAAC;YACb,CAAC;YACD,kBAAkB,EAAE,CAAC,GAAW,EAAE,EAAE;gBAClC,OAAO,GAAG,CAAC;YACb,CAAC;YACD,iBAAiB,EAAE,CAAC,GAAW,EAAE,EAAE;gBACjC,OAAO,GAAG,CAAC;YACb,CAAC;YACD,mBAAmB,EAAE,CAAC,GAAW,EAAE,EAAE;gBACnC,OAAO,GAAG,CAAC;YACb,CAAC;SACF;KACF,CAAC;IAEF,OAAO,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;AACpE,CAAC;AAzBD,QAAA,8BAAA,GAAA,+BAyBC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6171, "column": 0}, "map": {"version":3,"file":"grpc-exporter-transport.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-grpc-exporter-base/src/grpc-exporter-transport.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// NOTE: do not change these type imports to actual imports. Doing so WILL break `@opentelemetry/instrumentation-http`,\n// as they'd be imported before the http/https modules can be wrapped.\nimport type {\n  Metadata,\n  ServiceError,\n  ChannelCredentials,\n  Client,\n} from '@grpc/grpc-js';\nimport { ExportResponse } from './export-response';\nimport { IExporterTransport } from './exporter-transport';\n\n// values taken from '@grpc/grpc-js` so that we don't need to require/import it.\nconst GRPC_COMPRESSION_NONE = 0;\nconst GRPC_COMPRESSION_GZIP = 2;\n\nfunction toGrpcCompression(compression: 'gzip' | 'none'): number {\n  return compression === 'gzip' ? GRPC_COMPRESSION_GZIP : GRPC_COMPRESSION_NONE;\n}\n\nexport function createInsecureCredentials(): ChannelCredentials {\n  // Lazy-load so that we don't need to require/import '@grpc/grpc-js' before it can be wrapped by instrumentation.\n  const {\n    credentials,\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n  } = require('@grpc/grpc-js');\n  return credentials.createInsecure();\n}\n\nexport function createSslCredentials(\n  rootCert?: Buffer,\n  privateKey?: Buffer,\n  certChain?: Buffer\n): ChannelCredentials {\n  // Lazy-load so that we don't need to require/import '@grpc/grpc-js' before it can be wrapped by instrumentation.\n  const {\n    credentials,\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n  } = require('@grpc/grpc-js');\n  return credentials.createSsl(rootCert, privateKey, certChain);\n}\n\nexport function createEmptyMetadata(): Metadata {\n  // Lazy-load so that we don't need to require/import '@grpc/grpc-js' before it can be wrapped by instrumentation.\n  const {\n    Metadata,\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n  } = require('@grpc/grpc-js');\n  return new Metadata();\n}\n\nexport interface GrpcExporterTransportParameters {\n  grpcPath: string;\n  grpcName: string;\n  address: string;\n  /**\n   * NOTE: Ensure that you're only importing/requiring gRPC inside the function providing the channel credentials,\n   * otherwise, gRPC and http/https instrumentations may break.\n   *\n   * For common cases, you can avoid to import/require gRPC your function by using\n   *   - {@link createSslCredentials}\n   *   - {@link createInsecureCredentials}\n   */\n  credentials: () => ChannelCredentials;\n  /**\n   * NOTE: Ensure that you're only importing/requiring gRPC inside the function providing the metadata,\n   * otherwise, gRPC and http/https instrumentations may break.\n   *\n   * To avoid having to import/require gRPC from your function to create a new Metadata object,\n   * use {@link createEmptyMetadata}\n   */\n  metadata: () => Metadata;\n  compression: 'gzip' | 'none';\n  timeoutMillis: number;\n}\n\nexport class GrpcExporterTransport implements IExporterTransport {\n  private _client?: Client;\n  private _metadata?: Metadata;\n\n  constructor(private _parameters: GrpcExporterTransportParameters) {}\n\n  shutdown() {\n    this._client?.close();\n  }\n\n  send(data: Uint8Array): Promise<ExportResponse> {\n    // We need to make a for gRPC\n    const buffer = Buffer.from(data);\n\n    if (this._client == null) {\n      // Lazy require to ensure that grpc is not loaded before instrumentations can wrap it\n      const {\n        createServiceClientConstructor,\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n      } = require('./create-service-client-constructor');\n\n      try {\n        this._metadata = this._parameters.metadata();\n      } catch (error) {\n        return Promise.resolve({\n          status: 'failure',\n          error: error,\n        });\n      }\n\n      const clientConstructor = createServiceClientConstructor(\n        this._parameters.grpcPath,\n        this._parameters.grpcName\n      );\n\n      try {\n        this._client = new clientConstructor(\n          this._parameters.address,\n          this._parameters.credentials(),\n          {\n            'grpc.default_compression_algorithm': toGrpcCompression(\n              this._parameters.compression\n            ),\n          }\n        );\n      } catch (error) {\n        return Promise.resolve({\n          status: 'failure',\n          error: error,\n        });\n      }\n    }\n\n    return new Promise<ExportResponse>(resolve => {\n      // this will always be defined\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const deadline = Date.now() + this._parameters.timeoutMillis;\n\n      // this should never happen\n      if (this._metadata == null) {\n        return resolve({\n          error: new Error('metadata was null'),\n          status: 'failure',\n        });\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore The gRPC client constructor is created on runtime, so we don't have any types for the resulting client.\n      this._client.export(\n        buffer,\n        this._metadata,\n        { deadline: deadline },\n        (err: ServiceError, response: Buffer) => {\n          if (err) {\n            resolve({\n              status: 'failure',\n              error: err,\n            });\n          } else {\n            resolve({\n              data: response,\n              status: 'success',\n            });\n          }\n        }\n      );\n    });\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6285, "column": 0}, "map": {"version":3,"file":"util.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-grpc-exporter-base/src/util.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv } from '@opentelemetry/core';\nimport * as path from 'path';\nimport { URL } from 'url';\nimport * as fs from 'fs';\nimport { CompressionAlgorithm } from '@opentelemetry/otlp-exporter-base';\nimport {\n  createInsecureCredentials,\n  createSslCredentials,\n} from './grpc-exporter-transport';\n\n// NOTE: do not change these type imports to actual imports. Doing so WILL break `@opentelemetry/instrumentation-http`,\n// as they'd be imported before the http/https modules can be wrapped.\nimport type { ChannelCredentials } from '@grpc/grpc-js';\n\nexport const DEFAULT_COLLECTOR_URL = 'http://localhost:4317';\n\nexport function validateAndNormalizeUrl(url: string): string {\n  const hasProtocol = url.match(/^([\\w]{1,8}):\\/\\//);\n  if (!hasProtocol) {\n    url = `https://${url}`;\n  }\n  const target = new URL(url);\n  if (target.protocol === 'unix:') {\n    return url;\n  }\n  if (target.pathname && target.pathname !== '/') {\n    diag.warn(\n      'URL path should not be set when using grpc, the path part of the URL will be ignored.'\n    );\n  }\n  if (target.protocol !== '' && !target.protocol?.match(/^(http)s?:$/)) {\n    diag.warn('URL protocol should be http(s)://. Using http://.');\n  }\n  return target.host;\n}\n\nexport function configureCredentials(\n  credentials: ChannelCredentials | undefined,\n  endpoint: string\n): ChannelCredentials {\n  let insecure: boolean;\n\n  if (credentials) {\n    return credentials;\n  } else if (endpoint.startsWith('https://')) {\n    insecure = false;\n  } else if (\n    endpoint.startsWith('http://') ||\n    endpoint === DEFAULT_COLLECTOR_URL\n  ) {\n    insecure = true;\n  } else {\n    insecure = getSecurityFromEnv();\n  }\n\n  if (insecure) {\n    return createInsecureCredentials();\n  } else {\n    return getCredentialsFromEnvironment();\n  }\n}\n\nfunction getSecurityFromEnv(): boolean {\n  const definedInsecure =\n    getEnv().OTEL_EXPORTER_OTLP_TRACES_INSECURE ||\n    getEnv().OTEL_EXPORTER_OTLP_INSECURE;\n\n  if (definedInsecure) {\n    return definedInsecure.toLowerCase() === 'true';\n  } else {\n    return false;\n  }\n}\n\n/**\n * Exported for testing\n */\nexport function getCredentialsFromEnvironment(): ChannelCredentials {\n  const rootCert = retrieveRootCert();\n  const privateKey = retrievePrivateKey();\n  const certChain = retrieveCertChain();\n\n  return createSslCredentials(rootCert, privateKey, certChain);\n}\n\nfunction retrieveRootCert(): Buffer | undefined {\n  const rootCertificate =\n    getEnv().OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE ||\n    getEnv().OTEL_EXPORTER_OTLP_CERTIFICATE;\n\n  if (rootCertificate) {\n    try {\n      return fs.readFileSync(path.resolve(process.cwd(), rootCertificate));\n    } catch {\n      diag.warn('Failed to read root certificate file');\n      return undefined;\n    }\n  } else {\n    return undefined;\n  }\n}\n\nfunction retrievePrivateKey(): Buffer | undefined {\n  const clientKey =\n    getEnv().OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY ||\n    getEnv().OTEL_EXPORTER_OTLP_CLIENT_KEY;\n\n  if (clientKey) {\n    try {\n      return fs.readFileSync(path.resolve(process.cwd(), clientKey));\n    } catch {\n      diag.warn('Failed to read client certificate private key file');\n      return undefined;\n    }\n  } else {\n    return undefined;\n  }\n}\n\nfunction retrieveCertChain(): Buffer | undefined {\n  const clientChain =\n    getEnv().OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE ||\n    getEnv().OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE;\n\n  if (clientChain) {\n    try {\n      return fs.readFileSync(path.resolve(process.cwd(), clientChain));\n    } catch {\n      diag.warn('Failed to read client certificate chain file');\n      return undefined;\n    }\n  } else {\n    return undefined;\n  }\n}\n\nexport function configureCompression(\n  compression: CompressionAlgorithm | undefined\n): CompressionAlgorithm {\n  if (compression != null) {\n    return compression;\n  }\n\n  const envCompression =\n    getEnv().OTEL_EXPORTER_OTLP_TRACES_COMPRESSION ||\n    getEnv().OTEL_EXPORTER_OTLP_COMPRESSION;\n\n  if (envCompression === 'gzip') {\n    return CompressionAlgorithm.GZIP;\n  } else if (envCompression === 'none') {\n    return CompressionAlgorithm.NONE;\n  }\n\n  diag.warn(\n    'Unknown compression \"' + envCompression + '\", falling back to \"none\"'\n  );\n  return CompressionAlgorithm.NONE;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAA0C;AAC1C,MAAA,wCAA6C;AAC7C,MAAA,uBAA6B;AAC7B,MAAA,uBAA0B;AAC1B,MAAA,mBAAyB;AACzB,MAAA,oEAAyE;AACzE,MAAA,iEAGmC;AAMtB,QAAA,qBAAqB,GAAG,uBAAuB,CAAC;AAE7D,SAAgB,uBAAuB,CAAC,GAAW;;IACjD,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACnD,IAAI,CAAC,WAAW,EAAE;QAChB,GAAG,GAAG,CAAA,QAAA,EAAW,GAAG,EAAE,CAAC;KACxB;IACD,MAAM,MAAM,GAAG,IAAI,MAAA,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B,IAAI,MAAM,CAAC,QAAQ,KAAK,OAAO,EAAE;QAC/B,OAAO,GAAG,CAAC;KACZ;IACD,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,KAAK,GAAG,EAAE;QAC9C,MAAA,IAAI,CAAC,IAAI,CACP,uFAAuF,CACxF,CAAC;KACH;IACD,IAAI,MAAM,CAAC,QAAQ,KAAK,EAAE,IAAI,CAAC,CAAA,CAAA,KAAA,MAAM,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,KAAK,CAAC,aAAa,CAAC,CAAA,EAAE;QACpE,MAAA,IAAI,CAAC,IAAI,CAAC,mDAAmD,CAAC,CAAC;KAChE;IACD,OAAO,MAAM,CAAC,IAAI,CAAC;AACrB,CAAC;AAlBD,QAAA,uBAAA,GAAA,wBAkBC;AAED,SAAgB,oBAAoB,CAClC,WAA2C,EAC3C,QAAgB;IAEhB,IAAI,QAAiB,CAAC;IAEtB,IAAI,WAAW,EAAE;QACf,OAAO,WAAW,CAAC;KACpB,MAAM,IAAI,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;QAC1C,QAAQ,GAAG,KAAK,CAAC;KAClB,MAAM,IACL,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,IAC9B,QAAQ,KAAK,QAAA,qBAAqB,EAClC;QACA,QAAQ,GAAG,IAAI,CAAC;KACjB,MAAM;QACL,QAAQ,GAAG,kBAAkB,EAAE,CAAC;KACjC;IAED,IAAI,QAAQ,EAAE;QACZ,OAAO,CAAA,GAAA,0BAAA,yBAAyB,GAAE,CAAC;KACpC,MAAM;QACL,OAAO,6BAA6B,EAAE,CAAC;KACxC;AACH,CAAC;AAxBD,QAAA,oBAAA,GAAA,qBAwBC;AAED,SAAS,kBAAkB;IACzB,MAAM,eAAe,GACnB,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,kCAAkC,IAC3C,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,2BAA2B,CAAC;IAEvC,IAAI,eAAe,EAAE;QACnB,OAAO,eAAe,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;KACjD,MAAM;QACL,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AAED;;GAEG,CACH,SAAgB,6BAA6B;IAC3C,MAAM,QAAQ,GAAG,gBAAgB,EAAE,CAAC;IACpC,MAAM,UAAU,GAAG,kBAAkB,EAAE,CAAC;IACxC,MAAM,SAAS,GAAG,iBAAiB,EAAE,CAAC;IAEtC,OAAO,CAAA,GAAA,0BAAA,oBAAoB,EAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AAC/D,CAAC;AAND,QAAA,6BAAA,GAAA,8BAMC;AAED,SAAS,gBAAgB;IACvB,MAAM,eAAe,GACnB,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,qCAAqC,IAC9C,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,8BAA8B,CAAC;IAE1C,IAAI,eAAe,EAAE;QACnB,IAAI;YACF,OAAO,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,eAAe,CAAC,CAAC,CAAC;SACtE,CAAC,OAAA,IAAM;YACN,MAAA,IAAI,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;YAClD,OAAO,SAAS,CAAC;SAClB;KACF,MAAM;QACL,OAAO,SAAS,CAAC;KAClB;AACH,CAAC;AAED,SAAS,kBAAkB;IACzB,MAAM,SAAS,GACb,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,oCAAoC,IAC7C,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,6BAA6B,CAAC;IAEzC,IAAI,SAAS,EAAE;QACb,IAAI;YACF,OAAO,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;SAChE,CAAC,OAAA,IAAM;YACN,MAAA,IAAI,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;YAChE,OAAO,SAAS,CAAC;SAClB;KACF,MAAM;QACL,OAAO,SAAS,CAAC;KAClB;AACH,CAAC;AAED,SAAS,iBAAiB;IACxB,MAAM,WAAW,GACf,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,4CAA4C,IACrD,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,qCAAqC,CAAC;IAEjD,IAAI,WAAW,EAAE;QACf,IAAI;YACF,OAAO,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC;SAClE,CAAC,OAAA,IAAM;YACN,MAAA,IAAI,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;YAC1D,OAAO,SAAS,CAAC;SAClB;KACF,MAAM;QACL,OAAO,SAAS,CAAC;KAClB;AACH,CAAC;AAED,SAAgB,oBAAoB,CAClC,WAA6C;IAE7C,IAAI,WAAW,IAAI,IAAI,EAAE;QACvB,OAAO,WAAW,CAAC;KACpB;IAED,MAAM,cAAc,GAClB,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,qCAAqC,IAC9C,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,8BAA8B,CAAC;IAE1C,IAAI,cAAc,KAAK,MAAM,EAAE;QAC7B,OAAO,qBAAA,oBAAoB,CAAC,IAAI,CAAC;KAClC,MAAM,IAAI,cAAc,KAAK,MAAM,EAAE;QACpC,OAAO,qBAAA,oBAAoB,CAAC,IAAI,CAAC;KAClC;IAED,MAAA,IAAI,CAAC,IAAI,CACP,uBAAuB,GAAG,cAAc,GAAG,2BAA2B,CACvE,CAAC;IACF,OAAO,qBAAA,oBAAoB,CAAC,IAAI,CAAC;AACnC,CAAC;AArBD,QAAA,oBAAA,GAAA,qBAqBC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6424, "column": 0}, "map": {"version":3,"file":"OTLPGRPCExporterNodeBase.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-grpc-exporter-base/src/OTLPGRPCExporterNodeBase.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { GRPCQueueItem, OTLPGRPCExporterConfigNode } from './types';\nimport { baggageUtils, getEnv } from '@opentelemetry/core';\nimport {\n  CompressionAlgorithm,\n  OTLPExporterBase,\n  OTLPExporterError,\n} from '@opentelemetry/otlp-exporter-base';\nimport {\n  createEmptyMetadata,\n  GrpcExporterTransport,\n} from './grpc-exporter-transport';\nimport { configureCompression, configureCredentials } from './util';\nimport { ISerializer } from '@opentelemetry/otlp-transformer';\nimport { IExporterTransport } from './exporter-transport';\n\n/**\n * OTLP Exporter abstract base class\n */\nexport abstract class OTLPGRPCExporterNodeBase<\n  ExportItem,\n  ServiceResponse,\n> extends OTLPExporterBase<OTLPGRPCExporterConfigNode, ExportItem> {\n  grpcQueue: GRPCQueueItem<ExportItem>[] = [];\n  compression: CompressionAlgorithm;\n  private _transport: IExporterTransport;\n  private _serializer: ISerializer<ExportItem[], ServiceResponse>;\n\n  constructor(\n    config: OTLPGRPCExporterConfigNode = {},\n    signalSpecificMetadata: Record<string, string>,\n    grpcName: string,\n    grpcPath: string,\n    serializer: ISerializer<ExportItem[], ServiceResponse>\n  ) {\n    super(config);\n    this._serializer = serializer;\n    if (config.headers) {\n      diag.warn('Headers cannot be set when using grpc');\n    }\n    const nonSignalSpecificMetadata = baggageUtils.parseKeyPairsIntoRecord(\n      getEnv().OTEL_EXPORTER_OTLP_HEADERS\n    );\n    const rawMetadata = Object.assign(\n      {},\n      nonSignalSpecificMetadata,\n      signalSpecificMetadata\n    );\n\n    let credentialProvider = () => {\n      return configureCredentials(undefined, this.getUrlFromConfig(config));\n    };\n\n    if (config.credentials != null) {\n      const credentials = config.credentials;\n      credentialProvider = () => {\n        return credentials;\n      };\n    }\n\n    // Ensure we don't modify the original.\n    const configMetadata = config.metadata?.clone();\n    const metadataProvider = () => {\n      const metadata = configMetadata ?? createEmptyMetadata();\n      for (const [key, value] of Object.entries(rawMetadata)) {\n        // only override with env var data if the key has no values.\n        // not using Metadata.merge() as it will keep both values.\n        if (metadata.get(key).length < 1) {\n          metadata.set(key, value);\n        }\n      }\n\n      return metadata;\n    };\n\n    this.compression = configureCompression(config.compression);\n    this._transport = new GrpcExporterTransport({\n      address: this.getDefaultUrl(config),\n      compression: this.compression,\n      credentials: credentialProvider,\n      grpcName: grpcName,\n      grpcPath: grpcPath,\n      metadata: metadataProvider,\n      timeoutMillis: this.timeoutMillis,\n    });\n  }\n\n  onInit() {\n    // Intentionally left empty; nothing to do.\n  }\n\n  override onShutdown() {\n    this._transport.shutdown();\n  }\n\n  send(\n    objects: ExportItem[],\n    onSuccess: () => void,\n    onError: (error: OTLPExporterError) => void\n  ): void {\n    if (this._shutdownOnce.isCalled) {\n      diag.debug('Shutdown already started. Cannot send objects');\n      return;\n    }\n\n    const data = this._serializer.serializeRequest(objects);\n\n    if (data == null) {\n      onError(new Error('Could not serialize message'));\n      return;\n    }\n\n    const promise = this._transport.send(data).then(response => {\n      if (response.status === 'success') {\n        onSuccess();\n        return;\n      }\n      if (response.status === 'failure' && response.error) {\n        onError(response.error);\n      }\n      onError(new OTLPExporterError('Export failed with unknown error'));\n    }, onError);\n\n    this._sendingPromises.push(promise);\n    const popPromise = () => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    };\n    promise.then(popPromise, popPromise);\n  }\n\n  abstract getUrlFromConfig(config: OTLPGRPCExporterConfigNode): string;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6534, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/otlp-grpc-exporter-base/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { OTLPGRPCExporterNodeBase } from './OTLPGRPCExporterNodeBase';\nexport { OTLPGRPCExporterConfigNode } from './types';\nexport { DEFAULT_COLLECTOR_URL, validateAndNormalizeUrl } from './util';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,mEAAsE;AAA7D,OAAA,cAAA,CAAA,SAAA,4BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,2BAAA,wBAAwB;IAAA;AAAA,GAAA;AAEjC,IAAA,2BAAwE;AAA/D,OAAA,cAAA,CAAA,SAAA,yBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,qBAAqB;IAAA;AAAA,GAAA;AAAE,OAAA,cAAA,CAAA,SAAA,2BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,uBAAuB;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6578, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-grpc/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.52.1';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,OAAO,GAAG,QAAQ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6604, "column": 0}, "map": {"version":3,"file":"OTLPTraceExporter.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-grpc/src/OTLPTraceExporter.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReadableSpan, SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { baggageUtils, getEnv } from '@opentelemetry/core';\nimport {\n  OTLPGRPCExporterConfigNode,\n  OTLPGRPCExporterNodeBase,\n  validateAndNormalizeUrl,\n  DEFAULT_COLLECTOR_URL,\n} from '@opentelemetry/otlp-grpc-exporter-base';\nimport {\n  IExportTraceServiceResponse,\n  ProtobufTraceSerializer,\n} from '@opentelemetry/otlp-transformer';\nimport { VERSION } from './version';\n\nconst USER_AGENT = {\n  'User-Agent': `OTel-OTLP-Exporter-JavaScript/${VERSION}`,\n};\n\n/**\n * OTLP Trace Exporter for Node\n */\nexport class OTLPTraceExporter\n  extends OTLPGRPCExporterNodeBase<ReadableSpan, IExportTraceServiceResponse>\n  implements SpanExporter\n{\n  constructor(config: OTLPGRPCExporterConfigNode = {}) {\n    const signalSpecificMetadata = {\n      ...USER_AGENT,\n      ...baggageUtils.parseKeyPairsIntoRecord(\n        getEnv().OTEL_EXPORTER_OTLP_TRACES_HEADERS\n      ),\n    };\n    super(\n      config,\n      signalSpecificMetadata,\n      'TraceExportService',\n      '/opentelemetry.proto.collector.trace.v1.TraceService/Export',\n      ProtobufTraceSerializer\n    );\n  }\n\n  getDefaultUrl(config: OTLPGRPCExporterConfigNode) {\n    return validateAndNormalizeUrl(this.getUrlFromConfig(config));\n  }\n\n  getUrlFromConfig(config: OTLPGRPCExporterConfigNode): string {\n    if (typeof config.url === 'string') {\n      return config.url;\n    }\n\n    return (\n      getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT ||\n      getEnv().OTEL_EXPORTER_OTLP_ENDPOINT ||\n      DEFAULT_COLLECTOR_URL\n    );\n  }\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAGH,MAAA,wCAA2D;AAC3D,MAAA,8EAKgD;AAChD,MAAA,gEAGyC;AACzC,MAAA,iCAAoC;AAEpC,MAAM,UAAU,GAAG;IACjB,YAAY,EAAE,CAAA,8BAAA,EAAiC,UAAA,OAAO,EAAE;CACzD,CAAC;AAEF;;GAEG,CACH,MAAa,iBACX,SAAQ,0BAAA,wBAAmE;IAG3E,YAAY,SAAqC,CAAA,CAAE,CAAA;QACjD,MAAM,sBAAsB,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACvB,UAAU,GACV,OAAA,YAAY,CAAC,uBAAuB,CACrC,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,iCAAiC,CAC3C,CACF,CAAC;QACF,KAAK,CACH,MAAM,EACN,sBAAsB,EACtB,oBAAoB,EACpB,6DAA6D,EAC7D,mBAAA,uBAAuB,CACxB,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,MAAkC,EAAA;QAC9C,OAAO,CAAA,GAAA,0BAAA,uBAAuB,EAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,gBAAgB,CAAC,MAAkC,EAAA;QACjD,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,EAAE;YAClC,OAAO,MAAM,CAAC,GAAG,CAAC;SACnB;QAED,OAAO,AACL,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,kCAAkC,IAC3C,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,2BAA2B,IACpC,0BAAA,qBAAqB,CACtB,CAAC;IACJ,CAAC;CACF;AAnCD,QAAA,iBAAA,GAAA,kBAmCC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6653, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-trace-otlp-grpc/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './OTLPTraceExporter';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,gKAAA,SAAoC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6693, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-zipkin/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './platform';\nexport { ExporterConfig } from './types';\nexport * from './zipkin';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6725, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-zipkin/src/platform/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './node';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6756, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-zipkin/src/platform/node/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './util';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6787, "column": 0}, "map": {"version":3,"file":"util.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-zipkin/src/platform/node/util.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { ExportResult, ExportResultCode } from '@opentelemetry/core';\nimport * as http from 'http';\nimport * as https from 'https';\nimport * as url from 'url';\nimport * as zipkinTypes from '../../types';\n\n/**\n * Prepares send function that will send spans to the remote Zipkin service.\n * @param urlStr - url to send spans\n * @param headers - headers\n * send\n */\nexport function prepareSend(\n  urlStr: string,\n  headers?: Record<string, string>\n): zipkinTypes.SendFn {\n  const urlOpts = url.parse(urlStr);\n\n  const reqOpts: http.RequestOptions = Object.assign(\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...headers,\n      },\n    },\n    urlOpts\n  );\n\n  /**\n   * Send spans to the remote Zipkin service.\n   */\n  return function send(\n    zipkinSpans: zipkinTypes.Span[],\n    done: (result: ExportResult) => void\n  ) {\n    if (zipkinSpans.length === 0) {\n      diag.debug('Zipkin send with empty spans');\n      return done({ code: ExportResultCode.SUCCESS });\n    }\n\n    const { request } = reqOpts.protocol === 'http:' ? http : https;\n    const req = request(reqOpts, (res: http.IncomingMessage) => {\n      let rawData = '';\n      res.on('data', chunk => {\n        rawData += chunk;\n      });\n      res.on('end', () => {\n        const statusCode = res.statusCode || 0;\n        diag.debug(\n          `Zipkin response status code: ${statusCode}, body: ${rawData}`\n        );\n\n        // Consider 2xx and 3xx as success.\n        if (statusCode < 400) {\n          return done({ code: ExportResultCode.SUCCESS });\n          // Consider 4xx as failed non-retryable.\n        } else {\n          return done({\n            code: ExportResultCode.FAILED,\n            error: new Error(\n              `Got unexpected status code from zipkin: ${statusCode}`\n            ),\n          });\n        }\n      });\n    });\n\n    req.on('error', error => {\n      return done({\n        code: ExportResultCode.FAILED,\n        error,\n      });\n    });\n\n    // Issue request to remote service\n    const payload = JSON.stringify(zipkinSpans);\n    diag.debug(`Zipkin request payload: ${payload}`);\n    req.write(payload, 'utf8');\n    req.end();\n  };\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAC1C,OAAO,EAAgB,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACrE,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAC7B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,GAAG,MAAM,KAAK,CAAC;;;;;;;;;;;;;;;;AASrB,SAAU,WAAW,CACzB,MAAc,EACd,OAAgC;IAEhC,IAAM,OAAO,GAAG,GAAG,CAAC,wGAAA,AAAK,EAAC,MAAM,CAAC,CAAC;IAElC,IAAM,OAAO,GAAwB,MAAM,CAAC,MAAM,CAChD;QACE,MAAM,EAAE,MAAM;QACd,OAAO,EAAA,SAAA;YACL,cAAc,EAAE,kBAAkB;QAAA,GAC/B,OAAO,CACX;KACF,EACD,OAAO,CACR,CAAC;IAEF;;OAEG,CACH,OAAO,SAAS,IAAI,CAClB,WAA+B,EAC/B,IAAoC;QAEpC,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,6IAAI,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;gBAAE,IAAI,4KAAE,mBAAgB,CAAC,OAAO;YAAA,CAAE,CAAC,CAAC;SACjD;QAEO,IAAA,OAAO,GAAK,CAAA,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,8FAAC,mGAAK,CAAA,CAAA,OAAhD,CAAiD;QAChE,IAAM,GAAG,GAAG,OAAO,CAAC,OAAO,EAAE,SAAC,GAAyB;YACrD,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,SAAA,KAAK;gBAClB,OAAO,IAAI,KAAK,CAAC;YACnB,CAAC,CAAC,CAAC;YACH,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE;gBACZ,IAAM,UAAU,GAAG,GAAG,CAAC,UAAU,IAAI,CAAC,CAAC;sJACvC,OAAI,CAAC,KAAK,CACR,kCAAgC,UAAU,GAAA,aAAW,OAAS,CAC/D,CAAC;gBAEF,mCAAmC;gBACnC,IAAI,UAAU,GAAG,GAAG,EAAE;oBACpB,OAAO,IAAI,CAAC;wBAAE,IAAI,4KAAE,mBAAgB,CAAC,OAAO;oBAAA,CAAE,CAAC,CAAC;gBAChD,wCAAwC;iBACzC,MAAM;oBACL,OAAO,IAAI,CAAC;wBACV,IAAI,4KAAE,mBAAgB,CAAC,MAAM;wBAC7B,KAAK,EAAE,IAAI,KAAK,CACd,6CAA2C,UAAY,CACxD;qBACF,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,SAAA,KAAK;YACnB,OAAO,IAAI,CAAC;gBACV,IAAI,4KAAE,mBAAgB,CAAC,MAAM;gBAC7B,KAAK,EAAA,KAAA;aACN,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,kCAAkC;QAClC,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;8IAC5C,OAAI,CAAC,KAAK,CAAC,6BAA2B,OAAS,CAAC,CAAC;QACjD,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC3B,GAAG,CAAC,GAAG,EAAE,CAAC;IACZ,CAAC,CAAC;AACJ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6927, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-zipkin/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExportResult } from '@opentelemetry/core';\n\n/**\n * Exporter config\n */\nexport interface ExporterConfig {\n  headers?: Record<string, string>;\n  serviceName?: string;\n  url?: string;\n  // Optional mapping overrides for OpenTelemetry status code and description.\n  statusCodeTagName?: string;\n  statusDescriptionTagName?: string;\n  getExportRequestHeaders?: () => Record<string, string> | undefined;\n}\n\n/**\n * Zipkin Span\n * @see https://github.com/openzipkin/zipkin-api/blob/master/zipkin2-api.yaml\n */\nexport interface Span {\n  /**\n   * Trace identifier, set on all spans within it.\n   */\n  traceId: string;\n  /**\n   * The logical operation this span represents in lowercase (e.g. rpc method).\n   * Leave absent if unknown.\n   */\n  name: string;\n  /**\n   * The parent span ID or absent if this the root span in a trace.\n   */\n  parentId?: string;\n  /**\n   * Unique 64bit identifier for this operation within the trace.\n   */\n  id: string;\n  /**\n   * When present, kind clarifies timestamp, duration and remoteEndpoint.\n   * When absent, the span is local or incomplete.\n   */\n  kind?: SpanKind;\n  /**\n   * Epoch microseconds of the start of this span, possibly absent if\n   * incomplete.\n   */\n  timestamp: number;\n  /**\n   * Duration in microseconds of the critical path, if known.\n   */\n  duration: number;\n  /**\n   * True is a request to store this span even if it overrides sampling policy.\n   * This is true when the `X-B3-Flags` header has a value of 1.\n   */\n  debug?: boolean;\n  /**\n   * True if we are contributing to a span started by another tracer (ex on a\n   * different host).\n   */\n  shared?: boolean;\n  /**\n   * The host that recorded this span, primarily for query by service name.\n   */\n  localEndpoint: Endpoint;\n  /**\n   * Associates events that explain latency with the time they happened.\n   */\n  annotations?: Annotation[];\n  /**\n   * Tags give your span context for search, viewing and analysis.\n   */\n  tags: Tags;\n  /**\n   * TODO: `remoteEndpoint`, do we need to support it?\n   * When an RPC (or messaging) span, indicates the other side of the\n   * connection.\n   */\n}\n\n/**\n * Associates an event that explains latency with a timestamp.\n * Unlike log statements, annotations are often codes. Ex. \"ws\" for WireSend\n * Zipkin v1 core annotations such as \"cs\" and \"sr\" have been replaced with\n * Span.Kind, which interprets timestamp and duration.\n */\nexport interface Annotation {\n  /**\n   * Epoch microseconds of this event.\n   * For example, 1502787600000000 corresponds to 2017-08-15 09:00 UTC\n   */\n  timestamp: number;\n  /**\n   * Usually a short tag indicating an event, like \"error\"\n   * While possible to add larger data, such as garbage collection details, low\n   * cardinality event names both keep the size of spans down and also are easy\n   * to search against.\n   */\n  value: string;\n}\n\n/**\n * The network context of a node in the service graph.\n */\nexport interface Endpoint {\n  /**\n   * Lower-case label of this node in the service graph, such as \"favstar\".\n   * Leave absent if unknown.\n   * This is a primary label for trace lookup and aggregation, so it should be\n   * intuitive and consistent. Many use a name from service discovery.\n   */\n  serviceName?: string;\n  /**\n   * The text representation of the primary IPv4 address associated with this\n   * connection. Ex. 192.168.99.100 Absent if unknown.\n   */\n  ipv4?: string;\n  /**\n   * The text representation of the primary IPv6 address associated with a\n   * connection. Ex. 2001:db8::c001 Absent if unknown.\n   * Prefer using the ipv4 field for mapped addresses.\n   */\n  port?: number;\n}\n\n/**\n * Adds context to a span, for search, viewing and analysis.\n * For example, a key \"your_app.version\" would let you lookup traces by version.\n * A tag \"sql.query\" isn't searchable, but it can help in debugging when viewing\n * a trace.\n */\nexport interface Tags {\n  [tagKey: string]: unknown;\n}\n\n/**\n * When present, kind clarifies timestamp, duration and remoteEndpoint. When\n * absent, the span is local or incomplete. Unlike client and server, there\n * is no direct critical path latency relationship between producer and\n * consumer spans.\n * `CLIENT`\n *   timestamp is the moment a request was sent to the server.\n *   duration is the delay until a response or an error was received.\n *   remoteEndpoint is the server.\n * `SERVER`\n *   timestamp is the moment a client request was received.\n *   duration is the delay until a response was sent or an error.\n *   remoteEndpoint is the client.\n * `PRODUCER`\n *   timestamp is the moment a message was sent to a destination.\n *   duration is the delay sending the message, such as batching.\n *   remoteEndpoint is the broker.\n * `CONSUMER`\n *   timestamp is the moment a message was received from an origin.\n *   duration is the delay consuming the message, such as from backlog.\n *   remoteEndpoint - Represents the broker. Leave serviceName absent if unknown.\n */\nexport enum SpanKind {\n  CLIENT = 'CLIENT',\n  SERVER = 'SERVER',\n  CONSUMER = 'CONSUMER',\n  PRODUCER = 'PRODUCER',\n}\n\n/**\n * interface for function that will send zipkin spans\n */\nexport type SendFunction = (\n  zipkinSpans: Span[],\n  done: (result: ExportResult) => void\n) => void;\n\nexport type GetHeaders = () => Record<string, string> | undefined;\n\nexport type SendFn = (\n  zipkinSpans: Span[],\n  done: (result: ExportResult) => void\n) => void;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAyIH;;;;;;;;;;;;;;;;;;;;;GAqBG;;;AACH,IAAY,QAKX;AALD,CAAA,SAAY,QAAQ;IAClB,QAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,QAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,QAAA,CAAA,WAAA,GAAA,UAAqB,CAAA;IACrB,QAAA,CAAA,WAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EALW,QAAQ,IAAA,CAAR,QAAQ,GAAA,CAAA,CAAA,GAKnB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6978, "column": 0}, "map": {"version":3,"file":"transform.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-zipkin/src/transform.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { ReadableSpan, TimedEvent } from '@opentelemetry/sdk-trace-base';\nimport { hrTimeToMicroseconds } from '@opentelemetry/core';\nimport * as zipkinTypes from './types';\n\nconst ZIPKIN_SPAN_KIND_MAPPING = {\n  [api.SpanKind.CLIENT]: zipkinTypes.SpanKind.CLIENT,\n  [api.SpanKind.SERVER]: zipkinTypes.SpanKind.SERVER,\n  [api.SpanKind.CONSUMER]: zipkinTypes.SpanKind.CONSUMER,\n  [api.SpanKind.PRODUCER]: zipkinTypes.SpanKind.PRODUCER,\n  // When absent, the span is local.\n  [api.SpanKind.INTERNAL]: undefined,\n};\n\nexport const defaultStatusCodeTagName = 'otel.status_code';\nexport const defaultStatusErrorTagName = 'error';\n\n/**\n * Translate OpenTelemetry ReadableSpan to ZipkinSpan format\n * @param span Span to be translated\n */\nexport function toZipkinSpan(\n  span: ReadableSpan,\n  serviceName: string,\n  statusCodeTagName: string,\n  statusErrorTagName: string\n): zipkinTypes.Span {\n  const zipkinSpan: zipkinTypes.Span = {\n    traceId: span.spanContext().traceId,\n    parentId: span.parentSpanId,\n    name: span.name,\n    id: span.spanContext().spanId,\n    kind: ZIPKIN_SPAN_KIND_MAPPING[span.kind],\n    timestamp: hrTimeToMicroseconds(span.startTime),\n    duration: Math.round(hrTimeToMicroseconds(span.duration)),\n    localEndpoint: { serviceName },\n    tags: _toZipkinTags(span, statusCodeTagName, statusErrorTagName),\n    annotations: span.events.length\n      ? _toZipkinAnnotations(span.events)\n      : undefined,\n  };\n\n  return zipkinSpan;\n}\n\n/** Converts OpenTelemetry Span properties to Zipkin Tags format. */\nexport function _toZipkinTags(\n  {\n    attributes,\n    resource,\n    status,\n    droppedAttributesCount,\n    droppedEventsCount,\n    droppedLinksCount,\n  }: ReadableSpan,\n  statusCodeTagName: string,\n  statusErrorTagName: string\n): zipkinTypes.Tags {\n  const tags: { [key: string]: string } = {};\n  for (const key of Object.keys(attributes)) {\n    tags[key] = String(attributes[key]);\n  }\n  if (status.code !== api.SpanStatusCode.UNSET) {\n    tags[statusCodeTagName] = String(api.SpanStatusCode[status.code]);\n  }\n  if (status.code === api.SpanStatusCode.ERROR && status.message) {\n    tags[statusErrorTagName] = status.message;\n  }\n  /* Add droppedAttributesCount as a tag */\n  if (droppedAttributesCount) {\n    tags['otel.dropped_attributes_count'] = String(droppedAttributesCount);\n  }\n\n  /* Add droppedEventsCount as a tag */\n  if (droppedEventsCount) {\n    tags['otel.dropped_events_count'] = String(droppedEventsCount);\n  }\n\n  /* Add droppedLinksCount as a tag */\n  if (droppedLinksCount) {\n    tags['otel.dropped_links_count'] = String(droppedLinksCount);\n  }\n\n  Object.keys(resource.attributes).forEach(\n    name => (tags[name] = String(resource.attributes[name]))\n  );\n\n  return tags;\n}\n\n/**\n * Converts OpenTelemetry Events to Zipkin Annotations format.\n */\nexport function _toZipkinAnnotations(\n  events: TimedEvent[]\n): zipkinTypes.Annotation[] {\n  return events.map(event => ({\n    timestamp: Math.round(hrTimeToMicroseconds(event.time)),\n    value: event.name,\n  }));\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7095, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-zipkin/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { GetHeaders } from './types';\n\nexport function prepareGetHeaders(\n  getExportRequestHeaders: GetHeaders\n): () => Record<string, string> | undefined {\n  return function () {\n    return getExportRequestHeaders();\n  };\n}\n"],"names":[],"mappings":";;;AAiBM,SAAU,iBAAiB,CAC/B,uBAAmC;IAEnC,OAAO;QACL,OAAO,uBAAuB,EAAE,CAAC;IACnC,CAAC,CAAC;AACJ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7109, "column": 0}, "map": {"version":3,"file":"zipkin.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-zipkin/src/zipkin.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { ExportResult, ExportResultCode, getEnv } from '@opentelemetry/core';\nimport { SpanExporter, ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport { prepareSend } from './platform/index';\nimport * as zipkinTypes from './types';\nimport {\n  toZipkinSpan,\n  defaultStatusCodeTagName,\n  defaultStatusErrorTagName,\n} from './transform';\nimport { SEMRESATTRS_SERVICE_NAME } from '@opentelemetry/semantic-conventions';\nimport { prepareGetHeaders } from './utils';\n\n/**\n * Zipkin Exporter\n */\nexport class ZipkinExporter implements SpanExporter {\n  private readonly DEFAULT_SERVICE_NAME = 'OpenTelemetry Service';\n  private readonly _statusCodeTagName: string;\n  private readonly _statusDescriptionTagName: string;\n  private _urlStr: string;\n  private _send: zipkinTypes.SendFunction;\n  private _getHeaders: zipkinTypes.GetHeaders | undefined;\n  private _serviceName?: string;\n  private _isShutdown: boolean;\n  private _sendingPromises: Promise<unknown>[] = [];\n\n  constructor(config: zipkinTypes.ExporterConfig = {}) {\n    this._urlStr = config.url || getEnv().OTEL_EXPORTER_ZIPKIN_ENDPOINT;\n    this._send = prepareSend(this._urlStr, config.headers);\n    this._serviceName = config.serviceName;\n    this._statusCodeTagName =\n      config.statusCodeTagName || defaultStatusCodeTagName;\n    this._statusDescriptionTagName =\n      config.statusDescriptionTagName || defaultStatusErrorTagName;\n    this._isShutdown = false;\n    if (typeof config.getExportRequestHeaders === 'function') {\n      this._getHeaders = prepareGetHeaders(config.getExportRequestHeaders);\n    } else {\n      // noop\n      this._beforeSend = function () {};\n    }\n  }\n\n  /**\n   * Export spans.\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    const serviceName = String(\n      this._serviceName ||\n        spans[0].resource.attributes[SEMRESATTRS_SERVICE_NAME] ||\n        this.DEFAULT_SERVICE_NAME\n    );\n\n    diag.debug('Zipkin exporter export');\n    if (this._isShutdown) {\n      setTimeout(() =>\n        resultCallback({\n          code: ExportResultCode.FAILED,\n          error: new Error('Exporter has been shutdown'),\n        })\n      );\n      return;\n    }\n    const promise = new Promise<void>(resolve => {\n      this._sendSpans(spans, serviceName, result => {\n        resolve();\n        resultCallback(result);\n      });\n    });\n\n    this._sendingPromises.push(promise);\n    const popPromise = () => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    };\n    promise.then(popPromise, popPromise);\n  }\n\n  /**\n   * Shutdown exporter. Noop operation in this exporter.\n   */\n  shutdown(): Promise<void> {\n    diag.debug('Zipkin exporter shutdown');\n    this._isShutdown = true;\n    return this.forceFlush();\n  }\n\n  /**\n   * Exports any pending spans in exporter\n   */\n  forceFlush(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      Promise.all(this._sendingPromises).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * if user defines getExportRequestHeaders in config then this will be called\n   * every time before send, otherwise it will be replaced with noop in\n   * constructor\n   * @default noop\n   */\n  private _beforeSend() {\n    if (this._getHeaders) {\n      this._send = prepareSend(this._urlStr, this._getHeaders());\n    }\n  }\n\n  /**\n   * Transform spans and sends to Zipkin service.\n   */\n  private _sendSpans(\n    spans: ReadableSpan[],\n    serviceName: string,\n    done?: (result: ExportResult) => void\n  ) {\n    const zipkinSpans = spans.map(span =>\n      toZipkinSpan(\n        span,\n        String(\n          span.attributes[SEMRESATTRS_SERVICE_NAME] ||\n            span.resource.attributes[SEMRESATTRS_SERVICE_NAME] ||\n            serviceName\n        ),\n        this._statusCodeTagName,\n        this._statusDescriptionTagName\n      )\n    );\n    this._beforeSend();\n    return this._send(zipkinSpans, (result: ExportResult) => {\n      if (done) {\n        return done(result);\n      }\n    });\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAC1C,OAAO,EAAgB,gBAAgB,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;;AAE7E,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAE/C,OAAO,EACL,YAAY,EACZ,wBAAwB,EACxB,yBAAyB,GAC1B,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,wBAAwB,EAAE,MAAM,qCAAqC,CAAC;AAC/E,OAAO,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAC;;;;;;;AAE5C;;GAEG,CACH,IAAA,iBAAA;IAWE,SAAA,eAAY,MAAuC;QAAvC,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAA,CAAuC;QAAA;QAVlC,IAAA,CAAA,oBAAoB,GAAG,uBAAuB,CAAC;QAQxD,IAAA,CAAA,gBAAgB,GAAuB,EAAE,CAAC;QAGhD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,KAAI,yMAAA,AAAM,EAAE,EAAC,6BAA6B,CAAC;QACpE,IAAI,CAAC,KAAK,2MAAG,cAAA,AAAW,EAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,kBAAkB,GACrB,MAAM,CAAC,iBAAiB,yLAAI,2BAAwB,CAAC;QACvD,IAAI,CAAC,yBAAyB,GAC5B,MAAM,CAAC,wBAAwB,yLAAI,4BAAyB,CAAC;QAC/D,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,OAAO,MAAM,CAAC,uBAAuB,KAAK,UAAU,EAAE;YACxD,IAAI,CAAC,WAAW,wLAAG,oBAAA,AAAiB,EAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;SACtE,MAAM;YACL,OAAO;YACP,IAAI,CAAC,WAAW,GAAG,YAAa,CAAC,CAAC;SACnC;IACH,CAAC;IAED;;OAEG,CACH,eAAA,SAAA,CAAA,MAAM,GAAN,SACE,KAAqB,EACrB,cAA8C;QAFhD,IAAA,QAAA,IAAA,CAiCC;QA7BC,IAAM,WAAW,GAAG,MAAM,CACxB,IAAI,CAAC,YAAY,IACf,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,2SAAwB,CAAC,IACtD,IAAI,CAAC,oBAAoB,CAC5B,CAAC;8IAEF,OAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,UAAU,CAAC;gBACT,OAAA,cAAc,CAAC;oBACb,IAAI,EAAE,6LAAgB,CAAC,MAAM;oBAC7B,KAAK,EAAE,IAAI,KAAK,CAAC,4BAA4B,CAAC;iBAC/C,CAAC;YAHF,CAGE,CACH,CAAC;YACF,OAAO;SACR;QACD,IAAM,OAAO,GAAG,IAAI,OAAO,CAAO,SAAA,OAAO;YACvC,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,EAAE,SAAA,MAAM;gBACxC,OAAO,EAAE,CAAC;gBACV,cAAc,CAAC,MAAM,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,IAAM,UAAU,GAAG;YACjB,IAAM,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACrD,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG,CACH,eAAA,SAAA,CAAA,QAAQ,GAAR;8IACE,OAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG,CACH,eAAA,SAAA,CAAA,UAAU,GAAV;QAAA,IAAA,QAAA,IAAA,CAMC;QALC,OAAO,IAAI,OAAO,CAAC,SAAC,OAAO,EAAE,MAAM;YACjC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC;gBACtC,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,MAAM,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG,CACK,eAAA,SAAA,CAAA,WAAW,GAAnB;QACE,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,KAAK,2MAAG,cAAA,AAAW,EAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;SAC5D;IACH,CAAC;IAED;;OAEG,CACK,eAAA,SAAA,CAAA,UAAU,GAAlB,SACE,KAAqB,EACrB,WAAmB,EACnB,IAAqC;QAHvC,IAAA,QAAA,IAAA,CAuBC;QAlBC,IAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,SAAA,IAAI;YAChC,gMAAA,eAAA,AAAY,EACV,IAAI,EACJ,MAAM,CACJ,IAAI,CAAC,UAAU,iRAAC,2BAAwB,CAAC,IACvC,IAAI,CAAC,QAAQ,CAAC,UAAU,iRAAC,2BAAwB,CAAC,IAClD,WAAW,CACd,EACD,KAAI,CAAC,kBAAkB,EACvB,KAAI,CAAC,yBAAyB,CAC/B;QATD,CASC,CACF,CAAC;QACF,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,SAAC,MAAoB;YAClD,IAAI,IAAI,EAAE;gBACR,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACH,OAAA,cAAC;AAAD,CAAC,AA7HD,IA6HC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7264, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-jaeger/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Options for Jaeger configuration\n */\nexport interface ExporterConfig {\n  tags?: Tag[];\n  host?: string; // default: 'localhost'\n  port?: number; // default: 6832\n  maxPacketSize?: number; // default: 65000\n  /** Time to wait for an onShutdown flush to finish before closing the sender */\n  flushTimeout?: number; // default: 2000\n  //The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces\n  //If set, will override host and port\n  endpoint?: string;\n  //Username to send as part of \"Basic\" authentication to the collector endpoint\n  username?: string;\n  //Password to send as part of \"Basic\" authentication to the collector endpoint\n  password?: string;\n}\n\n// Below require is needed as jaeger-client types does not expose the thrift,\n// udp_sender, util etc. modules.\n\n/* eslint-disable @typescript-eslint/no-var-requires */\nexport const UDPSender =\n  require('jaeger-client/dist/src/reporters/udp_sender').default;\nexport const Utils = require('jaeger-client/dist/src/util').default;\nexport const ThriftUtils = require('jaeger-client/dist/src/thrift').default;\n\nexport const HTTPSender =\n  require('jaeger-client/dist/src/reporters/http_sender').default;\n/* eslint-enable @typescript-eslint/no-var-requires */\n\nexport type TagValue = string | number | boolean;\n\nexport interface Tag {\n  key: string;\n  value: TagValue;\n}\n\nexport interface Log {\n  timestamp: number;\n  fields: Tag[];\n}\n\nexport type SenderCallback = (numSpans: number, err?: string) => void;\n\nexport interface ThriftProcess {\n  serviceName: string;\n  tags: ThriftTag[];\n}\n\nexport interface ThriftTag {\n  key: string;\n  vType: string;\n  vStr: string;\n  vDouble: number;\n  vBool: boolean;\n}\n\nexport interface ThriftLog {\n  timestamp: number;\n  fields: ThriftTag[];\n}\n\nexport enum ThriftReferenceType {\n  CHILD_OF = 'CHILD_OF',\n  FOLLOWS_FROM = 'FOLLOWS_FROM',\n}\n\nexport interface ThriftReference {\n  traceIdLow: Buffer;\n  traceIdHigh: Buffer;\n  spanId: Buffer;\n  refType: ThriftReferenceType;\n}\n\nexport interface ThriftSpan {\n  traceIdLow: Buffer;\n  traceIdHigh: Buffer;\n  spanId: Buffer;\n  parentSpanId: string | Buffer;\n  operationName: string;\n  references: ThriftReference[];\n  flags: number;\n  startTime: number; // milliseconds\n  duration: number; // milliseconds\n  tags: ThriftTag[];\n  logs: ThriftLog[];\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAqBH,6EAA6E;AAC7E,iCAAiC;AAEjC,qDAAA,EAAuD,CAC1C,QAAA,SAAS,GACpB,OAAO,CAAC,6CAA6C,CAAC,oEAAC,OAAO,CAAC;AACpD,QAAA,KAAK,GAAG,OAAO,CAAC,6BAA6B,CAAC,oEAAC,OAAO,CAAC;AACvD,QAAA,WAAW,GAAG,OAAO,CAAC,+BAA+B,CAAC,oEAAC,OAAO,CAAC;AAE/D,QAAA,UAAU,GACrB,OAAO,CAAC,8CAA8C,CAAC,oEAAC,OAAO,CAAC;AAmClE,IAAY,mBAGX;AAHD,CAAA,SAAY,mBAAmB;IAC7B,mBAAA,CAAA,WAAA,GAAA,UAAqB,CAAA;IACrB,mBAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAHW,mBAAmB,GAAnB,QAAA,mBAAmB,IAAA,CAAnB,QAAA,mBAAmB,GAAA,CAAA,CAAA,GAG9B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7299, "column": 0}, "map": {"version":3,"file":"transform.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-jaeger/src/transform.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Link, SpanStatusCode, SpanKind } from '@opentelemetry/api';\nimport { ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport {\n  hrTimeToMilliseconds,\n  hrTimeToMicroseconds,\n} from '@opentelemetry/core';\nimport {\n  ThriftSpan,\n  Tag,\n  Log,\n  ThriftTag,\n  ThriftLog,\n  ThriftUtils,\n  Utils,\n  ThriftReference,\n  TagValue,\n  ThriftReferenceType,\n} from './types';\n\nconst DEFAULT_FLAGS = 0x1;\n\n/**\n * Translate OpenTelemetry ReadableSpan to Jaeger Thrift Span\n * @param span Span to be translated\n */\nexport function spanToThrift(span: ReadableSpan): ThriftSpan {\n  const traceId = span.spanContext().traceId.padStart(32, '0');\n  const traceIdHigh = traceId.slice(0, 16);\n  const traceIdLow = traceId.slice(16);\n  const parentSpan = span.parentSpanContext?.spanId\n    ? Utils.encodeInt64(span.parentSpanContext.spanId)\n    : ThriftUtils.emptyBuffer;\n\n  const tags = Object.keys(span.attributes).map(\n    (name): Tag => ({ key: name, value: toTagValue(span.attributes[name]) })\n  );\n  if (span.status.code !== SpanStatusCode.UNSET) {\n    tags.push({\n      key: 'otel.status_code',\n      value: SpanStatusCode[span.status.code],\n    });\n    if (span.status.message) {\n      tags.push({ key: 'otel.status_description', value: span.status.message });\n    }\n  }\n  // Ensure that if SpanStatus.Code is ERROR, that we set the \"error\" tag on the\n  // Jaeger span.\n  if (span.status.code === SpanStatusCode.ERROR) {\n    tags.push({ key: 'error', value: true });\n  }\n\n  if (span.kind !== undefined && span.kind !== SpanKind.INTERNAL) {\n    tags.push({ key: 'span.kind', value: SpanKind[span.kind].toLowerCase() });\n  }\n  Object.keys(span.resource.attributes).forEach(name =>\n    tags.push({\n      key: name,\n      value: toTagValue(span.resource.attributes[name]),\n    })\n  );\n\n  if (span.instrumentationScope) {\n    tags.push({\n      key: 'otel.library.name',\n      value: toTagValue(span.instrumentationScope.name),\n    });\n    tags.push({\n      key: 'otel.library.version',\n      value: toTagValue(span.instrumentationScope.version),\n    });\n  }\n\n  /* Add droppedAttributesCount as a tag */\n  if (span.droppedAttributesCount) {\n    tags.push({\n      key: 'otel.dropped_attributes_count',\n      value: toTagValue(span.droppedAttributesCount),\n    });\n  }\n\n  /* Add droppedEventsCount as a tag */\n  if (span.droppedEventsCount) {\n    tags.push({\n      key: 'otel.dropped_events_count',\n      value: toTagValue(span.droppedEventsCount),\n    });\n  }\n\n  /* Add droppedLinksCount as a tag */\n  if (span.droppedLinksCount) {\n    tags.push({\n      key: 'otel.dropped_links_count',\n      value: toTagValue(span.droppedLinksCount),\n    });\n  }\n\n  const spanTags: ThriftTag[] = ThriftUtils.getThriftTags(tags);\n\n  const logs = span.events.map((event): Log => {\n    const fields: Tag[] = [{ key: 'event', value: event.name }];\n    const attrs = event.attributes;\n    if (attrs) {\n      Object.keys(attrs).forEach(attr =>\n        fields.push({ key: attr, value: toTagValue(attrs[attr]) })\n      );\n    }\n    if (event.droppedAttributesCount) {\n      fields.push({\n        key: 'otel.event.dropped_attributes_count',\n        value: event.droppedAttributesCount,\n      });\n    }\n    return { timestamp: hrTimeToMilliseconds(event.time), fields };\n  });\n  const spanLogs: ThriftLog[] = ThriftUtils.getThriftLogs(logs);\n\n  return {\n    traceIdLow: Utils.encodeInt64(traceIdLow),\n    traceIdHigh: Utils.encodeInt64(traceIdHigh),\n    spanId: Utils.encodeInt64(span.spanContext().spanId),\n    parentSpanId: parentSpan,\n    operationName: span.name,\n    references: spanLinksToThriftRefs(span.links),\n    flags: span.spanContext().traceFlags || DEFAULT_FLAGS,\n    startTime: Utils.encodeInt64(hrTimeToMicroseconds(span.startTime)),\n    duration: Utils.encodeInt64(hrTimeToMicroseconds(span.duration)),\n    tags: spanTags,\n    logs: spanLogs,\n  };\n}\n\n/** Translate OpenTelemetry {@link Link}s to Jaeger ThriftReference. */\nfunction spanLinksToThriftRefs(links: Link[]): ThriftReference[] {\n  return links.map((link): ThriftReference => {\n    const refType = ThriftReferenceType.FOLLOWS_FROM;\n    const traceId = link.context.traceId;\n    const traceIdHigh = Utils.encodeInt64(traceId.slice(0, 16));\n    const traceIdLow = Utils.encodeInt64(traceId.slice(16));\n    const spanId = Utils.encodeInt64(link.context.spanId);\n    return { traceIdLow, traceIdHigh, spanId, refType };\n  });\n}\n\n/** Translate OpenTelemetry attribute value to Jaeger TagValue. */\nfunction toTagValue(value: unknown): TagValue {\n  const valueType = typeof value;\n  if (valueType === 'boolean') {\n    return value as boolean;\n  } else if (valueType === 'number') {\n    return value as number;\n  }\n  return String(value);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7463, "column": 0}, "map": {"version":3,"file":"jaeger.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-jaeger/src/jaeger.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport {\n  BindOnceFuture,\n  ExportResult,\n  ExportResultCode,\n  getNumberFromEnv,\n  getStringFromEnv,\n} from '@opentelemetry/core';\nimport { ReadableSpan, SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { Socket } from 'dgram';\nimport { ATTR_SERVICE_NAME } from '@opentelemetry/semantic-conventions';\nimport { spanToThrift } from './transform';\nimport * as jaegerTypes from './types';\n\n/**\n * Format and sends span information to Jaeger Exporter.\n *\n * @deprecated Jaeger supports the OpenTelemetry protocol natively\n * (see https://www.jaegertracing.io/docs/1.41/apis/#opentelemetry-protocol-stable).\n * This exporter will not be required by the OpenTelemetry specification starting July 2023, and\n * will not receive any security fixes past March 2024.\n *\n * Please migrate to any of the following packages:\n * - `@opentelemetry/exporter-trace-otlp-proto`\n * - `@opentelemetry/exporter-trace-otlp-grpc`\n * - `@opentelemetry/exporter-trace-otlp-http`\n */\nexport class JaegerExporter implements SpanExporter {\n  private readonly _onShutdownFlushTimeout: number;\n  private readonly _localConfig: jaegerTypes.ExporterConfig;\n  private _shutdownOnce: BindOnceFuture<void>;\n\n  private _sender?: typeof jaegerTypes.UDPSender;\n\n  constructor(config?: jaegerTypes.ExporterConfig) {\n    const localConfig = Object.assign({}, config);\n    this._onShutdownFlushTimeout =\n      typeof localConfig.flushTimeout === 'number'\n        ? localConfig.flushTimeout\n        : 2000;\n\n    // https://github.com/jaegertracing/jaeger-client-node#environment-variables\n    // By default, the client sends traces via UDP to the agent at localhost:6832. Use OTEL_EXPORTER_JAEGER_AGENT_HOST and\n    // JAEGER_AGENT_PORT to send UDP traces to a different host:port. If OTEL_EXPORTER_JAEGER_ENDPOINT is set, the client sends traces\n    // to the endpoint via HTTP, making the OTEL_EXPORTER_JAEGER_AGENT_HOST and JAEGER_AGENT_PORT unused. If OTEL_EXPORTER_JAEGER_ENDPOINT is secured,\n    // HTTP basic authentication can be performed by setting the OTEL_EXPORTER_JAEGER_USER and OTEL_EXPORTER_JAEGER_PASSWORD environment variables.\n\n    localConfig.endpoint =\n      localConfig.endpoint ||\n      (getStringFromEnv('OTEL_EXPORTER_JAEGER_ENDPOINT') ?? '');\n    localConfig.username =\n      localConfig.username ||\n      (getStringFromEnv('OTEL_EXPORTER_JAEGER_USER') ?? '');\n    localConfig.password =\n      localConfig.password ||\n      (getStringFromEnv('OTEL_EXPORTER_JAEGER_PASSWORD') ?? '');\n    localConfig.host =\n      localConfig.host ||\n      (getStringFromEnv('OTEL_EXPORTER_JAEGER_AGENT_HOST') ?? '');\n    localConfig.port =\n      localConfig.port ||\n      (getNumberFromEnv('OTEL_EXPORTER_JAEGER_AGENT_PORT') ?? 6832);\n\n    this._localConfig = localConfig;\n\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n  }\n\n  /** Exports a list of spans to Jaeger. */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n    if (spans.length === 0) {\n      return resultCallback({ code: ExportResultCode.SUCCESS });\n    }\n    diag.debug('Jaeger exporter export');\n    this._sendSpans(spans, resultCallback).catch(error => {\n      return resultCallback({ code: ExportResultCode.FAILED, error });\n    });\n  }\n\n  /** Shutdown exporter. */\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  /**\n   * Exports any pending spans in exporter\n   */\n  forceFlush(): Promise<void> {\n    return this._flush();\n  }\n\n  private _shutdown(): Promise<void> {\n    return Promise.race([\n      new Promise<void>((_resolve, reject) => {\n        setTimeout(\n          () => reject(new Error('Flush timeout')),\n          this._onShutdownFlushTimeout\n        );\n      }),\n      this._flush(),\n    ]).finally(() => {\n      this._sender?.close();\n    });\n  }\n\n  /** Transform spans and sends to Jaeger service. */\n  private async _sendSpans(\n    spans: ReadableSpan[],\n    done?: (result: ExportResult) => void\n  ) {\n    const thriftSpan = spans.map(span => spanToThrift(span));\n    for (const span of thriftSpan) {\n      try {\n        await this._append(span);\n      } catch (error) {\n        // TODO right now we break out on first error, is that desirable?\n        if (done) return done({ code: ExportResultCode.FAILED, error });\n      }\n    }\n    diag.debug(`successful append for : ${thriftSpan.length}`);\n\n    // Flush all spans on each export. No-op if span buffer is empty\n    await this._flush();\n\n    if (done) return process.nextTick(done, { code: ExportResultCode.SUCCESS });\n  }\n\n  private async _append(span: jaegerTypes.ThriftSpan): Promise<number> {\n    return new Promise((resolve, reject) => {\n      this._getSender(span).append(span, (count: number, err?: string) => {\n        if (err) {\n          return reject(new Error(err));\n        }\n        resolve(count);\n      });\n    });\n  }\n\n  private _getSender(\n    span: jaegerTypes.ThriftSpan\n  ): typeof jaegerTypes.UDPSender {\n    if (this._sender) {\n      return this._sender;\n    }\n\n    const sender = this._localConfig.endpoint\n      ? new jaegerTypes.HTTPSender(this._localConfig)\n      : new jaegerTypes.UDPSender(this._localConfig);\n\n    if (sender._client instanceof Socket) {\n      // unref socket to prevent it from keeping the process running\n      sender._client.unref();\n    }\n\n    const serviceNameTag = span.tags.find(t => t.key === ATTR_SERVICE_NAME);\n    const serviceName = serviceNameTag?.vStr || 'unknown_service';\n\n    sender.setProcess({\n      serviceName,\n      tags: jaegerTypes.ThriftUtils.getThriftTags(this._localConfig.tags || []),\n    });\n\n    this._sender = sender;\n    return sender;\n  }\n\n  private async _flush(): Promise<void> {\n    await new Promise<void>((resolve, reject) => {\n      if (!this._sender) {\n        return resolve();\n      }\n\n      this._sender.flush((_count: number, err?: string) => {\n        if (err) {\n          return reject(new Error(err));\n        }\n        diag.debug(`successful flush for ${_count} spans`);\n        resolve();\n      });\n    });\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7625, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/exporter-jaeger/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { JaegerExporter } from './jaeger';\nexport { ExporterConfig } from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,+BAA0C;AAAjC,OAAA,cAAA,CAAA,SAAA,kBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,cAAc;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7656, "column": 0}, "map": {"version":3,"file":"TracerProviderWithEnvExporter.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-node/src/TracerProviderWithEnvExporter.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, getEnvWithoutDefaults } from '@opentelemetry/core';\nimport {\n  ConsoleSpanExporter,\n  SpanExporter,\n  BatchSpanProcessor,\n  SimpleSpanProcessor,\n  SDKRegistrationConfig,\n  SpanProcessor,\n} from '@opentelemetry/sdk-trace-base';\nimport {\n  NodeTracerConfig,\n  NodeTracerProvider,\n} from '@opentelemetry/sdk-trace-node';\nimport { OTLPTraceExporter as OTLPProtoTraceExporter } from '@opentelemetry/exporter-trace-otlp-proto';\nimport { OTLPTraceExporter as OTLPHttpTraceExporter } from '@opentelemetry/exporter-trace-otlp-http';\nimport { OTLPTraceExporter as OTLPGrpcTraceExporter } from '@opentelemetry/exporter-trace-otlp-grpc';\nimport { ZipkinExporter } from '@opentelemetry/exporter-zipkin';\n\nexport class TracerProviderWithEnvExporters extends NodeTracerProvider {\n  private _configuredExporters: SpanExporter[] = [];\n  private _spanProcessors: SpanProcessor[] | undefined;\n  private _hasSpanProcessors: boolean = false;\n\n  static configureOtlp(): SpanExporter {\n    const protocol = this.getOtlpProtocol();\n\n    switch (protocol) {\n      case 'grpc':\n        return new OTLPGrpcTraceExporter();\n      case 'http/json':\n        return new OTLPHttpTraceExporter();\n      case 'http/protobuf':\n        return new OTLPProtoTraceExporter();\n      default:\n        diag.warn(\n          `Unsupported OTLP traces protocol: ${protocol}. Using http/protobuf.`\n        );\n        return new OTLPProtoTraceExporter();\n    }\n  }\n\n  static getOtlpProtocol(): string {\n    const parsedEnvValues = getEnvWithoutDefaults();\n\n    return (\n      parsedEnvValues.OTEL_EXPORTER_OTLP_TRACES_PROTOCOL ??\n      parsedEnvValues.OTEL_EXPORTER_OTLP_PROTOCOL ??\n      getEnv().OTEL_EXPORTER_OTLP_TRACES_PROTOCOL ??\n      getEnv().OTEL_EXPORTER_OTLP_PROTOCOL\n    );\n  }\n\n  private static configureJaeger() {\n    // The JaegerExporter does not support being required in bundled\n    // environments. By delaying the require statement to here, we only crash when\n    // the exporter is actually used in such an environment.\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const { JaegerExporter } = require('@opentelemetry/exporter-jaeger');\n      return new JaegerExporter();\n    } catch (e) {\n      throw new Error(\n        `Could not instantiate JaegerExporter. This could be due to the JaegerExporter's lack of support for bundling. If possible, use @opentelemetry/exporter-trace-otlp-proto instead. Original Error: ${e}`\n      );\n    }\n  }\n\n  protected static override _registeredExporters = new Map<\n    string,\n    () => SpanExporter\n  >([\n    ['otlp', () => this.configureOtlp()],\n    ['zipkin', () => new ZipkinExporter()],\n    ['jaeger', () => this.configureJaeger()],\n    ['console', () => new ConsoleSpanExporter()],\n  ]);\n\n  public constructor(config: NodeTracerConfig = {}) {\n    super(config);\n    let traceExportersList = this.filterBlanksAndNulls(\n      Array.from(new Set(getEnv().OTEL_TRACES_EXPORTER.split(',')))\n    );\n\n    if (traceExportersList[0] === 'none') {\n      diag.warn(\n        'OTEL_TRACES_EXPORTER contains \"none\". SDK will not be initialized.'\n      );\n    } else if (traceExportersList.length === 0) {\n      diag.warn('OTEL_TRACES_EXPORTER is empty. Using default otlp exporter.');\n\n      traceExportersList = ['otlp'];\n      this.createExportersFromList(traceExportersList);\n\n      this._spanProcessors = this.configureSpanProcessors(\n        this._configuredExporters\n      );\n      this._spanProcessors.forEach(processor => {\n        this.addSpanProcessor(processor);\n      });\n    } else {\n      if (\n        traceExportersList.length > 1 &&\n        traceExportersList.includes('none')\n      ) {\n        diag.warn(\n          'OTEL_TRACES_EXPORTER contains \"none\" along with other exporters. Using default otlp exporter.'\n        );\n        traceExportersList = ['otlp'];\n      }\n\n      this.createExportersFromList(traceExportersList);\n\n      if (this._configuredExporters.length > 0) {\n        this._spanProcessors = this.configureSpanProcessors(\n          this._configuredExporters\n        );\n        this._spanProcessors.forEach(processor => {\n          this.addSpanProcessor(processor);\n        });\n      } else {\n        diag.warn(\n          'Unable to set up trace exporter(s) due to invalid exporter and/or protocol values.'\n        );\n      }\n    }\n  }\n\n  override addSpanProcessor(spanProcessor: SpanProcessor) {\n    super.addSpanProcessor(spanProcessor);\n    this._hasSpanProcessors = true;\n  }\n\n  override register(config?: SDKRegistrationConfig) {\n    if (this._hasSpanProcessors) {\n      super.register(config);\n    }\n  }\n\n  private createExportersFromList(exporterList: string[]) {\n    exporterList.forEach(exporterName => {\n      const exporter = this._getSpanExporter(exporterName);\n      if (exporter) {\n        this._configuredExporters.push(exporter);\n      } else {\n        diag.warn(`Unrecognized OTEL_TRACES_EXPORTER value: ${exporterName}.`);\n      }\n    });\n  }\n\n  private configureSpanProcessors(\n    exporters: SpanExporter[]\n  ): (BatchSpanProcessor | SimpleSpanProcessor)[] {\n    return exporters.map(exporter => {\n      if (exporter instanceof ConsoleSpanExporter) {\n        return new SimpleSpanProcessor(exporter);\n      } else {\n        return new BatchSpanProcessor(exporter);\n      }\n    });\n  }\n\n  private filterBlanksAndNulls(list: string[]): string[] {\n    return list.map(item => item.trim()).filter(s => s !== 'null' && s !== '');\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7808, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-node/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport {\n  DetectorSync,\n  envDetectorSync,\n  hostDetectorSync,\n  osDetectorSync,\n  processDetectorSync,\n  serviceInstanceIdDetectorSync,\n} from '@opentelemetry/resources';\n\nconst RESOURCE_DETECTOR_ENVIRONMENT = 'env';\nconst RESOURCE_DETECTOR_HOST = 'host';\nconst RESOURCE_DETECTOR_OS = 'os';\nconst RESOURCE_DETECTOR_PROCESS = 'process';\nconst RESOURCE_DETECTOR_SERVICE_INSTANCE_ID = 'serviceinstance';\n\nexport function getResourceDetectorsFromEnv(): Array<DetectorSync> {\n  // When updating this list, make sure to also update the section `resourceDetectors` on README.\n  const resourceDetectors = new Map<string, DetectorSync>([\n    [RESOURCE_DETECTOR_ENVIRONMENT, envDetectorSync],\n    [RESOURCE_DETECTOR_HOST, hostDetectorSync],\n    [RESOURCE_DETECTOR_OS, osDetectorSync],\n    [RESOURCE_DETECTOR_SERVICE_INSTANCE_ID, serviceInstanceIdDetectorSync],\n    [RESOURCE_DETECTOR_PROCESS, processDetectorSync],\n  ]);\n\n  const resourceDetectorsFromEnv =\n    process.env.OTEL_NODE_RESOURCE_DETECTORS?.split(',') ?? ['all'];\n\n  if (resourceDetectorsFromEnv.includes('all')) {\n    return [...resourceDetectors.values()].flat();\n  }\n\n  if (resourceDetectorsFromEnv.includes('none')) {\n    return [];\n  }\n\n  return resourceDetectorsFromEnv.flatMap(detector => {\n    const resourceDetector = resourceDetectors.get(detector);\n    if (!resourceDetector) {\n      diag.error(\n        `Invalid resource detector \"${detector}\" specified in the environment variable OTEL_NODE_RESOURCE_DETECTORS`\n      );\n    }\n    return resourceDetector || [];\n  });\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAA0C;AAC1C,MAAA,kDAOkC;AAElC,MAAM,6BAA6B,GAAG,KAAK,CAAC;AAC5C,MAAM,sBAAsB,GAAG,MAAM,CAAC;AACtC,MAAM,oBAAoB,GAAG,IAAI,CAAC;AAClC,MAAM,yBAAyB,GAAG,SAAS,CAAC;AAC5C,MAAM,qCAAqC,GAAG,iBAAiB,CAAC;AAEhE,SAAgB,2BAA2B;;IACzC,+FAA+F;IAC/F,MAAM,iBAAiB,GAAG,IAAI,GAAG,CAAuB;QACtD;YAAC,6BAA6B;YAAE,YAAA,eAAe;SAAC;QAChD;YAAC,sBAAsB;YAAE,YAAA,gBAAgB;SAAC;QAC1C;YAAC,oBAAoB;YAAE,YAAA,cAAc;SAAC;QACtC;YAAC,qCAAqC;YAAE,YAAA,6BAA6B;SAAC;QACtE;YAAC,yBAAyB;YAAE,YAAA,mBAAmB;SAAC;KACjD,CAAC,CAAC;IAEH,MAAM,wBAAwB,GAC5B,CAAA,KAAA,CAAA,KAAA,OAAO,CAAC,GAAG,CAAC,4BAA4B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,KAAK,CAAC,GAAG,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI;QAAC,KAAK;KAAC,CAAC;IAElE,IAAI,wBAAwB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC5C,OAAO,CAAC;eAAG,iBAAiB,CAAC,MAAM,EAAE;SAAC,CAAC,IAAI,EAAE,CAAC;KAC/C;IAED,IAAI,wBAAwB,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC7C,OAAO,EAAE,CAAC;KACX;IAED,OAAO,wBAAwB,CAAC,OAAO,EAAC,QAAQ,CAAC,EAAE;QACjD,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,gBAAgB,EAAE;YACrB,MAAA,IAAI,CAAC,KAAK,CACR,CAAA,2BAAA,EAA8B,QAAQ,CAAA,oEAAA,CAAsE,CAC7G,CAAC;SACH;QACD,OAAO,gBAAgB,IAAI,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;AACL,CAAC;AA9BD,QAAA,2BAAA,GAAA,4BA8BC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7884, "column": 0}, "map": {"version":3,"file":"sdk.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-node/src/sdk.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ContextManager,\n  TextMapPropagator,\n  metrics,\n  diag,\n  DiagConsoleLogger,\n} from '@opentelemetry/api';\nimport { logs } from '@opentelemetry/api-logs';\nimport {\n  Instrumentation,\n  registerInstrumentations,\n} from '@opentelemetry/instrumentation';\nimport {\n  Detector,\n  DetectorSync,\n  detectResourcesSync,\n  envDetector,\n  hostDetector,\n  IResource,\n  processDetector,\n  Resource,\n  ResourceDetectionConfig,\n} from '@opentelemetry/resources';\nimport { LogRecordProcessor, LoggerProvider } from '@opentelemetry/sdk-logs';\nimport { MeterProvider, MetricReader, View } from '@opentelemetry/sdk-metrics';\nimport {\n  BatchSpanProcessor,\n  SpanProcessor,\n} from '@opentelemetry/sdk-trace-base';\nimport {\n  NodeTracerConfig,\n  NodeTracerProvider,\n} from '@opentelemetry/sdk-trace-node';\nimport { SEMRESATTRS_SERVICE_NAME } from '@opentelemetry/semantic-conventions';\nimport { NodeSDKConfiguration } from './types';\nimport { TracerProviderWithEnvExporters } from './TracerProviderWithEnvExporter';\nimport { getEnv, getEnvWithoutDefaults } from '@opentelemetry/core';\nimport { getResourceDetectorsFromEnv } from './utils';\n\n/** This class represents everything needed to register a fully configured OpenTelemetry Node.js SDK */\n\nexport type MeterProviderConfig = {\n  /**\n   * Reference to the MetricReader instance by the NodeSDK\n   */\n  reader?: MetricReader;\n  /**\n   * List of {@link View}s that should be passed to the MeterProvider\n   */\n  views?: View[];\n};\n\nexport type LoggerProviderConfig = {\n  /**\n   * Reference to the LoggerRecordProcessor instance by the NodeSDK\n   */\n  logRecordProcessor: LogRecordProcessor;\n};\n\nexport class NodeSDK {\n  private _tracerProviderConfig?: {\n    tracerConfig: NodeTracerConfig;\n    spanProcessors: SpanProcessor[];\n    contextManager?: ContextManager;\n    textMapPropagator?: TextMapPropagator;\n  };\n  private _loggerProviderConfig?: LoggerProviderConfig;\n  private _meterProviderConfig?: MeterProviderConfig;\n  private _instrumentations: Instrumentation[];\n\n  private _resource: IResource;\n  private _resourceDetectors: Array<Detector | DetectorSync>;\n\n  private _autoDetectResources: boolean;\n\n  private _tracerProvider?: NodeTracerProvider | TracerProviderWithEnvExporters;\n  private _loggerProvider?: LoggerProvider;\n  private _meterProvider?: MeterProvider;\n  private _serviceName?: string;\n  private _configuration?: Partial<NodeSDKConfiguration>;\n\n  private _disabled?: boolean;\n\n  /**\n   * Create a new NodeJS SDK instance\n   */\n  public constructor(configuration: Partial<NodeSDKConfiguration> = {}) {\n    const env = getEnv();\n    const envWithoutDefaults = getEnvWithoutDefaults();\n\n    if (env.OTEL_SDK_DISABLED) {\n      this._disabled = true;\n      // Functions with possible side-effects are set\n      // to no-op via the _disabled flag\n    }\n\n    // Default is INFO, use environment without defaults to check\n    // if the user originally set the environment variable.\n    if (envWithoutDefaults.OTEL_LOG_LEVEL) {\n      diag.setLogger(new DiagConsoleLogger(), {\n        logLevel: envWithoutDefaults.OTEL_LOG_LEVEL,\n      });\n    }\n\n    this._configuration = configuration;\n\n    this._resource = configuration.resource ?? new Resource({});\n    let defaultDetectors: (Detector | DetectorSync)[] = [];\n    if (process.env.OTEL_NODE_RESOURCE_DETECTORS != null) {\n      defaultDetectors = getResourceDetectorsFromEnv();\n    } else {\n      defaultDetectors = [envDetector, processDetector, hostDetector];\n    }\n\n    this._resourceDetectors =\n      configuration.resourceDetectors ?? defaultDetectors;\n\n    this._serviceName = configuration.serviceName;\n\n    this._autoDetectResources = configuration.autoDetectResources ?? true;\n\n    // If a tracer provider can be created from manual configuration, create it\n    if (\n      configuration.traceExporter ||\n      configuration.spanProcessor ||\n      configuration.spanProcessors\n    ) {\n      const tracerProviderConfig: NodeTracerConfig = {};\n\n      if (configuration.sampler) {\n        tracerProviderConfig.sampler = configuration.sampler;\n      }\n      if (configuration.spanLimits) {\n        tracerProviderConfig.spanLimits = configuration.spanLimits;\n      }\n      if (configuration.idGenerator) {\n        tracerProviderConfig.idGenerator = configuration.idGenerator;\n      }\n\n      if (configuration.spanProcessor) {\n        diag.warn(\n          \"The 'spanProcessor' option is deprecated. Please use 'spanProcessors' instead.\"\n        );\n      }\n\n      const spanProcessor =\n        configuration.spanProcessor ??\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        new BatchSpanProcessor(configuration.traceExporter!);\n\n      const spanProcessors = configuration.spanProcessors ?? [spanProcessor];\n\n      this._tracerProviderConfig = {\n        tracerConfig: tracerProviderConfig,\n        spanProcessors,\n        contextManager: configuration.contextManager,\n        textMapPropagator: configuration.textMapPropagator,\n      };\n    }\n\n    if (configuration.logRecordProcessor) {\n      this._loggerProviderConfig = {\n        logRecordProcessor: configuration.logRecordProcessor,\n      };\n    }\n\n    if (configuration.metricReader || configuration.views) {\n      const meterProviderConfig: MeterProviderConfig = {};\n      if (configuration.metricReader) {\n        meterProviderConfig.reader = configuration.metricReader;\n      }\n\n      if (configuration.views) {\n        meterProviderConfig.views = configuration.views;\n      }\n\n      this._meterProviderConfig = meterProviderConfig;\n    }\n\n    this._instrumentations = configuration.instrumentations?.flat() ?? [];\n  }\n\n  /**\n   * Call this method to construct SDK components and register them with the OpenTelemetry API.\n   */\n  public start(): void {\n    if (this._disabled) {\n      return;\n    }\n\n    registerInstrumentations({\n      instrumentations: this._instrumentations,\n    });\n\n    if (this._autoDetectResources) {\n      const internalConfig: ResourceDetectionConfig = {\n        detectors: this._resourceDetectors,\n      };\n\n      this._resource = this._resource.merge(\n        detectResourcesSync(internalConfig)\n      );\n    }\n\n    this._resource =\n      this._serviceName === undefined\n        ? this._resource\n        : this._resource.merge(\n            new Resource({\n              [SEMRESATTRS_SERVICE_NAME]: this._serviceName,\n            })\n          );\n\n    // if there is a tracerProviderConfig (traceExporter/spanProcessor was set manually) or the traceExporter is set manually, use NodeTracerProvider\n    const Provider = this._tracerProviderConfig\n      ? NodeTracerProvider\n      : TracerProviderWithEnvExporters;\n\n    // If the Provider is configured with Env Exporters, we need to check if the SDK had any manual configurations and set them here\n    const tracerProvider = new Provider({\n      ...this._configuration,\n      resource: this._resource,\n    });\n\n    this._tracerProvider = tracerProvider;\n\n    if (this._tracerProviderConfig) {\n      for (const spanProcessor of this._tracerProviderConfig.spanProcessors) {\n        tracerProvider.addSpanProcessor(spanProcessor);\n      }\n    }\n\n    tracerProvider.register({\n      contextManager:\n        this._tracerProviderConfig?.contextManager ??\n        // _tracerProviderConfig may be undefined if trace-specific settings are not provided - fall back to raw config\n        this._configuration?.contextManager,\n      propagator: this._tracerProviderConfig?.textMapPropagator,\n    });\n\n    if (this._loggerProviderConfig) {\n      const loggerProvider = new LoggerProvider({\n        resource: this._resource,\n      });\n      loggerProvider.addLogRecordProcessor(\n        this._loggerProviderConfig.logRecordProcessor\n      );\n\n      this._loggerProvider = loggerProvider;\n\n      logs.setGlobalLoggerProvider(loggerProvider);\n    }\n\n    if (this._meterProviderConfig) {\n      const readers: MetricReader[] = [];\n      if (this._meterProviderConfig.reader) {\n        readers.push(this._meterProviderConfig.reader);\n      }\n      const meterProvider = new MeterProvider({\n        resource: this._resource,\n        views: this._meterProviderConfig?.views ?? [],\n        readers: readers,\n      });\n\n      this._meterProvider = meterProvider;\n\n      metrics.setGlobalMeterProvider(meterProvider);\n\n      // TODO: This is a workaround to fix https://github.com/open-telemetry/opentelemetry-js/issues/3609\n      // If the MeterProvider is not yet registered when instrumentations are registered, all metrics are dropped.\n      // This code is obsolete once https://github.com/open-telemetry/opentelemetry-js/issues/3622 is implemented.\n      for (const instrumentation of this._instrumentations) {\n        instrumentation.setMeterProvider(metrics.getMeterProvider());\n      }\n    }\n  }\n\n  public shutdown(): Promise<void> {\n    const promises: Promise<unknown>[] = [];\n    if (this._tracerProvider) {\n      promises.push(this._tracerProvider.shutdown());\n    }\n    if (this._loggerProvider) {\n      promises.push(this._loggerProvider.shutdown());\n    }\n    if (this._meterProvider) {\n      promises.push(this._meterProvider.shutdown());\n    }\n\n    return (\n      Promise.all(promises)\n        // return void instead of the array from Promise.all\n        .then(() => {})\n    );\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8078, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-node/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ContextManager } from '@opentelemetry/api';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { Instrumentation } from '@opentelemetry/instrumentation';\nimport { Detector, DetectorSync, IResource } from '@opentelemetry/resources';\nimport { LogRecordProcessor } from '@opentelemetry/sdk-logs';\nimport { MetricReader, View } from '@opentelemetry/sdk-metrics';\nimport {\n  Sampler,\n  SpanExporter,\n  SpanLimits,\n  SpanProcessor,\n  IdGenerator,\n} from '@opentelemetry/sdk-trace-base';\n\nexport interface NodeSDKConfiguration {\n  autoDetectResources: boolean;\n  contextManager: ContextManager;\n  textMapPropagator: TextMapPropagator;\n  logRecordProcessor: LogRecordProcessor;\n  metricReader: MetricReader;\n  views: View[];\n  instrumentations: (Instrumentation | Instrumentation[])[];\n  resource: IResource;\n  resourceDetectors: Array<Detector | DetectorSync>;\n  sampler: Sampler;\n  serviceName?: string;\n  /** @deprecated use spanProcessors instead*/\n  spanProcessor?: SpanProcessor;\n  spanProcessors?: SpanProcessor[];\n  traceExporter: SpanExporter;\n  spanLimits: SpanLimits;\n  idGenerator: IdGenerator;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8101, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sdk-node/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * as api from '@opentelemetry/api';\nexport * as contextBase from '@opentelemetry/api';\nexport * as core from '@opentelemetry/core';\nexport * as logs from '@opentelemetry/sdk-logs';\nexport * as metrics from '@opentelemetry/sdk-metrics';\nexport * as node from '@opentelemetry/sdk-trace-node';\nexport * as resources from '@opentelemetry/resources';\nexport * as tracing from '@opentelemetry/sdk-trace-base';\nexport * from './sdk';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;;AAEH,QAAA,GAAA,iCAA0C;AAC1C,QAAA,WAAA,iCAAkD;AAClD,QAAA,IAAA,kCAA4C;AAC5C,QAAA,IAAA,sCAAgD;AAChD,QAAA,OAAA,yCAAsD;AACtD,QAAA,IAAA,4CAAsD;AACtD,QAAA,SAAA,uCAAsD;AACtD,QAAA,OAAA,4CAAyD;AACzD,kIAAA,SAAsB;AACtB,oIAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8150, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-amqplib/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface PublishInfo {\n  moduleVersion: string | undefined;\n  exchange: string;\n  routingKey: string;\n  content: Buffer;\n  options?: AmqplibPublishOptions;\n  isConfirmChannel?: boolean;\n}\n\nexport interface PublishConfirmedInfo extends PublishInfo {\n  confirmError?: any;\n}\n\nexport interface ConsumeInfo {\n  moduleVersion: string | undefined;\n  msg: ConsumeMessage;\n}\n\nexport interface ConsumeEndInfo {\n  msg: ConsumeMessage;\n  rejected: boolean | null;\n  endOperation: EndOperation;\n}\n\nexport interface AmqplibPublishCustomAttributeFunction {\n  (span: Span, publishInfo: PublishInfo): void;\n}\n\nexport interface AmqplibPublishConfirmCustomAttributeFunction {\n  (span: Span, publishConfirmedInto: PublishConfirmedInfo): void;\n}\n\nexport interface AmqplibConsumeCustomAttributeFunction {\n  (span: Span, consumeInfo: ConsumeInfo): void;\n}\n\nexport interface AmqplibConsumeEndCustomAttributeFunction {\n  (span: Span, consumeEndInfo: ConsumeEndInfo): void;\n}\n\nexport enum EndOperation {\n  AutoAck = 'auto ack',\n  Ack = 'ack',\n  AckAll = 'ackAll',\n  Reject = 'reject',\n  Nack = 'nack',\n  NackAll = 'nackAll',\n  ChannelClosed = 'channel closed',\n  ChannelError = 'channel error',\n  InstrumentationTimeout = 'instrumentation timeout',\n}\n\nexport interface AmqplibInstrumentationConfig extends InstrumentationConfig {\n  /** hook for adding custom attributes before publish message is sent */\n  publishHook?: AmqplibPublishCustomAttributeFunction;\n\n  /** hook for adding custom attributes after publish message is confirmed by the broker */\n  publishConfirmHook?: AmqplibPublishConfirmCustomAttributeFunction;\n\n  /** hook for adding custom attributes before consumer message is processed */\n  consumeHook?: AmqplibConsumeCustomAttributeFunction;\n\n  /** hook for adding custom attributes after consumer message is acked to server */\n  consumeEndHook?: AmqplibConsumeEndCustomAttributeFunction;\n\n  /**\n   * When user is setting up consume callback, it is user's responsibility to call\n   * ack/nack etc on the msg to resolve it in the server.\n   * If user is not calling the ack, the message will stay in the queue until\n   * channel is closed, or until server timeout expires (if configured).\n   * While we wait for the ack, a reference to the message is stored in plugin, which\n   * will never be garbage collected.\n   * To prevent memory leak, plugin has it's own configuration of timeout, which\n   * will close the span if user did not call ack after this timeout.\n   * If timeout is not big enough, span might be closed with 'InstrumentationTimeout',\n   * and then received valid ack from the user later which will not be instrumented.\n   *\n   * Default is 1 minute\n   */\n  consumeTimeoutMs?: number;\n\n  /** option to use a span link for the consume message instead of continuing a trace */\n  useLinksForConsume?: boolean;\n}\n\nexport const DEFAULT_CONFIG: AmqplibInstrumentationConfig = {\n  consumeTimeoutMs: 1000 * 60, // 1 minute\n  useLinksForConsume: false,\n};\n\n// The following types are vendored from `@types/amqplib@0.10.1` - commit SHA: 4205e03127692a40b4871709a7134fe4e2ed5510\n\n// Vendored from: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/4205e03127692a40b4871709a7134fe4e2ed5510/types/amqplib/properties.d.ts#L108\n// This exists in `@types/amqplib` as `Options.Publish`. We're renaming things\n// here to avoid importing the whole Options namespace.\nexport interface AmqplibPublishOptions {\n  expiration?: string | number;\n  userId?: string;\n  CC?: string | string[];\n\n  mandatory?: boolean;\n  persistent?: boolean;\n  deliveryMode?: boolean | number;\n  BCC?: string | string[];\n\n  contentType?: string;\n  contentEncoding?: string;\n  headers?: any;\n  priority?: number;\n  correlationId?: string;\n  replyTo?: string;\n  messageId?: string;\n  timestamp?: number;\n  type?: string;\n  appId?: string;\n}\n\n// Vendored from: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/4205e03127692a40b4871709a7134fe4e2ed5510/types/amqplib/properties.d.ts#L142\nexport interface Message {\n  content: Buffer;\n  fields: MessageFields;\n  properties: MessageProperties;\n}\n\nexport interface ConsumeMessage extends Message {\n  fields: ConsumeMessageFields;\n}\n\nexport interface CommonMessageFields {\n  deliveryTag: number;\n  redelivered: boolean;\n  exchange: string;\n  routingKey: string;\n}\n\nexport interface MessageFields extends CommonMessageFields {\n  messageCount?: number;\n  consumerTag?: string;\n}\n\nexport interface ConsumeMessageFields extends CommonMessageFields {\n  deliveryTag: number;\n}\n\nexport interface MessageProperties {\n  contentType: any | undefined;\n  contentEncoding: any | undefined;\n  headers: any;\n  deliveryMode: any | undefined;\n  priority: any | undefined;\n  correlationId: any | undefined;\n  replyTo: any | undefined;\n  expiration: any | undefined;\n  messageId: any | undefined;\n  timestamp: any | undefined;\n  type: any | undefined;\n  userId: any | undefined;\n  appId: any | undefined;\n  clusterId: any | undefined;\n}\n"],"names":[],"mappings":";;;;;AA0DA,IAAY,YAUX;AAVD,CAAA,SAAY,YAAY;IACtB,YAAA,CAAA,UAAA,GAAA,UAAoB,CAAA;IACpB,YAAA,CAAA,MAAA,GAAA,KAAW,CAAA;IACX,YAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,YAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,YAAA,CAAA,OAAA,GAAA,MAAa,CAAA;IACb,YAAA,CAAA,UAAA,GAAA,SAAmB,CAAA;IACnB,YAAA,CAAA,gBAAA,GAAA,gBAAgC,CAAA;IAChC,YAAA,CAAA,eAAA,GAAA,eAA8B,CAAA;IAC9B,YAAA,CAAA,yBAAA,GAAA,yBAAkD,CAAA;AACpD,CAAC,EAVW,YAAY,GAAZ,QAAA,YAAY,IAAA,CAAZ,QAAA,YAAY,GAAA,CAAA,CAAA,GAUvB;AAmCY,QAAA,cAAc,GAAiC;IAC1D,gBAAgB,EAAE,IAAI,GAAG,EAAE;IAC3B,kBAAkB,EAAE,KAAK;CAC1B,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8176, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-amqplib/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Context,\n  createContextKey,\n  diag,\n  HrTime,\n  Span,\n  Attributes,\n  AttributeValue,\n} from '@opentelemetry/api';\nimport {\n  SEMATTRS_MESSAGING_PROTOCOL,\n  SEMATTRS_MESSAGING_PROTOCOL_VERSION,\n  SEMATTRS_MESSAGING_SYSTEM,\n  SEMATTRS_MESSAGING_URL,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\nimport type * as amqp from 'amqplib';\n\nexport const MESSAGE_STORED_SPAN: unique symbol = Symbol(\n  'opentelemetry.amqplib.message.stored-span'\n);\nexport const CHANNEL_SPANS_NOT_ENDED: unique symbol = Symbol(\n  'opentelemetry.amqplib.channel.spans-not-ended'\n);\nexport const CHANNEL_CONSUME_TIMEOUT_TIMER: unique symbol = Symbol(\n  'opentelemetry.amqplib.channel.consumer-timeout-timer'\n);\nexport const CONNECTION_ATTRIBUTES: unique symbol = Symbol(\n  'opentelemetry.amqplib.connection.attributes'\n);\n\nexport type InstrumentationPublishChannel = (\n  | amqp.Channel\n  | amqp.ConfirmChannel\n) & { connection: { [CONNECTION_ATTRIBUTES]: Attributes } };\nexport type InstrumentationConsumeChannel = amqp.Channel & {\n  connection: { [CONNECTION_ATTRIBUTES]: Attributes };\n  [CHANNEL_SPANS_NOT_ENDED]?: {\n    msg: amqp.ConsumeMessage;\n    timeOfConsume: HrTime;\n  }[];\n  [CHANNEL_CONSUME_TIMEOUT_TIMER]?: NodeJS.Timer;\n};\nexport type InstrumentationMessage = amqp.Message & {\n  [MESSAGE_STORED_SPAN]?: Span;\n};\n\nconst IS_CONFIRM_CHANNEL_CONTEXT_KEY: symbol = createContextKey(\n  'opentelemetry.amqplib.channel.is-confirm-channel'\n);\n\nexport const normalizeExchange = (exchangeName: string) =>\n  exchangeName !== '' ? exchangeName : '<default>';\n\nconst censorPassword = (url: string): string => {\n  return url.replace(/:[^:@/]*@/, ':***@');\n};\n\nconst getPort = (\n  portFromUrl: number | undefined,\n  resolvedProtocol: string\n): number => {\n  // we are using the resolved protocol which is upper case\n  // this code mimic the behavior of the amqplib which is used to set connection params\n  return portFromUrl || (resolvedProtocol === 'AMQP' ? 5672 : 5671);\n};\n\nconst getProtocol = (protocolFromUrl: string | undefined): string => {\n  const resolvedProtocol = protocolFromUrl || 'amqp';\n  // the substring removed the ':' part of the protocol ('amqp:' -> 'amqp')\n  const noEndingColon = resolvedProtocol.endsWith(':')\n    ? resolvedProtocol.substring(0, resolvedProtocol.length - 1)\n    : resolvedProtocol;\n  // upper cases to match spec\n  return noEndingColon.toUpperCase();\n};\n\nconst getHostname = (hostnameFromUrl: string | undefined): string => {\n  // if user supplies empty hostname, it gets forwarded to 'net' package which default it to localhost.\n  // https://nodejs.org/docs/latest-v12.x/api/net.html#net_socket_connect_options_connectlistener\n  return hostnameFromUrl || 'localhost';\n};\n\nconst extractConnectionAttributeOrLog = (\n  url: string | amqp.Options.Connect,\n  attributeKey: string,\n  attributeValue: AttributeValue,\n  nameForLog: string\n): Attributes => {\n  if (attributeValue) {\n    return { [attributeKey]: attributeValue };\n  } else {\n    diag.error(\n      `amqplib instrumentation: could not extract connection attribute ${nameForLog} from user supplied url`,\n      {\n        url,\n      }\n    );\n    return {};\n  }\n};\n\nexport const getConnectionAttributesFromServer = (\n  conn: amqp.Connection['connection']\n): Attributes => {\n  const product = conn.serverProperties.product?.toLowerCase?.();\n  if (product) {\n    return {\n      [SEMATTRS_MESSAGING_SYSTEM]: product,\n    };\n  } else {\n    return {};\n  }\n};\n\nexport const getConnectionAttributesFromUrl = (\n  url: string | amqp.Options.Connect\n): Attributes => {\n  const attributes: Attributes = {\n    [SEMATTRS_MESSAGING_PROTOCOL_VERSION]: '0.9.1', // this is the only protocol supported by the instrumented library\n  };\n\n  url = url || 'amqp://localhost';\n  if (typeof url === 'object') {\n    const connectOptions = url as amqp.Options.Connect;\n\n    const protocol = getProtocol(connectOptions?.protocol);\n    Object.assign(attributes, {\n      ...extractConnectionAttributeOrLog(\n        url,\n        SEMATTRS_MESSAGING_PROTOCOL,\n        protocol,\n        'protocol'\n      ),\n    });\n\n    const hostname = getHostname(connectOptions?.hostname);\n    Object.assign(attributes, {\n      ...extractConnectionAttributeOrLog(\n        url,\n        SEMATTRS_NET_PEER_NAME,\n        hostname,\n        'hostname'\n      ),\n    });\n\n    const port = getPort(connectOptions.port, protocol);\n    Object.assign(attributes, {\n      ...extractConnectionAttributeOrLog(\n        url,\n        SEMATTRS_NET_PEER_PORT,\n        port,\n        'port'\n      ),\n    });\n  } else {\n    const censoredUrl = censorPassword(url);\n    attributes[SEMATTRS_MESSAGING_URL] = censoredUrl;\n    try {\n      const urlParts = new URL(censoredUrl);\n\n      const protocol = getProtocol(urlParts.protocol);\n      Object.assign(attributes, {\n        ...extractConnectionAttributeOrLog(\n          censoredUrl,\n          SEMATTRS_MESSAGING_PROTOCOL,\n          protocol,\n          'protocol'\n        ),\n      });\n\n      const hostname = getHostname(urlParts.hostname);\n      Object.assign(attributes, {\n        ...extractConnectionAttributeOrLog(\n          censoredUrl,\n          SEMATTRS_NET_PEER_NAME,\n          hostname,\n          'hostname'\n        ),\n      });\n\n      const port = getPort(\n        urlParts.port ? parseInt(urlParts.port) : undefined,\n        protocol\n      );\n      Object.assign(attributes, {\n        ...extractConnectionAttributeOrLog(\n          censoredUrl,\n          SEMATTRS_NET_PEER_PORT,\n          port,\n          'port'\n        ),\n      });\n    } catch (err) {\n      diag.error(\n        'amqplib instrumentation: error while extracting connection details from connection url',\n        {\n          censoredUrl,\n          err,\n        }\n      );\n    }\n  }\n  return attributes;\n};\n\nexport const markConfirmChannelTracing = (context: Context) => {\n  return context.setValue(IS_CONFIRM_CHANNEL_CONTEXT_KEY, true);\n};\n\nexport const unmarkConfirmChannelTracing = (context: Context) => {\n  return context.deleteValue(IS_CONFIRM_CHANNEL_CONTEXT_KEY);\n};\n\nexport const isConfirmChannelTracing = (context: Context) => {\n  return context.getValue(IS_CONFIRM_CHANNEL_CONTEXT_KEY) === true;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8299, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-amqplib/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.41.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-amqplib';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8326, "column": 0}, "map": {"version":3,"file":"amqplib.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-amqplib/src/amqplib.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  context,\n  diag,\n  propagation,\n  trace,\n  Span,\n  SpanKind,\n  SpanStatusCode,\n  ROOT_CONTEXT,\n  Link,\n  Context,\n} from '@opentelemetry/api';\nimport {\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMilliseconds,\n} from '@opentelemetry/core';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  SEMATTRS_MESSAGING_DESTINATION,\n  SEMATTRS_MESSAGING_DESTINATION_KIND,\n  MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n  SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY,\n  SEMATTRS_MESSAGING_OPERATION,\n  MESSAGINGOPERATIONVALUES_PROCESS,\n  SEMATTRS_MESSAGING_MESSAGE_ID,\n  SEMATTRS_MESSAGING_CONVERSATION_ID,\n} from '@opentelemetry/semantic-conventions';\nimport type {\n  Connection,\n  ConsumeMessage,\n  Message,\n  Options,\n  Replies,\n} from 'amqplib';\nimport {\n  AmqplibInstrumentationConfig,\n  DEFAULT_CONFIG,\n  EndOperation,\n} from './types';\nimport {\n  CHANNEL_CONSUME_TIMEOUT_TIMER,\n  CHANNEL_SPANS_NOT_ENDED,\n  CONNECTION_ATTRIBUTES,\n  getConnectionAttributesFromServer,\n  getConnectionAttributesFromUrl,\n  InstrumentationConsumeChannel,\n  InstrumentationMessage,\n  InstrumentationPublishChannel,\n  isConfirmChannelTracing,\n  markConfirmChannelTracing,\n  MESSAGE_STORED_SPAN,\n  normalizeExchange,\n  unmarkConfirmChannelTracing,\n} from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nconst supportedVersions = ['>=0.5.5 <1'];\n\nexport class AmqplibInstrumentation extends InstrumentationBase<AmqplibInstrumentationConfig> {\n  constructor(config: AmqplibInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, { ...DEFAULT_CONFIG, ...config });\n  }\n\n  override setConfig(config: AmqplibInstrumentationConfig = {}) {\n    super.setConfig({ ...DEFAULT_CONFIG, ...config });\n  }\n\n  protected init() {\n    const channelModelModuleFile = new InstrumentationNodeModuleFile(\n      'amqplib/lib/channel_model.js',\n      supportedVersions,\n      this.patchChannelModel.bind(this),\n      this.unpatchChannelModel.bind(this)\n    );\n\n    const callbackModelModuleFile = new InstrumentationNodeModuleFile(\n      'amqplib/lib/callback_model.js',\n      supportedVersions,\n      this.patchChannelModel.bind(this),\n      this.unpatchChannelModel.bind(this)\n    );\n\n    const connectModuleFile = new InstrumentationNodeModuleFile(\n      'amqplib/lib/connect.js',\n      supportedVersions,\n      this.patchConnect.bind(this),\n      this.unpatchConnect.bind(this)\n    );\n\n    const module = new InstrumentationNodeModuleDefinition(\n      'amqplib',\n      supportedVersions,\n      undefined,\n      undefined,\n      [channelModelModuleFile, connectModuleFile, callbackModelModuleFile]\n    );\n    return module;\n  }\n\n  private patchConnect(moduleExports: any) {\n    moduleExports = this.unpatchConnect(moduleExports);\n    if (!isWrapped(moduleExports.connect)) {\n      this._wrap(moduleExports, 'connect', this.getConnectPatch.bind(this));\n    }\n    return moduleExports;\n  }\n\n  private unpatchConnect(moduleExports: any) {\n    if (isWrapped(moduleExports.connect)) {\n      this._unwrap(moduleExports, 'connect');\n    }\n    return moduleExports;\n  }\n\n  private patchChannelModel(\n    moduleExports: any,\n    moduleVersion: string | undefined\n  ) {\n    if (!isWrapped(moduleExports.Channel.prototype.publish)) {\n      this._wrap(\n        moduleExports.Channel.prototype,\n        'publish',\n        this.getPublishPatch.bind(this, moduleVersion)\n      );\n    }\n    if (!isWrapped(moduleExports.Channel.prototype.consume)) {\n      this._wrap(\n        moduleExports.Channel.prototype,\n        'consume',\n        this.getConsumePatch.bind(this, moduleVersion)\n      );\n    }\n    if (!isWrapped(moduleExports.Channel.prototype.ack)) {\n      this._wrap(\n        moduleExports.Channel.prototype,\n        'ack',\n        this.getAckPatch.bind(this, false, EndOperation.Ack)\n      );\n    }\n    if (!isWrapped(moduleExports.Channel.prototype.nack)) {\n      this._wrap(\n        moduleExports.Channel.prototype,\n        'nack',\n        this.getAckPatch.bind(this, true, EndOperation.Nack)\n      );\n    }\n    if (!isWrapped(moduleExports.Channel.prototype.reject)) {\n      this._wrap(\n        moduleExports.Channel.prototype,\n        'reject',\n        this.getAckPatch.bind(this, true, EndOperation.Reject)\n      );\n    }\n    if (!isWrapped(moduleExports.Channel.prototype.ackAll)) {\n      this._wrap(\n        moduleExports.Channel.prototype,\n        'ackAll',\n        this.getAckAllPatch.bind(this, false, EndOperation.AckAll)\n      );\n    }\n    if (!isWrapped(moduleExports.Channel.prototype.nackAll)) {\n      this._wrap(\n        moduleExports.Channel.prototype,\n        'nackAll',\n        this.getAckAllPatch.bind(this, true, EndOperation.NackAll)\n      );\n    }\n    if (!isWrapped(moduleExports.Channel.prototype.emit)) {\n      this._wrap(\n        moduleExports.Channel.prototype,\n        'emit',\n        this.getChannelEmitPatch.bind(this)\n      );\n    }\n    if (!isWrapped(moduleExports.ConfirmChannel.prototype.publish)) {\n      this._wrap(\n        moduleExports.ConfirmChannel.prototype,\n        'publish',\n        this.getConfirmedPublishPatch.bind(this, moduleVersion)\n      );\n    }\n    return moduleExports;\n  }\n\n  private unpatchChannelModel(moduleExports: any) {\n    if (isWrapped(moduleExports.Channel.prototype.publish)) {\n      this._unwrap(moduleExports.Channel.prototype, 'publish');\n    }\n    if (isWrapped(moduleExports.Channel.prototype.consume)) {\n      this._unwrap(moduleExports.Channel.prototype, 'consume');\n    }\n    if (isWrapped(moduleExports.Channel.prototype.ack)) {\n      this._unwrap(moduleExports.Channel.prototype, 'ack');\n    }\n    if (isWrapped(moduleExports.Channel.prototype.nack)) {\n      this._unwrap(moduleExports.Channel.prototype, 'nack');\n    }\n    if (isWrapped(moduleExports.Channel.prototype.reject)) {\n      this._unwrap(moduleExports.Channel.prototype, 'reject');\n    }\n    if (isWrapped(moduleExports.Channel.prototype.ackAll)) {\n      this._unwrap(moduleExports.Channel.prototype, 'ackAll');\n    }\n    if (isWrapped(moduleExports.Channel.prototype.nackAll)) {\n      this._unwrap(moduleExports.Channel.prototype, 'nackAll');\n    }\n    if (isWrapped(moduleExports.Channel.prototype.emit)) {\n      this._unwrap(moduleExports.Channel.prototype, 'emit');\n    }\n    if (isWrapped(moduleExports.ConfirmChannel.prototype.publish)) {\n      this._unwrap(moduleExports.ConfirmChannel.prototype, 'publish');\n    }\n    return moduleExports;\n  }\n\n  private getConnectPatch(\n    original: (\n      url: string | Options.Connect,\n      socketOptions: any,\n      openCallback: (err: any, connection: Connection) => void\n    ) => Connection\n  ) {\n    return function patchedConnect(\n      this: unknown,\n      url: string | Options.Connect,\n      socketOptions: any,\n      openCallback: Function\n    ) {\n      return original.call(\n        this,\n        url,\n        socketOptions,\n        function (this: unknown, err, conn: Connection) {\n          if (err == null) {\n            const urlAttributes = getConnectionAttributesFromUrl(url);\n            // the type of conn in @types/amqplib is amqp.Connection, but in practice the library send the\n            // `serverProperties` on the `conn` and not in a property `connection`.\n            // I don't have capacity to debug it currently but it should probably be fixed in @types or\n            // in the package itself\n            // currently setting as any to calm typescript\n            const serverAttributes = getConnectionAttributesFromServer(\n              conn as any\n            );\n            (conn as any)[CONNECTION_ATTRIBUTES] = {\n              ...urlAttributes,\n              ...serverAttributes,\n            };\n          }\n          openCallback.apply(this, arguments);\n        }\n      );\n    };\n  }\n\n  private getChannelEmitPatch(original: Function) {\n    const self = this;\n    return function emit(\n      this: InstrumentationConsumeChannel,\n      eventName: string\n    ) {\n      if (eventName === 'close') {\n        self.endAllSpansOnChannel(\n          this,\n          true,\n          EndOperation.ChannelClosed,\n          undefined\n        );\n        const activeTimer = this[CHANNEL_CONSUME_TIMEOUT_TIMER];\n        if (activeTimer) {\n          clearInterval(activeTimer);\n        }\n        this[CHANNEL_CONSUME_TIMEOUT_TIMER] = undefined;\n      } else if (eventName === 'error') {\n        self.endAllSpansOnChannel(\n          this,\n          true,\n          EndOperation.ChannelError,\n          undefined\n        );\n      }\n      return original.apply(this, arguments);\n    };\n  }\n\n  private getAckAllPatch(\n    isRejected: boolean,\n    endOperation: EndOperation,\n    original: Function\n  ) {\n    const self = this;\n    return function ackAll(\n      this: InstrumentationConsumeChannel,\n      requeueOrEmpty?: boolean\n    ): void {\n      self.endAllSpansOnChannel(this, isRejected, endOperation, requeueOrEmpty);\n      return original.apply(this, arguments);\n    };\n  }\n\n  private getAckPatch(\n    isRejected: boolean,\n    endOperation: EndOperation,\n    original: Function\n  ) {\n    const self = this;\n    return function ack(\n      this: InstrumentationConsumeChannel,\n      message: Message,\n      allUpToOrRequeue?: boolean,\n      requeue?: boolean\n    ): void {\n      const channel = this;\n      // we use this patch in reject function as well, but it has different signature\n      const requeueResolved =\n        endOperation === EndOperation.Reject ? allUpToOrRequeue : requeue;\n\n      const spansNotEnded: { msg: Message }[] =\n        channel[CHANNEL_SPANS_NOT_ENDED] ?? [];\n      const msgIndex = spansNotEnded.findIndex(\n        msgDetails => msgDetails.msg === message\n      );\n      if (msgIndex < 0) {\n        // should not happen in happy flow\n        // but possible if user is calling the api function ack twice with same message\n        self.endConsumerSpan(\n          message,\n          isRejected,\n          endOperation,\n          requeueResolved\n        );\n      } else if (endOperation !== EndOperation.Reject && allUpToOrRequeue) {\n        for (let i = 0; i <= msgIndex; i++) {\n          self.endConsumerSpan(\n            spansNotEnded[i].msg,\n            isRejected,\n            endOperation,\n            requeueResolved\n          );\n        }\n        spansNotEnded.splice(0, msgIndex + 1);\n      } else {\n        self.endConsumerSpan(\n          message,\n          isRejected,\n          endOperation,\n          requeueResolved\n        );\n        spansNotEnded.splice(msgIndex, 1);\n      }\n      return original.apply(this, arguments);\n    };\n  }\n\n  private getConsumePatch(\n    moduleVersion: string | undefined,\n    original: Function\n  ) {\n    const self = this;\n    return function consume(\n      this: InstrumentationConsumeChannel,\n      queue: string,\n      onMessage: (msg: ConsumeMessage | null) => void,\n      options?: Options.Consume\n    ): Promise<Replies.Consume> {\n      const channel = this;\n      if (\n        !Object.prototype.hasOwnProperty.call(channel, CHANNEL_SPANS_NOT_ENDED)\n      ) {\n        const { consumeTimeoutMs } = self.getConfig();\n        if (consumeTimeoutMs) {\n          const timer = setInterval(() => {\n            self.checkConsumeTimeoutOnChannel(channel);\n          }, consumeTimeoutMs);\n          timer.unref();\n          channel[CHANNEL_CONSUME_TIMEOUT_TIMER] = timer;\n        }\n        channel[CHANNEL_SPANS_NOT_ENDED] = [];\n      }\n\n      const patchedOnMessage = function (\n        this: unknown,\n        msg: InstrumentationMessage | null\n      ) {\n        // msg is expected to be null for signaling consumer cancel notification\n        // https://www.rabbitmq.com/consumer-cancel.html\n        // in this case, we do not start a span, as this is not a real message.\n        if (!msg) {\n          return onMessage.call(this, msg);\n        }\n\n        const headers = msg.properties.headers ?? {};\n        let parentContext: Context | undefined = propagation.extract(\n          ROOT_CONTEXT,\n          headers\n        );\n        const exchange = msg.fields?.exchange;\n        let links: Link[] | undefined;\n        if (self._config.useLinksForConsume) {\n          const parentSpanContext = parentContext\n            ? trace.getSpan(parentContext)?.spanContext()\n            : undefined;\n          parentContext = undefined;\n          if (parentSpanContext) {\n            links = [\n              {\n                context: parentSpanContext,\n              },\n            ];\n          }\n        }\n        const span = self.tracer.startSpan(\n          `${queue} process`,\n          {\n            kind: SpanKind.CONSUMER,\n            attributes: {\n              ...channel?.connection?.[CONNECTION_ATTRIBUTES],\n              [SEMATTRS_MESSAGING_DESTINATION]: exchange,\n              [SEMATTRS_MESSAGING_DESTINATION_KIND]:\n                MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n              [SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY]: msg.fields?.routingKey,\n              [SEMATTRS_MESSAGING_OPERATION]: MESSAGINGOPERATIONVALUES_PROCESS,\n              [SEMATTRS_MESSAGING_MESSAGE_ID]: msg?.properties.messageId,\n              [SEMATTRS_MESSAGING_CONVERSATION_ID]:\n                msg?.properties.correlationId,\n            },\n            links,\n          },\n          parentContext\n        );\n\n        const { consumeHook } = self.getConfig();\n        if (consumeHook) {\n          safeExecuteInTheMiddle(\n            () => consumeHook(span, { moduleVersion, msg }),\n            e => {\n              if (e) {\n                diag.error('amqplib instrumentation: consumerHook error', e);\n              }\n            },\n            true\n          );\n        }\n\n        if (!options?.noAck) {\n          // store the message on the channel so we can close the span on ackAll etc\n          channel[CHANNEL_SPANS_NOT_ENDED]!.push({\n            msg,\n            timeOfConsume: hrTime(),\n          });\n\n          // store the span on the message, so we can end it when user call 'ack' on it\n          msg[MESSAGE_STORED_SPAN] = span;\n        }\n        const setContext: Context = parentContext\n          ? parentContext\n          : ROOT_CONTEXT;\n        context.with(trace.setSpan(setContext, span), () => {\n          onMessage.call(this, msg);\n        });\n\n        if (options?.noAck) {\n          self.callConsumeEndHook(span, msg, false, EndOperation.AutoAck);\n          span.end();\n        }\n      };\n      arguments[1] = patchedOnMessage;\n      return original.apply(this, arguments);\n    };\n  }\n\n  private getConfirmedPublishPatch(\n    moduleVersion: string | undefined,\n    original: Function\n  ) {\n    const self = this;\n    return function confirmedPublish(\n      this: InstrumentationConsumeChannel,\n      exchange: string,\n      routingKey: string,\n      content: Buffer,\n      options?: Options.Publish,\n      callback?: (err: any, ok: Replies.Empty) => void\n    ): boolean {\n      const channel = this;\n      const { span, modifiedOptions } = self.createPublishSpan(\n        self,\n        exchange,\n        routingKey,\n        channel,\n        options\n      );\n\n      const { publishHook } = self.getConfig();\n      if (publishHook) {\n        safeExecuteInTheMiddle(\n          () =>\n            publishHook(span, {\n              moduleVersion,\n              exchange,\n              routingKey,\n              content,\n              options: modifiedOptions,\n              isConfirmChannel: true,\n            }),\n          e => {\n            if (e) {\n              diag.error('amqplib instrumentation: publishHook error', e);\n            }\n          },\n          true\n        );\n      }\n\n      const patchedOnConfirm = function (\n        this: unknown,\n        err: any,\n        ok: Replies.Empty\n      ) {\n        try {\n          callback?.call(this, err, ok);\n        } finally {\n          const { publishConfirmHook } = self.getConfig();\n          if (publishConfirmHook) {\n            safeExecuteInTheMiddle(\n              () =>\n                publishConfirmHook(span, {\n                  moduleVersion,\n                  exchange,\n                  routingKey,\n                  content,\n                  options,\n                  isConfirmChannel: true,\n                  confirmError: err,\n                }),\n              e => {\n                if (e) {\n                  diag.error(\n                    'amqplib instrumentation: publishConfirmHook error',\n                    e\n                  );\n                }\n              },\n              true\n            );\n          }\n\n          if (err) {\n            span.setStatus({\n              code: SpanStatusCode.ERROR,\n              message: \"message confirmation has been nack'ed\",\n            });\n          }\n          span.end();\n        }\n      };\n\n      // calling confirm channel publish function is storing the message in queue and registering the callback for broker confirm.\n      // span ends in the patched callback.\n      const markedContext = markConfirmChannelTracing(context.active());\n      const argumentsCopy = [...arguments];\n      argumentsCopy[3] = modifiedOptions;\n      argumentsCopy[4] = context.bind(\n        unmarkConfirmChannelTracing(trace.setSpan(markedContext, span)),\n        patchedOnConfirm\n      );\n      return context.with(markedContext, original.bind(this, ...argumentsCopy));\n    };\n  }\n\n  private getPublishPatch(\n    moduleVersion: string | undefined,\n    original: Function\n  ) {\n    const self = this;\n    return function publish(\n      this: InstrumentationPublishChannel,\n      exchange: string,\n      routingKey: string,\n      content: Buffer,\n      options?: Options.Publish\n    ): boolean {\n      if (isConfirmChannelTracing(context.active())) {\n        // work already done\n        return original.apply(this, arguments);\n      } else {\n        const channel = this;\n        const { span, modifiedOptions } = self.createPublishSpan(\n          self,\n          exchange,\n          routingKey,\n          channel,\n          options\n        );\n\n        const { publishHook } = self.getConfig();\n        if (publishHook) {\n          safeExecuteInTheMiddle(\n            () =>\n              publishHook(span, {\n                moduleVersion,\n                exchange,\n                routingKey,\n                content,\n                options: modifiedOptions,\n                isConfirmChannel: false,\n              }),\n            e => {\n              if (e) {\n                diag.error('amqplib instrumentation: publishHook error', e);\n              }\n            },\n            true\n          );\n        }\n\n        // calling normal channel publish function is only storing the message in queue.\n        // it does not send it and waits for an ack, so the span duration is expected to be very short.\n        const argumentsCopy = [...arguments];\n        argumentsCopy[3] = modifiedOptions;\n        const originalRes = original.apply(this, argumentsCopy as any);\n        span.end();\n        return originalRes;\n      }\n    };\n  }\n\n  private createPublishSpan(\n    self: this,\n    exchange: string,\n    routingKey: string,\n    channel: InstrumentationPublishChannel,\n    options?: Options.Publish\n  ) {\n    const normalizedExchange = normalizeExchange(exchange);\n\n    const span = self.tracer.startSpan(`publish ${normalizedExchange}`, {\n      kind: SpanKind.PRODUCER,\n      attributes: {\n        ...channel.connection[CONNECTION_ATTRIBUTES],\n        [SEMATTRS_MESSAGING_DESTINATION]: exchange,\n        [SEMATTRS_MESSAGING_DESTINATION_KIND]:\n          MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n        [SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY]: routingKey,\n        [SEMATTRS_MESSAGING_MESSAGE_ID]: options?.messageId,\n        [SEMATTRS_MESSAGING_CONVERSATION_ID]: options?.correlationId,\n      },\n    });\n    const modifiedOptions = options ?? {};\n    modifiedOptions.headers = modifiedOptions.headers ?? {};\n\n    propagation.inject(\n      trace.setSpan(context.active(), span),\n      modifiedOptions.headers\n    );\n\n    return { span, modifiedOptions };\n  }\n\n  private endConsumerSpan(\n    message: InstrumentationMessage,\n    isRejected: boolean | null,\n    operation: EndOperation,\n    requeue: boolean | undefined\n  ) {\n    const storedSpan: Span | undefined = message[MESSAGE_STORED_SPAN];\n    if (!storedSpan) return;\n    if (isRejected !== false) {\n      storedSpan.setStatus({\n        code: SpanStatusCode.ERROR,\n        message:\n          operation !== EndOperation.ChannelClosed &&\n          operation !== EndOperation.ChannelError\n            ? `${operation} called on message${\n                requeue === true\n                  ? ' with requeue'\n                  : requeue === false\n                  ? ' without requeue'\n                  : ''\n              }`\n            : operation,\n      });\n    }\n    this.callConsumeEndHook(storedSpan, message, isRejected, operation);\n    storedSpan.end();\n    message[MESSAGE_STORED_SPAN] = undefined;\n  }\n\n  private endAllSpansOnChannel(\n    channel: InstrumentationConsumeChannel,\n    isRejected: boolean,\n    operation: EndOperation,\n    requeue: boolean | undefined\n  ) {\n    const spansNotEnded: { msg: Message }[] =\n      channel[CHANNEL_SPANS_NOT_ENDED] ?? [];\n    spansNotEnded.forEach(msgDetails => {\n      this.endConsumerSpan(msgDetails.msg, isRejected, operation, requeue);\n    });\n    channel[CHANNEL_SPANS_NOT_ENDED] = [];\n  }\n\n  private callConsumeEndHook(\n    span: Span,\n    msg: ConsumeMessage,\n    rejected: boolean | null,\n    endOperation: EndOperation\n  ) {\n    const { consumeEndHook } = this.getConfig();\n    if (!consumeEndHook) return;\n\n    safeExecuteInTheMiddle(\n      () => consumeEndHook(span, { msg, rejected, endOperation }),\n      e => {\n        if (e) {\n          diag.error('amqplib instrumentation: consumerEndHook error', e);\n        }\n      },\n      true\n    );\n  }\n\n  private checkConsumeTimeoutOnChannel(channel: InstrumentationConsumeChannel) {\n    const currentTime = hrTime();\n    const spansNotEnded = channel[CHANNEL_SPANS_NOT_ENDED] ?? [];\n    let i: number;\n    const { consumeTimeoutMs } = this.getConfig();\n    for (i = 0; i < spansNotEnded.length; i++) {\n      const currMessage = spansNotEnded[i];\n      const timeFromConsume = hrTimeDuration(\n        currMessage.timeOfConsume,\n        currentTime\n      );\n      if (hrTimeToMilliseconds(timeFromConsume) < consumeTimeoutMs!) {\n        break;\n      }\n      this.endConsumerSpan(\n        currMessage.msg,\n        null,\n        EndOperation.InstrumentationTimeout,\n        true\n      );\n    }\n    spansNotEnded.splice(0, i);\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,MAAA,sCAW4B;AAC5B,MAAA,wCAI6B;AAC7B,MAAA,8DAMwC;AACxC,MAAA,wEAS6C;AAQ7C,MAAA,6BAIiB;AACjB,MAAA,6BAciB;AACjB,MAAA,iCAA0D;AAE1D,MAAM,iBAAiB,GAAG;IAAC,YAAY;CAAC,CAAC;AAEzC,MAAa,sBAAuB,SAAQ,kBAAA,mBAAiD;IAC3F,YAAY,SAAuC,CAAA,CAAE,CAAA;QACnD,KAAK,CAAC,UAAA,YAAY,EAAE,UAAA,eAAe,EAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GAAO,QAAA,cAAc,GAAK,MAAM,EAAG,CAAC;IACzE,CAAC;IAEQ,SAAS,CAAC,SAAuC,CAAA,CAAE,EAAA;QAC1D,KAAK,CAAC,SAAS,CAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GAAM,QAAA,cAAc,GAAK,MAAM,EAAG,CAAC;IACpD,CAAC;IAES,IAAI,GAAA;QACZ,MAAM,sBAAsB,GAAG,IAAI,kBAAA,6BAA6B,CAC9D,8BAA8B,EAC9B,iBAAiB,EACjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EACjC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,CAAC;QAEF,MAAM,uBAAuB,GAAG,IAAI,kBAAA,6BAA6B,CAC/D,+BAA+B,EAC/B,iBAAiB,EACjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EACjC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,CAAC;QAEF,MAAM,iBAAiB,GAAG,IAAI,kBAAA,6BAA6B,CACzD,wBAAwB,EACxB,iBAAiB,EACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAC/B,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,kBAAA,mCAAmC,CACpD,SAAS,EACT,iBAAiB,EACjB,SAAS,EACT,SAAS,EACT;YAAC,sBAAsB;YAAE,iBAAiB;YAAE,uBAAuB;SAAC,CACrE,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,YAAY,CAAC,aAAkB,EAAA;QACrC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACvE;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IAEO,cAAc,CAAC,aAAkB,EAAA;QACvC,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,EAAE;YACpC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;SACxC;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IAEO,iBAAiB,CACvB,aAAkB,EAClB,aAAiC,EAAA;QAEjC,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACvD,IAAI,CAAC,KAAK,CACR,aAAa,CAAC,OAAO,CAAC,SAAS,EAC/B,SAAS,EACT,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAC/C,CAAC;SACH;QACD,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACvD,IAAI,CAAC,KAAK,CACR,aAAa,CAAC,OAAO,CAAC,SAAS,EAC/B,SAAS,EACT,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAC/C,CAAC;SACH;QACD,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnD,IAAI,CAAC,KAAK,CACR,aAAa,CAAC,OAAO,CAAC,SAAS,EAC/B,KAAK,EACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,QAAA,YAAY,CAAC,GAAG,CAAC,CACrD,CAAC;SACH;QACD,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpD,IAAI,CAAC,KAAK,CACR,aAAa,CAAC,OAAO,CAAC,SAAS,EAC/B,MAAM,EACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,QAAA,YAAY,CAAC,IAAI,CAAC,CACrD,CAAC;SACH;QACD,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACtD,IAAI,CAAC,KAAK,CACR,aAAa,CAAC,OAAO,CAAC,SAAS,EAC/B,QAAQ,EACR,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,QAAA,YAAY,CAAC,MAAM,CAAC,CACvD,CAAC;SACH;QACD,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACtD,IAAI,CAAC,KAAK,CACR,aAAa,CAAC,OAAO,CAAC,SAAS,EAC/B,QAAQ,EACR,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,QAAA,YAAY,CAAC,MAAM,CAAC,CAC3D,CAAC;SACH;QACD,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACvD,IAAI,CAAC,KAAK,CACR,aAAa,CAAC,OAAO,CAAC,SAAS,EAC/B,SAAS,EACT,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,QAAA,YAAY,CAAC,OAAO,CAAC,CAC3D,CAAC;SACH;QACD,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpD,IAAI,CAAC,KAAK,CACR,aAAa,CAAC,OAAO,CAAC,SAAS,EAC/B,MAAM,EACN,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,CAAC;SACH;QACD,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAC9D,IAAI,CAAC,KAAK,CACR,aAAa,CAAC,cAAc,CAAC,SAAS,EACtC,SAAS,EACT,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CACxD,CAAC;SACH;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IAEO,mBAAmB,CAAC,aAAkB,EAAA;QAC5C,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACtD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SAC1D;QACD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACtD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SAC1D;QACD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACtD;QACD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;SACvD;QACD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SACzD;QACD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SACzD;QACD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACtD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SAC1D;QACD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;SACvD;QACD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAC7D,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SACjE;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IAEO,eAAe,CACrB,QAIe,EAAA;QAEf,OAAO,SAAS,cAAc,CAE5B,GAA6B,EAC7B,aAAkB,EAClB,YAAsB;YAEtB,OAAO,QAAQ,CAAC,IAAI,CAClB,IAAI,EACJ,GAAG,EACH,aAAa,EACb,SAAyB,GAAG,EAAE,IAAgB;gBAC5C,IAAI,GAAG,IAAI,IAAI,EAAE;oBACf,MAAM,aAAa,GAAG,CAAA,GAAA,QAAA,8BAA8B,EAAC,GAAG,CAAC,CAAC;oBAC1D,8FAA8F;oBAC9F,uEAAuE;oBACvE,2FAA2F;oBAC3F,wBAAwB;oBACxB,8CAA8C;oBAC9C,MAAM,gBAAgB,GAAG,CAAA,GAAA,QAAA,iCAAiC,EACxD,IAAW,CACZ,CAAC;oBACD,IAAY,CAAC,QAAA,qBAAqB,CAAC,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GAC/B,aAAa,GACb,gBAAgB,CACpB,CAAC;iBACH;gBACD,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACtC,CAAC,CACF,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,mBAAmB,CAAC,QAAkB,EAAA;QAC5C,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,SAAS,IAAI,CAElB,SAAiB;YAEjB,IAAI,SAAS,KAAK,OAAO,EAAE;gBACzB,IAAI,CAAC,oBAAoB,CACvB,IAAI,EACJ,IAAI,EACJ,QAAA,YAAY,CAAC,aAAa,EAC1B,SAAS,CACV,CAAC;gBACF,MAAM,WAAW,GAAG,IAAI,CAAC,QAAA,6BAA6B,CAAC,CAAC;gBACxD,IAAI,WAAW,EAAE;oBACf,aAAa,CAAC,WAAW,CAAC,CAAC;iBAC5B;gBACD,IAAI,CAAC,QAAA,6BAA6B,CAAC,GAAG,SAAS,CAAC;aACjD,MAAM,IAAI,SAAS,KAAK,OAAO,EAAE;gBAChC,IAAI,CAAC,oBAAoB,CACvB,IAAI,EACJ,IAAI,EACJ,QAAA,YAAY,CAAC,YAAY,EACzB,SAAS,CACV,CAAC;aACH;YACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAEO,cAAc,CACpB,UAAmB,EACnB,YAA0B,EAC1B,QAAkB,EAAA;QAElB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,SAAS,MAAM,CAEpB,cAAwB;YAExB,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;YAC1E,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAEO,WAAW,CACjB,UAAmB,EACnB,YAA0B,EAC1B,QAAkB,EAAA;QAElB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,SAAS,GAAG,CAEjB,OAAgB,EAChB,gBAA0B,EAC1B,OAAiB;;YAEjB,MAAM,OAAO,GAAG,IAAI,CAAC;YACrB,+EAA+E;YAC/E,MAAM,eAAe,GACnB,YAAY,KAAK,QAAA,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC;YAEpE,MAAM,aAAa,GACjB,CAAA,KAAA,OAAO,CAAC,QAAA,uBAAuB,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;YACzC,MAAM,QAAQ,GAAG,aAAa,CAAC,SAAS,EACtC,UAAU,CAAC,EAAE,AAAC,UAAU,CAAC,GAAG,KAAK,OAAO,CACzC,CAAC;YACF,IAAI,QAAQ,GAAG,CAAC,EAAE;gBAChB,kCAAkC;gBAClC,+EAA+E;gBAC/E,IAAI,CAAC,eAAe,CAClB,OAAO,EACP,UAAU,EACV,YAAY,EACZ,eAAe,CAChB,CAAC;aACH,MAAM,IAAI,YAAY,KAAK,QAAA,YAAY,CAAC,MAAM,IAAI,gBAAgB,EAAE;gBACnE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAE,CAAE;oBAClC,IAAI,CAAC,eAAe,CAClB,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,EACpB,UAAU,EACV,YAAY,EACZ,eAAe,CAChB,CAAC;iBACH;gBACD,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;aACvC,MAAM;gBACL,IAAI,CAAC,eAAe,CAClB,OAAO,EACP,UAAU,EACV,YAAY,EACZ,eAAe,CAChB,CAAC;gBACF,aAAa,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;aACnC;YACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAEO,eAAe,CACrB,aAAiC,EACjC,QAAkB,EAAA;QAElB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,SAAS,OAAO,CAErB,KAAa,EACb,SAA+C,EAC/C,OAAyB;YAEzB,MAAM,OAAO,GAAG,IAAI,CAAC;YACrB,IACE,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,QAAA,uBAAuB,CAAC,EACvE;gBACA,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC9C,IAAI,gBAAgB,EAAE;oBACpB,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE;wBAC7B,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;oBAC7C,CAAC,EAAE,gBAAgB,CAAC,CAAC;oBACrB,KAAK,CAAC,KAAK,EAAE,CAAC;oBACd,OAAO,CAAC,QAAA,6BAA6B,CAAC,GAAG,KAAK,CAAC;iBAChD;gBACD,OAAO,CAAC,QAAA,uBAAuB,CAAC,GAAG,EAAE,CAAC;aACvC;YAED,MAAM,gBAAgB,GAAG,SAEvB,GAAkC;;gBAElC,wEAAwE;gBACxE,gDAAgD;gBAChD,uEAAuE;gBACvE,IAAI,CAAC,GAAG,EAAE;oBACR,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;iBAClC;gBAED,MAAM,OAAO,GAAG,CAAA,KAAA,GAAG,CAAC,UAAU,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,CAAE,CAAC;gBAC7C,IAAI,aAAa,GAAwB,MAAA,WAAW,CAAC,OAAO,CAC1D,MAAA,YAAY,EACZ,OAAO,CACR,CAAC;gBACF,MAAM,QAAQ,GAAG,CAAA,KAAA,GAAG,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,QAAQ,CAAC;gBACtC,IAAI,KAAyB,CAAC;gBAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;oBACnC,MAAM,iBAAiB,GAAG,aAAa,GACnC,CAAA,KAAA,MAAA,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,WAAW,EAAE,GAC3C,SAAS,CAAC;oBACd,aAAa,GAAG,SAAS,CAAC;oBAC1B,IAAI,iBAAiB,EAAE;wBACrB,KAAK,GAAG;4BACN;gCACE,OAAO,EAAE,iBAAiB;6BAC3B;yBACF,CAAC;qBACH;iBACF;gBACD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAChC,GAAG,KAAK,CAAA,QAAA,CAAU,EAClB;oBACE,IAAI,EAAE,MAAA,QAAQ,CAAC,QAAQ;oBACvB,UAAU,EAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,CAAA,KAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,EAAA,CAAG,QAAA,qBAAqB,CAAC,GAAA;wBAC/C,CAAC,uBAAA,8BAA8B,CAAC,EAAE,QAAQ;wBAC1C,CAAC,uBAAA,mCAAmC,CAAC,EACnC,uBAAA,oCAAoC;wBACtC,CAAC,uBAAA,uCAAuC,CAAC,EAAE,CAAA,KAAA,GAAG,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,UAAU;wBACjE,CAAC,uBAAA,4BAA4B,CAAC,EAAE,uBAAA,gCAAgC;wBAChE,CAAC,uBAAA,6BAA6B,CAAC,EAAE,GAAG,KAAA,QAAH,GAAG,KAAA,KAAA,IAAA,KAAA,IAAH,GAAG,CAAE,UAAU,CAAC,SAAS;wBAC1D,CAAC,uBAAA,kCAAkC,CAAC,EAClC,GAAG,KAAA,QAAH,GAAG,KAAA,KAAA,IAAA,KAAA,IAAH,GAAG,CAAE,UAAU,CAAC,aAAa;oBAAA,EAChC;oBACD,KAAK;iBACN,EACD,aAAa,CACd,CAAC;gBAEF,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBACzC,IAAI,WAAW,EAAE;oBACf,CAAA,GAAA,kBAAA,sBAAsB,EACpB,GAAG,CAAG,CAAD,UAAY,CAAC,IAAI,EAAE;4BAAE,aAAa;4BAAE,GAAG;wBAAA,CAAE,CAAC,GAC/C,CAAC,CAAC,EAAE;wBACF,IAAI,CAAC,EAAE;4BACL,MAAA,IAAI,CAAC,KAAK,CAAC,6CAA6C,EAAE,CAAC,CAAC,CAAC;yBAC9D;oBACH,CAAC,EACD,IAAI,CACL,CAAC;iBACH;gBAED,IAAI,CAAC,CAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,KAAK,CAAA,EAAE;oBACnB,0EAA0E;oBAC1E,OAAO,CAAC,QAAA,uBAAuB,CAAE,CAAC,IAAI,CAAC;wBACrC,GAAG;wBACH,aAAa,EAAE,CAAA,GAAA,OAAA,MAAM,GAAE;qBACxB,CAAC,CAAC;oBAEH,6EAA6E;oBAC7E,GAAG,CAAC,QAAA,mBAAmB,CAAC,GAAG,IAAI,CAAC;iBACjC;gBACD,MAAM,UAAU,GAAY,aAAa,GACrC,aAAa,GACb,MAAA,YAAY,CAAC;gBACjB,MAAA,OAAO,CAAC,IAAI,CAAC,MAAA,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE;oBACjD,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;gBAEH,IAAI,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,KAAK,EAAE;oBAClB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,QAAA,YAAY,CAAC,OAAO,CAAC,CAAC;oBAChE,IAAI,CAAC,GAAG,EAAE,CAAC;iBACZ;YACH,CAAC,CAAC;YACF,SAAS,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC;YAChC,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAEO,wBAAwB,CAC9B,aAAiC,EACjC,QAAkB,EAAA;QAElB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,SAAS,gBAAgB,CAE9B,QAAgB,EAChB,UAAkB,EAClB,OAAe,EACf,OAAyB,EACzB,QAAgD;YAEhD,MAAM,OAAO,GAAG,IAAI,CAAC;YACrB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,iBAAiB,CACtD,IAAI,EACJ,QAAQ,EACR,UAAU,EACV,OAAO,EACP,OAAO,CACR,CAAC;YAEF,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YACzC,IAAI,WAAW,EAAE;gBACf,CAAA,GAAA,kBAAA,sBAAsB,EACpB,GAAG,CACD,CADG,UACQ,CAAC,IAAI,EAAE;wBAChB,aAAa;wBACb,QAAQ;wBACR,UAAU;wBACV,OAAO;wBACP,OAAO,EAAE,eAAe;wBACxB,gBAAgB,EAAE,IAAI;qBACvB,CAAC,GACJ,CAAC,CAAC,EAAE;oBACF,IAAI,CAAC,EAAE;wBACL,MAAA,IAAI,CAAC,KAAK,CAAC,4CAA4C,EAAE,CAAC,CAAC,CAAC;qBAC7D;gBACH,CAAC,EACD,IAAI,CACL,CAAC;aACH;YAED,MAAM,gBAAgB,GAAG,SAEvB,GAAQ,EACR,EAAiB;gBAEjB,IAAI;oBACF,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;iBAC/B,QAAS;oBACR,MAAM,EAAE,kBAAkB,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;oBAChD,IAAI,kBAAkB,EAAE;wBACtB,CAAA,GAAA,kBAAA,sBAAsB,EACpB,GAAG,CACD,CADG,iBACe,CAAC,IAAI,EAAE;gCACvB,aAAa;gCACb,QAAQ;gCACR,UAAU;gCACV,OAAO;gCACP,OAAO;gCACP,gBAAgB,EAAE,IAAI;gCACtB,YAAY,EAAE,GAAG;6BAClB,CAAC,GACJ,CAAC,CAAC,EAAE;4BACF,IAAI,CAAC,EAAE;gCACL,MAAA,IAAI,CAAC,KAAK,CACR,mDAAmD,EACnD,CAAC,CACF,CAAC;6BACH;wBACH,CAAC,EACD,IAAI,CACL,CAAC;qBACH;oBAED,IAAI,GAAG,EAAE;wBACP,IAAI,CAAC,SAAS,CAAC;4BACb,IAAI,EAAE,MAAA,cAAc,CAAC,KAAK;4BAC1B,OAAO,EAAE,uCAAuC;yBACjD,CAAC,CAAC;qBACJ;oBACD,IAAI,CAAC,GAAG,EAAE,CAAC;iBACZ;YACH,CAAC,CAAC;YAEF,4HAA4H;YAC5H,qCAAqC;YACrC,MAAM,aAAa,GAAG,CAAA,GAAA,QAAA,yBAAyB,EAAC,MAAA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;YAClE,MAAM,aAAa,GAAG,CAAC;mBAAG,SAAS;aAAC,CAAC;YACrC,aAAa,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC;YACnC,aAAa,CAAC,CAAC,CAAC,GAAG,MAAA,OAAO,CAAC,IAAI,CAC7B,CAAA,GAAA,QAAA,2BAA2B,EAAC,MAAA,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,EAC/D,gBAAgB,CACjB,CAAC;YACF,OAAO,MAAA,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC;QAC5E,CAAC,CAAC;IACJ,CAAC;IAEO,eAAe,CACrB,aAAiC,EACjC,QAAkB,EAAA;QAElB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,SAAS,OAAO,CAErB,QAAgB,EAChB,UAAkB,EAClB,OAAe,EACf,OAAyB;YAEzB,IAAI,CAAA,GAAA,QAAA,uBAAuB,EAAC,MAAA,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;gBAC7C,oBAAoB;gBACpB,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aACxC,MAAM;gBACL,MAAM,OAAO,GAAG,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,iBAAiB,CACtD,IAAI,EACJ,QAAQ,EACR,UAAU,EACV,OAAO,EACP,OAAO,CACR,CAAC;gBAEF,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBACzC,IAAI,WAAW,EAAE;oBACf,CAAA,GAAA,kBAAA,sBAAsB,EACpB,GAAG,CACD,CADG,UACQ,CAAC,IAAI,EAAE;4BAChB,aAAa;4BACb,QAAQ;4BACR,UAAU;4BACV,OAAO;4BACP,OAAO,EAAE,eAAe;4BACxB,gBAAgB,EAAE,KAAK;yBACxB,CAAC,GACJ,CAAC,CAAC,EAAE;wBACF,IAAI,CAAC,EAAE;4BACL,MAAA,IAAI,CAAC,KAAK,CAAC,4CAA4C,EAAE,CAAC,CAAC,CAAC;yBAC7D;oBACH,CAAC,EACD,IAAI,CACL,CAAC;iBACH;gBAED,gFAAgF;gBAChF,+FAA+F;gBAC/F,MAAM,aAAa,GAAG,CAAC;uBAAG,SAAS;iBAAC,CAAC;gBACrC,aAAa,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC;gBACnC,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,aAAoB,CAAC,CAAC;gBAC/D,IAAI,CAAC,GAAG,EAAE,CAAC;gBACX,OAAO,WAAW,CAAC;aACpB;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,iBAAiB,CACvB,IAAU,EACV,QAAgB,EAChB,UAAkB,EAClB,OAAsC,EACtC,OAAyB,EAAA;;QAEzB,MAAM,kBAAkB,GAAG,CAAA,GAAA,QAAA,iBAAiB,EAAC,QAAQ,CAAC,CAAC;QAEvD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA,QAAA,EAAW,kBAAkB,EAAE,EAAE;YAClE,IAAI,EAAE,MAAA,QAAQ,CAAC,QAAQ;YACvB,UAAU,EAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,OAAO,CAAC,UAAU,CAAC,QAAA,qBAAqB,CAAC,GAAA;gBAC5C,CAAC,uBAAA,8BAA8B,CAAC,EAAE,QAAQ;gBAC1C,CAAC,uBAAA,mCAAmC,CAAC,EACnC,uBAAA,oCAAoC;gBACtC,CAAC,uBAAA,uCAAuC,CAAC,EAAE,UAAU;gBACrD,CAAC,uBAAA,6BAA6B,CAAC,EAAE,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,SAAS;gBACnD,CAAC,uBAAA,kCAAkC,CAAC,EAAE,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,aAAa;YAAA,EAC7D;SACF,CAAC,CAAC;QACH,MAAM,eAAe,GAAG,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAP,OAAO,GAAI,CAAA,CAAE,CAAC;QACtC,eAAe,CAAC,OAAO,GAAG,CAAA,KAAA,eAAe,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,CAAE,CAAC;QAExD,MAAA,WAAW,CAAC,MAAM,CAChB,MAAA,KAAK,CAAC,OAAO,CAAC,MAAA,OAAO,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,EACrC,eAAe,CAAC,OAAO,CACxB,CAAC;QAEF,OAAO;YAAE,IAAI;YAAE,eAAe;QAAA,CAAE,CAAC;IACnC,CAAC;IAEO,eAAe,CACrB,OAA+B,EAC/B,UAA0B,EAC1B,SAAuB,EACvB,OAA4B,EAAA;QAE5B,MAAM,UAAU,GAAqB,OAAO,CAAC,QAAA,mBAAmB,CAAC,CAAC;QAClE,IAAI,CAAC,UAAU,EAAE,OAAO;QACxB,IAAI,UAAU,KAAK,KAAK,EAAE;YACxB,UAAU,CAAC,SAAS,CAAC;gBACnB,IAAI,EAAE,MAAA,cAAc,CAAC,KAAK;gBAC1B,OAAO,EACL,SAAS,KAAK,QAAA,YAAY,CAAC,aAAa,IACxC,SAAS,KAAK,QAAA,YAAY,CAAC,YAAY,GACnC,GAAG,SAAS,CAAA,kBAAA,EACV,OAAO,KAAK,IAAI,GACZ,eAAe,GACf,OAAO,KAAK,KAAK,GACjB,kBAAkB,GAClB,EACN,EAAE,GACF,SAAS;aAChB,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;QACpE,UAAU,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,QAAA,mBAAmB,CAAC,GAAG,SAAS,CAAC;IAC3C,CAAC;IAEO,oBAAoB,CAC1B,OAAsC,EACtC,UAAmB,EACnB,SAAuB,EACvB,OAA4B,EAAA;;QAE5B,MAAM,aAAa,GACjB,CAAA,KAAA,OAAO,CAAC,QAAA,uBAAuB,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACzC,aAAa,CAAC,OAAO,EAAC,UAAU,CAAC,EAAE;YACjC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,QAAA,uBAAuB,CAAC,GAAG,EAAE,CAAC;IACxC,CAAC;IAEO,kBAAkB,CACxB,IAAU,EACV,GAAmB,EACnB,QAAwB,EACxB,YAA0B,EAAA;QAE1B,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC5C,IAAI,CAAC,cAAc,EAAE,OAAO;QAE5B,CAAA,GAAA,kBAAA,sBAAsB,EACpB,GAAG,CAAG,CAAD,aAAe,CAAC,IAAI,EAAE;gBAAE,GAAG;gBAAE,QAAQ;gBAAE,YAAY;YAAA,CAAE,CAAC,GAC3D,CAAC,CAAC,EAAE;YACF,IAAI,CAAC,EAAE;gBACL,MAAA,IAAI,CAAC,KAAK,CAAC,gDAAgD,EAAE,CAAC,CAAC,CAAC;aACjE;QACH,CAAC,EACD,IAAI,CACL,CAAC;IACJ,CAAC;IAEO,4BAA4B,CAAC,OAAsC,EAAA;;QACzE,MAAM,WAAW,GAAG,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC;QAC7B,MAAM,aAAa,GAAG,CAAA,KAAA,OAAO,CAAC,QAAA,uBAAuB,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7D,IAAI,CAAS,CAAC;QACd,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9C,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACzC,MAAM,WAAW,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,eAAe,GAAG,CAAA,GAAA,OAAA,cAAc,EACpC,WAAW,CAAC,aAAa,EACzB,WAAW,CACZ,CAAC;YACF,IAAI,CAAA,GAAA,OAAA,oBAAoB,EAAC,eAAe,CAAC,GAAG,gBAAiB,EAAE;gBAC7D,MAAM;aACP;YACD,IAAI,CAAC,eAAe,CAClB,WAAW,CAAC,GAAG,EACf,IAAI,EACJ,QAAA,YAAY,CAAC,sBAAsB,EACnC,IAAI,CACL,CAAC;SACH;QACD,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;CACF;AA9qBD,QAAA,sBAAA,GAAA,uBA8qBC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8768, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-amqplib/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './amqplib';\nexport * from './types';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,qJAAA,SAA0B;AAC1B,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8809, "column": 0}, "map": {"version":3,"file":"AWSXRayPropagator.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-aws-xray/src/AWSXRayPropagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  trace,\n  Context,\n  TextMapPropagator,\n  SpanContext,\n  TraceFlags,\n  TextMapSetter,\n  TextMapGetter,\n  isSpanContextValid,\n  isValidSpanId,\n  isValidTraceId,\n  INVALID_TRACEID,\n  INVALID_SPANID,\n  INVALID_SPAN_CONTEXT,\n} from '@opentelemetry/api';\n\nexport const AWSXRAY_TRACE_ID_HEADER = 'x-amzn-trace-id';\n\nconst TRACE_HEADER_DELIMITER = ';';\nconst KV_DELIMITER = '=';\n\nconst TRACE_ID_KEY = 'Root';\nconst TRACE_ID_LENGTH = 35;\nconst TRACE_ID_VERSION = '1';\nconst TRACE_ID_DELIMITER = '-';\nconst TRACE_ID_DELIMITER_INDEX_1 = 1;\nconst TRACE_ID_DELIMITER_INDEX_2 = 10;\nconst TRACE_ID_FIRST_PART_LENGTH = 8;\n\nconst PARENT_ID_KEY = 'Parent';\n\nconst SAMPLED_FLAG_KEY = 'Sampled';\nconst IS_SAMPLED = '1';\nconst NOT_SAMPLED = '0';\n\n/**\n * Implementation of the AWS X-Ray Trace Header propagation protocol. See <a href=\n * https://https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-tracingheader>AWS\n * Tracing header spec</a>\n *\n * An example AWS Xray Tracing Header is shown below:\n * X-Amzn-Trace-Id: Root=1-5759e988-bd862e3fe1be46a994272793;Parent=53995c3f42cd8ad8;Sampled=1\n */\nexport class AWSXRayPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter) {\n    const spanContext = trace.getSpan(context)?.spanContext();\n    if (!spanContext || !isSpanContextValid(spanContext)) return;\n\n    const otTraceId = spanContext.traceId;\n    const timestamp = otTraceId.substring(0, TRACE_ID_FIRST_PART_LENGTH);\n    const randomNumber = otTraceId.substring(TRACE_ID_FIRST_PART_LENGTH);\n\n    const parentId = spanContext.spanId;\n    const samplingFlag =\n      (TraceFlags.SAMPLED & spanContext.traceFlags) === TraceFlags.SAMPLED\n        ? IS_SAMPLED\n        : NOT_SAMPLED;\n    // TODO: Add OT trace state to the X-Ray trace header\n\n    const traceHeader = `Root=1-${timestamp}-${randomNumber};Parent=${parentId};Sampled=${samplingFlag}`;\n    setter.set(carrier, AWSXRAY_TRACE_ID_HEADER, traceHeader);\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const spanContext = this.getSpanContextFromHeader(carrier, getter);\n    if (!isSpanContextValid(spanContext)) return context;\n\n    return trace.setSpan(context, trace.wrapSpanContext(spanContext));\n  }\n\n  fields(): string[] {\n    return [AWSXRAY_TRACE_ID_HEADER];\n  }\n\n  private getSpanContextFromHeader(\n    carrier: unknown,\n    getter: TextMapGetter\n  ): SpanContext {\n    const headerKeys = getter.keys(carrier);\n    const relevantHeaderKey = headerKeys.find(e => {\n      return e.toLowerCase() === AWSXRAY_TRACE_ID_HEADER;\n    });\n    if (!relevantHeaderKey) {\n      return INVALID_SPAN_CONTEXT;\n    }\n    const rawTraceHeader = getter.get(carrier, relevantHeaderKey);\n    const traceHeader = Array.isArray(rawTraceHeader)\n      ? rawTraceHeader[0]\n      : rawTraceHeader;\n\n    if (!traceHeader || typeof traceHeader !== 'string') {\n      return INVALID_SPAN_CONTEXT;\n    }\n\n    let pos = 0;\n    let trimmedPart: string;\n    let parsedTraceId = INVALID_TRACEID;\n    let parsedSpanId = INVALID_SPANID;\n    let parsedTraceFlags = null;\n    while (pos < traceHeader.length) {\n      const delimiterIndex = traceHeader.indexOf(TRACE_HEADER_DELIMITER, pos);\n      if (delimiterIndex >= 0) {\n        trimmedPart = traceHeader.substring(pos, delimiterIndex).trim();\n        pos = delimiterIndex + 1;\n      } else {\n        //last part\n        trimmedPart = traceHeader.substring(pos).trim();\n        pos = traceHeader.length;\n      }\n      const equalsIndex = trimmedPart.indexOf(KV_DELIMITER);\n\n      const value = trimmedPart.substring(equalsIndex + 1);\n\n      if (trimmedPart.startsWith(TRACE_ID_KEY)) {\n        parsedTraceId = AWSXRayPropagator._parseTraceId(value);\n      } else if (trimmedPart.startsWith(PARENT_ID_KEY)) {\n        parsedSpanId = AWSXRayPropagator._parseSpanId(value);\n      } else if (trimmedPart.startsWith(SAMPLED_FLAG_KEY)) {\n        parsedTraceFlags = AWSXRayPropagator._parseTraceFlag(value);\n      }\n    }\n    if (parsedTraceFlags === null) {\n      return INVALID_SPAN_CONTEXT;\n    }\n    const resultSpanContext: SpanContext = {\n      traceId: parsedTraceId,\n      spanId: parsedSpanId,\n      traceFlags: parsedTraceFlags,\n      isRemote: true,\n    };\n    if (!isSpanContextValid(resultSpanContext)) {\n      return INVALID_SPAN_CONTEXT;\n    }\n    return resultSpanContext;\n  }\n\n  private static _parseTraceId(xrayTraceId: string): string {\n    // Check length of trace id\n    if (xrayTraceId.length !== TRACE_ID_LENGTH) {\n      return INVALID_TRACEID;\n    }\n\n    // Check version trace id version\n    if (!xrayTraceId.startsWith(TRACE_ID_VERSION)) {\n      return INVALID_TRACEID;\n    }\n\n    // Check delimiters\n    if (\n      xrayTraceId.charAt(TRACE_ID_DELIMITER_INDEX_1) !== TRACE_ID_DELIMITER ||\n      xrayTraceId.charAt(TRACE_ID_DELIMITER_INDEX_2) !== TRACE_ID_DELIMITER\n    ) {\n      return INVALID_TRACEID;\n    }\n\n    const epochPart = xrayTraceId.substring(\n      TRACE_ID_DELIMITER_INDEX_1 + 1,\n      TRACE_ID_DELIMITER_INDEX_2\n    );\n    const uniquePart = xrayTraceId.substring(\n      TRACE_ID_DELIMITER_INDEX_2 + 1,\n      TRACE_ID_LENGTH\n    );\n    const resTraceId = epochPart + uniquePart;\n\n    // Check the content of trace id\n    if (!isValidTraceId(resTraceId)) {\n      return INVALID_TRACEID;\n    }\n\n    return resTraceId;\n  }\n\n  private static _parseSpanId(xrayParentId: string): string {\n    return isValidSpanId(xrayParentId) ? xrayParentId : INVALID_SPANID;\n  }\n\n  private static _parseTraceFlag(xraySampledFlag: string): TraceFlags | null {\n    if (xraySampledFlag === NOT_SAMPLED) {\n      return TraceFlags.NONE;\n    }\n    if (xraySampledFlag === IS_SAMPLED) {\n      return TraceFlags.SAMPLED;\n    }\n    return null;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8971, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagator-aws-xray/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  AWSXRAY_TRACE_ID_HEADER,\n  AWSXRayPropagator,\n} from './AWSXRayPropagator';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,OAAO,EACL,uBAAuB,EACvB,iBAAiB,GAClB,MAAM,qBAAqB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9026, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-lambda/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.43.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-aws-lambda';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,2CAA2C,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9053, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-lambda/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as path from 'path';\nimport * as fs from 'fs';\n\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  Context as OtelContext,\n  context as otelContext,\n  diag,\n  trace,\n  propagation,\n  MeterProvider,\n  Span,\n  SpanKind,\n  SpanStatusCode,\n  TextMapGetter,\n  TraceFlags,\n  TracerProvider,\n  ROOT_CONTEXT,\n} from '@opentelemetry/api';\nimport {\n  AWSXRAY_TRACE_ID_HEADER,\n  AWSXRayPropagator,\n} from '@opentelemetry/propagator-aws-xray';\nimport {\n  SEMATTRS_FAAS_EXECUTION,\n  SEMRESATTRS_CLOUD_ACCOUNT_ID,\n  SEMRESATTRS_FAAS_ID,\n} from '@opentelemetry/semantic-conventions';\n\nimport {\n  APIGatewayProxyEventHeaders,\n  Callback,\n  Context,\n  Handler,\n} from 'aws-lambda';\n\nimport { AwsLambdaInstrumentationConfig, EventContextExtractor } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { env } from 'process';\nimport { LambdaModule } from './internal-types';\n\nconst awsPropagator = new AWSXRayPropagator();\nconst headerGetter: TextMapGetter<APIGatewayProxyEventHeaders> = {\n  keys(carrier): string[] {\n    return Object.keys(carrier);\n  },\n  get(carrier, key: string) {\n    return carrier[key];\n  },\n};\n\nexport const traceContextEnvironmentKey = '_X_AMZN_TRACE_ID';\n\nexport class AwsLambdaInstrumentation extends InstrumentationBase {\n  private _traceForceFlusher?: () => Promise<void>;\n  private _metricForceFlusher?: () => Promise<void>;\n\n  protected override _config!: AwsLambdaInstrumentationConfig;\n\n  constructor(config: AwsLambdaInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n    if (this._config.disableAwsContextPropagation == null) {\n      if (\n        typeof env['OTEL_LAMBDA_DISABLE_AWS_CONTEXT_PROPAGATION'] ===\n          'string' &&\n        env[\n          'OTEL_LAMBDA_DISABLE_AWS_CONTEXT_PROPAGATION'\n        ].toLocaleLowerCase() === 'true'\n      ) {\n        this._config.disableAwsContextPropagation = true;\n      }\n    }\n  }\n\n  override setConfig(config: AwsLambdaInstrumentationConfig = {}) {\n    this._config = config;\n  }\n\n  init() {\n    const taskRoot = process.env.LAMBDA_TASK_ROOT;\n    const handlerDef = this._config.lambdaHandler ?? process.env._HANDLER;\n\n    // _HANDLER and LAMBDA_TASK_ROOT are always defined in Lambda but guard bail out if in the future this changes.\n    if (!taskRoot || !handlerDef) {\n      this._diag.debug(\n        'Skipping lambda instrumentation: no _HANDLER/lambdaHandler or LAMBDA_TASK_ROOT.',\n        { taskRoot, handlerDef }\n      );\n      return [];\n    }\n\n    const handler = path.basename(handlerDef);\n    const moduleRoot = handlerDef.substr(0, handlerDef.length - handler.length);\n\n    const [module, functionName] = handler.split('.', 2);\n\n    // Lambda loads user function using an absolute path.\n    let filename = path.resolve(taskRoot, moduleRoot, module);\n    if (!filename.endsWith('.js')) {\n      // its impossible to know in advance if the user has a cjs or js file.\n      // check that the .js file exists otherwise fallback to next known possibility\n      try {\n        fs.statSync(`${filename}.js`);\n        filename += '.js';\n      } catch (e) {\n        // fallback to .cjs\n        filename += '.cjs';\n      }\n    }\n\n    diag.debug('Instrumenting lambda handler', {\n      taskRoot,\n      handlerDef,\n      handler,\n      moduleRoot,\n      module,\n      filename,\n      functionName,\n    });\n\n    return [\n      new InstrumentationNodeModuleDefinition(\n        // NB: The patching infrastructure seems to match names backwards, this must be the filename, while\n        // InstrumentationNodeModuleFile must be the module name.\n        filename,\n        ['*'],\n        undefined,\n        undefined,\n        [\n          new InstrumentationNodeModuleFile(\n            module,\n            ['*'],\n            (moduleExports: LambdaModule) => {\n              if (isWrapped(moduleExports[functionName])) {\n                this._unwrap(moduleExports, functionName);\n              }\n              this._wrap(moduleExports, functionName, this._getHandler());\n              return moduleExports;\n            },\n            (moduleExports?: LambdaModule) => {\n              if (moduleExports == null) return;\n              this._unwrap(moduleExports, functionName);\n            }\n          ),\n        ]\n      ),\n    ];\n  }\n\n  private _getHandler() {\n    return (original: Handler) => {\n      return this._getPatchHandler(original);\n    };\n  }\n\n  private _getPatchHandler(original: Handler) {\n    diag.debug('patch handler function');\n    const plugin = this;\n\n    return function patchedHandler(\n      this: never,\n      // The event can be a user type, it truly is any.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      event: any,\n      context: Context,\n      callback: Callback\n    ) {\n      const config = plugin._config;\n      const parent = AwsLambdaInstrumentation._determineParent(\n        event,\n        context,\n        config.disableAwsContextPropagation === true,\n        config.eventContextExtractor ||\n          AwsLambdaInstrumentation._defaultEventContextExtractor\n      );\n\n      const name = context.functionName;\n      const span = plugin.tracer.startSpan(\n        name,\n        {\n          kind: SpanKind.SERVER,\n          attributes: {\n            [SEMATTRS_FAAS_EXECUTION]: context.awsRequestId,\n            [SEMRESATTRS_FAAS_ID]: context.invokedFunctionArn,\n            [SEMRESATTRS_CLOUD_ACCOUNT_ID]:\n              AwsLambdaInstrumentation._extractAccountId(\n                context.invokedFunctionArn\n              ),\n          },\n        },\n        parent\n      );\n\n      if (config.requestHook) {\n        safeExecuteInTheMiddle(\n          () => config.requestHook!(span, { event, context }),\n          e => {\n            if (e)\n              diag.error('aws-lambda instrumentation: requestHook error', e);\n          },\n          true\n        );\n      }\n\n      return otelContext.with(trace.setSpan(parent, span), () => {\n        // Lambda seems to pass a callback even if handler is of Promise form, so we wrap all the time before calling\n        // the handler and see if the result is a Promise or not. In such a case, the callback is usually ignored. If\n        // the handler happened to both call the callback and complete a returned Promise, whichever happens first will\n        // win and the latter will be ignored.\n        const wrappedCallback = plugin._wrapCallback(callback, span);\n        const maybePromise = safeExecuteInTheMiddle(\n          () => original.apply(this, [event, context, wrappedCallback]),\n          error => {\n            if (error != null) {\n              // Exception thrown synchronously before resolving callback / promise.\n              plugin._applyResponseHook(span, error);\n              plugin._endSpan(span, error, () => {});\n            }\n          }\n        ) as Promise<{}> | undefined;\n        if (typeof maybePromise?.then === 'function') {\n          return maybePromise.then(\n            value => {\n              plugin._applyResponseHook(span, null, value);\n              return new Promise(resolve =>\n                plugin._endSpan(span, undefined, () => resolve(value))\n              );\n            },\n            (err: Error | string) => {\n              plugin._applyResponseHook(span, err);\n              return new Promise((resolve, reject) =>\n                plugin._endSpan(span, err, () => reject(err))\n              );\n            }\n          );\n        }\n        return maybePromise;\n      });\n    };\n  }\n\n  override setTracerProvider(tracerProvider: TracerProvider) {\n    super.setTracerProvider(tracerProvider);\n    this._traceForceFlusher = this._traceForceFlush(tracerProvider);\n  }\n\n  private _traceForceFlush(tracerProvider: TracerProvider) {\n    if (!tracerProvider) return undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let currentProvider: any = tracerProvider;\n\n    if (typeof currentProvider.getDelegate === 'function') {\n      currentProvider = currentProvider.getDelegate();\n    }\n\n    if (typeof currentProvider.forceFlush === 'function') {\n      return currentProvider.forceFlush.bind(currentProvider);\n    }\n\n    return undefined;\n  }\n\n  override setMeterProvider(meterProvider: MeterProvider) {\n    super.setMeterProvider(meterProvider);\n    this._metricForceFlusher = this._metricForceFlush(meterProvider);\n  }\n\n  private _metricForceFlush(meterProvider: MeterProvider) {\n    if (!meterProvider) return undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const currentProvider: any = meterProvider;\n\n    if (typeof currentProvider.forceFlush === 'function') {\n      return currentProvider.forceFlush.bind(currentProvider);\n    }\n\n    return undefined;\n  }\n\n  private _wrapCallback(original: Callback, span: Span): Callback {\n    const plugin = this;\n    return function wrappedCallback(this: never, err, res) {\n      diag.debug('executing wrapped lookup callback function');\n      plugin._applyResponseHook(span, err, res);\n\n      plugin._endSpan(span, err, () => {\n        diag.debug('executing original lookup callback function');\n        return original.apply(this, [err, res]);\n      });\n    };\n  }\n\n  private _endSpan(\n    span: Span,\n    err: string | Error | null | undefined,\n    callback: () => void\n  ) {\n    if (err) {\n      span.recordException(err);\n    }\n\n    let errMessage;\n    if (typeof err === 'string') {\n      errMessage = err;\n    } else if (err) {\n      errMessage = err.message;\n    }\n    if (errMessage) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: errMessage,\n      });\n    }\n\n    span.end();\n\n    const flushers = [];\n    if (this._traceForceFlusher) {\n      flushers.push(this._traceForceFlusher());\n    } else {\n      diag.error(\n        'Spans may not be exported for the lambda function because we are not force flushing before callback.'\n      );\n    }\n    if (this._metricForceFlusher) {\n      flushers.push(this._metricForceFlusher());\n    } else {\n      diag.error(\n        'Metrics may not be exported for the lambda function because we are not force flushing before callback.'\n      );\n    }\n\n    Promise.all(flushers).then(callback, callback);\n  }\n\n  private _applyResponseHook(\n    span: Span,\n    err?: Error | string | null,\n    res?: any\n  ) {\n    if (this._config?.responseHook) {\n      safeExecuteInTheMiddle(\n        () => this._config.responseHook!(span, { err, res }),\n        e => {\n          if (e)\n            diag.error('aws-lambda instrumentation: responseHook error', e);\n        },\n        true\n      );\n    }\n  }\n\n  private static _extractAccountId(arn: string): string | undefined {\n    const parts = arn.split(':');\n    if (parts.length >= 5) {\n      return parts[4];\n    }\n    return undefined;\n  }\n\n  private static _defaultEventContextExtractor(event: any): OtelContext {\n    // The default extractor tries to get sampled trace header from HTTP headers.\n    const httpHeaders = event.headers || {};\n    return propagation.extract(otelContext.active(), httpHeaders, headerGetter);\n  }\n\n  private static _determineParent(\n    event: any,\n    context: Context,\n    disableAwsContextPropagation: boolean,\n    eventContextExtractor: EventContextExtractor\n  ): OtelContext {\n    let parent: OtelContext | undefined = undefined;\n    if (!disableAwsContextPropagation) {\n      const lambdaTraceHeader = process.env[traceContextEnvironmentKey];\n      if (lambdaTraceHeader) {\n        parent = awsPropagator.extract(\n          otelContext.active(),\n          { [AWSXRAY_TRACE_ID_HEADER]: lambdaTraceHeader },\n          headerGetter\n        );\n      }\n      if (parent) {\n        const spanContext = trace.getSpan(parent)?.spanContext();\n        if (\n          spanContext &&\n          (spanContext.traceFlags & TraceFlags.SAMPLED) === TraceFlags.SAMPLED\n        ) {\n          // Trace header provided by Lambda only sampled if a sampled context was propagated from\n          // an upstream cloud service such as S3, or the user is using X-Ray. In these cases, we\n          // need to use it as the parent.\n          return parent;\n        }\n      }\n    }\n    const extractedContext = safeExecuteInTheMiddle(\n      () => eventContextExtractor(event, context),\n      e => {\n        if (e)\n          diag.error(\n            'aws-lambda instrumentation: eventContextExtractor error',\n            e\n          );\n      },\n      true\n    );\n    if (trace.getSpan(extractedContext)?.spanContext()) {\n      return extractedContext;\n    }\n    if (!parent) {\n      // No context in Lambda environment or HTTP headers.\n      return ROOT_CONTEXT;\n    }\n    return parent;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9355, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-lambda/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span, Context as OtelContext } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport type { Context } from 'aws-lambda';\n\nexport type RequestHook = (\n  span: Span,\n  hookInfo: { event: any; context: Context }\n) => void;\n\nexport type ResponseHook = (\n  span: Span,\n  hookInfo: {\n    err?: Error | string | null;\n    res?: any;\n  }\n) => void;\n\nexport type EventContextExtractor = (\n  event: any,\n  context: Context\n) => OtelContext;\nexport interface AwsLambdaInstrumentationConfig extends InstrumentationConfig {\n  requestHook?: RequestHook;\n  responseHook?: ResponseHook;\n  disableAwsContextPropagation?: boolean;\n  eventContextExtractor?: EventContextExtractor;\n  lambdaHandler?: string;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9378, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-lambda/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,gKAAA,SAAkC;AAClC,sJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9418, "column": 0}, "map": {"version":3,"file":"enums.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/enums.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  AWS_OPERATION = 'aws.operation',\n  AWS_REGION = 'aws.region',\n  AWS_SERVICE_API = 'aws.service.api',\n  AWS_SERVICE_NAME = 'aws.service.name',\n  AWS_SERVICE_IDENTIFIER = 'aws.service.identifier',\n  AWS_REQUEST_ID = 'aws.request.id',\n  AWS_REQUEST_EXTENDED_ID = 'aws.request.extended_id',\n  AWS_SIGNATURE_VERSION = 'aws.signature.version',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,IAAY,cASX;AATD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,gBAAA,GAAA,eAA+B,CAAA;IAC/B,cAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,cAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;IACnC,cAAA,CAAA,mBAAA,GAAA,kBAAqC,CAAA;IACrC,cAAA,CAAA,yBAAA,GAAA,wBAAiD,CAAA;IACjD,cAAA,CAAA,iBAAA,GAAA,gBAAiC,CAAA;IACjC,cAAA,CAAA,0BAAA,GAAA,yBAAmD,CAAA;IACnD,cAAA,CAAA,wBAAA,GAAA,uBAA+C,CAAA;AACjD,CAAC,EATW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GASzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9453, "column": 0}, "map": {"version":3,"file":"MessageAttributes.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/services/MessageAttributes.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  TextMapGetter,\n  TextMapSetter,\n  context,\n  propagation,\n  diag,\n} from '@opentelemetry/api';\nimport type { SQS, SNS } from '../aws-sdk.types';\n\n// https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-quotas.html\nexport const MAX_MESSAGE_ATTRIBUTES = 10;\nclass ContextSetter\n  implements\n    TextMapSetter<SQS.MessageBodyAttributeMap | SNS.MessageAttributeMap>\n{\n  set(\n    carrier: SQS.MessageBodyAttributeMap | SNS.MessageAttributeMap,\n    key: string,\n    value: string\n  ) {\n    carrier[key] = {\n      DataType: 'String',\n      StringValue: value as string,\n    };\n  }\n}\nexport const contextSetter = new ContextSetter();\n\nexport interface AwsSdkContextObject {\n  [key: string]: {\n    StringValue?: string;\n    Value?: string;\n  };\n}\n\nclass ContextGetter\n  implements\n    TextMapGetter<SQS.MessageBodyAttributeMap | SNS.MessageAttributeMap>\n{\n  keys(\n    carrier: SQS.MessageBodyAttributeMap | SNS.MessageAttributeMap\n  ): string[] {\n    if (carrier == null) {\n      return [];\n    }\n    return Object.keys(carrier);\n  }\n\n  get(\n    carrier: AwsSdkContextObject,\n    key: string\n  ): undefined | string | string[] {\n    return carrier?.[key]?.StringValue || carrier?.[key]?.Value;\n  }\n}\nexport const contextGetter = new ContextGetter();\n\nexport const injectPropagationContext = (\n  attributesMap?: SQS.MessageBodyAttributeMap | SNS.MessageAttributeMap\n): SQS.MessageBodyAttributeMap | SNS.MessageAttributeMap => {\n  const attributes = attributesMap ?? {};\n  if (\n    Object.keys(attributes).length + propagation.fields().length <=\n    MAX_MESSAGE_ATTRIBUTES\n  ) {\n    propagation.inject(context.active(), attributes, contextSetter);\n  } else {\n    diag.warn(\n      'aws-sdk instrumentation: cannot set context propagation on SQS/SNS message due to maximum amount of MessageAttributes'\n    );\n  }\n  return attributes;\n};\n\nexport const extractPropagationContext = (\n  message: SQS.Message,\n  sqsExtractContextPropagationFromPayload: boolean | undefined\n): AwsSdkContextObject | undefined => {\n  const propagationFields = propagation.fields();\n  const hasPropagationFields = Object.keys(\n    message.MessageAttributes || []\n  ).some(attr => propagationFields.includes(attr));\n  if (hasPropagationFields) {\n    return message.MessageAttributes;\n  } else if (sqsExtractContextPropagationFromPayload && message.Body) {\n    try {\n      const payload = JSON.parse(message.Body);\n      return payload.MessageAttributes;\n    } catch {\n      diag.debug(\n        'failed to parse SQS payload to extract context propagation, trace might be incomplete.'\n      );\n    }\n  }\n  return undefined;\n};\n\nexport const addPropagationFieldsToAttributeNames = (\n  messageAttributeNames: string[] = [],\n  propagationFields: string[]\n) => {\n  return messageAttributeNames.length\n    ? Array.from(new Set([...messageAttributeNames, ...propagationFields]))\n    : propagationFields;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9535, "column": 0}, "map": {"version":3,"file":"sqs.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/services/sqs.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Tracer,\n  SpanKind,\n  Span,\n  propagation,\n  trace,\n  context,\n  ROOT_CONTEXT,\n  Attributes,\n} from '@opentelemetry/api';\nimport { pubsubPropagation } from '@opentelemetry/propagation-utils';\nimport { RequestMetadata, ServiceExtension } from './ServiceExtension';\nimport type { SQS } from 'aws-sdk';\nimport {\n  AwsSdkInstrumentationConfig,\n  NormalizedRequest,\n  NormalizedResponse,\n} from '../types';\nimport {\n  MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n  MESSAGINGOPERATIONVALUES_PROCESS,\n  MESSAGINGOPERATIONVALUES_RECEIVE,\n  SEMATTRS_MESSAGING_DESTINATION,\n  SEMATTRS_MESSAGING_DESTINATION_KIND,\n  SEMATTRS_MESSAGING_MESSAGE_ID,\n  SEMATTRS_MESSAGING_OPERATION,\n  SEMATTRS_MESSAGING_SYSTEM,\n  SEMATTRS_MESSAGING_URL,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  contextGetter,\n  extractPropagationContext,\n  injectPropagationContext,\n  addPropagationFieldsToAttributeNames,\n} from './MessageAttributes';\n\nexport class SqsServiceExtension implements ServiceExtension {\n  requestPreSpanHook(\n    request: NormalizedRequest,\n    _config: AwsSdkInstrumentationConfig\n  ): RequestMetadata {\n    const queueUrl = this.extractQueueUrl(request.commandInput);\n    const queueName = this.extractQueueNameFromUrl(queueUrl);\n    let spanKind: SpanKind = SpanKind.CLIENT;\n    let spanName: string | undefined;\n\n    const spanAttributes: Attributes = {\n      [SEMATTRS_MESSAGING_SYSTEM]: 'aws.sqs',\n      [SEMATTRS_MESSAGING_DESTINATION_KIND]:\n        MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n      [SEMATTRS_MESSAGING_DESTINATION]: queueName,\n      [SEMATTRS_MESSAGING_URL]: queueUrl,\n    };\n\n    let isIncoming = false;\n\n    switch (request.commandName) {\n      case 'ReceiveMessage':\n        {\n          isIncoming = true;\n          spanKind = SpanKind.CONSUMER;\n          spanName = `${queueName} receive`;\n          spanAttributes[SEMATTRS_MESSAGING_OPERATION] =\n            MESSAGINGOPERATIONVALUES_RECEIVE;\n\n          request.commandInput.MessageAttributeNames =\n            addPropagationFieldsToAttributeNames(\n              request.commandInput.MessageAttributeNames,\n              propagation.fields()\n            );\n        }\n        break;\n\n      case 'SendMessage':\n      case 'SendMessageBatch':\n        spanKind = SpanKind.PRODUCER;\n        spanName = `${queueName} send`;\n        break;\n    }\n\n    return {\n      isIncoming,\n      spanAttributes,\n      spanKind,\n      spanName,\n    };\n  }\n\n  requestPostSpanHook = (request: NormalizedRequest) => {\n    switch (request.commandName) {\n      case 'SendMessage':\n        {\n          const origMessageAttributes =\n            request.commandInput['MessageAttributes'] ?? {};\n          if (origMessageAttributes) {\n            request.commandInput['MessageAttributes'] =\n              injectPropagationContext(origMessageAttributes);\n          }\n        }\n        break;\n\n      case 'SendMessageBatch':\n        {\n          const entries = request.commandInput?.Entries;\n          if (Array.isArray(entries)) {\n            entries.forEach(\n              (messageParams: SQS.SendMessageBatchRequestEntry) => {\n                messageParams.MessageAttributes = injectPropagationContext(\n                  messageParams.MessageAttributes ?? {}\n                );\n              }\n            );\n          }\n        }\n        break;\n    }\n  };\n\n  responseHook = (\n    response: NormalizedResponse,\n    span: Span,\n    tracer: Tracer,\n    config: AwsSdkInstrumentationConfig\n  ) => {\n    switch (response.request.commandName) {\n      case 'SendMessage':\n        span.setAttribute(\n          SEMATTRS_MESSAGING_MESSAGE_ID,\n          response?.data?.MessageId\n        );\n        break;\n\n      case 'SendMessageBatch':\n        // TODO: How should this be handled?\n        break;\n\n      case 'ReceiveMessage': {\n        const messages: SQS.Message[] = response?.data?.Messages;\n        if (messages) {\n          const queueUrl = this.extractQueueUrl(response.request.commandInput);\n          const queueName = this.extractQueueNameFromUrl(queueUrl);\n\n          pubsubPropagation.patchMessagesArrayToStartProcessSpans<SQS.Message>({\n            messages,\n            parentContext: trace.setSpan(context.active(), span),\n            tracer,\n            messageToSpanDetails: (message: SQS.Message) => ({\n              name: queueName ?? 'unknown',\n              parentContext: propagation.extract(\n                ROOT_CONTEXT,\n                extractPropagationContext(\n                  message,\n                  config.sqsExtractContextPropagationFromPayload\n                ),\n                contextGetter\n              ),\n              attributes: {\n                [SEMATTRS_MESSAGING_SYSTEM]: 'aws.sqs',\n                [SEMATTRS_MESSAGING_DESTINATION]: queueName,\n                [SEMATTRS_MESSAGING_DESTINATION_KIND]:\n                  MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n                [SEMATTRS_MESSAGING_MESSAGE_ID]: message.MessageId,\n                [SEMATTRS_MESSAGING_URL]: queueUrl,\n                [SEMATTRS_MESSAGING_OPERATION]:\n                  MESSAGINGOPERATIONVALUES_PROCESS,\n              },\n            }),\n            processHook: (span: Span, message: SQS.Message) =>\n              config.sqsProcessHook?.(span, { message }),\n          });\n\n          pubsubPropagation.patchArrayForProcessSpans(\n            messages,\n            tracer,\n            context.active()\n          );\n        }\n        break;\n      }\n    }\n  };\n\n  extractQueueUrl = (commandInput: Record<string, any>): string => {\n    return commandInput?.QueueUrl;\n  };\n\n  extractQueueNameFromUrl = (queueUrl: string): string | undefined => {\n    if (!queueUrl) return undefined;\n\n    const segments = queueUrl.split('/');\n    if (segments.length === 0) return undefined;\n\n    return segments[segments.length - 1];\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9679, "column": 0}, "map": {"version":3,"file":"dynamodb.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/services/dynamodb.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Attributes,\n  DiagLogger,\n  Span,\n  SpanKind,\n  Tracer,\n} from '@opentelemetry/api';\nimport { RequestMetadata, ServiceExtension } from './ServiceExtension';\nimport {\n  DBSYSTEMVALUES_DYNAMODB,\n  SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS,\n  SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ,\n  SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY,\n  SEMATTRS_AWS_DYNAMODB_COUNT,\n  SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE,\n  SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES,\n  SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES,\n  SEMATTRS_AWS_DYNAMODB_INDEX_NAME,\n  SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,\n  SEMATTRS_AWS_DYNAMODB_LIMIT,\n  SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES,\n  SEMATTRS_AWS_DYNAMODB_PROJECTION,\n  SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY,\n  SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY,\n  SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD,\n  SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT,\n  SEMATTRS_AWS_DYNAMODB_SEGMENT,\n  SEMATTRS_AWS_DYNAMODB_SELECT,\n  SEMATTRS_AWS_DYNAMODB_TABLE_COUNT,\n  SEMATTRS_AWS_DYNAMODB_TABLE_NAMES,\n  SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_OPERATION,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  AwsSdkInstrumentationConfig,\n  NormalizedRequest,\n  NormalizedResponse,\n} from '../types';\n\nexport class DynamodbServiceExtension implements ServiceExtension {\n  toArray<T>(values: T | T[]): T[] {\n    return Array.isArray(values) ? values : [values];\n  }\n\n  requestPreSpanHook(\n    normalizedRequest: NormalizedRequest,\n    config: AwsSdkInstrumentationConfig,\n    diag: DiagLogger\n  ): RequestMetadata {\n    const spanKind: SpanKind = SpanKind.CLIENT;\n    let spanName: string | undefined;\n    const isIncoming = false;\n    const operation = normalizedRequest.commandName;\n\n    const spanAttributes: Attributes = {\n      [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_DYNAMODB,\n      [SEMATTRS_DB_NAME]: normalizedRequest.commandInput?.TableName,\n      [SEMATTRS_DB_OPERATION]: operation,\n    };\n\n    if (config.dynamoDBStatementSerializer) {\n      try {\n        const sanitizedStatement = config.dynamoDBStatementSerializer(\n          operation,\n          normalizedRequest.commandInput\n        );\n\n        if (typeof sanitizedStatement === 'string') {\n          spanAttributes[SEMATTRS_DB_STATEMENT] = sanitizedStatement;\n        }\n      } catch (err) {\n        diag.error('failed to sanitize DynamoDB statement', err);\n      }\n    }\n\n    // normalizedRequest.commandInput.RequestItems) is undefined when no table names are returned\n    // keys in this object are the table names\n    if (normalizedRequest.commandInput?.TableName) {\n      // Necessary for commands with only 1 table name (example: CreateTable). Attribute is TableName not keys of RequestItems\n      // single table name returned for operations like CreateTable\n      spanAttributes[SEMATTRS_AWS_DYNAMODB_TABLE_NAMES] = [\n        normalizedRequest.commandInput.TableName,\n      ];\n    } else if (normalizedRequest.commandInput?.RequestItems) {\n      spanAttributes[SEMATTRS_AWS_DYNAMODB_TABLE_NAMES] = Object.keys(\n        normalizedRequest.commandInput.RequestItems\n      );\n    }\n\n    if (operation === 'CreateTable' || operation === 'UpdateTable') {\n      // only check for ProvisionedThroughput since ReadCapacityUnits and WriteCapacity units are required attributes\n      if (normalizedRequest.commandInput?.ProvisionedThroughput) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY] =\n          normalizedRequest.commandInput.ProvisionedThroughput.ReadCapacityUnits;\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY] =\n          normalizedRequest.commandInput.ProvisionedThroughput.WriteCapacityUnits;\n      }\n    }\n\n    if (\n      operation === 'GetItem' ||\n      operation === 'Scan' ||\n      operation === 'Query'\n    ) {\n      if (normalizedRequest.commandInput?.ConsistentRead) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ] =\n          normalizedRequest.commandInput.ConsistentRead;\n      }\n    }\n\n    if (operation === 'Query' || operation === 'Scan') {\n      if (normalizedRequest.commandInput?.ProjectionExpression) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_PROJECTION] =\n          normalizedRequest.commandInput.ProjectionExpression;\n      }\n    }\n\n    if (operation === 'CreateTable') {\n      if (normalizedRequest.commandInput?.GlobalSecondaryIndexes) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES] =\n          this.toArray(\n            normalizedRequest.commandInput.GlobalSecondaryIndexes\n          ).map((x: { [DictionaryKey: string]: any }) => JSON.stringify(x));\n      }\n\n      if (normalizedRequest.commandInput?.LocalSecondaryIndexes) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES] =\n          this.toArray(\n            normalizedRequest.commandInput.LocalSecondaryIndexes\n          ).map((x: { [DictionaryKey: string]: any }) => JSON.stringify(x));\n      }\n    }\n\n    if (\n      operation === 'ListTables' ||\n      operation === 'Query' ||\n      operation === 'Scan'\n    ) {\n      if (normalizedRequest.commandInput?.Limit) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_LIMIT] =\n          normalizedRequest.commandInput.Limit;\n      }\n    }\n\n    if (operation === 'ListTables') {\n      if (normalizedRequest.commandInput?.ExclusiveStartTableName) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE] =\n          normalizedRequest.commandInput.ExclusiveStartTableName;\n      }\n    }\n\n    if (operation === 'Query') {\n      if (normalizedRequest.commandInput?.ScanIndexForward) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD] =\n          normalizedRequest.commandInput.ScanIndexForward;\n      }\n\n      if (normalizedRequest.commandInput?.IndexName) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_INDEX_NAME] =\n          normalizedRequest.commandInput.IndexName;\n      }\n\n      if (normalizedRequest.commandInput?.Select) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_SELECT] =\n          normalizedRequest.commandInput.Select;\n      }\n    }\n\n    if (operation === 'Scan') {\n      if (normalizedRequest.commandInput?.Segment) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_SEGMENT] =\n          normalizedRequest.commandInput?.Segment;\n      }\n\n      if (normalizedRequest.commandInput?.TotalSegments) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS] =\n          normalizedRequest.commandInput?.TotalSegments;\n      }\n\n      if (normalizedRequest.commandInput?.IndexName) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_INDEX_NAME] =\n          normalizedRequest.commandInput.IndexName;\n      }\n\n      if (normalizedRequest.commandInput?.Select) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_SELECT] =\n          normalizedRequest.commandInput.Select;\n      }\n    }\n\n    if (operation === 'UpdateTable') {\n      if (normalizedRequest.commandInput?.AttributeDefinitions) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS] =\n          this.toArray(normalizedRequest.commandInput.AttributeDefinitions).map(\n            (x: { [DictionaryKey: string]: any }) => JSON.stringify(x)\n          );\n      }\n\n      if (normalizedRequest.commandInput?.GlobalSecondaryIndexUpdates) {\n        spanAttributes[SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES] =\n          this.toArray(\n            normalizedRequest.commandInput.GlobalSecondaryIndexUpdates\n          ).map((x: { [DictionaryKey: string]: any }) => JSON.stringify(x));\n      }\n    }\n\n    return {\n      isIncoming,\n      spanAttributes,\n      spanKind,\n      spanName,\n    };\n  }\n\n  responseHook(\n    response: NormalizedResponse,\n    span: Span,\n    _tracer: Tracer,\n    _config: AwsSdkInstrumentationConfig\n  ) {\n    if (response.data?.ConsumedCapacity) {\n      span.setAttribute(\n        SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY,\n        toArray(response.data.ConsumedCapacity).map(\n          (x: { [DictionaryKey: string]: any }) => JSON.stringify(x)\n        )\n      );\n    }\n\n    if (response.data?.ItemCollectionMetrics) {\n      span.setAttribute(\n        SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,\n        this.toArray(response.data.ItemCollectionMetrics).map(\n          (x: { [DictionaryKey: string]: any }) => JSON.stringify(x)\n        )\n      );\n    }\n\n    if (response.data?.TableNames) {\n      span.setAttribute(\n        SEMATTRS_AWS_DYNAMODB_TABLE_COUNT,\n        response.data?.TableNames.length\n      );\n    }\n\n    if (response.data?.Count) {\n      span.setAttribute(SEMATTRS_AWS_DYNAMODB_COUNT, response.data?.Count);\n    }\n\n    if (response.data?.ScannedCount) {\n      span.setAttribute(\n        SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT,\n        response.data?.ScannedCount\n      );\n    }\n  }\n}\n\nfunction toArray<T>(values: T | T[]): T[] {\n  return Array.isArray(values) ? values : [values];\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9843, "column": 0}, "map": {"version":3,"file":"sns.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/services/sns.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span, Tracer, SpanKind, Attributes } from '@opentelemetry/api';\nimport {\n  MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n  SEMATTRS_MESSAGING_DESTINATION,\n  SEMATTRS_MESSAGING_DESTINATION_KIND,\n  SEMATTRS_MESSAGING_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  NormalizedRequest,\n  NormalizedResponse,\n  AwsSdkInstrumentationConfig,\n} from '../types';\nimport { injectPropagationContext } from './MessageAttributes';\nimport { RequestMetadata, ServiceExtension } from './ServiceExtension';\n\nexport class SnsServiceExtension implements ServiceExtension {\n  requestPreSpanHook(\n    request: NormalizedRequest,\n    _config: AwsSdkInstrumentationConfig\n  ): RequestMetadata {\n    let spanKind: SpanKind = SpanKind.CLIENT;\n    let spanName = `SNS ${request.commandName}`;\n    const spanAttributes: Attributes = {\n      [SEMATTRS_MESSAGING_SYSTEM]: 'aws.sns',\n    };\n\n    if (request.commandName === 'Publish') {\n      spanKind = SpanKind.PRODUCER;\n\n      spanAttributes[SEMATTRS_MESSAGING_DESTINATION_KIND] =\n        MESSAGINGDESTINATIONKINDVALUES_TOPIC;\n      const { TopicArn, TargetArn, PhoneNumber } = request.commandInput;\n      spanAttributes[SEMATTRS_MESSAGING_DESTINATION] =\n        this.extractDestinationName(TopicArn, TargetArn, PhoneNumber);\n      // ToDO: Use SEMATTRS_MESSAGING_DESTINATION_NAME when implemented\n      spanAttributes['messaging.destination.name'] =\n        TopicArn || TargetArn || PhoneNumber || 'unknown';\n\n      spanName = `${\n        PhoneNumber\n          ? 'phone_number'\n          : spanAttributes[SEMATTRS_MESSAGING_DESTINATION]\n      } send`;\n    }\n\n    return {\n      isIncoming: false,\n      spanAttributes,\n      spanKind,\n      spanName,\n    };\n  }\n\n  requestPostSpanHook(request: NormalizedRequest): void {\n    if (request.commandName === 'Publish') {\n      const origMessageAttributes =\n        request.commandInput['MessageAttributes'] ?? {};\n      if (origMessageAttributes) {\n        request.commandInput['MessageAttributes'] = injectPropagationContext(\n          origMessageAttributes\n        );\n      }\n    }\n  }\n\n  responseHook(\n    response: NormalizedResponse,\n    span: Span,\n    tracer: Tracer,\n    config: AwsSdkInstrumentationConfig\n  ): void {}\n\n  extractDestinationName(\n    topicArn: string,\n    targetArn: string,\n    phoneNumber: string\n  ): string {\n    if (topicArn || targetArn) {\n      const arn = topicArn ?? targetArn;\n      try {\n        return arn.substr(arn.lastIndexOf(':') + 1);\n      } catch (err) {\n        return arn;\n      }\n    } else if (phoneNumber) {\n      return phoneNumber;\n    } else {\n      return 'unknown';\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,MAAA,sCAAwE;AACxE,MAAA,wEAK6C;AAM7C,MAAA,qDAA+D;AAG/D,MAAa,mBAAmB;IAC9B,kBAAkB,CAChB,OAA0B,EAC1B,OAAoC,EAAA;QAEpC,IAAI,QAAQ,GAAa,MAAA,QAAQ,CAAC,MAAM,CAAC;QACzC,IAAI,QAAQ,GAAG,CAAA,IAAA,EAAO,OAAO,CAAC,WAAW,EAAE,CAAC;QAC5C,MAAM,cAAc,GAAe;YACjC,CAAC,uBAAA,yBAAyB,CAAC,EAAE,SAAS;SACvC,CAAC;QAEF,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;YACrC,QAAQ,GAAG,MAAA,QAAQ,CAAC,QAAQ,CAAC;YAE7B,cAAc,CAAC,uBAAA,mCAAmC,CAAC,GACjD,uBAAA,oCAAoC,CAAC;YACvC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;YAClE,cAAc,CAAC,uBAAA,8BAA8B,CAAC,GAC5C,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YAChE,iEAAiE;YACjE,cAAc,CAAC,4BAA4B,CAAC,GAC1C,QAAQ,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,CAAC;YAEpD,QAAQ,GAAG,GACT,WAAW,GACP,cAAc,GACd,cAAc,CAAC,uBAAA,8BAA8B,CACnD,CAAA,KAAA,CAAO,CAAC;SACT;QAED,OAAO;YACL,UAAU,EAAE,KAAK;YACjB,cAAc;YACd,QAAQ;YACR,QAAQ;SACT,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,OAA0B,EAAA;;QAC5C,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;YACrC,MAAM,qBAAqB,GACzB,CAAA,KAAA,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,CAAE,CAAC;YAClD,IAAI,qBAAqB,EAAE;gBACzB,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC,GAAG,CAAA,GAAA,oBAAA,wBAAwB,EAClE,qBAAqB,CACtB,CAAC;aACH;SACF;IACH,CAAC;IAED,YAAY,CACV,QAA4B,EAC5B,IAAU,EACV,MAAc,EACd,MAAmC,EAAA,CAC5B,CAAC;IAEV,sBAAsB,CACpB,QAAgB,EAChB,SAAiB,EACjB,WAAmB,EAAA;QAEnB,IAAI,QAAQ,IAAI,SAAS,EAAE;YACzB,MAAM,GAAG,GAAG,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAR,QAAQ,GAAI,SAAS,CAAC;YAClC,IAAI;gBACF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7C,CAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,GAAG,CAAC;aACZ;SACF,MAAM,IAAI,WAAW,EAAE;YACtB,OAAO,WAAW,CAAC;SACpB,MAAM;YACL,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;CACF;AA3ED,QAAA,mBAAA,GAAA,oBA2EC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9919, "column": 0}, "map": {"version":3,"file":"lambda.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/services/lambda.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span, SpanKind, Tracer, diag, Attributes } from '@opentelemetry/api';\nimport {\n  SEMATTRS_FAAS_EXECUTION,\n  SEMATTRS_FAAS_INVOKED_NAME,\n  SEMATTRS_FAAS_INVOKED_PROVIDER,\n  SEMATTRS_FAAS_INVOKED_REGION,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  AwsSdkInstrumentationConfig,\n  NormalizedRequest,\n  NormalizedResponse,\n} from '../types';\nimport { RequestMetadata, ServiceExtension } from './ServiceExtension';\nimport { context, propagation } from '@opentelemetry/api';\n\nclass LambdaCommands {\n  public static readonly Invoke: string = 'Invoke';\n}\n\nexport class LambdaServiceExtension implements ServiceExtension {\n  requestPreSpanHook(\n    request: NormalizedRequest,\n    _config: AwsSdkInstrumentationConfig\n  ): RequestMetadata {\n    const functionName = this.extractFunctionName(request.commandInput);\n\n    let spanAttributes: Attributes = {};\n    let spanName: string | undefined;\n\n    switch (request.commandName) {\n      case 'Invoke':\n        spanAttributes = {\n          [SEMATTRS_FAAS_INVOKED_NAME]: functionName,\n          [SEMATTRS_FAAS_INVOKED_PROVIDER]: 'aws',\n        };\n        if (request.region) {\n          spanAttributes[SEMATTRS_FAAS_INVOKED_REGION] = request.region;\n        }\n        spanName = `${functionName} ${LambdaCommands.Invoke}`;\n        break;\n    }\n    return {\n      isIncoming: false,\n      spanAttributes,\n      spanKind: SpanKind.CLIENT,\n      spanName,\n    };\n  }\n\n  requestPostSpanHook = (request: NormalizedRequest) => {\n    switch (request.commandName) {\n      case LambdaCommands.Invoke:\n        {\n          if (request.commandInput) {\n            request.commandInput.ClientContext = injectLambdaPropagationContext(\n              request.commandInput.ClientContext\n            );\n          }\n        }\n        break;\n    }\n  };\n\n  responseHook(\n    response: NormalizedResponse,\n    span: Span,\n    tracer: Tracer,\n    config: AwsSdkInstrumentationConfig\n  ) {\n    switch (response.request.commandName) {\n      case LambdaCommands.Invoke:\n        {\n          span.setAttribute(SEMATTRS_FAAS_EXECUTION, response.requestId);\n        }\n        break;\n    }\n  }\n\n  extractFunctionName = (commandInput: Record<string, any>): string => {\n    return commandInput?.FunctionName;\n  };\n}\n\nconst injectLambdaPropagationContext = (\n  clientContext: string | undefined\n): string | undefined => {\n  try {\n    const propagatedContext = {};\n    propagation.inject(context.active(), propagatedContext);\n\n    const parsedClientContext = clientContext\n      ? JSON.parse(Buffer.from(clientContext, 'base64').toString('utf8'))\n      : {};\n\n    const updatedClientContext = {\n      ...parsedClientContext,\n      Custom: {\n        ...parsedClientContext.Custom,\n        ...propagatedContext,\n      },\n    };\n\n    const encodedClientContext = Buffer.from(\n      JSON.stringify(updatedClientContext)\n    ).toString('base64');\n\n    // The length of client context is capped at 3583 bytes of base64 encoded data\n    // (https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_RequestSyntax)\n    if (encodedClientContext.length > 3583) {\n      diag.warn(\n        'lambda instrumentation: cannot set context propagation on lambda invoke parameters due to ClientContext length limitations.'\n      );\n      return clientContext;\n    }\n\n    return encodedClientContext;\n  } catch (e) {\n    diag.debug(\n      'lambda instrumentation: failed to set context propagation on ClientContext',\n      e\n    );\n    return clientContext;\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10021, "column": 0}, "map": {"version":3,"file":"ServicesExtensions.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/services/ServicesExtensions.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Tracer, Span, DiagLogger } from '@opentelemetry/api';\nimport { ServiceExtension, RequestMetadata } from './ServiceExtension';\nimport { SqsServiceExtension } from './sqs';\nimport {\n  AwsSdkInstrumentationConfig,\n  NormalizedRequest,\n  NormalizedResponse,\n} from '../types';\nimport { DynamodbServiceExtension } from './dynamodb';\nimport { SnsServiceExtension } from './sns';\nimport { LambdaServiceExtension } from './lambda';\n\nexport class ServicesExtensions implements ServiceExtension {\n  services: Map<string, ServiceExtension> = new Map();\n\n  constructor() {\n    this.services.set('SQS', new SqsServiceExtension());\n    this.services.set('SNS', new SnsServiceExtension());\n    this.services.set('DynamoDB', new DynamodbServiceExtension());\n    this.services.set('Lambda', new LambdaServiceExtension());\n  }\n\n  requestPreSpanHook(\n    request: NormalizedRequest,\n    config: AwsSdkInstrumentationConfig,\n    diag: DiagLogger\n  ): RequestMetadata {\n    const serviceExtension = this.services.get(request.serviceName);\n    if (!serviceExtension)\n      return {\n        isIncoming: false,\n      };\n    return serviceExtension.requestPreSpanHook(request, config, diag);\n  }\n\n  requestPostSpanHook(request: NormalizedRequest) {\n    const serviceExtension = this.services.get(request.serviceName);\n    if (!serviceExtension?.requestPostSpanHook) return;\n    return serviceExtension.requestPostSpanHook(request);\n  }\n\n  responseHook(\n    response: NormalizedResponse,\n    span: Span,\n    tracer: Tracer,\n    config: AwsSdkInstrumentationConfig\n  ) {\n    const serviceExtension = this.services.get(response.request.serviceName);\n    serviceExtension?.responseHook?.(response, span, tracer, config);\n  }\n}\n"],"names":[],"mappings":";;;;;AAiBA,MAAA,yBAA4C;AAM5C,MAAA,mCAAsD;AACtD,MAAA,yBAA4C;AAC5C,MAAA,+BAAkD;AAElD,MAAa,kBAAkB;IAG7B,aAAA;QAFA,IAAA,CAAA,QAAQ,GAAkC,IAAI,GAAG,EAAE,CAAC;QAGlD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,MAAA,mBAAmB,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,MAAA,mBAAmB,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,WAAA,wBAAwB,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,SAAA,sBAAsB,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,kBAAkB,CAChB,OAA0B,EAC1B,MAAmC,EACnC,IAAgB,EAAA;QAEhB,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAChE,IAAI,CAAC,gBAAgB,EACnB,OAAO;YACL,UAAU,EAAE,KAAK;SAClB,CAAC;QACJ,OAAO,gBAAgB,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,mBAAmB,CAAC,OAA0B,EAAA;QAC5C,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAChE,IAAI,CAAC,CAAA,gBAAgB,KAAA,QAAhB,gBAAgB,KAAA,KAAA,IAAA,KAAA,IAAhB,gBAAgB,CAAE,mBAAmB,CAAA,EAAE,OAAO;QACnD,OAAO,gBAAgB,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,YAAY,CACV,QAA4B,EAC5B,IAAU,EACV,MAAc,EACd,MAAmC,EAAA;;QAEnC,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACzE,CAAA,KAAA,gBAAgB,KAAA,QAAhB,gBAAgB,KAAA,KAAA,IAAA,KAAA,IAAhB,gBAAgB,CAAE,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,CAA9B,gBAAgB,EAAiB,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACnE,CAAC;CACF;AAtCD,QAAA,kBAAA,GAAA,mBAsCC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10062, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/services/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { ServicesExtensions } from './ServicesExtensions';\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,IAAA,uDAA0D;AAAjD,OAAA,cAAA,CAAA,SAAA,sBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,qBAAA,kBAAkB;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10093, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.43.1';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-aws-sdk';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10120, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NormalizedRequest } from './types';\nimport { Attributes, Context, context } from '@opentelemetry/api';\nimport {\n  SEMATTRS_RPC_METHOD,\n  SEMATTRS_RPC_SERVICE,\n  SEMATTRS_RPC_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\nimport { AttributeNames } from './enums';\n\nconst toPascalCase = (str: string): string =>\n  typeof str === 'string' ? str.charAt(0).toUpperCase() + str.slice(1) : str;\n\nexport const removeSuffixFromStringIfExists = (\n  str: string,\n  suffixToRemove: string\n): string => {\n  const suffixLength = suffixToRemove.length;\n  return str?.slice(-suffixLength) === suffixToRemove\n    ? str.slice(0, str.length - suffixLength)\n    : str;\n};\n\nexport const normalizeV2Request = (awsV2Request: any): NormalizedRequest => {\n  const service = awsV2Request?.service;\n  return {\n    serviceName: service?.api?.serviceId?.replace(/\\s+/g, ''),\n    commandName: toPascalCase(awsV2Request?.operation),\n    commandInput: awsV2Request.params,\n    region: service?.config?.region,\n  };\n};\n\nexport const normalizeV3Request = (\n  serviceName: string,\n  commandNameWithSuffix: string,\n  commandInput: Record<string, any>,\n  region: string | undefined\n): NormalizedRequest => {\n  return {\n    serviceName: serviceName?.replace(/\\s+/g, ''),\n    commandName: removeSuffixFromStringIfExists(\n      commandNameWithSuffix,\n      'Command'\n    ),\n    commandInput,\n    region,\n  };\n};\n\nexport const extractAttributesFromNormalizedRequest = (\n  normalizedRequest: NormalizedRequest\n): Attributes => {\n  return {\n    [SEMATTRS_RPC_SYSTEM]: 'aws-api',\n    [SEMATTRS_RPC_METHOD]: normalizedRequest.commandName,\n    [SEMATTRS_RPC_SERVICE]: normalizedRequest.serviceName,\n    [AttributeNames.AWS_REGION]: normalizedRequest.region,\n  };\n};\n\nexport const bindPromise = <T = unknown>(\n  target: Promise<T>,\n  contextForCallbacks: Context,\n  rebindCount = 1\n): Promise<T> => {\n  const origThen = target.then;\n  type PromiseThenParameters = Parameters<Promise<T>['then']>;\n  target.then = function <TResult1 = T, TResult2 = never>(\n    onFulfilled: PromiseThenParameters[0],\n    onRejected: PromiseThenParameters[1]\n  ): Promise<TResult1 | TResult2> {\n    const newOnFulfilled = context.bind(contextForCallbacks, onFulfilled);\n    const newOnRejected = context.bind(contextForCallbacks, onRejected);\n    const patchedPromise = origThen.call<\n      Promise<T>,\n      any[],\n      Promise<TResult1 | TResult2>\n    >(this, newOnFulfilled, newOnRejected);\n    return rebindCount > 1\n      ? bindPromise(patchedPromise, contextForCallbacks, rebindCount - 1)\n      : patchedPromise;\n  };\n  return target;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10179, "column": 0}, "map": {"version":3,"file":"propwrap.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/propwrap.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * This block is derived from esbuild's bundling support.\n * https://github.com/evanw/esbuild/blob/v0.14.42/internal/runtime/runtime.go#L22\n *\n * License:\n * MIT License\n *\n * Copyright (c) 2020 Evan Wallace\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nconst __defProp = Object.defineProperty;\nconst __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nconst __hasOwnProp = Object.prototype.hasOwnProperty;\nconst __getOwnPropNames = Object.getOwnPropertyNames;\nconst __copyProps = (\n  to: any,\n  from: any,\n  except: string,\n  desc?: PropertyDescriptor | undefined\n) => {\n  if ((from && typeof from === 'object') || typeof from === 'function') {\n    for (const key of __getOwnPropNames(from)) {\n      if (!__hasOwnProp.call(to, key) && key !== except) {\n        __defProp(to, key, {\n          get: () => from[key] as any,\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,\n        });\n      }\n    }\n  }\n  return to;\n};\n\n/**\n * Return a new object that is a copy of `obj`, with its `subpath` property\n * replaced with the return value of `wrapper(original)`.\n *\n * This is similar to shimmer (i.e. `InstrumentationBase.prototype._wrap`).\n * However, it uses a different technique to support wrapping properties that\n * are only available via a getter (i.e. their property descriptor is `.writable\n * === false`).\n *\n * For example:\n *    var os = propwrap(require('os'), 'platform', (orig) => {\n *      return function wrappedPlatform () {\n *        return orig().toUpperCase()\n *      }\n *    })\n *    console.log(os.platform()) // => DARWIN\n *\n * The subpath can indicate a nested property. Each property in that subpath,\n * except the last, must identify an *Object*.\n *\n * Limitations:\n * - This doesn't handle possible Symbol properties on the copied object(s).\n * - This cannot wrap a property of a function, because we cannot create a\n *   copy of the function.\n *\n * @param {object} obj\n * @param {string} subpath - The property subpath on `obj` to wrap. This may\n *    point to a nested property by using a '.' to separate levels. For example:\n *        var fs = wrap(fs, 'promises.sync', (orig) => { ... })\n * @param {Function} wrapper - A function of the form `function (orig)`, where\n *    `orig` is the original property value. This must synchronously return the\n *    new property value.\n * @returns {object} A new object with the wrapped property.\n * @throws {TypeError} if the subpath points to a non-existent property, or if\n *    any but the last subpath part points to a non-Object.\n */\nexport const propwrap = (obj: any, subpath: string, wrapper: Function): any => {\n  const parts = subpath.split('.');\n  const namespaces = [obj];\n  let namespace = obj;\n  let key;\n  let val;\n\n  // 1. Traverse the subpath parts to sanity check and get references to the\n  //    Objects that we will be copying.\n  for (let i = 0; i < parts.length; i++) {\n    key = parts[i];\n    val = namespace[key];\n    if (!val) {\n      throw new TypeError(\n        `cannot wrap \"${subpath}\": \"<obj>.${parts\n          .slice(0, i)\n          .join('.')}\" is ${typeof val}`\n      );\n    } else if (i < parts.length - 1) {\n      if (typeof val !== 'object') {\n        throw new TypeError(\n          `cannot wrap \"${subpath}\": \"<obj>.${parts\n            .slice(0, i)\n            .join('.')}\" is not an Object`\n        );\n      }\n      namespace = val;\n      namespaces.push(namespace);\n    }\n  }\n\n  // 2. Now work backwards, wrapping each namespace with a new object that has a\n  //    copy of all the properties, except the one that we've wrapped.\n  for (let i = parts.length - 1; i >= 0; i--) {\n    key = parts[i];\n    namespace = namespaces[i];\n    if (i === parts.length - 1) {\n      const orig = namespace[key];\n      val = wrapper(orig);\n    } else {\n      val = namespaces[i + 1];\n    }\n    const desc = __getOwnPropDesc(namespace, key);\n    const wrappedNamespace = __defProp({}, key, {\n      value: val,\n      enumerable: !desc || desc.enumerable,\n    });\n    __copyProps(wrappedNamespace, namespace, key);\n    namespaces[i] = wrappedNamespace;\n  }\n\n  return namespaces[0];\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10326, "column": 0}, "map": {"version":3,"file":"aws-sdk.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/aws-sdk.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Span,\n  SpanKind,\n  context,\n  trace,\n  Context,\n  diag,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport type * as AWS from 'aws-sdk';\nimport { AttributeNames } from './enums';\nimport { ServicesExtensions } from './services';\nimport {\n  AwsSdkInstrumentationConfig,\n  AwsSdkRequestHookInformation,\n  AwsSdkResponseHookInformation,\n  NormalizedRequest,\n  NormalizedResponse,\n} from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  InstrumentationBase,\n  InstrumentationModuleDefinition,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport type {\n  MiddlewareStack,\n  HandlerExecutionContext,\n  Command as AwsV3Command,\n  Handler as AwsV3MiddlewareHandler,\n  InitializeHandlerArguments,\n} from '@aws-sdk/types';\nimport {\n  bindPromise,\n  extractAttributesFromNormalizedRequest,\n  normalizeV2Request,\n  normalizeV3Request,\n  removeSuffixFromStringIfExists,\n} from './utils';\nimport { propwrap } from './propwrap';\nimport { RequestMetadata } from './services/ServiceExtension';\nimport { SEMATTRS_HTTP_STATUS_CODE } from '@opentelemetry/semantic-conventions';\n\nconst V3_CLIENT_CONFIG_KEY = Symbol(\n  'opentelemetry.instrumentation.aws-sdk.client.config'\n);\ntype V3PluginCommand = AwsV3Command<any, any, any, any, any> & {\n  [V3_CLIENT_CONFIG_KEY]?: any;\n};\n\nconst REQUEST_SPAN_KEY = Symbol('opentelemetry.instrumentation.aws-sdk.span');\ntype V2PluginRequest = AWS.Request<any, any> & {\n  [REQUEST_SPAN_KEY]?: Span;\n};\n\nexport class AwsInstrumentation extends InstrumentationBase<AwsSdkInstrumentationConfig> {\n  static readonly component = 'aws-sdk';\n  private servicesExtensions: ServicesExtensions = new ServicesExtensions();\n\n  constructor(config: AwsSdkInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init(): InstrumentationModuleDefinition[] {\n    const v3MiddlewareStackFileOldVersions = new InstrumentationNodeModuleFile(\n      '@aws-sdk/middleware-stack/dist/cjs/MiddlewareStack.js',\n      ['>=3.1.0 <3.35.0'],\n      this.patchV3ConstructStack.bind(this),\n      this.unpatchV3ConstructStack.bind(this)\n    );\n    const v3MiddlewareStackFileNewVersions = new InstrumentationNodeModuleFile(\n      '@aws-sdk/middleware-stack/dist-cjs/MiddlewareStack.js',\n      ['>=3.35.0'],\n      this.patchV3ConstructStack.bind(this),\n      this.unpatchV3ConstructStack.bind(this)\n    );\n\n    // as for aws-sdk v3.13.1, constructStack is exported from @aws-sdk/middleware-stack as\n    // getter instead of function, which fails shimmer.\n    // so we are patching the MiddlewareStack.js file directly to get around it.\n    const v3MiddlewareStack = new InstrumentationNodeModuleDefinition(\n      '@aws-sdk/middleware-stack',\n      ['^3.1.0'],\n      undefined,\n      undefined,\n      [v3MiddlewareStackFileOldVersions, v3MiddlewareStackFileNewVersions]\n    );\n\n    // Patch for @smithy/middleware-stack for @aws-sdk/* packages v3.363.0+.\n    // As of @smithy/middleware-stack@2.1.0 `constructStack` is only available\n    // as a getter, so we cannot use `this._wrap()`.\n    const self = this;\n    const v3SmithyMiddlewareStack = new InstrumentationNodeModuleDefinition(\n      '@smithy/middleware-stack',\n      ['>=2.0.0'],\n      (moduleExports, moduleVersion) => {\n        const newExports = propwrap(\n          moduleExports,\n          'constructStack',\n          (orig: any) => {\n            self._diag.debug('propwrapping aws-sdk v3 constructStack');\n            return self._getV3ConstructStackPatch(moduleVersion, orig);\n          }\n        );\n        return newExports;\n      }\n    );\n\n    const v3SmithyClient = new InstrumentationNodeModuleDefinition(\n      '@aws-sdk/smithy-client',\n      ['^3.1.0'],\n      this.patchV3SmithyClient.bind(this),\n      this.unpatchV3SmithyClient.bind(this)\n    );\n\n    // patch for new @smithy/smithy-client for aws-sdk packages v3.363.0+\n    const v3NewSmithyClient = new InstrumentationNodeModuleDefinition(\n      '@smithy/smithy-client',\n      ['>=1.0.3'],\n      this.patchV3SmithyClient.bind(this),\n      this.unpatchV3SmithyClient.bind(this)\n    );\n\n    const v2Request = new InstrumentationNodeModuleFile(\n      'aws-sdk/lib/core.js',\n      ['^2.308.0'],\n      this.patchV2.bind(this),\n      this.unpatchV2.bind(this)\n    );\n\n    const v2Module = new InstrumentationNodeModuleDefinition(\n      'aws-sdk',\n      ['^2.308.0'],\n      undefined,\n      undefined,\n      [v2Request]\n    );\n\n    return [\n      v2Module,\n      v3MiddlewareStack,\n      v3SmithyMiddlewareStack,\n      v3SmithyClient,\n      v3NewSmithyClient,\n    ];\n  }\n\n  protected patchV3ConstructStack(moduleExports: any, moduleVersion?: string) {\n    this._wrap(\n      moduleExports,\n      'constructStack',\n      this._getV3ConstructStackPatch.bind(this, moduleVersion)\n    );\n    return moduleExports;\n  }\n\n  protected unpatchV3ConstructStack(moduleExports: any) {\n    this._unwrap(moduleExports, 'constructStack');\n    return moduleExports;\n  }\n\n  protected patchV3SmithyClient(moduleExports: any) {\n    this._wrap(\n      moduleExports.Client.prototype,\n      'send',\n      this._getV3SmithyClientSendPatch.bind(this)\n    );\n    return moduleExports;\n  }\n\n  protected unpatchV3SmithyClient(moduleExports: any) {\n    this._unwrap(moduleExports.Client.prototype, 'send');\n    return moduleExports;\n  }\n\n  protected patchV2(moduleExports: any, moduleVersion?: string) {\n    this.unpatchV2(moduleExports);\n    this._wrap(\n      moduleExports?.Request.prototype,\n      'send',\n      this._getRequestSendPatch.bind(this, moduleVersion)\n    );\n    this._wrap(\n      moduleExports?.Request.prototype,\n      'promise',\n      this._getRequestPromisePatch.bind(this, moduleVersion)\n    );\n\n    return moduleExports;\n  }\n\n  protected unpatchV2(moduleExports?: any) {\n    if (isWrapped(moduleExports?.Request.prototype.send)) {\n      this._unwrap(moduleExports!.Request.prototype, 'send');\n    }\n    if (isWrapped(moduleExports?.Request.prototype.promise)) {\n      this._unwrap(moduleExports!.Request.prototype, 'promise');\n    }\n  }\n\n  private _startAwsV3Span(\n    normalizedRequest: NormalizedRequest,\n    metadata: RequestMetadata\n  ): Span {\n    const name =\n      metadata.spanName ??\n      `${normalizedRequest.serviceName}.${normalizedRequest.commandName}`;\n    const newSpan = this.tracer.startSpan(name, {\n      kind: metadata.spanKind ?? SpanKind.CLIENT,\n      attributes: {\n        ...extractAttributesFromNormalizedRequest(normalizedRequest),\n        ...metadata.spanAttributes,\n      },\n    });\n\n    return newSpan;\n  }\n\n  private _startAwsV2Span(\n    request: AWS.Request<any, any>,\n    metadata: RequestMetadata,\n    normalizedRequest: NormalizedRequest\n  ): Span {\n    const operation = (request as any).operation;\n    const service = (request as any).service;\n    const serviceIdentifier = service?.serviceIdentifier;\n    const name =\n      metadata.spanName ??\n      `${normalizedRequest.serviceName}.${normalizedRequest.commandName}`;\n\n    const newSpan = this.tracer.startSpan(name, {\n      kind: metadata.spanKind ?? SpanKind.CLIENT,\n      attributes: {\n        [AttributeNames.AWS_OPERATION]: operation,\n        [AttributeNames.AWS_SIGNATURE_VERSION]:\n          service?.config?.signatureVersion,\n        [AttributeNames.AWS_SERVICE_API]: service?.api?.className,\n        [AttributeNames.AWS_SERVICE_IDENTIFIER]: serviceIdentifier,\n        [AttributeNames.AWS_SERVICE_NAME]: service?.api?.abbreviation,\n        ...extractAttributesFromNormalizedRequest(normalizedRequest),\n        ...metadata.spanAttributes,\n      },\n    });\n\n    return newSpan;\n  }\n\n  private _callUserPreRequestHook(\n    span: Span,\n    request: NormalizedRequest,\n    moduleVersion: string | undefined\n  ) {\n    const { preRequestHook } = this.getConfig();\n    if (preRequestHook) {\n      const requestInfo: AwsSdkRequestHookInformation = {\n        moduleVersion,\n        request,\n      };\n      safeExecuteInTheMiddle(\n        () => preRequestHook(span, requestInfo),\n        (e: Error | undefined) => {\n          if (e)\n            diag.error(\n              `${AwsInstrumentation.component} instrumentation: preRequestHook error`,\n              e\n            );\n        },\n        true\n      );\n    }\n  }\n\n  private _callUserResponseHook(span: Span, response: NormalizedResponse) {\n    const { responseHook } = this.getConfig();\n    if (!responseHook) return;\n\n    const responseInfo: AwsSdkResponseHookInformation = {\n      response,\n    };\n    safeExecuteInTheMiddle(\n      () => responseHook(span, responseInfo),\n      (e: Error | undefined) => {\n        if (e)\n          diag.error(\n            `${AwsInstrumentation.component} instrumentation: responseHook error`,\n            e\n          );\n      },\n      true\n    );\n  }\n\n  private _registerV2CompletedEvent(\n    span: Span,\n    v2Request: V2PluginRequest,\n    normalizedRequest: NormalizedRequest,\n    completedEventContext: Context\n  ) {\n    const self = this;\n    v2Request.on('complete', response => {\n      // read issue https://github.com/aspecto-io/opentelemetry-ext-js/issues/60\n      context.with(completedEventContext, () => {\n        if (!v2Request[REQUEST_SPAN_KEY]) {\n          return;\n        }\n        delete v2Request[REQUEST_SPAN_KEY];\n\n        const requestId = response.requestId;\n        const normalizedResponse: NormalizedResponse = {\n          data: response.data,\n          request: normalizedRequest,\n          requestId: requestId,\n        };\n\n        self._callUserResponseHook(span, normalizedResponse);\n        if (response.error) {\n          span.recordException(response.error);\n        } else {\n          this.servicesExtensions.responseHook(\n            normalizedResponse,\n            span,\n            self.tracer,\n            self.getConfig()\n          );\n        }\n\n        span.setAttribute(AttributeNames.AWS_REQUEST_ID, requestId);\n\n        const httpStatusCode = response.httpResponse?.statusCode;\n        if (httpStatusCode) {\n          span.setAttribute(SEMATTRS_HTTP_STATUS_CODE, httpStatusCode);\n        }\n        span.end();\n      });\n    });\n  }\n\n  private _getV3ConstructStackPatch(\n    moduleVersion: string | undefined,\n    original: (...args: unknown[]) => MiddlewareStack<any, any>\n  ) {\n    const self = this;\n    return function constructStack(\n      this: any,\n      ...args: unknown[]\n    ): MiddlewareStack<any, any> {\n      const stack: MiddlewareStack<any, any> = original.apply(this, args);\n      self.patchV3MiddlewareStack(moduleVersion, stack);\n      return stack;\n    };\n  }\n\n  private _getV3SmithyClientSendPatch(\n    original: (...args: unknown[]) => Promise<any>\n  ) {\n    return function send(\n      this: any,\n      command: V3PluginCommand,\n      ...args: unknown[]\n    ): Promise<any> {\n      command[V3_CLIENT_CONFIG_KEY] = this.config;\n      return original.apply(this, [command, ...args]);\n    };\n  }\n\n  private patchV3MiddlewareStack(\n    moduleVersion: string | undefined,\n    middlewareStackToPatch: MiddlewareStack<any, any>\n  ) {\n    if (!isWrapped(middlewareStackToPatch.resolve)) {\n      this._wrap(\n        middlewareStackToPatch,\n        'resolve',\n        this._getV3MiddlewareStackResolvePatch.bind(this, moduleVersion)\n      );\n    }\n\n    // 'clone' and 'concat' functions are internally calling 'constructStack' which is in same\n    // module, thus not patched, and we need to take care of it specifically.\n    this._wrap(\n      middlewareStackToPatch,\n      'clone',\n      this._getV3MiddlewareStackClonePatch.bind(this, moduleVersion)\n    );\n    this._wrap(\n      middlewareStackToPatch,\n      'concat',\n      this._getV3MiddlewareStackClonePatch.bind(this, moduleVersion)\n    );\n  }\n\n  private _getV3MiddlewareStackClonePatch(\n    moduleVersion: string | undefined,\n    original: (...args: any[]) => MiddlewareStack<any, any>\n  ) {\n    const self = this;\n    return function (this: any, ...args: any[]) {\n      const newStack = original.apply(this, args);\n      self.patchV3MiddlewareStack(moduleVersion, newStack);\n      return newStack;\n    };\n  }\n\n  private _getV3MiddlewareStackResolvePatch(\n    moduleVersion: string | undefined,\n    original: (\n      _handler: any,\n      context: HandlerExecutionContext\n    ) => AwsV3MiddlewareHandler<any, any>\n  ) {\n    const self = this;\n    return function (\n      this: any,\n      _handler: any,\n      awsExecutionContext: HandlerExecutionContext\n    ): AwsV3MiddlewareHandler<any, any> {\n      const origHandler = original.call(this, _handler, awsExecutionContext);\n      const patchedHandler = function (\n        this: any,\n        command: InitializeHandlerArguments<any> & {\n          [V3_CLIENT_CONFIG_KEY]?: any;\n        }\n      ): Promise<any> {\n        const clientConfig = command[V3_CLIENT_CONFIG_KEY];\n        const regionPromise = clientConfig?.region?.();\n        const serviceName =\n          clientConfig?.serviceId ??\n          removeSuffixFromStringIfExists(\n            awsExecutionContext.clientName,\n            'Client'\n          );\n        const commandName =\n          awsExecutionContext.commandName ?? command.constructor?.name;\n        const normalizedRequest = normalizeV3Request(\n          serviceName,\n          commandName,\n          command.input,\n          undefined\n        );\n        const requestMetadata = self.servicesExtensions.requestPreSpanHook(\n          normalizedRequest,\n          self.getConfig(),\n          self._diag\n        );\n        const span = self._startAwsV3Span(normalizedRequest, requestMetadata);\n        const activeContextWithSpan = trace.setSpan(context.active(), span);\n\n        const handlerPromise = new Promise((resolve, reject) => {\n          Promise.resolve(regionPromise)\n            .then(resolvedRegion => {\n              normalizedRequest.region = resolvedRegion;\n              span.setAttribute(AttributeNames.AWS_REGION, resolvedRegion);\n            })\n            .catch(e => {\n              // there is nothing much we can do in this case.\n              // we'll just continue without region\n              diag.debug(\n                `${AwsInstrumentation.component} instrumentation: failed to extract region from async function`,\n                e\n              );\n            })\n            .finally(() => {\n              self._callUserPreRequestHook(\n                span,\n                normalizedRequest,\n                moduleVersion\n              );\n              const resultPromise = context.with(activeContextWithSpan, () => {\n                self.servicesExtensions.requestPostSpanHook(normalizedRequest);\n                return self._callOriginalFunction(() =>\n                  origHandler.call(this, command)\n                );\n              });\n              const promiseWithResponseLogic = resultPromise\n                .then(response => {\n                  const requestId = response.output?.$metadata?.requestId;\n                  if (requestId) {\n                    span.setAttribute(AttributeNames.AWS_REQUEST_ID, requestId);\n                  }\n\n                  const httpStatusCode =\n                    response.output?.$metadata?.httpStatusCode;\n                  if (httpStatusCode) {\n                    span.setAttribute(\n                      SEMATTRS_HTTP_STATUS_CODE,\n                      httpStatusCode\n                    );\n                  }\n\n                  const extendedRequestId =\n                    response.output?.$metadata?.extendedRequestId;\n                  if (extendedRequestId) {\n                    span.setAttribute(\n                      AttributeNames.AWS_REQUEST_EXTENDED_ID,\n                      extendedRequestId\n                    );\n                  }\n\n                  const normalizedResponse: NormalizedResponse = {\n                    data: response.output,\n                    request: normalizedRequest,\n                    requestId: requestId,\n                  };\n                  self.servicesExtensions.responseHook(\n                    normalizedResponse,\n                    span,\n                    self.tracer,\n                    self.getConfig()\n                  );\n                  self._callUserResponseHook(span, normalizedResponse);\n                  return response;\n                })\n                .catch(err => {\n                  const requestId = err?.RequestId;\n                  if (requestId) {\n                    span.setAttribute(AttributeNames.AWS_REQUEST_ID, requestId);\n                  }\n\n                  const httpStatusCode = err?.$metadata?.httpStatusCode;\n                  if (httpStatusCode) {\n                    span.setAttribute(\n                      SEMATTRS_HTTP_STATUS_CODE,\n                      httpStatusCode\n                    );\n                  }\n\n                  const extendedRequestId = err?.extendedRequestId;\n                  if (extendedRequestId) {\n                    span.setAttribute(\n                      AttributeNames.AWS_REQUEST_EXTENDED_ID,\n                      extendedRequestId\n                    );\n                  }\n\n                  span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message,\n                  });\n                  span.recordException(err);\n                  throw err;\n                })\n                .finally(() => {\n                  span.end();\n                });\n              promiseWithResponseLogic\n                .then(res => {\n                  resolve(res);\n                })\n                .catch(err => reject(err));\n            });\n        });\n\n        return requestMetadata.isIncoming\n          ? bindPromise(handlerPromise, activeContextWithSpan, 2)\n          : handlerPromise;\n      };\n      return patchedHandler;\n    };\n  }\n\n  private _getRequestSendPatch(\n    moduleVersion: string | undefined,\n    original: (callback?: (err: any, data: any) => void) => void\n  ) {\n    const self = this;\n    return function (\n      this: V2PluginRequest,\n      callback?: (err: any, data: any) => void\n    ) {\n      /*\n        if the span was already started, we don't want to start a new one\n        when Request.promise() is called\n      */\n      if (this[REQUEST_SPAN_KEY]) {\n        return original.call(this, callback);\n      }\n\n      const normalizedRequest = normalizeV2Request(this);\n      const requestMetadata = self.servicesExtensions.requestPreSpanHook(\n        normalizedRequest,\n        self.getConfig(),\n        self._diag\n      );\n      const span = self._startAwsV2Span(\n        this,\n        requestMetadata,\n        normalizedRequest\n      );\n      this[REQUEST_SPAN_KEY] = span;\n      const activeContextWithSpan = trace.setSpan(context.active(), span);\n      const callbackWithContext = context.bind(activeContextWithSpan, callback);\n\n      self._callUserPreRequestHook(span, normalizedRequest, moduleVersion);\n      self._registerV2CompletedEvent(\n        span,\n        this,\n        normalizedRequest,\n        activeContextWithSpan\n      );\n\n      return context.with(activeContextWithSpan, () => {\n        self.servicesExtensions.requestPostSpanHook(normalizedRequest);\n        return self._callOriginalFunction(() =>\n          original.call(this, callbackWithContext)\n        );\n      });\n    };\n  }\n\n  private _getRequestPromisePatch(\n    moduleVersion: string | undefined,\n    original: (...args: unknown[]) => Promise<any>\n  ) {\n    const self = this;\n    return function (this: V2PluginRequest, ...args: unknown[]): Promise<any> {\n      // if the span was already started, we don't want to start a new one when Request.promise() is called\n      if (this[REQUEST_SPAN_KEY]) {\n        return original.apply(this, args);\n      }\n\n      const normalizedRequest = normalizeV2Request(this);\n      const requestMetadata = self.servicesExtensions.requestPreSpanHook(\n        normalizedRequest,\n        self.getConfig(),\n        self._diag\n      );\n      const span = self._startAwsV2Span(\n        this,\n        requestMetadata,\n        normalizedRequest\n      );\n      this[REQUEST_SPAN_KEY] = span;\n\n      const activeContextWithSpan = trace.setSpan(context.active(), span);\n      self._callUserPreRequestHook(span, normalizedRequest, moduleVersion);\n      self._registerV2CompletedEvent(\n        span,\n        this,\n        normalizedRequest,\n        activeContextWithSpan\n      );\n\n      const origPromise: Promise<any> = context.with(\n        activeContextWithSpan,\n        () => {\n          self.servicesExtensions.requestPostSpanHook(normalizedRequest);\n          return self._callOriginalFunction(() =>\n            original.call(this, arguments)\n          );\n        }\n      );\n\n      return requestMetadata.isIncoming\n        ? bindPromise(origPromise, activeContextWithSpan)\n        : origPromise;\n    };\n  }\n\n  private _callOriginalFunction<T>(originalFunction: (...args: any[]) => T): T {\n    if (this.getConfig().suppressInternalInstrumentation) {\n      return context.with(suppressTracing(context.active()), originalFunction);\n    } else {\n      return originalFunction();\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10699, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport { SQS } from './aws-sdk.types';\n\nexport type CommandInput = Record<string, any>;\n\n/**\n * These are normalized request and response, which are used by both sdk v2 and v3.\n * They organize the relevant data in one interface which can be processed in a\n * uniform manner in hooks\n */\nexport interface NormalizedRequest {\n  serviceName: string;\n  commandName: string;\n  commandInput: CommandInput;\n  region?: string;\n}\nexport interface NormalizedResponse {\n  data: any;\n  request: NormalizedRequest;\n  requestId: string;\n}\n\nexport interface AwsSdkRequestHookInformation {\n  moduleVersion?: string;\n  request: NormalizedRequest;\n}\nexport interface AwsSdkRequestCustomAttributeFunction {\n  (span: Span, requestInfo: AwsSdkRequestHookInformation): void;\n}\n\nexport interface AwsSdkResponseHookInformation {\n  moduleVersion?: string;\n  response: NormalizedResponse;\n}\n/**\n * span can be used to add custom attributes, or for any other need.\n * response is the object that is returned to the user calling the aws-sdk operation.\n * The response type and attributes on the response are client-specific.\n */\nexport interface AwsSdkResponseCustomAttributeFunction {\n  (span: Span, responseInfo: AwsSdkResponseHookInformation): void;\n}\n\nexport interface AwsSdkSqsProcessHookInformation {\n  message: SQS.Message;\n}\nexport interface AwsSdkSqsProcessCustomAttributeFunction {\n  (span: Span, sqsProcessInfo: AwsSdkSqsProcessHookInformation): void;\n}\n\nexport type AwsSdkDynamoDBStatementSerializer = (\n  operation: string,\n  commandInput: CommandInput\n) => string | undefined;\n\nexport interface AwsSdkInstrumentationConfig extends InstrumentationConfig {\n  /** hook for adding custom attributes before request is sent to aws */\n  preRequestHook?: AwsSdkRequestCustomAttributeFunction;\n\n  /** hook for adding custom attributes when response is received from aws */\n  responseHook?: AwsSdkResponseCustomAttributeFunction;\n\n  /** hook for adding custom attribute when an sqs process span is started */\n  sqsProcessHook?: AwsSdkSqsProcessCustomAttributeFunction;\n\n  /** custom serializer function for the db.statement attribute in DynamoDB spans */\n  dynamoDBStatementSerializer?: AwsSdkDynamoDBStatementSerializer;\n\n  /**\n   * Most aws operation use http request under the hood.\n   * if http instrumentation is enabled, each aws operation will also create\n   * an http/s child describing the communication with amazon servers.\n   * Setting the `suppressInternalInstrumentation` config value to `true` will\n   * cause the instrumentation to suppress instrumentation of underlying operations,\n   * effectively causing those http spans to be non-recordable.\n   */\n  suppressInternalInstrumentation?: boolean;\n\n  /**\n   * In some cases the context propagation headers may be found in the message payload\n   * rather than the message attribute.\n   * When this field is turned on the instrumentation will parse the payload and extract the\n   * context from there.\n   * Even if the field is on and MessageAttribute contains context propagation field are present,\n   * the MessageAttribute will get priority.\n   * By default it is off.\n   */\n  sqsExtractContextPropagationFromPayload?: boolean;\n}\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10708, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-aws-sdk/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './aws-sdk';\nexport * from './types';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,qJAAA,SAA0B;AAC1B,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10748, "column": 0}, "map": {"version":3,"file":"pubsub-propagation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagation-utils/src/pubsub-propagation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Tracer,\n  SpanKind,\n  Span,\n  Context,\n  Link,\n  context,\n  trace,\n  diag,\n  SpanAttributes,\n} from '@opentelemetry/api';\n\nconst START_SPAN_FUNCTION = Symbol(\n  'opentelemetry.pubsub-propagation.start_span'\n);\nconst END_SPAN_FUNCTION = Symbol('opentelemetry.pubsub-propagation.end_span');\n\ninterface OtelProcessedMessage {\n  [START_SPAN_FUNCTION]?: () => Span;\n  [END_SPAN_FUNCTION]?: () => void;\n}\n\nconst patchArrayFilter = (\n  messages: unknown[],\n  tracer: Tracer,\n  loopContext: Context\n) => {\n  const origFunc = messages.filter;\n  const patchedFunc = function (\n    this: unknown,\n    ...args: Parameters<typeof origFunc>\n  ) {\n    const newArray = origFunc.apply(this, args);\n    patchArrayForProcessSpans(newArray, tracer, loopContext);\n    return newArray;\n  };\n\n  Object.defineProperty(messages, 'filter', {\n    enumerable: false,\n    value: patchedFunc,\n  });\n};\n\nfunction isPromise(value: unknown): value is Promise<unknown> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return typeof (value as any)?.then === 'function';\n}\n\nconst patchArrayFunction = (\n  messages: OtelProcessedMessage[],\n  functionName: 'forEach' | 'map',\n  tracer: Tracer,\n  loopContext: Context\n) => {\n  const origFunc = messages[functionName] as typeof messages.map;\n  const patchedFunc = function (\n    this: unknown,\n    ...arrFuncArgs: Parameters<typeof origFunc>\n  ) {\n    const callback = arrFuncArgs[0];\n    const wrappedCallback = function (\n      this: unknown,\n      ...callbackArgs: Parameters<typeof callback>\n    ) {\n      const message = callbackArgs[0];\n      const messageSpan = message?.[START_SPAN_FUNCTION]?.();\n      if (!messageSpan) return callback.apply(this, callbackArgs);\n\n      const res = context.with(trace.setSpan(loopContext, messageSpan), () => {\n        let result: Promise<unknown> | unknown;\n        try {\n          result = callback.apply(this, callbackArgs);\n          if (isPromise(result)) {\n            const endSpan = () => message[END_SPAN_FUNCTION]?.();\n            result.then(endSpan, endSpan);\n          }\n          return result;\n        } finally {\n          if (!isPromise(result)) {\n            message[END_SPAN_FUNCTION]?.();\n          }\n        }\n      });\n\n      if (typeof res === 'object') {\n        const startSpanFunction = Object.getOwnPropertyDescriptor(\n          message,\n          START_SPAN_FUNCTION\n        );\n        startSpanFunction &&\n          Object.defineProperty(res, START_SPAN_FUNCTION, startSpanFunction);\n\n        const endSpanFunction = Object.getOwnPropertyDescriptor(\n          message,\n          END_SPAN_FUNCTION\n        );\n        endSpanFunction &&\n          Object.defineProperty(res, END_SPAN_FUNCTION, endSpanFunction);\n      }\n      return res;\n    };\n    arrFuncArgs[0] = wrappedCallback;\n    const funcResult = origFunc.apply(this, arrFuncArgs);\n    if (Array.isArray(funcResult))\n      patchArrayForProcessSpans(funcResult, tracer, loopContext);\n    return funcResult;\n  };\n\n  Object.defineProperty(messages, functionName, {\n    enumerable: false,\n    value: patchedFunc,\n  });\n};\n\nconst patchArrayForProcessSpans = (\n  messages: unknown[],\n  tracer: Tracer,\n  loopContext: Context = context.active()\n) => {\n  patchArrayFunction(\n    messages as OtelProcessedMessage[],\n    'forEach',\n    tracer,\n    loopContext\n  );\n  patchArrayFunction(\n    messages as OtelProcessedMessage[],\n    'map',\n    tracer,\n    loopContext\n  );\n  patchArrayFilter(messages, tracer, loopContext);\n};\n\nconst startMessagingProcessSpan = <T>(\n  message: T,\n  name: string,\n  attributes: SpanAttributes,\n  parentContext: Context,\n  propagatedContext: Context,\n  tracer: Tracer,\n  processHook?: ProcessHook<T>\n): Span => {\n  const links: Link[] = [];\n  const spanContext = trace.getSpanContext(propagatedContext);\n  if (spanContext) {\n    links.push({\n      context: spanContext,\n    } as Link);\n  }\n\n  const spanName = `${name} process`;\n  const processSpan = tracer.startSpan(\n    spanName,\n    {\n      kind: SpanKind.CONSUMER,\n      attributes: {\n        ...attributes,\n        ['messaging.operation']: 'process',\n      },\n      links,\n    },\n    parentContext\n  );\n\n  Object.defineProperty(message, START_SPAN_FUNCTION, {\n    enumerable: false,\n    writable: true,\n    value: () => processSpan,\n  });\n\n  Object.defineProperty(message, END_SPAN_FUNCTION, {\n    enumerable: false,\n    writable: true,\n    value: () => {\n      processSpan.end();\n      Object.defineProperty(message, END_SPAN_FUNCTION, {\n        enumerable: false,\n        writable: true,\n        value: () => {},\n      });\n    },\n  });\n\n  try {\n    processHook?.(processSpan, message);\n  } catch (err) {\n    diag.error('opentelemetry-pubsub-propagation: process hook error', err);\n  }\n\n  return processSpan;\n};\n\ninterface SpanDetails {\n  attributes: SpanAttributes;\n  parentContext: Context;\n  name: string;\n}\n\ntype ProcessHook<T> = (processSpan: Span, message: T) => void;\n\ninterface PatchForProcessingPayload<T> {\n  messages: T[];\n  tracer: Tracer;\n  parentContext: Context;\n  messageToSpanDetails: (message: T) => SpanDetails;\n  processHook?: ProcessHook<T>;\n}\n\nconst patchMessagesArrayToStartProcessSpans = <T>({\n  messages,\n  tracer,\n  parentContext,\n  messageToSpanDetails,\n  processHook,\n}: PatchForProcessingPayload<T>) => {\n  messages.forEach(message => {\n    const {\n      attributes,\n      name,\n      parentContext: propagatedContext,\n    } = messageToSpanDetails(message);\n\n    Object.defineProperty(message, START_SPAN_FUNCTION, {\n      enumerable: false,\n      writable: true,\n      value: () =>\n        startMessagingProcessSpan<T>(\n          message,\n          name,\n          attributes,\n          parentContext,\n          propagatedContext,\n          tracer,\n          processHook\n        ),\n    });\n  });\n};\n\nexport default {\n  patchMessagesArrayToStartProcessSpans,\n  patchArrayForProcessSpans,\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10896, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/propagation-utils/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { default as pubsubPropagation } from './pubsub-propagation';\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,IAAA,uDAAoE;AAA3D,OAAA,cAAA,CAAA,SAAA,qBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,qBAAA,OAAO;IAAA;AAAA,GAAqB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10927, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-bunyan/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.40.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-bunyan';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,uCAAuC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10954, "column": 0}, "map": {"version":3,"file":"OpenTelemetryBunyanStream.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-bunyan/src/OpenTelemetryBunyanStream.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { logs, SeverityNumber, Logger } from '@opentelemetry/api-logs';\nimport type { LogLevelString } from 'bunyan';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nconst DEFAULT_INSTRUMENTATION_SCOPE_NAME = PACKAGE_NAME;\nconst DEFAULT_INSTRUMENTATION_SCOPE_VERSION = PACKAGE_VERSION;\n\n// This block is a copy (modulo code style and TypeScript types) of the Bunyan\n// code that defines log level value and names. These values won't ever change\n// in bunyan@1. This file is part of *instrumenting* Bunyan, so we want to\n// avoid a dependency on the library.\nconst TRACE = 10;\nconst DEBUG = 20;\nconst INFO = 30;\nconst WARN = 40;\nconst ERROR = 50;\nconst FATAL = 60;\nconst levelFromName: Record<LogLevelString, number> = {\n  trace: TRACE,\n  debug: DEBUG,\n  info: INFO,\n  warn: WARN,\n  error: ERROR,\n  fatal: FATAL,\n};\nconst nameFromLevel: { [level: number]: string } = {};\nObject.keys(levelFromName).forEach(function (name) {\n  nameFromLevel[levelFromName[name as LogLevelString]] = name;\n});\n\nconst OTEL_SEV_NUM_FROM_BUNYAN_LEVEL: { [level: number]: SeverityNumber } = {\n  [TRACE]: SeverityNumber.TRACE,\n  [DEBUG]: SeverityNumber.DEBUG,\n  [INFO]: SeverityNumber.INFO,\n  [WARN]: SeverityNumber.WARN,\n  [ERROR]: SeverityNumber.ERROR,\n  [FATAL]: SeverityNumber.FATAL,\n};\n\nconst EXTRA_SEV_NUMS = [\n  SeverityNumber.TRACE2,\n  SeverityNumber.TRACE3,\n  SeverityNumber.TRACE4,\n  SeverityNumber.DEBUG2,\n  SeverityNumber.DEBUG3,\n  SeverityNumber.DEBUG4,\n  SeverityNumber.INFO2,\n  SeverityNumber.INFO3,\n  SeverityNumber.INFO4,\n  SeverityNumber.WARN2,\n  SeverityNumber.WARN3,\n  SeverityNumber.WARN4,\n  SeverityNumber.ERROR2,\n  SeverityNumber.ERROR3,\n  SeverityNumber.ERROR4,\n  SeverityNumber.FATAL2,\n  SeverityNumber.FATAL3,\n  SeverityNumber.FATAL4,\n];\n\nfunction severityNumberFromBunyanLevel(lvl: number) {\n  // Fast common case: one of the known levels\n  const sev = OTEL_SEV_NUM_FROM_BUNYAN_LEVEL[lvl];\n  if (sev !== undefined) {\n    return sev;\n  }\n\n  // Otherwise, scale the Bunyan level range -- 10 (TRACE) to 70 (FATAL+10)\n  // -- onto the extra OTel severity numbers (TRACE2, TRACE3, ..., FATAL4).\n  // Values below bunyan.TRACE map to SeverityNumber.TRACE2, which may be\n  // considered a bit weird, but it means the unnumbered levels are always\n  // just for exactly values.\n  const relativeLevelWeight = (lvl - 10) / (70 - 10);\n  const otelSevIdx = Math.floor(relativeLevelWeight * EXTRA_SEV_NUMS.length);\n  const cappedOTelIdx = Math.min(\n    EXTRA_SEV_NUMS.length - 1,\n    Math.max(0, otelSevIdx)\n  );\n  const otelSevValue = EXTRA_SEV_NUMS[cappedOTelIdx];\n  return otelSevValue;\n}\n\n/**\n * A Bunyan stream for sending log records to the OpenTelemetry Logs SDK.\n */\nexport class OpenTelemetryBunyanStream {\n  private _otelLogger: Logger;\n\n  constructor() {\n    this._otelLogger = logs.getLogger(\n      DEFAULT_INSTRUMENTATION_SCOPE_NAME,\n      DEFAULT_INSTRUMENTATION_SCOPE_VERSION\n    );\n  }\n\n  /**\n   * Convert from https://github.com/trentm/node-bunyan#log-record-fields\n   * to https://opentelemetry.io/docs/specs/otel/logs/data-model/\n   *\n   * Dev Notes:\n   * - We drop the Bunyan 'v' field. It is meant to indicate the format\n   *   of the Bunyan log record. FWIW, it has always been `0`.\n   * - The standard Bunyan `hostname` and `pid` fields are removed because they\n   *   are redundant with the OpenTelemetry `host.name` and `process.pid`\n   *   Resource attributes, respectively. This code cannot change the\n   *   LoggerProvider's `resource`, so getting the OpenTelemetry equivalents\n   *   depends on the user using relevant OpenTelemetry resource detectors.\n   *   \"examples/telemetry.js\" shows using HostDetector and ProcessDetector for\n   *   this.\n   * - The Bunyan `name` field *could* naturally map to OpenTelemetry's\n   *   `service.name` resource attribute. However, that is debatable, as some\n   *   users might use `name` more like a log4j logger name.\n   * - Strip the `trace_id` et al fields that may have been added by the\n   *   the _emit wrapper.\n   */\n  write(rec: Record<string, any>) {\n    const {\n      time,\n      level,\n      msg,\n      v, // eslint-disable-line @typescript-eslint/no-unused-vars\n      hostname, // eslint-disable-line @typescript-eslint/no-unused-vars\n      pid, // eslint-disable-line @typescript-eslint/no-unused-vars\n      trace_id, // eslint-disable-line @typescript-eslint/no-unused-vars\n      span_id, // eslint-disable-line @typescript-eslint/no-unused-vars\n      trace_flags, // eslint-disable-line @typescript-eslint/no-unused-vars\n      ...fields\n    } = rec;\n    let timestamp = undefined;\n    if (typeof time.getTime === 'function') {\n      timestamp = time.getTime(); // ms\n    } else {\n      fields.time = time; // Expose non-Date \"time\" field on attributes.\n    }\n    const otelRec = {\n      timestamp,\n      observedTimestamp: timestamp,\n      severityNumber: severityNumberFromBunyanLevel(level),\n      severityText: nameFromLevel[level],\n      body: msg,\n      attributes: fields,\n    };\n    this._otelLogger.emit(otelRec);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11112, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-bunyan/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { inherits } from 'util';\nimport { context, trace, isSpanContextValid, Span } from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { BunyanInstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { OpenTelemetryBunyanStream } from './OpenTelemetryBunyanStream';\nimport type * as BunyanLogger from 'bunyan';\nimport { SeverityNumber } from '@opentelemetry/api-logs';\n\nconst DEFAULT_CONFIG: BunyanInstrumentationConfig = {\n  disableLogSending: false,\n  disableLogCorrelation: false,\n};\n\nexport class BunyanInstrumentation extends InstrumentationBase {\n  constructor(config: BunyanInstrumentationConfig = {}) {\n    super(\n      PACKAGE_NAME,\n      PACKAGE_VERSION,\n      Object.assign({}, DEFAULT_CONFIG, config)\n    );\n  }\n\n  protected init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'bunyan',\n        ['>=1.0.0 <2'],\n        (module: any) => {\n          const instrumentation = this;\n          const Logger =\n            module[Symbol.toStringTag] === 'Module'\n              ? module.default // ESM\n              : module; // CommonJS\n\n          this._wrap(\n            Logger.prototype,\n            '_emit',\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this._getPatchedEmit() as any\n          );\n\n          function LoggerTraced(this: any, ...args: unknown[]) {\n            let inst;\n            let retval = undefined;\n            if (this instanceof LoggerTraced) {\n              // called with `new Logger()`\n              inst = this;\n              Logger.apply(this, args);\n            } else {\n              // called without `new`\n              inst = Logger(...args);\n              retval = inst;\n            }\n            // If `_childOptions` is defined, this is a `Logger#child(...)`\n            // call. We must not add an OTel stream again.\n            if (args[1] /* _childOptions */ === undefined) {\n              instrumentation._addStream(inst);\n            }\n            return retval;\n          }\n          // Must use the deprecated `inherits` to support this style:\n          //    const log = require('bunyan')({name: 'foo'});\n          // i.e. calling the constructor function without `new`.\n          inherits(LoggerTraced, Logger);\n\n          const patchedExports = Object.assign(LoggerTraced, Logger);\n\n          this._wrap(\n            patchedExports,\n            'createLogger',\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this._getPatchedCreateLogger() as any\n          );\n\n          return patchedExports;\n        }\n      ),\n    ];\n  }\n\n  override getConfig(): BunyanInstrumentationConfig {\n    return this._config;\n  }\n\n  override setConfig(config: BunyanInstrumentationConfig = {}) {\n    this._config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  private _getPatchedEmit() {\n    return (original: (...args: unknown[]) => void) => {\n      const instrumentation = this;\n      return function patchedEmit(this: BunyanLogger, ...args: unknown[]) {\n        const config = instrumentation.getConfig();\n        if (!instrumentation.isEnabled() || config.disableLogCorrelation) {\n          return original.apply(this, args);\n        }\n\n        const span = trace.getSpan(context.active());\n        if (!span) {\n          return original.apply(this, args);\n        }\n\n        const spanContext = span.spanContext();\n        if (!isSpanContextValid(spanContext)) {\n          return original.apply(this, args);\n        }\n\n        const record = args[0] as Record<string, string>;\n        record['trace_id'] = spanContext.traceId;\n        record['span_id'] = spanContext.spanId;\n        record['trace_flags'] = `0${spanContext.traceFlags.toString(16)}`;\n\n        instrumentation._callHook(span, record);\n\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  private _getPatchedCreateLogger() {\n    return (original: (...args: unknown[]) => void) => {\n      const instrumentation = this;\n      return function patchedCreateLogger(...args: unknown[]) {\n        const logger = original(...args);\n        instrumentation._addStream(logger);\n        return logger;\n      };\n    };\n  }\n\n  private _addStream(logger: any) {\n    const config: BunyanInstrumentationConfig = this.getConfig();\n    if (!this.isEnabled() || config.disableLogSending) {\n      return;\n    }\n    this._diag.debug('Adding OpenTelemetryBunyanStream to logger');\n    let streamLevel = logger.level();\n    if (config.logSeverity) {\n      const bunyanLevel = bunyanLevelFromSeverity(config.logSeverity);\n      streamLevel = bunyanLevel || streamLevel;\n    }\n    logger.addStream({\n      type: 'raw',\n      stream: new OpenTelemetryBunyanStream(),\n      level: streamLevel,\n    });\n  }\n\n  private _callHook(span: Span, record: Record<string, string>) {\n    const hook = this.getConfig().logHook;\n\n    if (typeof hook !== 'function') {\n      return;\n    }\n\n    safeExecuteInTheMiddle(\n      () => hook(span, record),\n      err => {\n        if (err) {\n          this._diag.error('error calling logHook', err);\n        }\n      },\n      true\n    );\n  }\n}\n\nfunction bunyanLevelFromSeverity(severity: SeverityNumber): string | undefined {\n  if (severity >= SeverityNumber.FATAL) {\n    return 'fatal';\n  } else if (severity >= SeverityNumber.ERROR) {\n    return 'error';\n  } else if (severity >= SeverityNumber.WARN) {\n    return 'warn';\n  } else if (severity >= SeverityNumber.INFO) {\n    return 'info';\n  } else if (severity >= SeverityNumber.DEBUG) {\n    return 'debug';\n  } else if (severity >= SeverityNumber.TRACE) {\n    return 'trace';\n  }\n  return;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11277, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-bunyan/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span } from '@opentelemetry/api';\nimport { SeverityNumber } from '@opentelemetry/api-logs';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type LogHookFunction = (span: Span, record: Record<string, any>) => void;\n\nexport interface BunyanInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * Whether to disable the automatic sending of log records to the\n   * OpenTelemetry Logs SDK.\n   * @default false\n   */\n  disableLogSending?: boolean;\n\n  /**\n   * Control Log sending severity level, logs will be sent for  specified severity and higher.\n   */\n  logSeverity?: SeverityNumber;\n\n  /**\n   * Whether to disable the injection trace-context fields, and possibly other\n   * fields from `logHook()`, into log records for log correlation.\n   * @default false\n   */\n  disableLogCorrelation?: boolean;\n\n  /**\n   * A function that allows injecting additional fields in log records. It is\n   * called, as `logHook(span, record)`, for each log record emitted in a valid\n   * span context. It requires `disableLogCorrelation` to be false.\n   */\n  logHook?: LogHookFunction;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11300, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-bunyan/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\nexport * from './OpenTelemetryBunyanStream';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,4JAAA,SAAkC;AAClC,kJAAA,SAAwB;AACxB,sKAAA,SAA4C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11341, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-cassandra-driver/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.40.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-cassandra-driver';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,iDAAiD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11368, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-cassandra-driver/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  trace,\n  Span,\n  Attributes,\n  SpanKind,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { CassandraDriverInstrumentationConfig, ResultSet } from './types';\nimport {\n  DBSYSTEMVALUES_CASSANDRA,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_DB_USER,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { EventEmitter } from 'events';\nimport type * as CassandraDriver from 'cassandra-driver';\n\nconst supportedVersions = ['>=4.4.0 <5'];\n\nexport class CassandraDriverInstrumentation extends InstrumentationBase {\n  protected override _config!: CassandraDriverInstrumentationConfig;\n\n  constructor(config: CassandraDriverInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    return new InstrumentationNodeModuleDefinition(\n      'cassandra-driver',\n      supportedVersions,\n      driverModule => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const Client = driverModule.Client.prototype as any;\n\n        if (isWrapped(Client['_execute'])) {\n          this._unwrap(Client, '_execute');\n        }\n\n        if (isWrapped(Client.batch)) {\n          this._unwrap(Client, 'batch');\n        }\n\n        if (isWrapped(Client.stream)) {\n          this._unwrap(Client, 'stream');\n        }\n\n        this._wrap(Client, '_execute', this._getPatchedExecute());\n        this._wrap(Client, 'batch', this._getPatchedBatch());\n        this._wrap(Client, 'stream', this._getPatchedStream());\n\n        return driverModule;\n      },\n      driverModule => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const Client = driverModule.Client.prototype as any;\n\n        if (isWrapped(Client['_execute'])) {\n          this._unwrap(Client, '_execute');\n        }\n\n        if (isWrapped(Client.batch)) {\n          this._unwrap(Client, 'batch');\n        }\n\n        if (isWrapped(Client.stream)) {\n          this._unwrap(Client, 'stream');\n        }\n      },\n      [\n        new InstrumentationNodeModuleFile(\n          'cassandra-driver/lib/request-execution.js',\n          supportedVersions,\n          execution => {\n            if (isWrapped(execution.prototype['_sendOnConnection'])) {\n              this._unwrap(execution.prototype, '_sendOnConnection');\n            }\n\n            this._wrap(\n              execution.prototype,\n              '_sendOnConnection',\n              this._getPatchedSendOnConnection()\n            );\n            return execution;\n          },\n          execution => {\n            if (execution === undefined) return;\n            this._unwrap(execution.prototype, '_sendOnConnection');\n          }\n        ),\n      ]\n    );\n  }\n\n  private _getMaxQueryLength(): number {\n    const config = this.getConfig() as CassandraDriverInstrumentationConfig;\n    return config.maxQueryLength ?? 65536;\n  }\n\n  private _shouldIncludeDbStatement(): boolean {\n    const config = this.getConfig() as CassandraDriverInstrumentationConfig;\n    return config.enhancedDatabaseReporting ?? false;\n  }\n\n  private _getPatchedExecute() {\n    return (\n      original: (...args: unknown[]) => Promise<CassandraDriver.types.ResultSet>\n    ) => {\n      const plugin = this;\n      return function patchedExecute(\n        this: CassandraDriver.Client,\n        ...args: unknown[]\n      ) {\n        const span = plugin.startSpan({ op: 'execute', query: args[0] }, this);\n\n        const execContext = trace.setSpan(context.active(), span);\n        const execPromise = safeExecuteInTheMiddle(\n          () => {\n            return context.with(execContext, () => {\n              return original.apply(this, args);\n            });\n          },\n          error => {\n            if (error) {\n              failSpan(span, error);\n            }\n          }\n        );\n\n        const wrappedPromise = wrapPromise(\n          span,\n          execPromise,\n          (span, result) => {\n            plugin._callResponseHook(span, result);\n          }\n        );\n\n        return context.bind(execContext, wrappedPromise);\n      };\n    };\n  }\n\n  private _getPatchedSendOnConnection() {\n    return (original: (...args: unknown[]) => unknown) => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return function patchedSendOnConnection(this: any, ...args: unknown[]) {\n        const span = trace.getSpan(context.active());\n        const conn = this['_connection'];\n\n        if (span !== undefined && conn !== undefined) {\n          const port = parseInt(conn.port, 10);\n\n          span.setAttribute(SEMATTRS_NET_PEER_NAME, conn.address);\n\n          if (!isNaN(port)) {\n            span.setAttribute(SEMATTRS_NET_PEER_PORT, port);\n          }\n        }\n\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  private _getPatchedBatch() {\n    return (original: (...args: unknown[]) => unknown) => {\n      const plugin = this;\n      return function patchedBatch(\n        this: CassandraDriver.Client,\n        ...args: unknown[]\n      ) {\n        const queries = Array.isArray(args[0]) ? args[0] : [];\n        const span = plugin.startSpan(\n          { op: 'batch', query: combineQueries(queries) },\n          this\n        );\n\n        const batchContext = trace.setSpan(context.active(), span);\n\n        if (typeof args[args.length - 1] === 'function') {\n          const originalCallback = args[\n            args.length - 1\n          ] as CassandraDriver.ValueCallback<CassandraDriver.types.ResultSet>;\n\n          const patchedCallback = function (\n            this: unknown,\n            ...cbArgs: Parameters<typeof originalCallback>\n          ) {\n            const error = cbArgs[0];\n\n            if (error) {\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: error.message,\n              });\n              span.recordException(error);\n            }\n\n            span.end();\n\n            return originalCallback.apply(this, cbArgs);\n          };\n\n          args[args.length - 1] = patchedCallback;\n\n          return context.with(batchContext, () => {\n            return original.apply(this, args);\n          });\n        }\n\n        const batchPromise = safeExecuteInTheMiddle(\n          () => {\n            return original.apply(\n              this,\n              args\n            ) as Promise<CassandraDriver.types.ResultSet>;\n          },\n          error => {\n            if (error) {\n              failSpan(span, error);\n            }\n          }\n        );\n\n        const wrappedPromise = wrapPromise(span, batchPromise);\n\n        return context.bind(batchContext, wrappedPromise);\n      };\n    };\n  }\n\n  private _getPatchedStream() {\n    return (original: (...args: unknown[]) => EventEmitter) => {\n      const plugin = this;\n      return function patchedStream(\n        this: CassandraDriver.Client,\n        ...args: unknown[]\n      ) {\n        // Since stream internally uses execute, there is no need to add DB_STATEMENT twice\n        const span = plugin.startSpan({ op: 'stream' }, this);\n\n        const callback = args[3];\n\n        const endSpan = (error: Error) => {\n          if (error) {\n            span.setStatus({\n              code: SpanStatusCode.ERROR,\n              message: error.message,\n            });\n            span.recordException(error);\n          }\n          span.end();\n        };\n\n        if (callback === undefined) {\n          args[3] = endSpan;\n        } else if (typeof callback === 'function') {\n          const wrappedCallback = function (this: unknown, err: Error) {\n            endSpan(err);\n            return callback.call(this, err);\n          };\n          args[3] = wrappedCallback;\n        }\n\n        return safeExecuteInTheMiddle(\n          () => {\n            return original.apply(this, args);\n          },\n          error => {\n            if (error) {\n              failSpan(span, error);\n            }\n          }\n        );\n      };\n    };\n  }\n\n  private startSpan(\n    { op, query }: { op: string; query?: unknown },\n    client: CassandraDriver.Client\n  ): Span {\n    const attributes: Attributes = {\n      [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_CASSANDRA,\n    };\n\n    if (this._shouldIncludeDbStatement() && query !== undefined) {\n      const statement = truncateQuery(query, this._getMaxQueryLength());\n      attributes[SEMATTRS_DB_STATEMENT] = statement;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const user = (client as any).options?.credentials?.username;\n\n    if (user) {\n      attributes[SEMATTRS_DB_USER] = user;\n    }\n\n    if (client.keyspace) {\n      attributes[SEMATTRS_DB_NAME] = client.keyspace;\n    }\n\n    return this.tracer.startSpan(`cassandra-driver.${op}`, {\n      kind: SpanKind.CLIENT,\n      attributes,\n    });\n  }\n\n  private _callResponseHook(span: Span, response: ResultSet) {\n    if (!this._config.responseHook) {\n      return;\n    }\n\n    safeExecuteInTheMiddle(\n      () => this._config.responseHook!(span, { response: response }),\n      e => {\n        if (e) {\n          this._diag.error('responseHook error', e);\n        }\n      },\n      true\n    );\n  }\n}\n\nfunction failSpan(span: Span, error: Error) {\n  span.setStatus({\n    code: SpanStatusCode.ERROR,\n    message: error.message,\n  });\n  span.recordException(error);\n  span.end();\n}\n\nfunction combineQueries(queries: Array<string | { query: string }>) {\n  return queries\n    .map(query => (typeof query === 'string' ? query : query.query))\n    .join('\\n');\n}\n\nfunction wrapPromise<T>(\n  span: Span,\n  promise: Promise<T>,\n  successCallback?: (span: Span, result: T) => void\n): Promise<T> {\n  return promise\n    .then(result => {\n      return new Promise<T>(resolve => {\n        if (successCallback) {\n          successCallback(span, result);\n        }\n        span.end();\n        resolve(result);\n      });\n    })\n    .catch((error: Error) => {\n      return new Promise<T>((_, reject) => {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: error.message,\n        });\n        span.recordException(error);\n        span.end();\n        reject(error);\n      });\n    });\n}\n\nfunction truncateQuery(query: unknown, maxQueryLength: number) {\n  return String(query).substr(0, maxQueryLength);\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAO4B;AAC5B,MAAA,8DAMwC;AAExC,MAAA,wEAQ6C;AAC7C,MAAA,iCAA0D;AAI1D,MAAM,iBAAiB,GAAG;IAAC,YAAY;CAAC,CAAC;AAEzC,MAAa,8BAA+B,SAAQ,kBAAA,mBAAmB;IAGrE,YAAY,SAA+C,CAAA,CAAE,CAAA;QAC3D,KAAK,CAAC,UAAA,YAAY,EAAE,UAAA,eAAe,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAES,IAAI,GAAA;QACZ,OAAO,IAAI,kBAAA,mCAAmC,CAC5C,kBAAkB,EAClB,iBAAiB,GACjB,YAAY,CAAC,EAAE;YACb,8DAA8D;YAC9D,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,SAAgB,CAAC;YAEpD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE;gBACjC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;aAClC;YAED,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;aAC/B;YAED,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,MAAM,CAAC,MAAM,CAAC,EAAE;gBAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aAChC;YAED,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;YAC1D,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;YACrD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAEvD,OAAO,YAAY,CAAC;QACtB,CAAC,GACD,YAAY,CAAC,EAAE;YACb,8DAA8D;YAC9D,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,SAAgB,CAAC;YAEpD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE;gBACjC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;aAClC;YAED,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;aAC/B;YAED,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,MAAM,CAAC,MAAM,CAAC,EAAE;gBAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aAChC;QACH,CAAC,EACD;YACE,IAAI,kBAAA,6BAA6B,CAC/B,2CAA2C,EAC3C,iBAAiB,GACjB,SAAS,CAAC,EAAE;gBACV,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,SAAS,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,EAAE;oBACvD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;iBACxD;gBAED,IAAI,CAAC,KAAK,CACR,SAAS,CAAC,SAAS,EACnB,mBAAmB,EACnB,IAAI,CAAC,2BAA2B,EAAE,CACnC,CAAC;gBACF,OAAO,SAAS,CAAC;YACnB,CAAC,GACD,SAAS,CAAC,EAAE;gBACV,IAAI,SAAS,KAAK,SAAS,EAAE,OAAO;gBACpC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;YACzD,CAAC,CACF;SACF,CACF,CAAC;IACJ,CAAC;IAEO,kBAAkB,GAAA;;QACxB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAA0C,CAAC;QACxE,OAAO,CAAA,KAAA,MAAM,CAAC,cAAc,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,KAAK,CAAC;IACxC,CAAC;IAEO,yBAAyB,GAAA;;QAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAA0C,CAAC;QACxE,OAAO,CAAA,KAAA,MAAM,CAAC,yBAAyB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,KAAK,CAAC;IACnD,CAAC;IAEO,kBAAkB,GAAA;QACxB,OAAO,CACL,QAA0E,EAC1E,EAAE;YACF,MAAM,MAAM,GAAG,IAAI,CAAC;YACpB,OAAO,SAAS,cAAc,CAE5B,GAAG,IAAe;gBAElB,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;oBAAE,EAAE,EAAE,SAAS;oBAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;gBAAA,CAAE,EAAE,IAAI,CAAC,CAAC;gBAEvE,MAAM,WAAW,GAAG,MAAA,KAAK,CAAC,OAAO,CAAC,MAAA,OAAO,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;gBAC1D,MAAM,WAAW,GAAG,CAAA,GAAA,kBAAA,sBAAsB,EACxC,GAAG,EAAE;oBACH,OAAO,MAAA,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE;wBACpC,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACpC,CAAC,CAAC,CAAC;gBACL,CAAC,GACD,KAAK,CAAC,EAAE;oBACN,IAAI,KAAK,EAAE;wBACT,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;qBACvB;gBACH,CAAC,CACF,CAAC;gBAEF,MAAM,cAAc,GAAG,WAAW,CAChC,IAAI,EACJ,WAAW,EACX,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE;oBACf,MAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBACzC,CAAC,CACF,CAAC;gBAEF,OAAO,MAAA,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;YACnD,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,2BAA2B,GAAA;QACjC,OAAO,CAAC,QAAyC,EAAE,EAAE;YACnD,8DAA8D;YAC9D,OAAO,SAAS,uBAAuB,CAAY,GAAG,IAAe;gBACnE,MAAM,IAAI,GAAG,MAAA,KAAK,CAAC,OAAO,CAAC,MAAA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;gBAEjC,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAAE;oBAC5C,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;oBAErC,IAAI,CAAC,YAAY,CAAC,uBAAA,sBAAsB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAExD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;wBAChB,IAAI,CAAC,YAAY,CAAC,uBAAA,sBAAsB,EAAE,IAAI,CAAC,CAAC;qBACjD;iBACF;gBAED,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACpC,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,gBAAgB,GAAA;QACtB,OAAO,CAAC,QAAyC,EAAE,EAAE;YACnD,MAAM,MAAM,GAAG,IAAI,CAAC;YACpB,OAAO,SAAS,YAAY,CAE1B,GAAG,IAAe;gBAElB,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACtD,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAC3B;oBAAE,EAAE,EAAE,OAAO;oBAAE,KAAK,EAAE,cAAc,CAAC,OAAO,CAAC;gBAAA,CAAE,EAC/C,IAAI,CACL,CAAC;gBAEF,MAAM,YAAY,GAAG,MAAA,KAAK,CAAC,OAAO,CAAC,MAAA,OAAO,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;gBAE3D,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,UAAU,EAAE;oBAC/C,MAAM,gBAAgB,GAAG,IAAI,CAC3B,IAAI,CAAC,MAAM,GAAG,CAAC,CACkD,CAAC;oBAEpE,MAAM,eAAe,GAAG,SAEtB,GAAG,MAA2C;wBAE9C,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBAExB,IAAI,KAAK,EAAE;4BACT,IAAI,CAAC,SAAS,CAAC;gCACb,IAAI,EAAE,MAAA,cAAc,CAAC,KAAK;gCAC1B,OAAO,EAAE,KAAK,CAAC,OAAO;6BACvB,CAAC,CAAC;4BACH,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;yBAC7B;wBAED,IAAI,CAAC,GAAG,EAAE,CAAC;wBAEX,OAAO,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;oBAC9C,CAAC,CAAC;oBAEF,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC;oBAExC,OAAO,MAAA,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;wBACrC,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACpC,CAAC,CAAC,CAAC;iBACJ;gBAED,MAAM,YAAY,GAAG,CAAA,GAAA,kBAAA,sBAAsB,EACzC,GAAG,EAAE;oBACH,OAAO,QAAQ,CAAC,KAAK,CACnB,IAAI,EACJ,IAAI,CACuC,CAAC;gBAChD,CAAC,GACD,KAAK,CAAC,EAAE;oBACN,IAAI,KAAK,EAAE;wBACT,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;qBACvB;gBACH,CAAC,CACF,CAAC;gBAEF,MAAM,cAAc,GAAG,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;gBAEvD,OAAO,MAAA,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;YACpD,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,iBAAiB,GAAA;QACvB,OAAO,CAAC,QAA8C,EAAE,EAAE;YACxD,MAAM,MAAM,GAAG,IAAI,CAAC;YACpB,OAAO,SAAS,aAAa,CAE3B,GAAG,IAAe;gBAElB,mFAAmF;gBACnF,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;oBAAE,EAAE,EAAE,QAAQ;gBAAA,CAAE,EAAE,IAAI,CAAC,CAAC;gBAEtD,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAEzB,MAAM,OAAO,GAAG,CAAC,KAAY,EAAE,EAAE;oBAC/B,IAAI,KAAK,EAAE;wBACT,IAAI,CAAC,SAAS,CAAC;4BACb,IAAI,EAAE,MAAA,cAAc,CAAC,KAAK;4BAC1B,OAAO,EAAE,KAAK,CAAC,OAAO;yBACvB,CAAC,CAAC;wBACH,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;qBAC7B;oBACD,IAAI,CAAC,GAAG,EAAE,CAAC;gBACb,CAAC,CAAC;gBAEF,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;iBACnB,MAAM,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;oBACzC,MAAM,eAAe,GAAG,SAAyB,GAAU;wBACzD,OAAO,CAAC,GAAG,CAAC,CAAC;wBACb,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;oBAClC,CAAC,CAAC;oBACF,IAAI,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC;iBAC3B;gBAED,OAAO,CAAA,GAAA,kBAAA,sBAAsB,EAC3B,GAAG,EAAE;oBACH,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACpC,CAAC,GACD,KAAK,CAAC,EAAE;oBACN,IAAI,KAAK,EAAE;wBACT,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;qBACvB;gBACH,CAAC,CACF,CAAC;YACJ,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,SAAS,CACf,EAAE,EAAE,EAAE,KAAK,EAAmC,EAC9C,MAA8B,EAAA;;QAE9B,MAAM,UAAU,GAAe;YAC7B,CAAC,uBAAA,kBAAkB,CAAC,EAAE,uBAAA,wBAAwB;SAC/C,CAAC;QAEF,IAAI,IAAI,CAAC,yBAAyB,EAAE,IAAI,KAAK,KAAK,SAAS,EAAE;YAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;YAClE,UAAU,CAAC,uBAAA,qBAAqB,CAAC,GAAG,SAAS,CAAC;SAC/C;QAED,8DAA8D;QAC9D,MAAM,IAAI,GAAG,CAAA,KAAA,CAAA,KAAC,MAAc,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,QAAQ,CAAC;QAE5D,IAAI,IAAI,EAAE;YACR,UAAU,CAAC,uBAAA,gBAAgB,CAAC,GAAG,IAAI,CAAC;SACrC;QAED,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,UAAU,CAAC,uBAAA,gBAAgB,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChD;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA,iBAAA,EAAoB,EAAE,EAAE,EAAE;YACrD,IAAI,EAAE,MAAA,QAAQ,CAAC,MAAM;YACrB,UAAU;SACX,CAAC,CAAC;IACL,CAAC;IAEO,iBAAiB,CAAC,IAAU,EAAE,QAAmB,EAAA;QACvD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;YAC9B,OAAO;SACR;QAED,CAAA,GAAA,kBAAA,sBAAsB,EACpB,GAAG,CAAG,CAAD,GAAK,CAAC,OAAO,CAAC,YAAa,CAAC,IAAI,EAAE;gBAAE,QAAQ,EAAE,QAAQ;YAAA,CAAE,CAAC,GAC9D,CAAC,CAAC,EAAE;YACF,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;aAC3C;QACH,CAAC,EACD,IAAI,CACL,CAAC;IACJ,CAAC;CACF;AA/SD,QAAA,8BAAA,GAAA,+BA+SC;AAED,SAAS,QAAQ,CAAC,IAAU,EAAE,KAAY;IACxC,IAAI,CAAC,SAAS,CAAC;QACb,IAAI,EAAE,MAAA,cAAc,CAAC,KAAK;QAC1B,OAAO,EAAE,KAAK,CAAC,OAAO;KACvB,CAAC,CAAC;IACH,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC5B,IAAI,CAAC,GAAG,EAAE,CAAC;AACb,CAAC;AAED,SAAS,cAAc,CAAC,OAA0C;IAChE,OAAO,OAAO,CACX,GAAG,EAAC,KAAK,CAAC,EAAI,AAAF,CAAC,MAAQ,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,AAC/D,IAAI,CAAC,IAAI,CAAC,CAAC;AAChB,CAAC;AAED,SAAS,WAAW,CAClB,IAAU,EACV,OAAmB,EACnB,eAAiD;IAEjD,OAAO,OAAO,CACX,IAAI,EAAC,MAAM,CAAC,EAAE;QACb,OAAO,IAAI,OAAO,EAAI,OAAO,CAAC,EAAE;YAC9B,IAAI,eAAe,EAAE;gBACnB,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aAC/B;YACD,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,OAAO,CAAC,MAAM,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;QACtB,OAAO,IAAI,OAAO,CAAI,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE;YAClC,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAE,MAAA,cAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,KAAK,CAAC,OAAO;aACvB,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,MAAM,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC;AAED,SAAS,aAAa,CAAC,KAAc,EAAE,cAAsB;IAC3D,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;AACjD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11647, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-cassandra-driver/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport { Span } from '@opentelemetry/api';\n\nexport interface Row {\n  get(columnName: string | number): any;\n\n  keys(): string[];\n\n  forEach(callback: (row: Row) => void): void;\n\n  values(): any[];\n\n  [key: string]: any;\n}\n\n// https://github.com/datastax/nodejs-driver/blob/d42176e4baa1cfc3df79699cc3b5d575c86e3cec/lib/types/index.d.ts#L323\nexport interface ResultSet {\n  rows: Row[];\n}\n\nexport interface ResponseHookInfo {\n  response: ResultSet;\n}\n\nexport interface CassandraDriverResponseCustomAttributeFunction {\n  (span: Span, responseInfo: ResponseHookInfo): void;\n}\n\nexport interface CassandraDriverInstrumentationConfig\n  extends InstrumentationConfig {\n  /**\n   * Include database statements with spans.\n   * These can contain sensitive information when using unescaped queries.\n   * @default false\n   */\n  enhancedDatabaseReporting?: boolean;\n  /**\n   * Max recorded query length.\n   * @default 65536\n   */\n  maxQueryLength?: number;\n  /**\n   * Function for adding custom attributes before response is handled.\n   * @param span the current span\n   * @param responseInfo array of the resulting rows. This will only return the first page of results\n   */\n  responseHook?: CassandraDriverResponseCustomAttributeFunction;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11670, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-cassandra-driver/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,sKAAA,SAAkC;AAClC,4JAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11710, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-connect/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  CONNECT_TYPE = 'connect.type',\n  CONNECT_NAME = 'connect.name',\n}\n\nexport enum ConnectTypes {\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request_handler',\n}\n\nexport enum ConnectNames {\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request handler',\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAY,cAGX;AAHD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;IAC7B,cAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAHW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAGzB;AAED,IAAY,YAGX;AAHD,CAAA,SAAY,YAAY;IACtB,YAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,YAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;AACrC,CAAC,EAHW,YAAY,GAAZ,QAAA,YAAY,IAAA,CAAZ,QAAA,YAAY,GAAA,CAAA,CAAA,GAGvB;AAED,IAAY,YAGX;AAHD,CAAA,SAAY,YAAY;IACtB,YAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,YAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;AACrC,CAAC,EAHW,YAAY,GAAZ,QAAA,YAAY,IAAA,CAAZ,QAAA,YAAY,GAAA,CAAA,CAAA,GAGvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11749, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-connect/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.38.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-connect';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11776, "column": 0}, "map": {"version":3,"file":"internal-types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-connect/src/internal-types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { HandleFunction, IncomingMessage, Server } from 'connect';\n\nexport const _LAYERS_STORE_PROPERTY: unique symbol = Symbol(\n  'opentelemetry.instrumentation-connect.request-route-stack'\n);\n\nexport type UseArgs1 = [HandleFunction];\nexport type UseArgs2 = [string, HandleFunction];\nexport type UseArgs = UseArgs1 | UseArgs2;\nexport type Use = (...args: UseArgs) => Server;\nexport type PatchedRequest = {\n  [_LAYERS_STORE_PROPERTY]: string[];\n} & IncomingMessage;\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAIU,QAAA,sBAAsB,GAAkB,MAAM,CACzD,2DAA2D,CAC5D,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11801, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-connect/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { _LAYERS_STORE_PROPERTY, PatchedRequest } from './internal-types';\n\nexport const addNewStackLayer = (request: PatchedRequest) => {\n  if (Array.isArray(request[_LAYERS_STORE_PROPERTY]) === false) {\n    Object.defineProperty(request, _LAYERS_STORE_PROPERTY, {\n      enumerable: false,\n      value: [],\n    });\n  }\n  request[_LAYERS_STORE_PROPERTY].push('/');\n\n  const stackLength = request[_LAYERS_STORE_PROPERTY].length;\n\n  return () => {\n    if (stackLength === request[_LAYERS_STORE_PROPERTY].length) {\n      request[_LAYERS_STORE_PROPERTY].pop();\n    } else {\n      diag.warn('Connect: Trying to pop the stack multiple time');\n    }\n  };\n};\n\nexport const replaceCurrentStackRoute = (\n  request: PatchedRequest,\n  newRoute?: string\n) => {\n  if (newRoute) {\n    request[_LAYERS_STORE_PROPERTY].splice(-1, 1, newRoute);\n  }\n};\n\n// generate route from existing stack on request object.\n// splash between stack layer will be deduped\n// [\"/first/\", \"/second\", \"/third/\"] => /first/second/third/\nexport const generateRoute = (request: PatchedRequest) => {\n  return request[_LAYERS_STORE_PROPERTY].reduce(\n    (acc, sub) => acc.replace(/\\/+$/, '') + sub\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,MAAA,sCAA0C;AAC1C,MAAA,+CAA0E;AAEnE,MAAM,gBAAgB,GAAG,CAAC,OAAuB,EAAE,EAAE;IAC1D,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAA,sBAAsB,CAAC,CAAC,KAAK,KAAK,EAAE;QAC5D,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,iBAAA,sBAAsB,EAAE;YACrD,UAAU,EAAE,KAAK;YACjB,KAAK,EAAE,EAAE;SACV,CAAC,CAAC;KACJ;IACD,OAAO,CAAC,iBAAA,sBAAsB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAE1C,MAAM,WAAW,GAAG,OAAO,CAAC,iBAAA,sBAAsB,CAAC,CAAC,MAAM,CAAC;IAE3D,OAAO,GAAG,EAAE;QACV,IAAI,WAAW,KAAK,OAAO,CAAC,iBAAA,sBAAsB,CAAC,CAAC,MAAM,EAAE;YAC1D,OAAO,CAAC,iBAAA,sBAAsB,CAAC,CAAC,GAAG,EAAE,CAAC;SACvC,MAAM;YACL,MAAA,IAAI,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;SAC7D;IACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAlBW,QAAA,gBAAgB,GAAA,iBAkB3B;AAEK,MAAM,wBAAwB,GAAG,CACtC,OAAuB,EACvB,QAAiB,EACjB,EAAE;IACF,IAAI,QAAQ,EAAE;QACZ,OAAO,CAAC,iBAAA,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;KACzD;AACH,CAAC,CAAC;AAPW,QAAA,wBAAwB,GAAA,yBAOnC;AAEF,wDAAwD;AACxD,6CAA6C;AAC7C,4DAA4D;AACrD,MAAM,aAAa,GAAG,CAAC,OAAuB,EAAE,EAAE;IACvD,OAAO,OAAO,CAAC,iBAAA,sBAAsB,CAAC,CAAC,MAAM,CAC3C,CAAC,GAAG,EAAE,GAAG,EAAE,CAAG,CAAD,EAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,CAC5C,CAAC;AACJ,CAAC,CAAC;AAJW,QAAA,aAAa,GAAA,cAIxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11858, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-connect/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Span, SpanOptions } from '@opentelemetry/api';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport type { HandleFunction, NextFunction, Server } from 'connect';\nimport type { ServerResponse } from 'http';\nimport {\n  AttributeNames,\n  ConnectNames,\n  ConnectTypes,\n} from './enums/AttributeNames';\nimport { PatchedRequest, Use, UseArgs, UseArgs2 } from './internal-types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\nimport {\n  replaceCurrentStackRoute,\n  addNewStackLayer,\n  generateRoute,\n} from './utils';\n\nexport const ANONYMOUS_NAME = 'anonymous';\n\n/** Connect instrumentation for OpenTelemetry */\nexport class ConnectInstrumentation extends InstrumentationBase {\n  constructor(config: InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'connect',\n        ['>=3.0.0 <4'],\n        moduleExports => {\n          return this._patchConstructor(moduleExports);\n        }\n      ),\n    ];\n  }\n\n  private _patchApp(patchedApp: Server) {\n    if (!isWrapped(patchedApp.use)) {\n      this._wrap(patchedApp, 'use', this._patchUse.bind(this));\n    }\n    if (!isWrapped(patchedApp.handle)) {\n      this._wrap(patchedApp, 'handle', this._patchHandle.bind(this));\n    }\n  }\n\n  private _patchConstructor(original: () => Server): () => Server {\n    const instrumentation = this;\n    return function (this: Server, ...args) {\n      const app = original.apply(this, args) as Server;\n      instrumentation._patchApp(app);\n      return app;\n    };\n  }\n\n  public _patchNext(next: NextFunction, finishSpan: () => void): NextFunction {\n    return function nextFunction(this: NextFunction, err?: any): void {\n      const result = next.apply(this, [err]);\n      finishSpan();\n      return result;\n    };\n  }\n\n  public _startSpan(routeName: string, middleWare: HandleFunction): Span {\n    let connectType: ConnectTypes;\n    let connectName: string;\n    let connectTypeName: string;\n    if (routeName) {\n      connectType = ConnectTypes.REQUEST_HANDLER;\n      connectTypeName = ConnectNames.REQUEST_HANDLER;\n      connectName = routeName;\n    } else {\n      connectType = ConnectTypes.MIDDLEWARE;\n      connectTypeName = ConnectNames.MIDDLEWARE;\n      connectName = middleWare.name || ANONYMOUS_NAME;\n    }\n    const spanName = `${connectTypeName} - ${connectName}`;\n    const options: SpanOptions = {\n      attributes: {\n        [SEMATTRS_HTTP_ROUTE]: routeName.length > 0 ? routeName : '/',\n        [AttributeNames.CONNECT_TYPE]: connectType,\n        [AttributeNames.CONNECT_NAME]: connectName,\n      },\n    };\n\n    return this.tracer.startSpan(spanName, options);\n  }\n\n  public _patchMiddleware(\n    routeName: string,\n    middleWare: HandleFunction\n  ): HandleFunction {\n    const instrumentation = this;\n    const isErrorMiddleware = middleWare.length === 4;\n\n    function patchedMiddleware(this: Use): void {\n      if (!instrumentation.isEnabled()) {\n        return (middleWare as any).apply(this, arguments);\n      }\n      const [reqArgIdx, resArgIdx, nextArgIdx] = isErrorMiddleware\n        ? [1, 2, 3]\n        : [0, 1, 2];\n      const req = arguments[reqArgIdx] as PatchedRequest;\n      const res = arguments[resArgIdx] as ServerResponse;\n      const next = arguments[nextArgIdx] as NextFunction;\n\n      replaceCurrentStackRoute(req, routeName);\n\n      const rpcMetadata = getRPCMetadata(context.active());\n      if (routeName && rpcMetadata?.type === RPCType.HTTP) {\n        rpcMetadata.route = generateRoute(req);\n      }\n\n      let spanName = '';\n      if (routeName) {\n        spanName = `request handler - ${routeName}`;\n      } else {\n        spanName = `middleware - ${middleWare.name || ANONYMOUS_NAME}`;\n      }\n      const span = instrumentation._startSpan(routeName, middleWare);\n      instrumentation._diag.debug('start span', spanName);\n      let spanFinished = false;\n\n      function finishSpan() {\n        if (!spanFinished) {\n          spanFinished = true;\n          instrumentation._diag.debug(`finishing span ${(span as any).name}`);\n          span.end();\n        } else {\n          instrumentation._diag.debug(\n            `span ${(span as any).name} - already finished`\n          );\n        }\n        res.removeListener('close', finishSpan);\n      }\n\n      res.addListener('close', finishSpan);\n      arguments[nextArgIdx] = instrumentation._patchNext(next, finishSpan);\n\n      return (middleWare as any).apply(this, arguments);\n    }\n\n    Object.defineProperty(patchedMiddleware, 'length', {\n      value: middleWare.length,\n      writable: false,\n      configurable: true,\n    });\n\n    return patchedMiddleware;\n  }\n\n  public _patchUse(original: Server['use']): Use {\n    const instrumentation = this;\n    return function (this: Server, ...args: UseArgs): Server {\n      const middleWare = args[args.length - 1] as HandleFunction;\n      const routeName = (args[args.length - 2] || '') as string;\n\n      args[args.length - 1] = instrumentation._patchMiddleware(\n        routeName,\n        middleWare\n      );\n\n      return original.apply(this, args as UseArgs2);\n    };\n  }\n\n  public _patchHandle(original: Server['handle']): Server['handle'] {\n    const instrumentation = this;\n    return function (this: Server): ReturnType<Server['handle']> {\n      const [reqIdx, outIdx] = [0, 2];\n      const req = arguments[reqIdx] as PatchedRequest;\n      const out = arguments[outIdx];\n      const completeStack = addNewStackLayer(req);\n\n      if (typeof out === 'function') {\n        arguments[outIdx] = instrumentation._patchOut(\n          out as NextFunction,\n          completeStack\n        );\n      }\n\n      return (original as any).apply(this, arguments);\n    };\n  }\n\n  public _patchOut(out: NextFunction, completeStack: () => void): NextFunction {\n    return function nextFunction(this: NextFunction, ...args: any[]): void {\n      completeStack();\n      return Reflect.apply(out, this, args);\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12038, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-connect/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './enums/AttributeNames';\nexport * from './instrumentation';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,kKAAA,SAAuC;AACvC,6JAAA,SAAkC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12078, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-cucumber/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport type CucumberInstrumentationConfig = InstrumentationConfig;\n\nexport enum AttributeNames {\n  FEATURE_TAGS = 'cucumber.feature.tags',\n  FEATURE_LANGUAGE = 'cucumber.feature.language',\n  FEATURE_DESCRIPTION = 'cucumber.feature.description',\n  SCENARIO_TAGS = 'cucumber.scenario.tags',\n  SCENARIO_DESCRIPTION = 'cucumber.scenario.description',\n  STEP_TYPE = 'cucumber.step.type',\n  STEP_STATUS = 'cucumber.step.status',\n  STEP_ARGS = 'cucumber.step.args',\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAMH,IAAY,cASX;AATD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,eAAA,GAAA,uBAAsC,CAAA;IACtC,cAAA,CAAA,mBAAA,GAAA,2BAA8C,CAAA;IAC9C,cAAA,CAAA,sBAAA,GAAA,8BAAoD,CAAA;IACpD,cAAA,CAAA,gBAAA,GAAA,wBAAwC,CAAA;IACxC,cAAA,CAAA,uBAAA,GAAA,+BAAsD,CAAA;IACtD,cAAA,CAAA,YAAA,GAAA,oBAAgC,CAAA;IAChC,cAAA,CAAA,cAAA,GAAA,sBAAoC,CAAA;IACpC,cAAA,CAAA,YAAA,GAAA,oBAAgC,CAAA;AAClC,CAAC,EATW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GASzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12113, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-cucumber/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.8.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-cucumber';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,OAAO,CAAC;AAC1B,QAAA,YAAY,GAAG,yCAAyC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12140, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-cucumber/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span, SpanKind, SpanStatusCode } from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport {\n  SEMATTRS_CODE_FILEPATH,\n  SEMATTRS_CODE_FUNCTION,\n  SEMATTRS_CODE_LINENO,\n  SEMATTRS_CODE_NAMESPACE,\n} from '@opentelemetry/semantic-conventions';\n\nimport type * as cucumber from '@cucumber/cucumber';\nimport type * as messages from '@cucumber/messages';\nimport type TestCaseRunner from '@cucumber/cucumber/lib/runtime/test_case_runner';\nimport type {\n  DefineStepPattern,\n  IDefineStepOptions,\n  IDefineTestRunHookOptions,\n} from '@cucumber/cucumber/lib/support_code_library_builder/types';\n\nimport { AttributeNames, CucumberInstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nconst hooks = ['Before', 'BeforeStep', 'AfterStep', 'After'] as const;\nconst steps = ['Given', 'When', 'Then'] as const;\ntype Cucumber = typeof cucumber;\ntype Hook = (typeof hooks)[number];\ntype Step = (typeof steps)[number];\n\nconst supportedVersions = ['>=8.0.0 <11'];\n\nexport class CucumberInstrumentation extends InstrumentationBase {\n  private module: Cucumber | undefined;\n\n  constructor(config: CucumberInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init(): InstrumentationNodeModuleDefinition[] {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        '@cucumber/cucumber',\n        supportedVersions,\n        (moduleExports: Cucumber) => {\n          this.module = moduleExports;\n          steps.forEach(step => {\n            if (isWrapped(moduleExports[step])) {\n              this._unwrap(moduleExports, step);\n            }\n            this._wrap(moduleExports, step, this._getStepPatch(step));\n          });\n          hooks.forEach(hook => {\n            if (isWrapped(moduleExports[hook])) {\n              this._unwrap(moduleExports, hook);\n            }\n            this._wrap(moduleExports, hook, this._getHookPatch(hook));\n          });\n          return moduleExports;\n        },\n        (moduleExports: Cucumber) => {\n          if (moduleExports === undefined) return;\n          [...hooks, ...steps].forEach(method => {\n            this._unwrap(moduleExports, method);\n          });\n        },\n        [\n          new InstrumentationNodeModuleFile(\n            '@cucumber/cucumber/lib/runtime/test_case_runner.js',\n            supportedVersions,\n            moduleExports => {\n              if (isWrapped(moduleExports.default.prototype.run)) {\n                this._unwrap(moduleExports.default.prototype, 'run');\n                this._unwrap(moduleExports.default.prototype, 'runStep');\n                if ('runAttempt' in moduleExports.default.prototype) {\n                  this._unwrap(moduleExports.default.prototype, 'runAttempt');\n                }\n              }\n              this._wrap(\n                moduleExports.default.prototype,\n                'run',\n                this._getTestCaseRunPatch()\n              );\n              this._wrap(\n                moduleExports.default.prototype,\n                'runStep',\n                this._getTestCaseRunStepPatch()\n              );\n              if ('runAttempt' in moduleExports.default.prototype) {\n                this._wrap(\n                  moduleExports.default.prototype,\n                  'runAttempt',\n                  this._getTestCaseRunAttemptPatch()\n                );\n              }\n              return moduleExports;\n            },\n            moduleExports => {\n              if (moduleExports === undefined) return;\n              this._unwrap(moduleExports.default.prototype, 'run');\n              this._unwrap(moduleExports.default.prototype, 'runStep');\n              if ('runAttempt' in moduleExports.default.prototype) {\n                this._unwrap(moduleExports.default.prototype, 'runAttempt');\n              }\n            }\n          ),\n        ]\n      ),\n    ];\n  }\n\n  private static mapTags(tags: readonly messages.Tag[]): string[] {\n    return tags.map(tag => tag.name);\n  }\n\n  private static setSpanToError(span: Span, error: any) {\n    span.recordException(error);\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message: error?.message ?? error,\n    });\n  }\n\n  private setSpanToStepStatus(\n    span: Span,\n    status: messages.TestStepResultStatus,\n    context?: string\n  ) {\n    // if the telemetry is enabled, the module should be defined\n    if (!this.module) return;\n\n    span.setAttribute(AttributeNames.STEP_STATUS, status);\n    if (\n      [\n        this.module.Status.UNDEFINED,\n        this.module.Status.AMBIGUOUS,\n        this.module.Status.FAILED,\n      ].includes(status)\n    ) {\n      span.recordException(status);\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: context || status,\n      });\n    }\n  }\n\n  private _getTestCaseRunPatch() {\n    const instrumentation = this;\n    return function (original: TestCaseRunner['run']): TestCaseRunner['run'] {\n      return async function (this: TestCaseRunner, ...args) {\n        const gherkinDocument = this[\n          'gherkinDocument'\n        ] as Required<messages.GherkinDocument>;\n        const { feature } = gherkinDocument;\n        const pickle = this['pickle'] as messages.Pickle;\n        const scenario = feature.children.find(\n          node => node?.scenario?.id === pickle.astNodeIds[0]\n        )?.scenario as messages.Scenario;\n\n        return instrumentation.tracer.startActiveSpan(\n          `Feature: ${feature.name}. Scenario: ${pickle.name}`,\n          {\n            kind: SpanKind.CLIENT,\n            attributes: {\n              [SEMATTRS_CODE_FILEPATH]: gherkinDocument.uri,\n              [SEMATTRS_CODE_LINENO]: scenario.location.line,\n              [SEMATTRS_CODE_FUNCTION]: scenario.name,\n              [SEMATTRS_CODE_NAMESPACE]: feature.name,\n              [AttributeNames.FEATURE_TAGS]: CucumberInstrumentation.mapTags(\n                feature.tags\n              ),\n              [AttributeNames.FEATURE_LANGUAGE]: feature.language,\n              [AttributeNames.FEATURE_DESCRIPTION]: feature.description,\n              [AttributeNames.SCENARIO_TAGS]: CucumberInstrumentation.mapTags(\n                scenario.tags\n              ),\n              [AttributeNames.SCENARIO_DESCRIPTION]: scenario.description,\n            },\n          },\n          async span => {\n            try {\n              const status = await original.apply(this, args);\n              instrumentation.setSpanToStepStatus(span, status);\n              return status;\n            } catch (error: any) {\n              CucumberInstrumentation.setSpanToError(span, error);\n              throw error;\n            } finally {\n              span.end();\n            }\n          }\n        );\n      };\n    };\n  }\n\n  private _getTestCaseRunStepPatch() {\n    const instrumentation = this;\n    return function (\n      original: TestCaseRunner['runStep']\n    ): TestCaseRunner['runStep'] {\n      return async function (\n        this: TestCaseRunner,\n        ...args\n      ): Promise<messages.TestStepResult> {\n        const [pickleStep] = args;\n        return instrumentation.tracer.startActiveSpan(\n          pickleStep.text,\n          {\n            kind: SpanKind.CLIENT,\n            attributes: {\n              [AttributeNames.STEP_TYPE]: pickleStep.type,\n            },\n          },\n          async span => {\n            try {\n              const result = await original.apply(this, args);\n              instrumentation.setSpanToStepStatus(\n                span,\n                result.status,\n                result.message\n              );\n              return result;\n            } catch (error) {\n              CucumberInstrumentation.setSpanToError(span, error);\n              throw error;\n            } finally {\n              span.end();\n            }\n          }\n        );\n      };\n    };\n  }\n\n  private _getTestCaseRunAttemptPatch() {\n    const instrumentation = this;\n    return function (\n      original: TestCaseRunner['runAttempt']\n    ): TestCaseRunner['runAttempt'] {\n      return async function (this: TestCaseRunner, ...args): Promise<boolean> {\n        const [attempt] = args;\n        return instrumentation.tracer.startActiveSpan(\n          `Attempt #${attempt}`,\n          {\n            kind: SpanKind.CLIENT,\n            attributes: {},\n          },\n          async span => {\n            try {\n              const result = await original.apply(this, args);\n              const worstResult = this.getWorstStepResult();\n              instrumentation.setSpanToStepStatus(\n                span,\n                worstResult.status,\n                worstResult.message\n              );\n              return result;\n            } catch (error) {\n              CucumberInstrumentation.setSpanToError(span, error);\n              throw error;\n            } finally {\n              span.end();\n            }\n          }\n        );\n      };\n    };\n  }\n\n  private _getHookPatch<H extends Hook>(name: H) {\n    const instrumentation = this;\n    return function (original: Cucumber[H]): Cucumber[H] {\n      return function (\n        this: {},\n        tagsOrOptions: string | IDefineTestRunHookOptions | Function,\n        code?: Function\n      ) {\n        if (typeof tagsOrOptions === 'function') {\n          code = tagsOrOptions;\n          tagsOrOptions = {};\n        }\n\n        function traceableCode(\n          this: cucumber.IWorld,\n          arg: cucumber.ITestCaseHookParameter\n        ) {\n          // because we're wrapping the function that was passed to the hook,\n          // it will stay wrapped in cucumber's internal state\n          // even if we disable the instrumentation\n          if (!instrumentation.isEnabled()) return code?.call(this, arg);\n\n          return instrumentation.tracer.startActiveSpan(\n            name,\n            {\n              kind: SpanKind.CLIENT,\n            },\n            async span => {\n              try {\n                return await code?.call(this, arg);\n              } catch (error: any) {\n                this.attach?.(JSON.stringify(span.spanContext()));\n                CucumberInstrumentation.setSpanToError(span, error);\n                throw error;\n              } finally {\n                span.end();\n              }\n            }\n          );\n        }\n        return original.call(this, tagsOrOptions as any, traceableCode as any);\n      };\n    };\n  }\n\n  private _getStepPatch<S extends Step>(name: S) {\n    const instrumentation = this;\n    return function (original: Cucumber[S]): Cucumber[S] {\n      return function (\n        this: {},\n        pattern: DefineStepPattern,\n        options: IDefineStepOptions | Function,\n        code?: Function\n      ): void {\n        if (typeof options === 'function') {\n          code = options;\n          options = {};\n        }\n\n        function traceableCode(this: cucumber.IWorld, ...args: any[]) {\n          // because we're wrapping the function that was passed to the hook,\n          // it will stay wrapped in cucumber's internal state\n          // even if we disable the instrumentation\n          if (!instrumentation.isEnabled()) return code?.apply(this, args);\n\n          return instrumentation.tracer.startActiveSpan(\n            `${name}(${pattern.toString()})`,\n            {\n              kind: SpanKind.CLIENT,\n              // ignore the last argument because it's a callback\n              attributes: args.slice(0, -1).reduce(\n                (attrs, arg, index) => ({\n                  ...attrs,\n                  [`${AttributeNames.STEP_ARGS}[${index}]`]:\n                    arg?.raw instanceof Function\n                      ? JSON.stringify(arg.raw())\n                      : arg,\n                }),\n                {}\n              ),\n            },\n            async span => {\n              try {\n                return await code?.apply(this, args);\n              } catch (error: any) {\n                this.attach?.(JSON.stringify(span.spanContext()));\n                CucumberInstrumentation.setSpanToError(span, error);\n                throw error;\n              } finally {\n                span.end();\n              }\n            }\n          );\n        }\n        // cucumber asks for the number of arguments to match the specified pattern\n        // copy the value from the original function\n        Object.defineProperty(traceableCode, 'length', {\n          value: code?.length,\n        });\n        return original.call(this, pattern, options, traceableCode as any);\n      };\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12429, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-cucumber/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,8JAAA,SAAkC;AAClC,oJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12469, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-dataloader/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface DataloaderInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * Whether the instrumentation requires a parent span, if set to true\n   * and there is no parent span, no additional spans are created\n   * (default: true)\n   */\n  requireParentSpan?: boolean;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12492, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-dataloader/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.11.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-dataloader';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,2CAA2C,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12519, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-dataloader/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport {\n  trace,\n  context,\n  Link,\n  SpanStatusCode,\n  SpanKind,\n} from '@opentelemetry/api';\nimport { DataloaderInstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport type * as Dataloader from 'dataloader';\n\nconst MODULE_NAME = 'dataloader';\n\ntype DataloaderInternal = typeof Dataloader.prototype & {\n  _batchLoadFn: Dataloader.BatchLoadFn<unknown, unknown>;\n  _batch: { spanLinks?: Link[] } | null;\n\n  // TODO: Remove this once types on Dataloader get fixed https://github.com/graphql/dataloader/pull/334\n  name?: string | null;\n};\n\ntype LoadFn = (typeof Dataloader.prototype)['load'];\ntype LoadManyFn = (typeof Dataloader.prototype)['loadMany'];\n\nexport class DataloaderInstrumentation extends InstrumentationBase {\n  constructor(config: DataloaderInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        MODULE_NAME,\n        ['>=2.0.0 <3'],\n        dataloader => {\n          this._patchLoad(dataloader.prototype);\n          this._patchLoadMany(dataloader.prototype);\n\n          return this._getPatchedConstructor(dataloader);\n        },\n        dataloader => {\n          if (isWrapped(dataloader.prototype.load)) {\n            this._unwrap(dataloader.prototype, 'load');\n          }\n\n          if (isWrapped(dataloader.prototype.loadMany)) {\n            this._unwrap(dataloader.prototype, 'loadMany');\n          }\n        }\n      ) as InstrumentationNodeModuleDefinition,\n    ];\n  }\n\n  override getConfig(): DataloaderInstrumentationConfig {\n    return this._config;\n  }\n\n  override setConfig(config: DataloaderInstrumentationConfig = {}) {\n    this._config = config;\n  }\n\n  private shouldCreateSpans(): boolean {\n    const config = this.getConfig();\n    const hasParentSpan = trace.getSpan(context.active()) !== undefined;\n    return hasParentSpan || !config.requireParentSpan;\n  }\n\n  private getSpanName(\n    dataloader: DataloaderInternal,\n    operation: 'load' | 'loadMany' | 'batch'\n  ): string {\n    const dataloaderName = dataloader.name;\n    if (dataloaderName === undefined || dataloaderName === null) {\n      return `${MODULE_NAME}.${operation}`;\n    }\n\n    return `${MODULE_NAME}.${operation} ${dataloaderName}`;\n  }\n\n  private _getPatchedConstructor(\n    constructor: typeof Dataloader\n  ): typeof Dataloader {\n    const prototype = constructor.prototype;\n    const instrumentation = this;\n\n    function PatchedDataloader(\n      ...args: ConstructorParameters<typeof constructor>\n    ) {\n      const inst = new constructor(...args) as DataloaderInternal;\n\n      if (!instrumentation.isEnabled()) {\n        return inst;\n      }\n\n      if (isWrapped(inst._batchLoadFn)) {\n        instrumentation._unwrap(inst, '_batchLoadFn');\n      }\n\n      instrumentation._wrap(inst, '_batchLoadFn', original => {\n        return function patchedBatchLoadFn(\n          this: DataloaderInternal,\n          ...args: Parameters<Dataloader.BatchLoadFn<unknown, unknown>>\n        ) {\n          if (\n            !instrumentation.isEnabled() ||\n            !instrumentation.shouldCreateSpans()\n          ) {\n            return original.call(this, ...args);\n          }\n\n          const parent = context.active();\n          const span = instrumentation.tracer.startSpan(\n            instrumentation.getSpanName(inst, 'batch'),\n            { links: this._batch?.spanLinks as Link[] | undefined },\n            parent\n          );\n\n          return context.with(trace.setSpan(parent, span), () => {\n            return (original.apply(this, args) as Promise<unknown[]>)\n              .then(value => {\n                span.end();\n                return value;\n              })\n              .catch(err => {\n                span.recordException(err);\n                span.setStatus({\n                  code: SpanStatusCode.ERROR,\n                  message: err.message,\n                });\n                span.end();\n                throw err;\n              });\n          });\n        };\n      });\n\n      return inst;\n    }\n\n    PatchedDataloader.prototype = prototype;\n    return PatchedDataloader as unknown as typeof Dataloader;\n  }\n\n  private _patchLoad(proto: typeof Dataloader.prototype) {\n    if (isWrapped(proto.load)) {\n      this._unwrap(proto, 'load');\n    }\n\n    this._wrap(proto, 'load', this._getPatchedLoad.bind(this));\n  }\n\n  private _getPatchedLoad(original: LoadFn): LoadFn {\n    const instrumentation = this;\n\n    return function patchedLoad(\n      this: DataloaderInternal,\n      ...args: Parameters<typeof original>\n    ) {\n      if (!instrumentation.shouldCreateSpans()) {\n        return original.call(this, ...args);\n      }\n\n      const parent = context.active();\n      const span = instrumentation.tracer.startSpan(\n        instrumentation.getSpanName(this, 'load'),\n        { kind: SpanKind.CLIENT },\n        parent\n      );\n\n      return context.with(trace.setSpan(parent, span), () => {\n        const result = original\n          .call(this, ...args)\n          .then(value => {\n            span.end();\n            return value;\n          })\n          .catch(err => {\n            span.recordException(err);\n            span.setStatus({\n              code: SpanStatusCode.ERROR,\n              message: err.message,\n            });\n            span.end();\n            throw err;\n          });\n\n        const loader = this as DataloaderInternal;\n\n        if (loader._batch) {\n          if (!loader._batch.spanLinks) {\n            loader._batch.spanLinks = [];\n          }\n\n          loader._batch.spanLinks.push({ context: span.spanContext() } as Link);\n        }\n\n        return result;\n      });\n    };\n  }\n\n  private _patchLoadMany(proto: typeof Dataloader.prototype) {\n    if (isWrapped(proto.loadMany)) {\n      this._unwrap(proto, 'loadMany');\n    }\n\n    this._wrap(proto, 'loadMany', this._getPatchedLoadMany.bind(this));\n  }\n\n  private _getPatchedLoadMany(original: LoadManyFn): LoadManyFn {\n    const instrumentation = this;\n\n    return function patchedLoadMany(\n      this: DataloaderInternal,\n      ...args: Parameters<typeof original>\n    ) {\n      if (!instrumentation.shouldCreateSpans()) {\n        return original.call(this, ...args);\n      }\n\n      const parent = context.active();\n      const span = instrumentation.tracer.startSpan(\n        instrumentation.getSpanName(this, 'loadMany'),\n        { kind: SpanKind.CLIENT },\n        parent\n      );\n\n      return context.with(trace.setSpan(parent, span), () => {\n        // .loadMany never rejects, as errors from internal .load\n        // calls are caught by dataloader lib\n        return original.call(this, ...args).then(value => {\n          span.end();\n          return value;\n        });\n      });\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12699, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-dataloader/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './types';\nexport * from './instrumentation';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,sJAAA,SAAwB;AACxB,gKAAA,SAAkC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12739, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-dns/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  // NOT ON OFFICIAL SPEC\n  DNS_ERROR_NAME = 'dns.error_name',\n  DNS_ERROR_MESSAGE = 'dns.error_message',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,IAAY,cAIX;AAJD,CAAA,SAAY,cAAc;IACxB,uBAAuB;IACvB,cAAA,CAAA,iBAAA,GAAA,gBAAiC,CAAA;IACjC,cAAA,CAAA,oBAAA,GAAA,mBAAuC,CAAA;AACzC,CAAC,EAJW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAIzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12769, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-dns/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span, SpanStatusCode, SpanAttributes } from '@opentelemetry/api';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { AddressFamily } from './enums/AddressFamily';\nimport * as dns from 'dns';\nimport { IgnoreMatcher } from './types';\n\n/**\n * Set error attributes on the span passed in params\n * @param err the error that we use for filling the attributes\n * @param span the span to be set\n * @param nodeVersion the node version\n */\nexport const setError = (err: NodeJS.ErrnoException, span: Span) => {\n  const { message, name } = err;\n  const attributes = {\n    [AttributeNames.DNS_ERROR_MESSAGE]: message,\n    [AttributeNames.DNS_ERROR_NAME]: name,\n  } as SpanAttributes;\n\n  span.setAttributes(attributes);\n\n  span.setStatus({\n    code: SpanStatusCode.ERROR,\n    message,\n  });\n};\n\n/**\n * Returns the family attribute name to be set on the span\n * @param family `4` (ipv4) or `6` (ipv6). `0` means bug.\n * @param [index] `4` (ipv4) or `6` (ipv6). `0` means bug.\n */\nexport const getFamilyAttribute = (\n  family: AddressFamily,\n  index?: number\n): string => {\n  return index ? `peer[${index}].ipv${family}` : `peer.ipv${family}`;\n};\n\n/**\n * Returns the span name\n * @param funcName function name that is wrapped (e.g `lookup`)\n * @param [service] e.g `http`\n */\nexport const getOperationName = (\n  funcName: string,\n  service?: string\n): string => {\n  return service ? `dns.${service}/${funcName}` : `dns.${funcName}`;\n};\n\nexport const setLookupAttributes = (\n  span: Span,\n  address: string | dns.LookupAddress[] | dns.LookupAddress,\n  family?: number\n) => {\n  const attributes = {} as SpanAttributes;\n  const isObject = typeof address === 'object';\n  let addresses = address;\n\n  if (!isObject) {\n    addresses = [{ address, family } as dns.LookupAddress];\n  } else if (!(addresses instanceof Array)) {\n    addresses = [\n      {\n        address: (address as dns.LookupAddress).address,\n        family: (address as dns.LookupAddress).family,\n      } as dns.LookupAddress,\n    ];\n  }\n\n  addresses.forEach((_, i) => {\n    const peerAttrFormat = getFamilyAttribute(_.family, i);\n    attributes[peerAttrFormat] = _.address;\n  });\n\n  span.setAttributes(attributes);\n};\n\n/**\n * Check whether the given obj match pattern\n * @param constant e.g URL of request\n * @param obj obj to inspect\n * @param pattern Match pattern\n */\nexport const satisfiesPattern = (\n  constant: string,\n  pattern: IgnoreMatcher\n): boolean => {\n  if (typeof pattern === 'string') {\n    return pattern === constant;\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(constant);\n  } else if (typeof pattern === 'function') {\n    return pattern(constant);\n  } else {\n    throw new TypeError('Pattern is in unsupported datatype');\n  }\n};\n\n/**\n * Check whether the given dns request is ignored by configuration\n * It will not re-throw exceptions from `list` provided by the client\n * @param constant e.g URL of request\n * @param [list] List of ignore patterns\n * @param [onException] callback for doing something when an exception has\n *     occurred\n */\nexport const isIgnored = (\n  constant: string,\n  list?: IgnoreMatcher | IgnoreMatcher[],\n  onException?: (error: Error) => void\n): boolean => {\n  if (!list) {\n    // No ignored urls - trace everything\n    return false;\n  }\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n  // Try/catch outside the loop for failing fast\n  try {\n    for (const pattern of list) {\n      if (satisfiesPattern(constant, pattern)) {\n        return true;\n      }\n    }\n  } catch (e: any) {\n    if (onException) {\n      onException(e);\n    }\n  }\n\n  return false;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12904, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-dns/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.38.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-dns';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,oCAAoC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12931, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-dns/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LookupAddress } from 'dns';\nimport type * as dns from 'dns';\nimport * as dnsPromises from 'dns/promises';\nimport { diag, Span, SpanKind } from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { AddressFamily } from './enums/AddressFamily';\nimport { DnsInstrumentationConfig } from './types';\nimport * as utils from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  LookupCallbackSignature,\n  LookupPromiseSignature,\n} from './internal-types';\n\n/**\n * Dns instrumentation for Opentelemetry\n */\nexport class DnsInstrumentation extends InstrumentationBase {\n  protected override _config!: DnsInstrumentationConfig;\n\n  constructor(config: DnsInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init(): (\n    | InstrumentationNodeModuleDefinition\n    | InstrumentationNodeModuleDefinition\n  )[] {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'dns',\n        ['*'],\n        (moduleExports: typeof dns) => {\n          if (isWrapped(moduleExports.lookup)) {\n            this._unwrap(moduleExports, 'lookup');\n          }\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          this._wrap(moduleExports, 'lookup', this._getLookup() as any);\n          this._wrap(\n            moduleExports.promises,\n            'lookup',\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this._getLookup() as any\n          );\n          return moduleExports;\n        },\n        moduleExports => {\n          if (moduleExports === undefined) return;\n          this._unwrap(moduleExports, 'lookup');\n          this._unwrap(moduleExports.promises, 'lookup');\n        }\n      ),\n      new InstrumentationNodeModuleDefinition(\n        'dns/promises',\n        ['*'],\n        (moduleExports: typeof dnsPromises) => {\n          if (isWrapped(moduleExports.lookup)) {\n            this._unwrap(moduleExports, 'lookup');\n          }\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          this._wrap(moduleExports, 'lookup', this._getLookup() as any);\n          return moduleExports;\n        },\n        moduleExports => {\n          if (moduleExports === undefined) return;\n          this._unwrap(moduleExports, 'lookup');\n        }\n      ),\n    ];\n  }\n\n  /**\n   * Get the patched lookup function\n   */\n  private _getLookup() {\n    return (original: (hostname: string, ...args: unknown[]) => void) => {\n      return this._getPatchLookupFunction(original);\n    };\n  }\n\n  /**\n   * Creates spans for lookup operations, restoring spans' context if applied.\n   */\n  private _getPatchLookupFunction(\n    original: (hostname: string, ...args: unknown[]) => void\n  ) {\n    const plugin = this;\n    return function patchedLookup(\n      this: {},\n      hostname: string,\n      ...args: unknown[]\n    ) {\n      if (\n        utils.isIgnored(hostname, plugin._config.ignoreHostnames, (e: Error) =>\n          diag.error('caught ignoreHostname error: ', e)\n        )\n      ) {\n        return original.apply(this, [hostname, ...args]);\n      }\n\n      const argsCount = args.length;\n      diag.debug('wrap lookup callback function and starts span');\n      const name = utils.getOperationName('lookup');\n      const span = plugin.tracer.startSpan(name, {\n        kind: SpanKind.CLIENT,\n      });\n\n      const originalCallback = args[argsCount - 1];\n      if (typeof originalCallback === 'function') {\n        args[argsCount - 1] = plugin._wrapLookupCallback(\n          originalCallback,\n          span\n        );\n        return safeExecuteInTheMiddle(\n          () => original.apply(this, [hostname, ...args]),\n          error => {\n            if (error != null) {\n              utils.setError(error, span);\n              span.end();\n            }\n          }\n        );\n      } else {\n        const promise = safeExecuteInTheMiddle(\n          () =>\n            (original as LookupPromiseSignature).apply(this, [\n              hostname,\n              ...args,\n            ]),\n          error => {\n            if (error != null) {\n              utils.setError(error, span);\n              span.end();\n            }\n          }\n        );\n        promise.then(\n          result => {\n            utils.setLookupAttributes(span, result as LookupAddress);\n            span.end();\n          },\n          (e: NodeJS.ErrnoException) => {\n            utils.setError(e, span);\n            span.end();\n          }\n        );\n\n        return promise;\n      }\n    };\n  }\n\n  /**\n   * Wrap lookup callback function\n   */\n  private _wrapLookupCallback(\n    original: Function,\n    span: Span\n  ): LookupCallbackSignature {\n    return function wrappedLookupCallback(\n      this: {},\n      err: NodeJS.ErrnoException | null,\n      address: string | LookupAddress[],\n      family?: AddressFamily\n    ): void {\n      diag.debug('executing wrapped lookup callback function');\n\n      if (err !== null) {\n        utils.setError(err, span);\n      } else {\n        utils.setLookupAttributes(span, address, family);\n      }\n\n      span.end();\n      diag.debug('executing original lookup callback function');\n      return original.apply(this, arguments);\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13072, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-dns/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport type IgnoreMatcher = string | RegExp | ((url: string) => boolean);\nexport interface DnsInstrumentationConfig extends InstrumentationConfig {\n  ignoreHostnames?: IgnoreMatcher | IgnoreMatcher[];\n}\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13081, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-dns/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,yJAAA,SAAkC;AAClC,+IAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13121, "column": 0}, "map": {"version":3,"file":"ExpressLayerType.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-express/src/enums/ExpressLayerType.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum ExpressLayerType {\n  ROUTER = 'router',\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request_handler',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,IAAY,gBAIX;AAJD,CAAA,SAAY,gBAAgB;IAC1B,gBAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,gBAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,gBAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;AACrC,CAAC,EAJW,gBAAgB,GAAhB,QAAA,gBAAgB,IAAA,CAAhB,QAAA,gBAAgB,GAAA,CAAA,CAAA,GAI3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13151, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-express/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  EXPRESS_TYPE = 'express.type',\n  EXPRESS_NAME = 'express.name',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,IAAY,cAGX;AAHD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;IAC7B,cAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAHW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAGzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13180, "column": 0}, "map": {"version":3,"file":"internal-types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-express/src/internal-types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Request } from 'express';\nimport { Attributes } from '@opentelemetry/api';\n\n/**\n * This symbol is used to mark express layer as being already instrumented\n * since its possible to use a given layer multiple times (ex: middlewares)\n */\nexport const kLayerPatched: unique symbol = Symbol('express-layer-patched');\n\n/**\n * This const define where on the `request` object the Instrumentation will mount the\n * current stack of express layer.\n *\n * It is necessary because express doesn't store the different layers\n * (ie: middleware, router etc) that it called to get to the current layer.\n * Given that, the only way to know the route of a given layer is to\n * store the path of where each previous layer has been mounted.\n *\n * ex: bodyParser > auth middleware > /users router > get /:id\n *  in this case the stack would be: [\"/users\", \"/:id\"]\n *\n * ex2: bodyParser > /api router > /v1 router > /users router > get /:id\n *  stack: [\"/api\", \"/v1\", \"/users\", \":id\"]\n *\n */\nexport const _LAYERS_STORE_PROPERTY = '__ot_middlewares';\n\nexport type PatchedRequest = {\n  [_LAYERS_STORE_PROPERTY]?: string[];\n} & Request;\nexport type PathParams = string | RegExp | Array<string | RegExp>;\n\n// https://github.com/expressjs/express/blob/main/lib/router/index.js#L53\nexport type ExpressRouter = {\n  params: { [key: string]: string };\n  _params: string[];\n  caseSensitive: boolean;\n  mergeParams: boolean;\n  strict: boolean;\n  stack: ExpressLayer[];\n};\n\n// https://github.com/expressjs/express/blob/main/lib/router/layer.js#L33\nexport type ExpressLayer = {\n  handle: Function & Record<string, any>;\n  [kLayerPatched]?: boolean;\n  name: string;\n  params: { [key: string]: string };\n  path: string;\n  regexp: RegExp;\n};\n\nexport type LayerMetadata = {\n  attributes: Attributes;\n  name: string;\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAKH;;;GAGG,CACU,QAAA,aAAa,GAAkB,MAAM,CAAC,uBAAuB,CAAC,CAAC;AAE5E;;;;;;;;;;;;;;;GAeG,CACU,QAAA,sBAAsB,GAAG,kBAAkB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13224, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-express/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes } from '@opentelemetry/api';\nimport {\n  IgnoreMatcher,\n  ExpressInstrumentationConfig,\n  LayerPathSegment,\n} from './types';\nimport { ExpressLayerType } from './enums/ExpressLayerType';\nimport { AttributeNames } from './enums/AttributeNames';\nimport {\n  ExpressLayer,\n  PatchedRequest,\n  _LAYERS_STORE_PROPERTY,\n} from './internal-types';\n\n/**\n * Store layers path in the request to be able to construct route later\n * @param request The request where\n * @param [value] the value to push into the array\n */\nexport const storeLayerPath = (request: PatchedRequest, value?: string) => {\n  if (Array.isArray(request[_LAYERS_STORE_PROPERTY]) === false) {\n    Object.defineProperty(request, _LAYERS_STORE_PROPERTY, {\n      enumerable: false,\n      value: [],\n    });\n  }\n  if (value === undefined) return;\n  (request[_LAYERS_STORE_PROPERTY] as string[]).push(value);\n};\n\n/**\n * Parse express layer context to retrieve a name and attributes.\n * @param layer Express layer\n * @param [layerPath] if present, the path on which the layer has been mounted\n */\nexport const getLayerMetadata = (\n  layer: ExpressLayer,\n  layerPath?: string\n): {\n  attributes: Attributes;\n  name: string;\n} => {\n  if (layer.name === 'router') {\n    return {\n      attributes: {\n        [AttributeNames.EXPRESS_NAME]: layerPath,\n        [AttributeNames.EXPRESS_TYPE]: ExpressLayerType.ROUTER,\n      },\n      name: `router - ${layerPath}`,\n    };\n  } else if (layer.name === 'bound dispatch') {\n    return {\n      attributes: {\n        [AttributeNames.EXPRESS_NAME]: layerPath ?? 'request handler',\n        [AttributeNames.EXPRESS_TYPE]: ExpressLayerType.REQUEST_HANDLER,\n      },\n      name: `request handler${layer.path ? ` - ${layerPath}` : ''}`,\n    };\n  } else {\n    return {\n      attributes: {\n        [AttributeNames.EXPRESS_NAME]: layer.name,\n        [AttributeNames.EXPRESS_TYPE]: ExpressLayerType.MIDDLEWARE,\n      },\n      name: `middleware - ${layer.name}`,\n    };\n  }\n};\n\n/**\n * Check whether the given obj match pattern\n * @param constant e.g URL of request\n * @param obj obj to inspect\n * @param pattern Match pattern\n */\nconst satisfiesPattern = (\n  constant: string,\n  pattern: IgnoreMatcher\n): boolean => {\n  if (typeof pattern === 'string') {\n    return pattern === constant;\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(constant);\n  } else if (typeof pattern === 'function') {\n    return pattern(constant);\n  } else {\n    throw new TypeError('Pattern is in unsupported datatype');\n  }\n};\n\n/**\n * Check whether the given request is ignored by configuration\n * It will not re-throw exceptions from `list` provided by the client\n * @param constant e.g URL of request\n * @param [list] List of ignore patterns\n * @param [onException] callback for doing something when an exception has\n *     occurred\n */\nexport const isLayerIgnored = (\n  name: string,\n  type: ExpressLayerType,\n  config?: ExpressInstrumentationConfig\n): boolean => {\n  if (\n    Array.isArray(config?.ignoreLayersType) &&\n    config?.ignoreLayersType?.includes(type)\n  ) {\n    return true;\n  }\n  if (Array.isArray(config?.ignoreLayers) === false) return false;\n  try {\n    for (const pattern of config!.ignoreLayers!) {\n      if (satisfiesPattern(name, pattern)) {\n        return true;\n      }\n    }\n  } catch (e) {\n    /* catch block*/\n  }\n\n  return false;\n};\n\n/**\n * Converts a user-provided error value into an error and error message pair\n *\n * @param error - User-provided error value\n * @returns Both an Error or string representation of the value and an error message\n */\nexport const asErrorAndMessage = (\n  error: unknown\n): [error: string | Error, message: string] =>\n  error instanceof Error\n    ? [error, error.message]\n    : [String(error), String(error)];\n\n/**\n * Extracts the layer path from the route arguments\n *\n * @param args - Arguments of the route\n * @returns The layer path\n */\nexport const getLayerPath = (\n  args: [LayerPathSegment | LayerPathSegment[], ...unknown[]]\n): string | undefined => {\n  if (Array.isArray(args[0])) {\n    return args[0].map(arg => extractLayerPathSegment(arg) || '').join(',');\n  }\n\n  return extractLayerPathSegment(args[0]);\n};\n\nconst extractLayerPathSegment = (arg: LayerPathSegment) => {\n  if (typeof arg === 'string') {\n    return arg;\n  }\n\n  if (arg instanceof RegExp || typeof arg === 'number') {\n    return arg.toString();\n  }\n\n  return;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13372, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-express/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.41.1';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-express';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13399, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-express/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport {\n  trace,\n  context,\n  diag,\n  Attributes,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport type * as express from 'express';\nimport { ExpressInstrumentationConfig, ExpressRequestInfo } from './types';\nimport { ExpressLayerType } from './enums/ExpressLayerType';\nimport { AttributeNames } from './enums/AttributeNames';\nimport {\n  asErrorAndMessage,\n  getLayerMetadata,\n  getLayerPath,\n  isLayerIgnored,\n  storeLayerPath,\n} from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\nimport {\n  ExpressLayer,\n  ExpressRouter,\n  kLayerPatched,\n  PatchedRequest,\n  _LAYERS_STORE_PROPERTY,\n} from './internal-types';\n\n/** Express instrumentation for OpenTelemetry */\nexport class ExpressInstrumentation extends InstrumentationBase<ExpressInstrumentationConfig> {\n  constructor(config: ExpressInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'express',\n        ['>=4.0.0 <5'],\n        moduleExports => {\n          const routerProto = moduleExports.Router as unknown as express.Router;\n          // patch express.Router.route\n          if (isWrapped(routerProto.route)) {\n            this._unwrap(routerProto, 'route');\n          }\n          this._wrap(routerProto, 'route', this._getRoutePatch());\n          // patch express.Router.use\n          if (isWrapped(routerProto.use)) {\n            this._unwrap(routerProto, 'use');\n          }\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          this._wrap(routerProto, 'use', this._getRouterUsePatch() as any);\n          // patch express.Application.use\n          if (isWrapped(moduleExports.application.use)) {\n            this._unwrap(moduleExports.application, 'use');\n          }\n          this._wrap(\n            moduleExports.application,\n            'use',\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this._getAppUsePatch() as any\n          );\n          return moduleExports;\n        },\n        moduleExports => {\n          if (moduleExports === undefined) return;\n          const routerProto = moduleExports.Router as unknown as express.Router;\n          this._unwrap(routerProto, 'route');\n          this._unwrap(routerProto, 'use');\n          this._unwrap(moduleExports.application, 'use');\n        }\n      ),\n    ];\n  }\n\n  /**\n   * Get the patch for Router.route function\n   */\n  private _getRoutePatch() {\n    const instrumentation = this;\n    return function (original: express.Router['route']) {\n      return function route_trace(\n        this: ExpressRouter,\n        ...args: Parameters<typeof original>\n      ) {\n        const route = original.apply(this, args);\n        const layer = this.stack[this.stack.length - 1] as ExpressLayer;\n        instrumentation._applyPatch(layer, getLayerPath(args));\n        return route;\n      };\n    };\n  }\n\n  /**\n   * Get the patch for Router.use function\n   */\n  private _getRouterUsePatch() {\n    const instrumentation = this;\n    return function (original: express.Router['use']) {\n      return function use(\n        this: express.Application,\n        ...args: Parameters<typeof original>\n      ) {\n        const route = original.apply(this, args);\n        const layer = this.stack[this.stack.length - 1] as ExpressLayer;\n        instrumentation._applyPatch(layer, getLayerPath(args));\n        return route;\n      };\n    };\n  }\n\n  /**\n   * Get the patch for Application.use function\n   */\n  private _getAppUsePatch() {\n    const instrumentation = this;\n    return function (original: express.Application['use']) {\n      return function use(\n        this: { _router: ExpressRouter },\n        ...args: Parameters<typeof original>\n      ) {\n        const route = original.apply(this, args);\n        const layer = this._router.stack[this._router.stack.length - 1];\n        instrumentation._applyPatch(layer, getLayerPath(args));\n        return route;\n      };\n    };\n  }\n\n  /** Patch each express layer to create span and propagate context */\n  private _applyPatch(\n    this: ExpressInstrumentation,\n    layer: ExpressLayer,\n    layerPath?: string\n  ) {\n    const instrumentation = this;\n    // avoid patching multiple times the same layer\n    if (layer[kLayerPatched] === true) return;\n    layer[kLayerPatched] = true;\n\n    this._wrap(layer, 'handle', original => {\n      // TODO: instrument error handlers\n      if (original.length === 4) return original;\n\n      const patched = function (\n        this: ExpressLayer,\n        req: PatchedRequest,\n        res: express.Response\n      ) {\n        storeLayerPath(req, layerPath);\n        const route = (req[_LAYERS_STORE_PROPERTY] as string[])\n          .filter(path => path !== '/' && path !== '/*')\n          .join('')\n          // remove duplicate slashes to normalize route\n          .replace(/\\/{2,}/g, '/');\n\n        const attributes: Attributes = {\n          [SEMATTRS_HTTP_ROUTE]: route.length > 0 ? route : '/',\n        };\n        const metadata = getLayerMetadata(layer, layerPath);\n        const type = metadata.attributes[\n          AttributeNames.EXPRESS_TYPE\n        ] as ExpressLayerType;\n\n        const rpcMetadata = getRPCMetadata(context.active());\n        if (rpcMetadata?.type === RPCType.HTTP) {\n          rpcMetadata.route = route || '/';\n        }\n\n        // verify against the config if the layer should be ignored\n        if (isLayerIgnored(metadata.name, type, instrumentation.getConfig())) {\n          if (type === ExpressLayerType.MIDDLEWARE) {\n            (req[_LAYERS_STORE_PROPERTY] as string[]).pop();\n          }\n          return original.apply(this, arguments);\n        }\n\n        if (trace.getSpan(context.active()) === undefined) {\n          return original.apply(this, arguments);\n        }\n\n        const spanName = instrumentation._getSpanName(\n          {\n            request: req,\n            layerType: type,\n            route,\n          },\n          metadata.name\n        );\n        const span = instrumentation.tracer.startSpan(spanName, {\n          attributes: Object.assign(attributes, metadata.attributes),\n        });\n\n        const { requestHook } = instrumentation.getConfig();\n        if (requestHook) {\n          safeExecuteInTheMiddle(\n            () =>\n              requestHook(span, {\n                request: req,\n                layerType: type,\n                route,\n              }),\n            e => {\n              if (e) {\n                diag.error('express instrumentation: request hook failed', e);\n              }\n            },\n            true\n          );\n        }\n\n        let spanHasEnded = false;\n        if (\n          metadata.attributes[AttributeNames.EXPRESS_TYPE] !==\n          ExpressLayerType.MIDDLEWARE\n        ) {\n          span.end();\n          spanHasEnded = true;\n        }\n        // listener for response.on('finish')\n        const onResponseFinish = () => {\n          if (spanHasEnded === false) {\n            spanHasEnded = true;\n            span.end();\n          }\n        };\n\n        // verify we have a callback\n        const args = Array.from(arguments);\n        const callbackIdx = args.findIndex(arg => typeof arg === 'function');\n        if (callbackIdx >= 0) {\n          arguments[callbackIdx] = function () {\n            // express considers anything but an empty value, \"route\" or \"router\"\n            // passed to its callback to be an error\n            const maybeError = arguments[0];\n            const isError = ![undefined, null, 'route', 'router'].includes(\n              maybeError\n            );\n            if (!spanHasEnded && isError) {\n              const [error, message] = asErrorAndMessage(maybeError);\n              span.recordException(error);\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message,\n              });\n            }\n\n            if (spanHasEnded === false) {\n              spanHasEnded = true;\n              req.res?.removeListener('finish', onResponseFinish);\n              span.end();\n            }\n            if (!(req.route && isError)) {\n              (req[_LAYERS_STORE_PROPERTY] as string[]).pop();\n            }\n            const callback = args[callbackIdx] as Function;\n            return callback.apply(this, arguments);\n          };\n        }\n\n        try {\n          return original.apply(this, arguments);\n        } catch (anyError) {\n          const [error, message] = asErrorAndMessage(anyError);\n          span.recordException(error);\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message,\n          });\n          throw anyError;\n        } finally {\n          /**\n           * At this point if the callback wasn't called, that means either the\n           * layer is asynchronous (so it will call the callback later on) or that\n           * the layer directly end the http response, so we'll hook into the \"finish\"\n           * event to handle the later case.\n           */\n          if (!spanHasEnded) {\n            res.once('finish', onResponseFinish);\n          }\n        }\n      };\n\n      // `handle` isn't just a regular function in some cases. It also contains\n      // some properties holding metadata and state so we need to proxy them\n      // through through patched function\n      // ref: https://github.com/open-telemetry/opentelemetry-js-contrib/issues/1950\n      // Also some apps/libs do their own patching before OTEL and have these properties\n      // in the proptotype. So we use a `for...in` loop to get own properties and also\n      // any enumerable prop in the prototype chain\n      // ref: https://github.com/open-telemetry/opentelemetry-js-contrib/issues/2271\n      for (const key in original) {\n        Object.defineProperty(patched, key, {\n          get() {\n            return original[key];\n          },\n          set(value) {\n            original[key] = value;\n          },\n        });\n      }\n      return patched;\n    });\n  }\n\n  _getSpanName(info: ExpressRequestInfo, defaultName: string) {\n    const { spanNameHook } = this.getConfig();\n\n    if (!(spanNameHook instanceof Function)) {\n      return defaultName;\n    }\n\n    try {\n      return spanNameHook(info, defaultName) ?? defaultName;\n    } catch (err) {\n      diag.error(\n        'express instrumentation: error calling span name rewrite hook',\n        err\n      );\n      return defaultName;\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13663, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-express/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport { ExpressLayerType } from './enums/ExpressLayerType';\n\nexport type LayerPathSegment = string | RegExp | number;\n\nexport type IgnoreMatcher = string | RegExp | ((name: string) => boolean);\n\nexport type ExpressRequestInfo<T = any> = {\n  /** An express request object */\n  request: T;\n  route: string;\n  layerType: ExpressLayerType;\n};\n\nexport type SpanNameHook = (\n  info: ExpressRequestInfo,\n  /**\n   * If no decision is taken based on RequestInfo, the default name\n   * supplied by the instrumentation can be used instead.\n   */\n  defaultName: string\n) => string;\n\n/**\n * Function that can be used to add custom attributes to the current span or the root span on\n * a Express request\n * @param span - The Express middleware layer span.\n * @param info - An instance of ExpressRequestInfo that contains info about the request such as the route, and the layer type.\n */\nexport interface ExpressRequestCustomAttributeFunction {\n  (span: Span, info: ExpressRequestInfo): void;\n}\n\n/**\n * Options available for the Express Instrumentation (see [documentation](https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/plugins/node/opentelemetry-instrumentation-express#express-instrumentation-options))\n */\nexport interface ExpressInstrumentationConfig extends InstrumentationConfig {\n  /** Ignore specific based on their name */\n  ignoreLayers?: IgnoreMatcher[];\n  /** Ignore specific layers based on their type */\n  ignoreLayersType?: ExpressLayerType[];\n  spanNameHook?: SpanNameHook;\n\n  /** Function for adding custom attributes on Express request */\n  requestHook?: ExpressRequestCustomAttributeFunction;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13686, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-express/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './enums/ExpressLayerType';\nexport * from './enums/AttributeNames';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,6JAAA,SAAkC;AAClC,oKAAA,SAAyC;AACzC,kKAAA,SAAuC;AACvC,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13728, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fastify/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  FASTIFY_NAME = 'fastify.name',\n  FASTIFY_TYPE = 'fastify.type',\n  HOOK_NAME = 'hook.name',\n  PLUGIN_NAME = 'plugin.name',\n}\n\nexport enum FastifyTypes {\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request_handler',\n}\n\nexport enum FastifyNames {\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request handler',\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAY,cAKX;AALD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;IAC7B,cAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;IAC7B,cAAA,CAAA,YAAA,GAAA,WAAuB,CAAA;IACvB,cAAA,CAAA,cAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EALW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAKzB;AAED,IAAY,YAGX;AAHD,CAAA,SAAY,YAAY;IACtB,YAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,YAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;AACrC,CAAC,EAHW,YAAY,GAAZ,QAAA,YAAY,IAAA,CAAZ,QAAA,YAAY,GAAA,CAAA,CAAA,GAGvB;AAED,IAAY,YAGX;AAHD,CAAA,SAAY,YAAY;IACtB,YAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,YAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;AACrC,CAAC,EAHW,YAAY,GAAZ,QAAA,YAAY,IAAA,CAAZ,QAAA,YAAY,GAAA,CAAA,CAAA,GAGvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13769, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fastify/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface FastifyRequestInfo {\n  request: any; // FastifyRequest object from fastify package\n}\n\n/**\n * Function that can be used to add custom attributes to the current span\n * @param span - The Fastify handler span.\n * @param info - The Fastify request info object.\n */\nexport interface FastifyCustomAttributeFunction {\n  (span: Span, info: FastifyRequestInfo): void;\n}\n\n/**\n * Options available for the Fastify Instrumentation\n */\nexport interface FastifyInstrumentationConfig extends InstrumentationConfig {\n  /** Function for adding custom attributes to each handler span */\n  requestHook?: FastifyCustomAttributeFunction;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13792, "column": 0}, "map": {"version":3,"file":"constants.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fastify/src/constants.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const spanRequestSymbol = Symbol(\n  'opentelemetry.instrumentation.fastify.request_active_span'\n);\n\n// The instrumentation creates a span for invocations of lifecycle hook handlers\n// that take `(request, reply, ...[, done])` arguments. Currently this is all\n// lifecycle hooks except `onRequestAbort`.\n// https://fastify.dev/docs/latest/Reference/Hooks\nexport const hooksNamesToWrap = new Set([\n  'onTimeout',\n  'onRequest',\n  'preParsing',\n  'preValidation',\n  'preSerialization',\n  'preHandler',\n  'onSend',\n  'onResponse',\n  'onError',\n]);\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEU,QAAA,iBAAiB,GAAG,MAAM,CACrC,2DAA2D,CAC5D,CAAC;AAEF,gFAAgF;AAChF,6EAA6E;AAC7E,2CAA2C;AAC3C,kDAAkD;AACrC,QAAA,gBAAgB,GAAG,IAAI,GAAG,CAAC;IACtC,WAAW;IACX,WAAW;IACX,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,YAAY;IACZ,QAAQ;IACR,YAAY;IACZ,SAAS;CACV,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13832, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fastify/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes, Span, SpanStatusCode, Tracer } from '@opentelemetry/api';\nimport { spanRequestSymbol } from './constants';\n\nimport type { PluginFastifyReply } from './internal-types';\n\n/**\n * Starts Span\n * @param reply - reply function\n * @param tracer - tracer\n * @param spanName - span name\n * @param spanAttributes - span attributes\n */\nexport function startSpan(\n  reply: PluginFastifyReply,\n  tracer: Tracer,\n  spanName: string,\n  spanAttributes: Attributes = {}\n) {\n  const span = tracer.startSpan(spanName, { attributes: spanAttributes });\n\n  const spans: Span[] = reply[spanRequestSymbol] || [];\n  spans.push(span);\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  Object.defineProperty(reply, spanRequestSymbol, {\n    enumerable: false,\n    configurable: true,\n    value: spans,\n  });\n\n  return span;\n}\n\n/**\n * Ends span\n * @param reply - reply function\n * @param err - error\n */\nexport function endSpan(reply: PluginFastifyReply, err?: any) {\n  const spans = reply[spanRequestSymbol] || [];\n  // there is no active span, or it has already ended\n  if (!spans.length) {\n    return;\n  }\n  spans.forEach(span => {\n    if (err) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: err.message,\n      });\n      span.recordException(err);\n    }\n    span.end();\n  });\n  delete reply[spanRequestSymbol];\n}\n\n// @TODO after approve add this to instrumentation package and replace usage\n// when it will be released\n\n/**\n * This function handles the missing case from instrumentation package when\n * execute can either return a promise or void. And using async is not an\n * option as it is producing unwanted side effects.\n * @param execute - function to be executed\n * @param onFinish - function called when function executed\n * @param preventThrowingError - prevent to throw error when execute\n * function fails\n */\nexport function safeExecuteInTheMiddleMaybePromise<T>(\n  execute: () => Promise<T>,\n  onFinish: (e: unknown, result?: T) => void,\n  preventThrowingError?: boolean\n): Promise<T>;\nexport function safeExecuteInTheMiddleMaybePromise<T>(\n  execute: () => T,\n  onFinish: (e: unknown, result?: T) => void,\n  preventThrowingError?: boolean\n): T;\nexport function safeExecuteInTheMiddleMaybePromise<T>(\n  execute: () => T | Promise<T>,\n  onFinish: (e: unknown, result?: T) => void,\n  preventThrowingError?: boolean\n): T | Promise<T> | undefined {\n  let error: unknown;\n  let result: T | Promise<T> | undefined = undefined;\n  try {\n    result = execute();\n\n    if (isPromise(result)) {\n      result.then(\n        res => onFinish(undefined, res),\n        err => onFinish(err)\n      );\n    }\n  } catch (e) {\n    error = e;\n  } finally {\n    if (!isPromise(result)) {\n      onFinish(error, result);\n      if (error && !preventThrowingError) {\n        // eslint-disable-next-line no-unsafe-finally\n        throw error;\n      }\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result;\n  }\n}\n\nfunction isPromise<T>(val: T | Promise<T>): val is Promise<T> {\n  return (\n    (typeof val === 'object' &&\n      val &&\n      typeof Object.getOwnPropertyDescriptor(val, 'then')?.value ===\n        'function') ||\n    false\n  );\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAA8E;AAC9E,MAAA,qCAAgD;AAIhD;;;;;;GAMG,CACH,SAAgB,SAAS,CACvB,KAAyB,EACzB,MAAc,EACd,QAAgB,EAChB,iBAA6B,CAAA,CAAE;IAE/B,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE;QAAE,UAAU,EAAE,cAAc;IAAA,CAAE,CAAC,CAAC;IAExE,MAAM,KAAK,GAAW,KAAK,CAAC,YAAA,iBAAiB,CAAC,IAAI,EAAE,CAAC;IACrD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEjB,mEAAmE;IACnE,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,YAAA,iBAAiB,EAAE;QAC9C,UAAU,EAAE,KAAK;QACjB,YAAY,EAAE,IAAI;QAClB,KAAK,EAAE,KAAK;KACb,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACd,CAAC;AAnBD,QAAA,SAAA,GAAA,UAmBC;AAED;;;;GAIG,CACH,SAAgB,OAAO,CAAC,KAAyB,EAAE,GAAS;IAC1D,MAAM,KAAK,GAAG,KAAK,CAAC,YAAA,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAC7C,mDAAmD;IACnD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;QACjB,OAAO;KACR;IACD,KAAK,CAAC,OAAO,EAAC,IAAI,CAAC,EAAE;QACnB,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAE,MAAA,cAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,GAAG,CAAC,OAAO;aACrB,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;SAC3B;QACD,IAAI,CAAC,GAAG,EAAE,CAAC;IACb,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC,YAAA,iBAAiB,CAAC,CAAC;AAClC,CAAC;AAjBD,QAAA,OAAA,GAAA,QAiBC;AAwBD,SAAgB,kCAAkC,CAChD,OAA6B,EAC7B,QAA0C,EAC1C,oBAA8B;IAE9B,IAAI,KAAc,CAAC;IACnB,IAAI,MAAM,GAA+B,SAAS,CAAC;IACnD,IAAI;QACF,MAAM,GAAG,OAAO,EAAE,CAAC;QAEnB,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;YACrB,MAAM,CAAC,IAAI,EACT,GAAG,CAAC,EAAE,AAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,GAC/B,GAAG,CAAC,EAAE,AAAC,QAAQ,CAAC,GAAG,CAAC,CACrB,CAAC;SACH;KACF,CAAC,OAAO,CAAC,EAAE;QACV,KAAK,GAAG,CAAC,CAAC;KACX,QAAS;QACR,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACtB,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACxB,IAAI,KAAK,IAAI,CAAC,oBAAoB,EAAE;gBAClC,6CAA6C;gBAC7C,MAAM,KAAK,CAAC;aACb;SACF;QACD,6CAA6C;QAC7C,OAAO,MAAM,CAAC;KACf;AACH,CAAC;AA7BD,QAAA,kCAAA,GAAA,mCA6BC;AAED,SAAS,SAAS,CAAI,GAAmB;;IACvC,OAAO,AACL,AAAC,OAAO,GAAG,KAAK,QAAQ,IACtB,GAAG,IACH,OAAO,CAAA,CAAA,KAAA,MAAM,CAAC,wBAAwB,CAAC,GAAG,EAAE,MAAM,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,KAAK,CAAA,KACxD,UAAU,CAAC,GACf,KAAK,CACN,CAAC;AACJ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13929, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fastify/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.38.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-fastify';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13956, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fastify/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Attributes, SpanStatusCode, trace } from '@opentelemetry/api';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\nimport type {\n  HookHandlerDoneFunction,\n  FastifyInstance,\n  FastifyRequest,\n  FastifyReply,\n} from 'fastify';\nimport { hooksNamesToWrap } from './constants';\nimport {\n  AttributeNames,\n  FastifyNames,\n  FastifyTypes,\n} from './enums/AttributeNames';\nimport type { HandlerOriginal, PluginFastifyReply } from './internal-types';\nimport type { FastifyInstrumentationConfig } from './types';\nimport {\n  endSpan,\n  safeExecuteInTheMiddleMaybePromise,\n  startSpan,\n} from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nexport const ANONYMOUS_NAME = 'anonymous';\n\n/** Fastify instrumentation for OpenTelemetry */\nexport class FastifyInstrumentation extends InstrumentationBase {\n  constructor(config: FastifyInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  override setConfig(config: FastifyInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n  }\n\n  override getConfig(): FastifyInstrumentationConfig {\n    return this._config as FastifyInstrumentationConfig;\n  }\n\n  init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'fastify',\n        ['>=3.0.0 <5'],\n        moduleExports => {\n          return this._patchConstructor(moduleExports);\n        }\n      ),\n    ];\n  }\n\n  private _hookOnRequest() {\n    const instrumentation = this;\n    return function onRequest(\n      request: FastifyRequest,\n      reply: FastifyReply,\n      done: HookHandlerDoneFunction\n    ) {\n      if (!instrumentation.isEnabled()) {\n        return done();\n      }\n      instrumentation._wrap(reply, 'send', instrumentation._patchSend());\n\n      const anyRequest = request as any;\n\n      const rpcMetadata = getRPCMetadata(context.active());\n      const routeName = anyRequest.routeOptions\n        ? anyRequest.routeOptions.url // since fastify@4.10.0\n        : request.routerPath;\n      if (routeName && rpcMetadata?.type === RPCType.HTTP) {\n        rpcMetadata.route = routeName;\n      }\n      done();\n    };\n  }\n\n  private _wrapHandler(\n    pluginName: string,\n    hookName: string,\n    original: (...args: unknown[]) => Promise<unknown>,\n    syncFunctionWithDone: boolean\n  ): () => Promise<unknown> {\n    const instrumentation = this;\n    this._diag.debug('Patching fastify route.handler function');\n\n    return function (this: any, ...args: unknown[]): Promise<unknown> {\n      if (!instrumentation.isEnabled()) {\n        return original.apply(this, args);\n      }\n\n      const name = original.name || pluginName || ANONYMOUS_NAME;\n      const spanName = `${FastifyNames.MIDDLEWARE} - ${name}`;\n\n      const reply = args[1] as PluginFastifyReply;\n\n      const span = startSpan(reply, instrumentation.tracer, spanName, {\n        [AttributeNames.FASTIFY_TYPE]: FastifyTypes.MIDDLEWARE,\n        [AttributeNames.PLUGIN_NAME]: pluginName,\n        [AttributeNames.HOOK_NAME]: hookName,\n      });\n\n      const origDone =\n        syncFunctionWithDone &&\n        (args[args.length - 1] as HookHandlerDoneFunction);\n      if (origDone) {\n        args[args.length - 1] = function (\n          ...doneArgs: Parameters<HookHandlerDoneFunction>\n        ) {\n          endSpan(reply);\n          origDone.apply(this, doneArgs);\n        };\n      }\n\n      return context.with(trace.setSpan(context.active(), span), () => {\n        return safeExecuteInTheMiddleMaybePromise(\n          () => {\n            return original.apply(this, args);\n          },\n          err => {\n            if (err instanceof Error) {\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message,\n              });\n              span.recordException(err);\n            }\n            // async hooks should end the span as soon as the promise is resolved\n            if (!syncFunctionWithDone) {\n              endSpan(reply);\n            }\n          }\n        );\n      });\n    };\n  }\n\n  private _wrapAddHook(): (\n    original: FastifyInstance['addHook']\n  ) => () => FastifyInstance {\n    const instrumentation = this;\n    this._diag.debug('Patching fastify server.addHook function');\n\n    return function (\n      original: FastifyInstance['addHook']\n    ): () => FastifyInstance {\n      return function wrappedAddHook(this: any, ...args: any) {\n        const name = args[0] as string;\n        const handler = args[1] as HandlerOriginal;\n        const pluginName = this.pluginName;\n        if (!hooksNamesToWrap.has(name)) {\n          return original.apply(this, args);\n        }\n\n        const syncFunctionWithDone =\n          typeof args[args.length - 1] === 'function' &&\n          handler.constructor.name !== 'AsyncFunction';\n\n        return original.apply(this, [\n          name,\n          instrumentation._wrapHandler(\n            pluginName,\n            name,\n            handler,\n            syncFunctionWithDone\n          ),\n        ] as never);\n      };\n    };\n  }\n\n  private _patchConstructor(moduleExports: {\n    fastify: () => FastifyInstance;\n  }): () => FastifyInstance {\n    const instrumentation = this;\n\n    function fastify(this: FastifyInstance, ...args: any) {\n      const app: FastifyInstance = moduleExports.fastify.apply(this, args);\n      app.addHook('onRequest', instrumentation._hookOnRequest());\n      app.addHook('preHandler', instrumentation._hookPreHandler());\n\n      instrumentation._wrap(app, 'addHook', instrumentation._wrapAddHook());\n\n      return app;\n    }\n\n    fastify.fastify = fastify;\n    fastify.default = fastify;\n    return fastify;\n  }\n\n  private _patchSend() {\n    const instrumentation = this;\n    this._diag.debug('Patching fastify reply.send function');\n\n    return function patchSend(\n      original: () => FastifyReply\n    ): () => FastifyReply {\n      return function send(this: FastifyReply, ...args: any) {\n        const maybeError: any = args[0];\n\n        if (!instrumentation.isEnabled()) {\n          return original.apply(this, args);\n        }\n\n        return safeExecuteInTheMiddle<FastifyReply>(\n          () => {\n            return original.apply(this, args);\n          },\n          err => {\n            if (!err && maybeError instanceof Error) {\n              err = maybeError;\n            }\n            endSpan(this, err);\n          }\n        );\n      };\n    };\n  }\n\n  private _hookPreHandler() {\n    const instrumentation = this;\n    this._diag.debug('Patching fastify preHandler function');\n\n    return function preHandler(\n      this: any,\n      request: FastifyRequest,\n      reply: FastifyReply,\n      done: HookHandlerDoneFunction\n    ) {\n      if (!instrumentation.isEnabled()) {\n        return done();\n      }\n      const anyRequest = request as any;\n\n      const handler =\n        anyRequest.routeOptions?.handler || anyRequest.context?.handler;\n\n      const handlerName = handler?.name.startsWith('bound ')\n        ? handler.name.substr(6)\n        : handler?.name;\n      const spanName = `${FastifyNames.REQUEST_HANDLER} - ${\n        handlerName || this.pluginName || ANONYMOUS_NAME\n      }`;\n\n      const spanAttributes: Attributes = {\n        [AttributeNames.PLUGIN_NAME]: this.pluginName,\n        [AttributeNames.FASTIFY_TYPE]: FastifyTypes.REQUEST_HANDLER,\n        [SEMATTRS_HTTP_ROUTE]: anyRequest.routeOptions\n          ? anyRequest.routeOptions.url // since fastify@4.10.0\n          : request.routerPath,\n      };\n      if (handlerName) {\n        spanAttributes[AttributeNames.FASTIFY_NAME] = handlerName;\n      }\n      const span = startSpan(\n        reply,\n        instrumentation.tracer,\n        spanName,\n        spanAttributes\n      );\n\n      if (instrumentation.getConfig().requestHook) {\n        safeExecuteInTheMiddle(\n          () => instrumentation.getConfig().requestHook!(span, { request }),\n          e => {\n            if (e) {\n              instrumentation._diag.error('request hook failed', e);\n            }\n          },\n          true\n        );\n      }\n\n      return context.with(trace.setSpan(context.active(), span), () => {\n        done();\n      });\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14156, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fastify/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './enums/AttributeNames';\nexport * from './types';\nexport * from './instrumentation';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,kKAAA,SAAuC;AACvC,mJAAA,SAAwB;AACxB,6JAAA,SAAkC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14197, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fs/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.14.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-fs';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,mCAAmC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14224, "column": 0}, "map": {"version":3,"file":"constants.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fs/src/constants.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FMember, FPMember } from './types';\n\nexport const PROMISE_FUNCTIONS: FPMember[] = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'copyFile',\n  'cp' as FPMember, // added in v16\n  'lchown',\n  'link',\n  'lstat',\n  'lutimes', // added in v12\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'opendir', // added in v12\n  'readdir',\n  'readFile',\n  'readlink',\n  'realpath',\n  'rename',\n  'rm', // added in v14\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile',\n  // 'lchmod', // only implemented on macOS\n];\n\nexport const CALLBACK_FUNCTIONS: FMember[] = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'copyFile',\n  'cp' as FMember, // added in v16\n  'exists', // deprecated, inconsistent cb signature, handling separately when patching\n  'lchown',\n  'link',\n  'lstat',\n  'lutimes', // added in v12\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'opendir', // added in v12\n  'readdir',\n  'readFile',\n  'readlink',\n  'realpath',\n  'realpath.native',\n  'rename',\n  'rm', // added in v14\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile',\n  // 'close', // functions on file descriptor\n  // 'fchmod', // functions on file descriptor\n  // 'fchown', // functions on file descriptor\n  // 'fdatasync', // functions on file descriptor\n  // 'fstat', // functions on file descriptor\n  // 'fsync', // functions on file descriptor\n  // 'ftruncate', // functions on file descriptor\n  // 'futimes', // functions on file descriptor\n  // 'lchmod', // only implemented on macOS\n  // 'read', // functions on file descriptor\n  // 'readv', // functions on file descriptor\n  // 'write', // functions on file descriptor\n  // 'writev', // functions on file descriptor\n];\n\nexport const SYNC_FUNCTIONS: FMember[] = [\n  'accessSync',\n  'appendFileSync',\n  'chmodSync',\n  'chownSync',\n  'copyFileSync',\n  'cpSync' as FMember, // added in v16\n  'existsSync',\n  'lchownSync',\n  'linkSync',\n  'lstatSync',\n  'lutimesSync', // added in v12\n  'mkdirSync',\n  'mkdtempSync',\n  'opendirSync', // added in v12\n  'openSync',\n  'readdirSync',\n  'readFileSync',\n  'readlinkSync',\n  'realpathSync',\n  'realpathSync.native',\n  'renameSync',\n  'rmdirSync',\n  'rmSync', // added in v14\n  'statSync',\n  'symlinkSync',\n  'truncateSync',\n  'unlinkSync',\n  'utimesSync',\n  'writeFileSync',\n  // 'closeSync', // functions on file descriptor\n  // 'fchmodSync', // functions on file descriptor\n  // 'fchownSync', // functions on file descriptor\n  // 'fdatasyncSync', // functions on file descriptor\n  // 'fstatSync', // functions on file descriptor\n  // 'fsyncSync', // functions on file descriptor\n  // 'ftruncateSync', // functions on file descriptor\n  // 'futimesSync', // functions on file descriptor\n  // 'lchmodSync', // only implemented on macOS\n  // 'readSync', // functions on file descriptor\n  // 'readvSync', // functions on file descriptor\n  // 'writeSync', // functions on file descriptor\n  // 'writevSync', // functions on file descriptor\n];\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAIU,QAAA,iBAAiB,GAAe;IAC3C,QAAQ;IACR,YAAY;IACZ,OAAO;IACP,OAAO;IACP,UAAU;IACV,IAAgB;IAChB,QAAQ;IACR,MAAM;IACN,OAAO;IACP,SAAS;IACT,OAAO;IACP,SAAS;IACT,MAAM;IACN,SAAS;IACT,SAAS;IACT,UAAU;IACV,UAAU;IACV,UAAU;IACV,QAAQ;IACR,IAAI;IACJ,OAAO;IACP,MAAM;IACN,SAAS;IACT,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,WAAW;CAEZ,CAAC;AAEW,QAAA,kBAAkB,GAAc;IAC3C,QAAQ;IACR,YAAY;IACZ,OAAO;IACP,OAAO;IACP,UAAU;IACV,IAAe;IACf,QAAQ;IACR,QAAQ;IACR,MAAM;IACN,OAAO;IACP,SAAS;IACT,OAAO;IACP,SAAS;IACT,MAAM;IACN,SAAS;IACT,SAAS;IACT,UAAU;IACV,UAAU;IACV,UAAU;IACV,iBAAiB;IACjB,QAAQ;IACR,IAAI;IACJ,OAAO;IACP,MAAM;IACN,SAAS;IACT,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,WAAW;CAcZ,CAAC;AAEW,QAAA,cAAc,GAAc;IACvC,YAAY;IACZ,gBAAgB;IAChB,WAAW;IACX,WAAW;IACX,cAAc;IACd,QAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,UAAU;IACV,WAAW;IACX,aAAa;IACb,WAAW;IACX,aAAa;IACb,aAAa;IACb,UAAU;IACV,aAAa;IACb,cAAc;IACd,cAAc;IACd,cAAc;IACd,qBAAqB;IACrB,YAAY;IACZ,WAAW;IACX,QAAQ;IACR,UAAU;IACV,aAAa;IACb,cAAc;IACd,YAAY;IACZ,YAAY;IACZ,eAAe;CAchB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14339, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fs/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { FunctionPropertyNames, FMember } from './types';\nimport type * as fs from 'fs';\ntype FS = typeof fs;\n\nexport function splitTwoLevels<FSObject>(\n  functionName: FMember\n):\n  | [FunctionPropertyNames<FSObject> & string]\n  | [FunctionPropertyNames<FSObject> & string, string] {\n  const memberParts = functionName.split('.');\n  if (memberParts.length > 1) {\n    if (memberParts.length !== 2)\n      throw Error(`Invalid member function name ${functionName}`);\n    return memberParts as [FunctionPropertyNames<FSObject> & string, string];\n  } else {\n    return [functionName as FunctionPropertyNames<FSObject> & string];\n  }\n}\n\nexport function indexFs<FSObject extends FS | FS['promises']>(\n  fs: FSObject,\n  member: FMember\n): { objectToPatch: any; functionNameToPatch: string } {\n  if (!member) throw new Error(JSON.stringify({ member }));\n  const splitResult = splitTwoLevels<FSObject>(member);\n  const [functionName1, functionName2] = splitResult;\n  if (functionName2) {\n    return {\n      objectToPatch: fs[functionName1],\n      functionNameToPatch: functionName2,\n    };\n  } else {\n    return {\n      objectToPatch: fs,\n      functionNameToPatch: functionName1,\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;AAmBA,SAAgB,cAAc,CAC5B,YAAqB;IAIrB,MAAM,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC5C,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;QAC1B,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAC1B,MAAM,KAAK,CAAC,CAAA,6BAAA,EAAgC,YAAY,EAAE,CAAC,CAAC;QAC9D,OAAO,WAAiE,CAAC;KAC1E,MAAM;QACL,OAAO;YAAC,YAAwD;SAAC,CAAC;KACnE;AACH,CAAC;AAbD,QAAA,cAAA,GAAA,eAaC;AAED,SAAgB,OAAO,CACrB,EAAY,EACZ,MAAe;IAEf,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;QAAE,MAAM;IAAA,CAAE,CAAC,CAAC,CAAC;IACzD,MAAM,WAAW,GAAG,cAAc,CAAW,MAAM,CAAC,CAAC;IACrD,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,GAAG,WAAW,CAAC;IACnD,IAAI,aAAa,EAAE;QACjB,OAAO;YACL,aAAa,EAAE,EAAE,CAAC,aAAa,CAAC;YAChC,mBAAmB,EAAE,aAAa;SACnC,CAAC;KACH,MAAM;QACL,OAAO;YACL,aAAa,EAAE,EAAE;YACjB,mBAAmB,EAAE,aAAa;SACnC,CAAC;KACH;AACH,CAAC;AAlBD,QAAA,OAAA,GAAA,QAkBC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14380, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fs/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { isTracingSuppressed, suppressTracing } from '@opentelemetry/core';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  CALLBACK_FUNCTIONS,\n  PROMISE_FUNCTIONS,\n  SYNC_FUNCTIONS,\n} from './constants';\nimport type * as fs from 'fs';\nimport type {\n  FMember,\n  FPMember,\n  CreateHook,\n  EndHook,\n  FsInstrumentationConfig,\n} from './types';\nimport { promisify } from 'util';\nimport { indexFs } from './utils';\n\ntype FS = typeof fs;\ntype FSPromises = (typeof fs)['promises'];\n\n/**\n * This is important for 2-level functions like `realpath.native` to retain the 2nd-level\n * when patching the 1st-level.\n */\nfunction patchedFunctionWithOriginalProperties<\n  T extends (...args: any[]) => ReturnType<T>\n>(patchedFunction: T, original: T): T {\n  return Object.assign(patchedFunction, original);\n}\n\nexport class FsInstrumentation extends InstrumentationBase {\n  constructor(config: FsInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init(): (\n    | InstrumentationNodeModuleDefinition\n    | InstrumentationNodeModuleDefinition\n  )[] {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'fs',\n        ['*'],\n        (fs: FS) => {\n          for (const fName of SYNC_FUNCTIONS) {\n            const { objectToPatch, functionNameToPatch } = indexFs(fs, fName);\n\n            if (isWrapped(objectToPatch[functionNameToPatch])) {\n              this._unwrap(objectToPatch, functionNameToPatch);\n            }\n            this._wrap(\n              objectToPatch,\n              functionNameToPatch,\n              <any>this._patchSyncFunction.bind(this, fName)\n            );\n          }\n          for (const fName of CALLBACK_FUNCTIONS) {\n            const { objectToPatch, functionNameToPatch } = indexFs(fs, fName);\n            if (isWrapped(objectToPatch[functionNameToPatch])) {\n              this._unwrap(objectToPatch, functionNameToPatch);\n            }\n            if (fName === 'exists') {\n              // handling separately because of the inconsistent cb style:\n              // `exists` doesn't have error as the first argument, but the result\n              this._wrap(\n                objectToPatch,\n                functionNameToPatch,\n                <any>this._patchExistsCallbackFunction.bind(this, fName)\n              );\n              continue;\n            }\n            this._wrap(\n              objectToPatch,\n              functionNameToPatch,\n              <any>this._patchCallbackFunction.bind(this, fName)\n            );\n          }\n          for (const fName of PROMISE_FUNCTIONS) {\n            if (isWrapped(fs.promises[fName])) {\n              this._unwrap(fs.promises, fName);\n            }\n            this._wrap(\n              fs.promises,\n              fName,\n              <any>this._patchPromiseFunction.bind(this, fName)\n            );\n          }\n          return fs;\n        },\n        (fs: FS) => {\n          if (fs === undefined) return;\n          for (const fName of SYNC_FUNCTIONS) {\n            const { objectToPatch, functionNameToPatch } = indexFs(fs, fName);\n            if (isWrapped(objectToPatch[functionNameToPatch])) {\n              this._unwrap(objectToPatch, functionNameToPatch);\n            }\n          }\n          for (const fName of CALLBACK_FUNCTIONS) {\n            const { objectToPatch, functionNameToPatch } = indexFs(fs, fName);\n            if (isWrapped(objectToPatch[functionNameToPatch])) {\n              this._unwrap(objectToPatch, functionNameToPatch);\n            }\n          }\n          for (const fName of PROMISE_FUNCTIONS) {\n            if (isWrapped(fs.promises[fName])) {\n              this._unwrap(fs.promises, fName);\n            }\n          }\n        }\n      ),\n      new InstrumentationNodeModuleDefinition(\n        'fs/promises',\n        ['*'],\n        (fsPromises: FSPromises) => {\n          for (const fName of PROMISE_FUNCTIONS) {\n            if (isWrapped(fsPromises[fName])) {\n              this._unwrap(fsPromises, fName);\n            }\n            this._wrap(\n              fsPromises,\n              fName,\n              <any>this._patchPromiseFunction.bind(this, fName)\n            );\n          }\n          return fsPromises;\n        },\n        (fsPromises: FSPromises) => {\n          if (fsPromises === undefined) return;\n          for (const fName of PROMISE_FUNCTIONS) {\n            if (isWrapped(fsPromises[fName])) {\n              this._unwrap(fsPromises, fName);\n            }\n          }\n        }\n      ),\n    ];\n  }\n\n  protected _patchSyncFunction<T extends (...args: any[]) => ReturnType<T>>(\n    functionName: FMember,\n    original: T\n  ): T {\n    const instrumentation = this;\n    const patchedFunction = <any>function (this: any, ...args: any[]) {\n      const activeContext = api.context.active();\n\n      if (!instrumentation._shouldTrace(activeContext)) {\n        return original.apply(this, args);\n      }\n      if (\n        instrumentation._runCreateHook(functionName, {\n          args: args,\n        }) === false\n      ) {\n        return api.context.with(\n          suppressTracing(activeContext),\n          original,\n          this,\n          ...args\n        );\n      }\n\n      const span = instrumentation.tracer.startSpan(\n        `fs ${functionName}`\n      ) as api.Span;\n\n      try {\n        // Suppress tracing for internal fs calls\n        const res = api.context.with(\n          suppressTracing(api.trace.setSpan(activeContext, span)),\n          original,\n          this,\n          ...args\n        );\n        instrumentation._runEndHook(functionName, { args: args, span });\n        return res;\n      } catch (error: any) {\n        span.recordException(error);\n        span.setStatus({\n          message: error.message,\n          code: api.SpanStatusCode.ERROR,\n        });\n        instrumentation._runEndHook(functionName, { args: args, span, error });\n        throw error;\n      } finally {\n        span.end();\n      }\n    };\n    return patchedFunctionWithOriginalProperties(patchedFunction, original);\n  }\n\n  protected _patchCallbackFunction<T extends (...args: any[]) => ReturnType<T>>(\n    functionName: FMember,\n    original: T\n  ): T {\n    const instrumentation = this;\n    const patchedFunction = <any>function (this: any, ...args: any[]) {\n      const activeContext = api.context.active();\n\n      if (!instrumentation._shouldTrace(activeContext)) {\n        return original.apply(this, args);\n      }\n      if (\n        instrumentation._runCreateHook(functionName, {\n          args: args,\n        }) === false\n      ) {\n        return api.context.with(\n          suppressTracing(activeContext),\n          original,\n          this,\n          ...args\n        );\n      }\n\n      const lastIdx = args.length - 1;\n      const cb = args[lastIdx];\n      if (typeof cb === 'function') {\n        const span = instrumentation.tracer.startSpan(\n          `fs ${functionName}`\n        ) as api.Span;\n\n        // Return to the context active during the call in the callback\n        args[lastIdx] = api.context.bind(\n          activeContext,\n          function (this: unknown, error?: Error) {\n            if (error) {\n              span.recordException(error);\n              span.setStatus({\n                message: error.message,\n                code: api.SpanStatusCode.ERROR,\n              });\n            }\n            instrumentation._runEndHook(functionName, {\n              args: args,\n              span,\n              error,\n            });\n            span.end();\n            return cb.apply(this, arguments);\n          }\n        );\n\n        try {\n          // Suppress tracing for internal fs calls\n          return api.context.with(\n            suppressTracing(api.trace.setSpan(activeContext, span)),\n            original,\n            this,\n            ...args\n          );\n        } catch (error: any) {\n          span.recordException(error);\n          span.setStatus({\n            message: error.message,\n            code: api.SpanStatusCode.ERROR,\n          });\n          instrumentation._runEndHook(functionName, {\n            args: args,\n            span,\n            error,\n          });\n          span.end();\n          throw error;\n        }\n      } else {\n        // TODO: what to do if we are pretty sure it's going to throw\n        return original.apply(this, args);\n      }\n    };\n    return patchedFunctionWithOriginalProperties(patchedFunction, original);\n  }\n\n  protected _patchExistsCallbackFunction<\n    T extends (...args: any[]) => ReturnType<T>\n  >(functionName: 'exists', original: T): T {\n    const instrumentation = this;\n    const patchedFunction = <any>function (this: any, ...args: any[]) {\n      const activeContext = api.context.active();\n\n      if (!instrumentation._shouldTrace(activeContext)) {\n        return original.apply(this, args);\n      }\n      if (\n        instrumentation._runCreateHook(functionName, {\n          args: args,\n        }) === false\n      ) {\n        return api.context.with(\n          suppressTracing(activeContext),\n          original,\n          this,\n          ...args\n        );\n      }\n\n      const lastIdx = args.length - 1;\n      const cb = args[lastIdx];\n      if (typeof cb === 'function') {\n        const span = instrumentation.tracer.startSpan(\n          `fs ${functionName}`\n        ) as api.Span;\n\n        // Return to the context active during the call in the callback\n        args[lastIdx] = api.context.bind(\n          activeContext,\n          function (this: unknown) {\n            // `exists` never calls the callback with an error\n            instrumentation._runEndHook(functionName, {\n              args: args,\n              span,\n            });\n            span.end();\n            return cb.apply(this, arguments);\n          }\n        );\n\n        try {\n          // Suppress tracing for internal fs calls\n          return api.context.with(\n            suppressTracing(api.trace.setSpan(activeContext, span)),\n            original,\n            this,\n            ...args\n          );\n        } catch (error: any) {\n          span.recordException(error);\n          span.setStatus({\n            message: error.message,\n            code: api.SpanStatusCode.ERROR,\n          });\n          instrumentation._runEndHook(functionName, {\n            args: args,\n            span,\n            error,\n          });\n          span.end();\n          throw error;\n        }\n      } else {\n        return original.apply(this, args);\n      }\n    };\n    const functionWithOriginalProperties =\n      patchedFunctionWithOriginalProperties(patchedFunction, original);\n\n    // `exists` has a custom promisify function because of the inconsistent signature\n    // replicating that on the patched function\n    const promisified = function (path: unknown) {\n      return new Promise(resolve =>\n        functionWithOriginalProperties(path, resolve)\n      );\n    };\n    Object.defineProperty(promisified, 'name', { value: functionName });\n    Object.defineProperty(functionWithOriginalProperties, promisify.custom, {\n      value: promisified,\n    });\n\n    return functionWithOriginalProperties;\n  }\n\n  protected _patchPromiseFunction<T extends (...args: any[]) => ReturnType<T>>(\n    functionName: FPMember,\n    original: T\n  ): T {\n    const instrumentation = this;\n    const patchedFunction = <any>async function (this: any, ...args: any[]) {\n      const activeContext = api.context.active();\n\n      if (!instrumentation._shouldTrace(activeContext)) {\n        return original.apply(this, args);\n      }\n      if (\n        instrumentation._runCreateHook(functionName, {\n          args: args,\n        }) === false\n      ) {\n        return api.context.with(\n          suppressTracing(activeContext),\n          original,\n          this,\n          ...args\n        );\n      }\n\n      const span = instrumentation.tracer.startSpan(\n        `fs ${functionName}`\n      ) as api.Span;\n\n      try {\n        // Suppress tracing for internal fs calls\n        const res = await api.context.with(\n          suppressTracing(api.trace.setSpan(activeContext, span)),\n          original,\n          this,\n          ...args\n        );\n        instrumentation._runEndHook(functionName, { args: args, span });\n        return res;\n      } catch (error: any) {\n        span.recordException(error);\n        span.setStatus({\n          message: error.message,\n          code: api.SpanStatusCode.ERROR,\n        });\n        instrumentation._runEndHook(functionName, { args: args, span, error });\n        throw error;\n      } finally {\n        span.end();\n      }\n    };\n    return patchedFunctionWithOriginalProperties(patchedFunction, original);\n  }\n\n  protected _runCreateHook(\n    ...args: Parameters<CreateHook>\n  ): ReturnType<CreateHook> {\n    const { createHook } = this.getConfig() as FsInstrumentationConfig;\n    if (typeof createHook === 'function') {\n      try {\n        return createHook(...args);\n      } catch (e) {\n        this._diag.error('caught createHook error', e);\n      }\n    }\n    return true;\n  }\n\n  protected _runEndHook(...args: Parameters<EndHook>): ReturnType<EndHook> {\n    const { endHook } = this.getConfig() as FsInstrumentationConfig;\n    if (typeof endHook === 'function') {\n      try {\n        endHook(...args);\n      } catch (e) {\n        this._diag.error('caught endHook error', e);\n      }\n    }\n  }\n\n  protected _shouldTrace(context: api.Context): boolean {\n    if (isTracingSuppressed(context)) {\n      // Performance optimization. Avoid creating additional contexts and spans\n      // if we already know that the tracing is being suppressed.\n      return false;\n    }\n\n    const { requireParentSpan } = this.getConfig() as FsInstrumentationConfig;\n    if (requireParentSpan) {\n      const parentSpan = api.trace.getSpan(context);\n      if (parentSpan == null) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14727, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fs/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type * as fs from 'fs';\n\nimport type * as api from '@opentelemetry/api';\nimport type { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport type FunctionPropertyNames<T> = Exclude<\n  {\n    [K in keyof T]: T[K] extends Function ? K : never;\n  }[keyof T],\n  undefined\n>;\nexport type FunctionProperties<T> = Pick<T, FunctionPropertyNames<T>>;\n\nexport type FunctionPropertyNamesTwoLevels<T> = Exclude<\n  {\n    [K in keyof T]: {\n      [L in keyof T[K]]: L extends string\n        ? T[K][L] extends Function\n          ? K extends string\n            ? L extends string\n              ? `${K}.${L}`\n              : never\n            : never\n          : never\n        : never;\n    }[keyof T[K]];\n  }[keyof T],\n  undefined\n>;\n\nexport type Member<F> =\n  | FunctionPropertyNames<F>\n  | FunctionPropertyNamesTwoLevels<F>;\nexport type FMember =\n  | FunctionPropertyNames<typeof fs>\n  | FunctionPropertyNamesTwoLevels<typeof fs>;\nexport type FPMember =\n  | FunctionPropertyNames<(typeof fs)['promises']>\n  | FunctionPropertyNamesTwoLevels<(typeof fs)['promises']>;\n\nexport type CreateHook = (\n  functionName: FMember | FPMember,\n  info: { args: ArrayLike<unknown> }\n) => boolean;\nexport type EndHook = (\n  functionName: FMember | FPMember,\n  info: { args: ArrayLike<unknown>; span: api.Span; error?: Error }\n) => void;\n\nexport interface FsInstrumentationConfig extends InstrumentationConfig {\n  createHook?: CreateHook;\n  endHook?: EndHook;\n  requireParentSpan?: boolean;\n}\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14736, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-fs/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,wJAAA,SAAkC;AAClC,8IAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14776, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-generic-pool/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.38.1';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-generic-pool';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,6CAA6C,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14803, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-generic-pool/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\n\nimport type * as genericPool from 'generic-pool';\n\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nconst MODULE_NAME = 'generic-pool';\n\nexport class GenericPoolInstrumentation extends InstrumentationBase {\n  // only used for v2 - v2.3)\n  private _isDisabled = false;\n\n  constructor(config: InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        MODULE_NAME,\n        ['>=3.0.0 <4'],\n        moduleExports => {\n          const Pool: any = moduleExports.Pool;\n          if (isWrapped(Pool.prototype.acquire)) {\n            this._unwrap(Pool.prototype, 'acquire');\n          }\n          this._wrap(\n            Pool.prototype,\n            'acquire',\n            this._acquirePatcher.bind(this)\n          );\n          return moduleExports;\n        },\n        moduleExports => {\n          const Pool: any = moduleExports.Pool;\n          this._unwrap(Pool.prototype, 'acquire');\n          return moduleExports;\n        }\n      ),\n      new InstrumentationNodeModuleDefinition(\n        MODULE_NAME,\n        ['>=2.4.0 <3'],\n        moduleExports => {\n          const Pool: any = moduleExports.Pool;\n          if (isWrapped(Pool.prototype.acquire)) {\n            this._unwrap(Pool.prototype, 'acquire');\n          }\n          this._wrap(\n            Pool.prototype,\n            'acquire',\n            this._acquireWithCallbacksPatcher.bind(this)\n          );\n          return moduleExports;\n        },\n        moduleExports => {\n          const Pool: any = moduleExports.Pool;\n          this._unwrap(Pool.prototype, 'acquire');\n          return moduleExports;\n        }\n      ),\n      new InstrumentationNodeModuleDefinition(\n        MODULE_NAME,\n        ['>=2.0.0 <2.4'],\n        moduleExports => {\n          this._isDisabled = false;\n          if (isWrapped(moduleExports.Pool)) {\n            this._unwrap(moduleExports, 'Pool');\n          }\n          this._wrap(moduleExports, 'Pool', this._poolWrapper.bind(this));\n          return moduleExports;\n        },\n        moduleExports => {\n          // since the object is created on the fly every time, we need to use\n          // a boolean switch here to disable the instrumentation\n          this._isDisabled = true;\n          return moduleExports;\n        }\n      ),\n    ];\n  }\n\n  private _acquirePatcher(original: genericPool.Pool<unknown>['acquire']) {\n    const instrumentation = this;\n    return function wrapped_acquire(\n      this: genericPool.Pool<unknown>,\n      ...args: any[]\n    ) {\n      const parent = api.context.active();\n      const span = instrumentation.tracer.startSpan(\n        'generic-pool.acquire',\n        {},\n        parent\n      );\n\n      return api.context.with(api.trace.setSpan(parent, span), () => {\n        return original.call(this, ...args).then(\n          value => {\n            span.end();\n            return value;\n          },\n          err => {\n            span.recordException(err);\n            span.end();\n            throw err;\n          }\n        );\n      });\n    };\n  }\n\n  private _poolWrapper(original: any) {\n    const instrumentation = this;\n    return function wrapped_pool(this: any) {\n      const pool = original.apply(this, arguments);\n      instrumentation._wrap(\n        pool,\n        'acquire',\n        instrumentation._acquireWithCallbacksPatcher.bind(instrumentation)\n      );\n      return pool;\n    };\n  }\n\n  private _acquireWithCallbacksPatcher(original: any) {\n    const instrumentation = this;\n    return function wrapped_acquire(\n      this: genericPool.Pool<unknown>,\n      cb: Function,\n      priority: number\n    ) {\n      // only used for v2 - v2.3\n      if (instrumentation._isDisabled) {\n        return original.call(this, cb, priority);\n      }\n      const parent = api.context.active();\n      const span = instrumentation.tracer.startSpan(\n        'generic-pool.acquire',\n        {},\n        parent\n      );\n\n      return api.context.with(api.trace.setSpan(parent, span), () => {\n        original.call(\n          this,\n          (err: unknown, client: unknown) => {\n            span.end();\n            // Not checking whether cb is a function because\n            // the original code doesn't do that either.\n            if (cb) {\n              return cb(err, client);\n            }\n          },\n          priority\n        );\n      });\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14932, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-generic-pool/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,kKAAA,SAAkC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14971, "column": 0}, "map": {"version":3,"file":"enum.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-graphql/src/enum.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AllowedOperationTypes {\n  QUERY = 'query',\n  MUTATION = 'mutation',\n  SUBSCRIPTION = 'subscription',\n}\n\nexport enum TokenKind {\n  SOF = '<SOF>',\n  EOF = '<EOF>',\n  BANG = '!',\n  DOLLAR = '$',\n  AMP = '&',\n  PAREN_L = '(',\n  PAREN_R = ')',\n  SPREAD = '...',\n  COLON = ':',\n  EQUALS = '=',\n  AT = '@',\n  BRACKET_L = '[',\n  BRACKET_R = ']',\n  BRACE_L = '{',\n  PIPE = '|',\n  BRACE_R = '}',\n  NAME = 'Name',\n  INT = 'Int',\n  FLOAT = 'Float',\n  STRING = 'String',\n  BLOCK_STRING = 'BlockString',\n  COMMENT = 'Comment',\n}\n\nexport enum SpanNames {\n  EXECUTE = 'graphql.execute',\n  PARSE = 'graphql.parse',\n  RESOLVE = 'graphql.resolve',\n  VALIDATE = 'graphql.validate',\n  SCHEMA_VALIDATE = 'graphql.validateSchema',\n  SCHEMA_PARSE = 'graphql.parseSchema',\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAY,qBAIX;AAJD,CAAA,SAAY,qBAAqB;IAC/B,qBAAA,CAAA,QAAA,GAAA,OAAe,CAAA;IACf,qBAAA,CAAA,WAAA,GAAA,UAAqB,CAAA;IACrB,qBAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAJW,qBAAqB,GAArB,QAAA,qBAAqB,IAAA,CAArB,QAAA,qBAAqB,GAAA,CAAA,CAAA,GAIhC;AAED,IAAY,SAuBX;AAvBD,CAAA,SAAY,SAAS;IACnB,SAAA,CAAA,MAAA,GAAA,OAAa,CAAA;IACb,SAAA,CAAA,MAAA,GAAA,OAAa,CAAA;IACb,SAAA,CAAA,OAAA,GAAA,GAAU,CAAA;IACV,SAAA,CAAA,SAAA,GAAA,GAAY,CAAA;IACZ,SAAA,CAAA,MAAA,GAAA,GAAS,CAAA;IACT,SAAA,CAAA,UAAA,GAAA,GAAa,CAAA;IACb,SAAA,CAAA,UAAA,GAAA,GAAa,CAAA;IACb,SAAA,CAAA,SAAA,GAAA,KAAc,CAAA;IACd,SAAA,CAAA,QAAA,GAAA,GAAW,CAAA;IACX,SAAA,CAAA,SAAA,GAAA,GAAY,CAAA;IACZ,SAAA,CAAA,KAAA,GAAA,GAAQ,CAAA;IACR,SAAA,CAAA,YAAA,GAAA,GAAe,CAAA;IACf,SAAA,CAAA,YAAA,GAAA,GAAe,CAAA;IACf,SAAA,CAAA,UAAA,GAAA,GAAa,CAAA;IACb,SAAA,CAAA,OAAA,GAAA,GAAU,CAAA;IACV,SAAA,CAAA,UAAA,GAAA,GAAa,CAAA;IACb,SAAA,CAAA,OAAA,GAAA,MAAa,CAAA;IACb,SAAA,CAAA,MAAA,GAAA,KAAW,CAAA;IACX,SAAA,CAAA,QAAA,GAAA,OAAe,CAAA;IACf,SAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,SAAA,CAAA,eAAA,GAAA,aAA4B,CAAA;IAC5B,SAAA,CAAA,UAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAvBW,SAAS,GAAT,QAAA,SAAS,IAAA,CAAT,QAAA,SAAS,GAAA,CAAA,CAAA,GAuBpB;AAED,IAAY,SAOX;AAPD,CAAA,SAAY,SAAS;IACnB,SAAA,CAAA,UAAA,GAAA,iBAA2B,CAAA;IAC3B,SAAA,CAAA,QAAA,GAAA,eAAuB,CAAA;IACvB,SAAA,CAAA,UAAA,GAAA,iBAA2B,CAAA;IAC3B,SAAA,CAAA,WAAA,GAAA,kBAA6B,CAAA;IAC7B,SAAA,CAAA,kBAAA,GAAA,wBAA0C,CAAA;IAC1C,SAAA,CAAA,eAAA,GAAA,qBAAoC,CAAA;AACtC,CAAC,EAPW,SAAS,GAAT,QAAA,SAAS,IAAA,CAAT,QAAA,SAAS,GAAA,CAAA,CAAA,GAOpB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15035, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-graphql/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  SOURCE = 'graphql.source',\n  FIELD_NAME = 'graphql.field.name',\n  FIELD_PATH = 'graphql.field.path',\n  FIELD_TYPE = 'graphql.field.type',\n  OPERATION_TYPE = 'graphql.operation.type',\n  OPERATION_NAME = 'graphql.operation.name',\n  VARIABLES = 'graphql.variables.',\n  ERROR_VALIDATION_NAME = 'graphql.validation.error',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,IAAY,cASX;AATD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,SAAA,GAAA,gBAAyB,CAAA;IACzB,cAAA,CAAA,aAAA,GAAA,oBAAiC,CAAA;IACjC,cAAA,CAAA,aAAA,GAAA,oBAAiC,CAAA;IACjC,cAAA,CAAA,aAAA,GAAA,oBAAiC,CAAA;IACjC,cAAA,CAAA,iBAAA,GAAA,wBAAyC,CAAA;IACzC,cAAA,CAAA,iBAAA,GAAA,wBAAyC,CAAA;IACzC,cAAA,CAAA,YAAA,GAAA,oBAAgC,CAAA;IAChC,cAAA,CAAA,wBAAA,GAAA,0BAAkD,CAAA;AACpD,CAAC,EATW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GASzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15070, "column": 0}, "map": {"version":3,"file":"symbols.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-graphql/src/symbols.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const OTEL_PATCHED_SYMBOL = Symbol.for('opentelemetry.patched');\n\nexport const OTEL_GRAPHQL_DATA_SYMBOL = Symbol.for(\n  'opentelemetry.graphql_data'\n);\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEU,QAAA,mBAAmB,GAAG,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AAE1D,QAAA,wBAAwB,GAAG,MAAM,CAAC,GAAG,CAChD,4BAA4B,CAC7B,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15096, "column": 0}, "map": {"version":3,"file":"internal-types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-graphql/src/internal-types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport type * as graphqlTypes from 'graphql';\nimport type * as api from '@opentelemetry/api';\nimport type { PromiseOrValue } from 'graphql/jsutils/PromiseOrValue';\nimport type { DocumentNode } from 'graphql/language/ast';\nimport type {\n  GraphQLFieldResolver,\n  GraphQLTypeResolver,\n} from 'graphql/type/definition';\nimport { OTEL_GRAPHQL_DATA_SYMBOL, OTEL_PATCHED_SYMBOL } from './symbols';\nimport { GraphQLInstrumentationConfig } from './types';\n\nexport const OPERATION_NOT_SUPPORTED =\n  'Operation$operationName$not' + ' supported';\n\n/**\n * Merged and parsed config of default instrumentation config and GraphQL\n */\nexport type GraphQLInstrumentationParsedConfig =\n  Required<GraphQLInstrumentationConfig> & InstrumentationConfig;\n\nexport type executeFunctionWithObj = (\n  args: graphqlTypes.ExecutionArgs\n) => PromiseOrValue<graphqlTypes.ExecutionResult>;\n\nexport type executeArgumentsArray = [\n  graphqlTypes.GraphQLSchema,\n  graphqlTypes.DocumentNode,\n  any,\n  any,\n  Maybe<{ [key: string]: any }>,\n  Maybe<string>,\n  Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n  Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>\n];\n\nexport type executeFunctionWithArgs = (\n  schema: graphqlTypes.GraphQLSchema,\n  document: graphqlTypes.DocumentNode,\n  rootValue?: any,\n  contextValue?: any,\n  variableValues?: Maybe<{ [key: string]: any }>,\n  operationName?: Maybe<string>,\n  fieldResolver?: Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n  typeResolver?: Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>\n) => PromiseOrValue<graphqlTypes.ExecutionResult>;\n\nexport interface OtelExecutionArgs {\n  schema: graphqlTypes.GraphQLSchema;\n  document: DocumentNode & ObjectWithGraphQLData;\n  rootValue?: any;\n  contextValue?: any & ObjectWithGraphQLData;\n  variableValues?: Maybe<{ [key: string]: any }>;\n  operationName?: Maybe<string>;\n  fieldResolver?: Maybe<GraphQLFieldResolver<any, any> & OtelPatched>;\n  typeResolver?: Maybe<GraphQLTypeResolver<any, any>>;\n}\n\nexport type executeType = executeFunctionWithObj | executeFunctionWithArgs;\n\nexport type parseType = (\n  source: string | graphqlTypes.Source,\n  options?: graphqlTypes.ParseOptions\n) => graphqlTypes.DocumentNode;\n\nexport type validateType = (\n  schema: graphqlTypes.GraphQLSchema,\n  documentAST: graphqlTypes.DocumentNode,\n  rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n  options?: { maxErrors?: number },\n  typeInfo?: graphqlTypes.TypeInfo\n) => ReadonlyArray<graphqlTypes.GraphQLError>;\n\nexport interface GraphQLField {\n  parent: api.Span;\n  span: api.Span;\n  error: Error | null;\n}\n\ninterface OtelGraphQLData {\n  source?: any;\n  span: api.Span;\n  fields: { [key: string]: GraphQLField };\n}\n\nexport interface ObjectWithGraphQLData {\n  [OTEL_GRAPHQL_DATA_SYMBOL]?: OtelGraphQLData;\n}\n\nexport interface OtelPatched {\n  [OTEL_PATCHED_SYMBOL]?: boolean;\n}\n\nexport interface GraphQLPath {\n  prev: GraphQLPath | undefined;\n  key: string | number;\n  /**\n   * optional as it didn't exist yet in ver 14\n   */\n  typename?: string | undefined;\n}\n\n/**\n * Moving this type from ver 15 of graphql as it is nto available in ver. 14s\n * this way it can compile against ver 14.\n */\nexport type Maybe<T> = null | undefined | T;\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAWH,MAAA,iCAA0E;AAG7D,QAAA,uBAAuB,GAClC,6BAA6B,GAAG,YAAY,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15122, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-graphql/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as graphqlTypes from 'graphql';\nimport * as api from '@opentelemetry/api';\nimport { AllowedOperationTypes, SpanNames, TokenKind } from './enum';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { OTEL_GRAPHQL_DATA_SYMBOL, OTEL_PATCHED_SYMBOL } from './symbols';\nimport {\n  GraphQLField,\n  GraphQLPath,\n  GraphQLInstrumentationParsedConfig,\n  ObjectWithGraphQLData,\n  OtelPatched,\n  Maybe,\n} from './internal-types';\nimport { GraphQLInstrumentationConfig } from './types';\n\nconst OPERATION_VALUES = Object.values(AllowedOperationTypes);\n\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/isPromise.ts\nexport const isPromise = (value: any): value is Promise<unknown> => {\n  return typeof value?.then === 'function';\n};\n\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/isObjectLike.ts\nconst isObjectLike = (value: unknown): value is { [key: string]: unknown } => {\n  return typeof value == 'object' && value !== null;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction addInputVariableAttribute(span: api.Span, key: string, variable: any) {\n  if (Array.isArray(variable)) {\n    variable.forEach((value, idx) => {\n      addInputVariableAttribute(span, `${key}.${idx}`, value);\n    });\n  } else if (variable instanceof Object) {\n    Object.entries(variable).forEach(([nestedKey, value]) => {\n      addInputVariableAttribute(span, `${key}.${nestedKey}`, value);\n    });\n  } else {\n    span.setAttribute(`${AttributeNames.VARIABLES}${String(key)}`, variable);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function addInputVariableAttributes(\n  span: api.Span,\n  variableValues: { [key: string]: any }\n) {\n  Object.entries(variableValues).forEach(([key, value]) => {\n    addInputVariableAttribute(span, key, value);\n  });\n}\n\nexport function addSpanSource(\n  span: api.Span,\n  loc?: graphqlTypes.Location,\n  allowValues?: boolean,\n  start?: number,\n  end?: number\n): void {\n  const source = getSourceFromLocation(loc, allowValues, start, end);\n  span.setAttribute(AttributeNames.SOURCE, source);\n}\n\nfunction createFieldIfNotExists(\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n  contextValue: any,\n  info: graphqlTypes.GraphQLResolveInfo,\n  path: string[]\n): {\n  field: any;\n  spanAdded: boolean;\n} {\n  let field = getField(contextValue, path);\n\n  let spanAdded = false;\n\n  if (!field) {\n    spanAdded = true;\n    const parent = getParentField(contextValue, path);\n\n    field = {\n      parent,\n      span: createResolverSpan(\n        tracer,\n        getConfig,\n        contextValue,\n        info,\n        path,\n        parent.span\n      ),\n      error: null,\n    };\n\n    addField(contextValue, path, field);\n  }\n\n  return { spanAdded, field };\n}\n\nfunction createResolverSpan(\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n  contextValue: any,\n  info: graphqlTypes.GraphQLResolveInfo,\n  path: string[],\n  parentSpan?: api.Span\n): api.Span {\n  const attributes: api.SpanAttributes = {\n    [AttributeNames.FIELD_NAME]: info.fieldName,\n    [AttributeNames.FIELD_PATH]: path.join('.'),\n    [AttributeNames.FIELD_TYPE]: info.returnType.toString(),\n  };\n\n  const span = tracer.startSpan(\n    `${SpanNames.RESOLVE} ${attributes[AttributeNames.FIELD_PATH]}`,\n    {\n      attributes,\n    },\n    parentSpan ? api.trace.setSpan(api.context.active(), parentSpan) : undefined\n  );\n\n  const document = contextValue[OTEL_GRAPHQL_DATA_SYMBOL].source;\n  const fieldNode = info.fieldNodes.find(\n    fieldNode => fieldNode.kind === 'Field'\n  );\n\n  if (fieldNode) {\n    addSpanSource(\n      span,\n      document.loc,\n      getConfig().allowValues,\n      fieldNode.loc?.start,\n      fieldNode.loc?.end\n    );\n  }\n\n  return span;\n}\n\nexport function endSpan(span: api.Span, error?: Error): void {\n  if (error) {\n    span.recordException(error);\n  }\n  span.end();\n}\n\nexport function getOperation(\n  document: graphqlTypes.DocumentNode,\n  operationName?: Maybe<string>\n): graphqlTypes.DefinitionNode | undefined {\n  if (!document || !Array.isArray(document.definitions)) {\n    return undefined;\n  }\n\n  if (operationName) {\n    return document.definitions\n      .filter(\n        definition =>\n          OPERATION_VALUES.indexOf((definition as any)?.operation) !== -1\n      )\n      .find(definition => operationName === (definition as any)?.name?.value);\n  } else {\n    return document.definitions.find(\n      definition =>\n        OPERATION_VALUES.indexOf((definition as any)?.operation) !== -1\n    );\n  }\n}\n\nfunction addField(contextValue: any, path: string[], field: GraphQLField) {\n  return (contextValue[OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')] =\n    field);\n}\n\nfunction getField(contextValue: any, path: string[]) {\n  return contextValue[OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')];\n}\n\nfunction getParentField(contextValue: any, path: string[]) {\n  for (let i = path.length - 1; i > 0; i--) {\n    const field = getField(contextValue, path.slice(0, i));\n\n    if (field) {\n      return field;\n    }\n  }\n\n  return {\n    span: contextValue[OTEL_GRAPHQL_DATA_SYMBOL].span,\n  };\n}\n\nfunction pathToArray(mergeItems: boolean, path: GraphQLPath): string[] {\n  const flattened: string[] = [];\n  let curr: GraphQLPath | undefined = path;\n  while (curr) {\n    let key = curr.key;\n\n    if (mergeItems && typeof key === 'number') {\n      key = '*';\n    }\n    flattened.push(String(key));\n    curr = curr.prev;\n  }\n  return flattened.reverse();\n}\n\nfunction repeatBreak(i: number): string {\n  return repeatChar('\\n', i);\n}\n\nfunction repeatSpace(i: number): string {\n  return repeatChar(' ', i);\n}\n\nfunction repeatChar(char: string, to: number): string {\n  let text = '';\n  for (let i = 0; i < to; i++) {\n    text += char;\n  }\n  return text;\n}\n\nconst KindsToBeRemoved: string[] = [\n  TokenKind.FLOAT,\n  TokenKind.STRING,\n  TokenKind.INT,\n  TokenKind.BLOCK_STRING,\n];\n\nexport function getSourceFromLocation(\n  loc?: graphqlTypes.Location,\n  allowValues = false,\n  inputStart?: number,\n  inputEnd?: number\n): string {\n  let source = '';\n\n  if (loc?.startToken) {\n    const start = typeof inputStart === 'number' ? inputStart : loc.start;\n    const end = typeof inputEnd === 'number' ? inputEnd : loc.end;\n\n    let next: graphqlTypes.Token | null = loc.startToken.next;\n    let previousLine: number | undefined = 1;\n    while (next) {\n      if (next.start < start) {\n        next = next.next;\n        previousLine = next?.line;\n        continue;\n      }\n      if (next.end > end) {\n        next = next.next;\n        previousLine = next?.line;\n        continue;\n      }\n      let value = next.value || next.kind;\n      let space = '';\n      if (!allowValues && KindsToBeRemoved.indexOf(next.kind) >= 0) {\n        // value = repeatChar('*', value.length);\n        value = '*';\n      }\n      if (next.kind === TokenKind.STRING) {\n        value = `\"${value}\"`;\n      }\n      if (next.kind === TokenKind.EOF) {\n        value = '';\n      }\n      if (next.line > previousLine!) {\n        source += repeatBreak(next.line - previousLine!);\n        previousLine = next.line;\n        space = repeatSpace(next.column - 1);\n      } else {\n        if (next.line === next.prev?.line) {\n          space = repeatSpace(next.start - (next.prev?.end || 0));\n        }\n      }\n      source += space + value;\n      if (next) {\n        next = next.next!;\n      }\n    }\n  }\n\n  return source;\n}\n\nexport function wrapFields(\n  type: Maybe<graphqlTypes.GraphQLObjectType & OtelPatched>,\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig\n): void {\n  if (\n    !type ||\n    typeof type.getFields !== 'function' ||\n    type[OTEL_PATCHED_SYMBOL]\n  ) {\n    return;\n  }\n  const fields = type.getFields();\n\n  type[OTEL_PATCHED_SYMBOL] = true;\n\n  Object.keys(fields).forEach(key => {\n    const field = fields[key];\n\n    if (!field) {\n      return;\n    }\n\n    if (field.resolve) {\n      field.resolve = wrapFieldResolver(tracer, getConfig, field.resolve);\n    }\n\n    if (field.type) {\n      let unwrappedType: any = field.type;\n\n      while (unwrappedType.ofType) {\n        unwrappedType = unwrappedType.ofType;\n      }\n      wrapFields(unwrappedType, tracer, getConfig);\n    }\n  });\n}\n\nconst handleResolveSpanError = (\n  resolveSpan: api.Span,\n  err: any,\n  shouldEndSpan: boolean\n) => {\n  if (!shouldEndSpan) {\n    return;\n  }\n  resolveSpan.recordException(err);\n  resolveSpan.setStatus({\n    code: api.SpanStatusCode.ERROR,\n    message: err.message,\n  });\n  resolveSpan.end();\n};\n\nconst handleResolveSpanSuccess = (\n  resolveSpan: api.Span,\n  shouldEndSpan: boolean\n) => {\n  if (!shouldEndSpan) {\n    return;\n  }\n  resolveSpan.end();\n};\n\nexport function wrapFieldResolver<TSource = any, TContext = any, TArgs = any>(\n  tracer: api.Tracer,\n  getConfig: () => Required<GraphQLInstrumentationConfig>,\n  fieldResolver: Maybe<\n    graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs> & OtelPatched\n  >,\n  isDefaultResolver = false\n): graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs> & OtelPatched {\n  if (\n    (wrappedFieldResolver as OtelPatched)[OTEL_PATCHED_SYMBOL] ||\n    typeof fieldResolver !== 'function'\n  ) {\n    return fieldResolver!;\n  }\n\n  function wrappedFieldResolver(\n    this: graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>,\n    source: TSource,\n    args: TArgs,\n    contextValue: TContext & ObjectWithGraphQLData,\n    info: graphqlTypes.GraphQLResolveInfo\n  ) {\n    if (!fieldResolver) {\n      return undefined;\n    }\n    const config = getConfig();\n\n    // follows what graphql is doing to decide if this is a trivial resolver\n    // for which we don't need to create a resolve span\n    if (\n      config.ignoreTrivialResolveSpans &&\n      isDefaultResolver &&\n      (isObjectLike(source) || typeof source === 'function')\n    ) {\n      const property = (source as any)[info.fieldName];\n      // a function execution is not trivial and should be recorder.\n      // property which is not a function is just a value and we don't want a \"resolve\" span for it\n      if (typeof property !== 'function') {\n        return fieldResolver.call(this, source, args, contextValue, info);\n      }\n    }\n\n    if (!contextValue[OTEL_GRAPHQL_DATA_SYMBOL]) {\n      return fieldResolver.call(this, source, args, contextValue, info);\n    }\n    const path = pathToArray(config.mergeItems, info && info.path);\n    const depth = path.filter((item: any) => typeof item === 'string').length;\n\n    let field: any;\n    let shouldEndSpan = false;\n    if (config.depth >= 0 && config.depth < depth) {\n      field = getParentField(contextValue, path);\n    } else {\n      const newField = createFieldIfNotExists(\n        tracer,\n        getConfig,\n        contextValue,\n        info,\n        path\n      );\n      field = newField.field;\n      shouldEndSpan = newField.spanAdded;\n    }\n\n    return api.context.with(\n      api.trace.setSpan(api.context.active(), field.span),\n      () => {\n        try {\n          const res = fieldResolver.call(\n            this,\n            source,\n            args,\n            contextValue,\n            info\n          );\n          if (isPromise(res)) {\n            return res.then(\n              (r: any) => {\n                handleResolveSpanSuccess(field.span, shouldEndSpan);\n                return r;\n              },\n              (err: Error) => {\n                handleResolveSpanError(field.span, err, shouldEndSpan);\n                throw err;\n              }\n            );\n          } else {\n            handleResolveSpanSuccess(field.span, shouldEndSpan);\n            return res;\n          }\n        } catch (err: any) {\n          handleResolveSpanError(field.span, err, shouldEndSpan);\n          throw err;\n        }\n      }\n    );\n  }\n\n  (wrappedFieldResolver as OtelPatched)[OTEL_PATCHED_SYMBOL] = true;\n\n  return wrappedFieldResolver;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAGH,MAAA,oCAA0C;AAC1C,MAAA,2BAAqE;AACrE,MAAA,qDAAwD;AACxD,MAAA,iCAA0E;AAW1E,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,OAAA,qBAAqB,CAAC,CAAC;AAE9D,2EAA2E;AACpE,MAAM,SAAS,GAAG,CAAC,KAAU,EAA6B,EAAE;IACjE,OAAO,OAAO,CAAA,KAAK,KAAA,QAAL,KAAK,KAAA,KAAA,IAAA,KAAA,IAAL,KAAK,CAAE,IAAI,CAAA,KAAK,UAAU,CAAC;AAC3C,CAAC,CAAC;AAFW,QAAA,SAAS,GAAA,UAEpB;AAEF,8EAA8E;AAC9E,MAAM,YAAY,GAAG,CAAC,KAAc,EAAuC,EAAE;IAC3E,OAAO,OAAO,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,IAAI,CAAC;AACpD,CAAC,CAAC;AAEF,8DAA8D;AAC9D,SAAS,yBAAyB,CAAC,IAAc,EAAE,GAAW,EAAE,QAAa;IAC3E,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC3B,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;YAC9B,yBAAyB,CAAC,IAAI,EAAE,GAAG,GAAG,CAAA,CAAA,EAAI,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;KACJ,MAAM,IAAI,QAAQ,YAAY,MAAM,EAAE;QACrC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,EAAE;YACtD,yBAAyB,CAAC,IAAI,EAAE,GAAG,GAAG,CAAA,CAAA,EAAI,SAAS,EAAE,EAAE,KAAK,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;KACJ,MAAM;QACL,IAAI,CAAC,YAAY,CAAC,GAAG,iBAAA,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;KAC1E;AACH,CAAC;AAED,8DAA8D;AAC9D,SAAgB,0BAA0B,CACxC,IAAc,EACd,cAAsC;IAEtC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QACtD,yBAAyB,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC;AAPD,QAAA,0BAAA,GAAA,2BAOC;AAED,SAAgB,aAAa,CAC3B,IAAc,EACd,GAA2B,EAC3B,WAAqB,EACrB,KAAc,EACd,GAAY;IAEZ,MAAM,MAAM,GAAG,qBAAqB,CAAC,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IACnE,IAAI,CAAC,YAAY,CAAC,iBAAA,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACnD,CAAC;AATD,QAAA,aAAA,GAAA,cASC;AAED,SAAS,sBAAsB,CAC7B,MAAkB,EAClB,SAAmD,EACnD,YAAiB,EACjB,IAAqC,EACrC,IAAc;IAKd,IAAI,KAAK,GAAG,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IAEzC,IAAI,SAAS,GAAG,KAAK,CAAC;IAEtB,IAAI,CAAC,KAAK,EAAE;QACV,SAAS,GAAG,IAAI,CAAC;QACjB,MAAM,MAAM,GAAG,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAElD,KAAK,GAAG;YACN,MAAM;YACN,IAAI,EAAE,kBAAkB,CACtB,MAAM,EACN,SAAS,EACT,YAAY,EACZ,IAAI,EACJ,IAAI,EACJ,MAAM,CAAC,IAAI,CACZ;YACD,KAAK,EAAE,IAAI;SACZ,CAAC;QAEF,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KACrC;IAED,OAAO;QAAE,SAAS;QAAE,KAAK;IAAA,CAAE,CAAC;AAC9B,CAAC;AAED,SAAS,kBAAkB,CACzB,MAAkB,EAClB,SAAmD,EACnD,YAAiB,EACjB,IAAqC,EACrC,IAAc,EACd,UAAqB;;IAErB,MAAM,UAAU,GAAuB;QACrC,CAAC,iBAAA,cAAc,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,SAAS;QAC3C,CAAC,iBAAA,cAAc,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAC3C,CAAC,iBAAA,cAAc,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;KACxD,CAAC;IAEF,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAC3B,GAAG,OAAA,SAAS,CAAC,OAAO,CAAA,CAAA,EAAI,UAAU,CAAC,iBAAA,cAAc,CAAC,UAAU,CAAC,EAAE,EAC/D;QACE,UAAU;KACX,EACD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAC7E,CAAC;IAEF,MAAM,QAAQ,GAAG,YAAY,CAAC,UAAA,wBAAwB,CAAC,CAAC,MAAM,CAAC;IAC/D,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EACpC,SAAS,CAAC,EAAE,AAAC,SAAS,CAAC,IAAI,KAAK,OAAO,CACxC,CAAC;IAEF,IAAI,SAAS,EAAE;QACb,aAAa,CACX,IAAI,EACJ,QAAQ,CAAC,GAAG,EACZ,SAAS,EAAE,CAAC,WAAW,EACvB,CAAA,KAAA,SAAS,CAAC,GAAG,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,KAAK,EACpB,CAAA,KAAA,SAAS,CAAC,GAAG,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CACnB,CAAC;KACH;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAgB,OAAO,CAAC,IAAc,EAAE,KAAa;IACnD,IAAI,KAAK,EAAE;QACT,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;KAC7B;IACD,IAAI,CAAC,GAAG,EAAE,CAAC;AACb,CAAC;AALD,QAAA,OAAA,GAAA,QAKC;AAED,SAAgB,YAAY,CAC1B,QAAmC,EACnC,aAA6B;IAE7B,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;QACrD,OAAO,SAAS,CAAC;KAClB;IAED,IAAI,aAAa,EAAE;QACjB,OAAO,QAAQ,CAAC,WAAW,CACxB,MAAM,EACL,UAAU,CAAC,EAAE;YAAA,IAAA;YACX,OAAA,gBAAgB,CAAC,OAAO,CAAC,CAAA,KAAC,UAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAA;QAAA,CAAA,CAClE,CACA,IAAI,EAAC,UAAU,CAAC,EAAE;YAAA,IAAA,IAAA;YAAC,OAAA,aAAa,KAAA,CAAK,CAAA,KAAA,CAAA,KAAC,UAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,KAAK,CAAA,CAAA;QAAA,CAAA,CAAC,CAAC;KAC3E,MAAM;QACL,OAAO,QAAQ,CAAC,WAAW,CAAC,IAAI,EAC9B,UAAU,CAAC,EAAE;YAAA,IAAA;YACX,OAAA,gBAAgB,CAAC,OAAO,CAAC,CAAA,KAAC,UAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAA;QAAA,CAAA,CAClE,CAAC;KACH;AACH,CAAC;AArBD,QAAA,YAAA,GAAA,aAqBC;AAED,SAAS,QAAQ,CAAC,YAAiB,EAAE,IAAc,EAAE,KAAmB;IACtE,OAAO,AAAC,YAAY,CAAC,UAAA,wBAAwB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GACnE,KAAK,CAAC,CAAC;AACX,CAAC;AAED,SAAS,QAAQ,CAAC,YAAiB,EAAE,IAAc;IACjD,OAAO,YAAY,CAAC,UAAA,wBAAwB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,SAAS,cAAc,CAAC,YAAiB,EAAE,IAAc;IACvD,IAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QACxC,MAAM,KAAK,GAAG,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEvD,IAAI,KAAK,EAAE;YACT,OAAO,KAAK,CAAC;SACd;KACF;IAED,OAAO;QACL,IAAI,EAAE,YAAY,CAAC,UAAA,wBAAwB,CAAC,CAAC,IAAI;KAClD,CAAC;AACJ,CAAC;AAED,SAAS,WAAW,CAAC,UAAmB,EAAE,IAAiB;IACzD,MAAM,SAAS,GAAa,EAAE,CAAC;IAC/B,IAAI,IAAI,GAA4B,IAAI,CAAC;IACzC,MAAO,IAAI,CAAE;QACX,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAEnB,IAAI,UAAU,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACzC,GAAG,GAAG,GAAG,CAAC;SACX;QACD,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;KAClB;IACD,OAAO,SAAS,CAAC,OAAO,EAAE,CAAC;AAC7B,CAAC;AAED,SAAS,WAAW,CAAC,CAAS;IAC5B,OAAO,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC7B,CAAC;AAED,SAAS,WAAW,CAAC,CAAS;IAC5B,OAAO,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5B,CAAC;AAED,SAAS,UAAU,CAAC,IAAY,EAAE,EAAU;IAC1C,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAE;QAC3B,IAAI,IAAI,IAAI,CAAC;KACd;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,gBAAgB,GAAa;IACjC,OAAA,SAAS,CAAC,KAAK;IACf,OAAA,SAAS,CAAC,MAAM;IAChB,OAAA,SAAS,CAAC,GAAG;IACb,OAAA,SAAS,CAAC,YAAY;CACvB,CAAC;AAEF,SAAgB,qBAAqB,CACnC,GAA2B,EAC3B,WAAW,GAAG,KAAK,EACnB,UAAmB,EACnB,QAAiB;;IAEjB,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,IAAI,GAAG,KAAA,QAAH,GAAG,KAAA,KAAA,IAAA,KAAA,IAAH,GAAG,CAAE,UAAU,EAAE;QACnB,MAAM,KAAK,GAAG,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;QACtE,MAAM,GAAG,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;QAE9D,IAAI,IAAI,GAA8B,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;QAC1D,IAAI,YAAY,GAAuB,CAAC,CAAC;QACzC,MAAO,IAAI,CAAE;YACX,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE;gBACtB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACjB,YAAY,GAAG,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAA,KAAA,IAAJ,IAAI,CAAE,IAAI,CAAC;gBAC1B,SAAS;aACV;YACD,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE;gBAClB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACjB,YAAY,GAAG,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAA,KAAA,IAAJ,IAAI,CAAE,IAAI,CAAC;gBAC1B,SAAS;aACV;YACD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;YACpC,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,WAAW,IAAI,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAC5D,yCAAyC;gBACzC,KAAK,GAAG,GAAG,CAAC;aACb;YACD,IAAI,IAAI,CAAC,IAAI,KAAK,OAAA,SAAS,CAAC,MAAM,EAAE;gBAClC,KAAK,GAAG,CAAA,CAAA,EAAI,KAAK,CAAA,CAAA,CAAG,CAAC;aACtB;YACD,IAAI,IAAI,CAAC,IAAI,KAAK,OAAA,SAAS,CAAC,GAAG,EAAE;gBAC/B,KAAK,GAAG,EAAE,CAAC;aACZ;YACD,IAAI,IAAI,CAAC,IAAI,GAAG,YAAa,EAAE;gBAC7B,MAAM,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,YAAa,CAAC,CAAC;gBACjD,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;gBACzB,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aACtC,MAAM;gBACL,IAAI,IAAI,CAAC,IAAI,KAAA,CAAK,CAAA,KAAA,IAAI,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,IAAI,CAAA,EAAE;oBACjC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA,CAAA,KAAA,IAAI,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,KAAI,CAAC,CAAC,CAAC,CAAC;iBACzD;aACF;YACD,MAAM,IAAI,KAAK,GAAG,KAAK,CAAC;YACxB,IAAI,IAAI,EAAE;gBACR,IAAI,GAAG,IAAI,CAAC,IAAK,CAAC;aACnB;SACF;KACF;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAtDD,QAAA,qBAAA,GAAA,sBAsDC;AAED,SAAgB,UAAU,CACxB,IAAyD,EACzD,MAAkB,EAClB,SAAmD;IAEnD,IACE,CAAC,IAAI,IACL,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,IACpC,IAAI,CAAC,UAAA,mBAAmB,CAAC,EACzB;QACA,OAAO;KACR;IACD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;IAEhC,IAAI,CAAC,UAAA,mBAAmB,CAAC,GAAG,IAAI,CAAC;IAEjC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,EAAC,GAAG,CAAC,EAAE;QAChC,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QAED,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,KAAK,CAAC,OAAO,GAAG,iBAAiB,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SACrE;QAED,IAAI,KAAK,CAAC,IAAI,EAAE;YACd,IAAI,aAAa,GAAQ,KAAK,CAAC,IAAI,CAAC;YAEpC,MAAO,aAAa,CAAC,MAAM,CAAE;gBAC3B,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC;aACtC;YACD,UAAU,CAAC,aAAa,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;SAC9C;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AApCD,QAAA,UAAA,GAAA,WAoCC;AAED,MAAM,sBAAsB,GAAG,CAC7B,WAAqB,EACrB,GAAQ,EACR,aAAsB,EACtB,EAAE;IACF,IAAI,CAAC,aAAa,EAAE;QAClB,OAAO;KACR;IACD,WAAW,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IACjC,WAAW,CAAC,SAAS,CAAC;QACpB,IAAI,EAAE,GAAG,CAAC,cAAc,CAAC,KAAK;QAC9B,OAAO,EAAE,GAAG,CAAC,OAAO;KACrB,CAAC,CAAC;IACH,WAAW,CAAC,GAAG,EAAE,CAAC;AACpB,CAAC,CAAC;AAEF,MAAM,wBAAwB,GAAG,CAC/B,WAAqB,EACrB,aAAsB,EACtB,EAAE;IACF,IAAI,CAAC,aAAa,EAAE;QAClB,OAAO;KACR;IACD,WAAW,CAAC,GAAG,EAAE,CAAC;AACpB,CAAC,CAAC;AAEF,SAAgB,iBAAiB,CAC/B,MAAkB,EAClB,SAAuD,EACvD,aAEC,EACD,iBAAiB,GAAG,KAAK;IAEzB,IACG,oBAAoC,CAAC,UAAA,mBAAmB,CAAC,IAC1D,OAAO,aAAa,KAAK,UAAU,EACnC;QACA,OAAO,aAAc,CAAC;KACvB;IAED,SAAS,oBAAoB,CAE3B,MAAe,EACf,IAAW,EACX,YAA8C,EAC9C,IAAqC;QAErC,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO,SAAS,CAAC;SAClB;QACD,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;QAE3B,wEAAwE;QACxE,mDAAmD;QACnD,IACE,MAAM,CAAC,yBAAyB,IAChC,iBAAiB,IACjB,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,OAAO,MAAM,KAAK,UAAU,CAAC,EACtD;YACA,MAAM,QAAQ,GAAI,MAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjD,8DAA8D;YAC9D,6FAA6F;YAC7F,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;gBAClC,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;aACnE;SACF;QAED,IAAI,CAAC,YAAY,CAAC,UAAA,wBAAwB,CAAC,EAAE;YAC3C,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;SACnE;QACD,MAAM,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,CAAG,CAAD,MAAQ,IAAI,KAAK,QAAQ,CAAC,CAAC,MAAM,CAAC;QAE1E,IAAI,KAAU,CAAC;QACf,IAAI,aAAa,GAAG,KAAK,CAAC;QAC1B,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,EAAE;YAC7C,KAAK,GAAG,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;SAC5C,MAAM;YACL,MAAM,QAAQ,GAAG,sBAAsB,CACrC,MAAM,EACN,SAAS,EACT,YAAY,EACZ,IAAI,EACJ,IAAI,CACL,CAAC;YACF,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YACvB,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC;SACpC;QAED,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,CACrB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,EACnD,GAAG,EAAE;YACH,IAAI;gBACF,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,CAC5B,IAAI,EACJ,MAAM,EACN,IAAI,EACJ,YAAY,EACZ,IAAI,CACL,CAAC;gBACF,IAAI,CAAA,GAAA,QAAA,SAAS,EAAC,GAAG,CAAC,EAAE;oBAClB,OAAO,GAAG,CAAC,IAAI,CACb,CAAC,CAAM,EAAE,EAAE;wBACT,wBAAwB,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;wBACpD,OAAO,CAAC,CAAC;oBACX,CAAC,EACD,CAAC,GAAU,EAAE,EAAE;wBACb,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,aAAa,CAAC,CAAC;wBACvD,MAAM,GAAG,CAAC;oBACZ,CAAC,CACF,CAAC;iBACH,MAAM;oBACL,wBAAwB,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;oBACpD,OAAO,GAAG,CAAC;iBACZ;aACF,CAAC,OAAO,GAAQ,EAAE;gBACjB,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,aAAa,CAAC,CAAC;gBACvD,MAAM,GAAG,CAAC;aACX;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAEA,oBAAoC,CAAC,UAAA,mBAAmB,CAAC,GAAG,IAAI,CAAC;IAElE,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AArGD,QAAA,iBAAA,GAAA,kBAqGC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15445, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-graphql/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.42.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-graphql';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15472, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-graphql/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, trace } from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport type * as graphqlTypes from 'graphql';\nimport { SpanNames } from './enum';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { OTEL_GRAPHQL_DATA_SYMBOL } from './symbols';\n\nimport {\n  executeFunctionWithObj,\n  executeArgumentsArray,\n  executeType,\n  parseType,\n  validateType,\n  GraphQLInstrumentationParsedConfig,\n  OtelExecutionArgs,\n  ObjectWithGraphQLData,\n  OPERATION_NOT_SUPPORTED,\n  Maybe,\n} from './internal-types';\nimport {\n  addInputVariableAttributes,\n  addSpanSource,\n  endSpan,\n  getOperation,\n  isPromise,\n  wrapFieldResolver,\n  wrapFields,\n} from './utils';\n\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport * as api from '@opentelemetry/api';\nimport type { PromiseOrValue } from 'graphql/jsutils/PromiseOrValue';\nimport { GraphQLInstrumentationConfig } from './types';\n\nconst DEFAULT_CONFIG: GraphQLInstrumentationConfig = {\n  mergeItems: false,\n  depth: -1,\n  allowValues: false,\n  ignoreResolveSpans: false,\n};\n\nconst supportedVersions = ['>=14.0.0 <17'];\n\nexport class GraphQLInstrumentation extends InstrumentationBase {\n  constructor(config: GraphQLInstrumentationConfig = {}) {\n    super(\n      PACKAGE_NAME,\n      PACKAGE_VERSION,\n      Object.assign({}, DEFAULT_CONFIG, config)\n    );\n  }\n\n  private _getConfig(): GraphQLInstrumentationParsedConfig {\n    return this._config as GraphQLInstrumentationParsedConfig;\n  }\n\n  override setConfig(config: GraphQLInstrumentationConfig = {}) {\n    this._config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  protected init() {\n    const module = new InstrumentationNodeModuleDefinition(\n      'graphql',\n      supportedVersions\n    );\n    module.files.push(this._addPatchingExecute());\n    module.files.push(this._addPatchingParser());\n    module.files.push(this._addPatchingValidate());\n\n    return module;\n  }\n\n  private _addPatchingExecute(): InstrumentationNodeModuleFile {\n    return new InstrumentationNodeModuleFile(\n      'graphql/execution/execute.js',\n      supportedVersions,\n      // cannot make it work with appropriate type as execute function has 2\n      //types and/cannot import function but only types\n      (moduleExports: any) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'execute');\n        }\n        this._wrap(\n          moduleExports,\n          'execute',\n          this._patchExecute(moduleExports.defaultFieldResolver)\n        );\n        return moduleExports;\n      },\n      moduleExports => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'execute');\n        }\n      }\n    );\n  }\n\n  private _addPatchingParser(): InstrumentationNodeModuleFile {\n    return new InstrumentationNodeModuleFile(\n      'graphql/language/parser.js',\n      supportedVersions,\n      (moduleExports: typeof graphqlTypes) => {\n        if (isWrapped(moduleExports.parse)) {\n          this._unwrap(moduleExports, 'parse');\n        }\n        this._wrap(moduleExports, 'parse', this._patchParse());\n        return moduleExports;\n      },\n      (moduleExports: typeof graphqlTypes) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'parse');\n        }\n      }\n    );\n  }\n\n  private _addPatchingValidate(): InstrumentationNodeModuleFile {\n    return new InstrumentationNodeModuleFile(\n      'graphql/validation/validate.js',\n      supportedVersions,\n      moduleExports => {\n        if (isWrapped(moduleExports.validate)) {\n          this._unwrap(moduleExports, 'validate');\n        }\n        this._wrap(moduleExports, 'validate', this._patchValidate());\n        return moduleExports;\n      },\n      moduleExports => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'validate');\n        }\n      }\n    );\n  }\n\n  private _patchExecute(\n    defaultFieldResolved: graphqlTypes.GraphQLFieldResolver<any, any>\n  ): (original: executeType) => executeType {\n    const instrumentation = this;\n    return function execute(original) {\n      return function patchExecute(\n        this: executeType\n      ): PromiseOrValue<graphqlTypes.ExecutionResult> {\n        let processedArgs: OtelExecutionArgs;\n\n        // case when apollo server is used for example\n        if (arguments.length >= 2) {\n          const args = arguments as unknown as executeArgumentsArray;\n          processedArgs = instrumentation._wrapExecuteArgs(\n            args[0],\n            args[1],\n            args[2],\n            args[3],\n            args[4],\n            args[5],\n            args[6],\n            args[7],\n            defaultFieldResolved\n          );\n        } else {\n          const args = arguments[0] as graphqlTypes.ExecutionArgs;\n          processedArgs = instrumentation._wrapExecuteArgs(\n            args.schema,\n            args.document,\n            args.rootValue,\n            args.contextValue,\n            args.variableValues,\n            args.operationName,\n            args.fieldResolver,\n            args.typeResolver,\n            defaultFieldResolved\n          );\n        }\n\n        const operation = getOperation(\n          processedArgs.document,\n          processedArgs.operationName\n        );\n\n        const span = instrumentation._createExecuteSpan(\n          operation,\n          processedArgs\n        );\n\n        processedArgs.contextValue[OTEL_GRAPHQL_DATA_SYMBOL] = {\n          source: processedArgs.document\n            ? processedArgs.document ||\n              (processedArgs.document as ObjectWithGraphQLData)[\n                OTEL_GRAPHQL_DATA_SYMBOL\n              ]\n            : undefined,\n          span,\n          fields: {},\n        };\n\n        return context.with(trace.setSpan(context.active(), span), () => {\n          return safeExecuteInTheMiddle<\n            PromiseOrValue<graphqlTypes.ExecutionResult>\n          >(\n            () => {\n              return (original as executeFunctionWithObj).apply(this, [\n                processedArgs,\n              ]);\n            },\n            (err, result) => {\n              instrumentation._handleExecutionResult(span, err, result);\n            }\n          );\n        });\n      };\n    };\n  }\n\n  private _handleExecutionResult(\n    span: api.Span,\n    err?: Error,\n    result?: PromiseOrValue<graphqlTypes.ExecutionResult>\n  ) {\n    const config = this._getConfig();\n    if (result === undefined || err) {\n      endSpan(span, err);\n      return;\n    }\n\n    if (isPromise(result)) {\n      (result as Promise<graphqlTypes.ExecutionResult>).then(\n        resultData => {\n          if (typeof config.responseHook !== 'function') {\n            endSpan(span);\n            return;\n          }\n          this._executeResponseHook(span, resultData);\n        },\n        error => {\n          endSpan(span, error);\n        }\n      );\n    } else {\n      if (typeof config.responseHook !== 'function') {\n        endSpan(span);\n        return;\n      }\n      this._executeResponseHook(span, result as graphqlTypes.ExecutionResult);\n    }\n  }\n\n  private _executeResponseHook(\n    span: api.Span,\n    result: graphqlTypes.ExecutionResult\n  ) {\n    const config = this._getConfig();\n    safeExecuteInTheMiddle(\n      () => {\n        config.responseHook(span, result);\n      },\n      err => {\n        if (err) {\n          this._diag.error('Error running response hook', err);\n        }\n\n        endSpan(span, undefined);\n      },\n      true\n    );\n  }\n\n  private _patchParse(): (original: parseType) => parseType {\n    const instrumentation = this;\n    return function parse(original) {\n      return function patchParse(\n        this: parseType,\n        source: string | graphqlTypes.Source,\n        options?: graphqlTypes.ParseOptions\n      ): graphqlTypes.DocumentNode {\n        return instrumentation._parse(this, original, source, options);\n      };\n    };\n  }\n\n  private _patchValidate(): (original: validateType) => validateType {\n    const instrumentation = this;\n    return function validate(original: validateType) {\n      return function patchValidate(\n        this: validateType,\n        schema: graphqlTypes.GraphQLSchema,\n        documentAST: graphqlTypes.DocumentNode,\n        rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n        options?: { maxErrors?: number },\n        typeInfo?: graphqlTypes.TypeInfo\n      ): ReadonlyArray<graphqlTypes.GraphQLError> {\n        return instrumentation._validate(\n          this,\n          original,\n          schema,\n          documentAST,\n          rules,\n          typeInfo,\n          options\n        );\n      };\n    };\n  }\n\n  private _parse(\n    obj: parseType,\n    original: parseType,\n    source: string | graphqlTypes.Source,\n    options?: graphqlTypes.ParseOptions\n  ): graphqlTypes.DocumentNode {\n    const config = this._getConfig();\n    const span = this.tracer.startSpan(SpanNames.PARSE);\n\n    return context.with(trace.setSpan(context.active(), span), () => {\n      return safeExecuteInTheMiddle<\n        graphqlTypes.DocumentNode & ObjectWithGraphQLData\n      >(\n        () => {\n          return original.call(obj, source, options);\n        },\n        (err, result) => {\n          if (result) {\n            const operation = getOperation(result);\n            if (!operation) {\n              span.updateName(SpanNames.SCHEMA_PARSE);\n            } else if (result.loc) {\n              addSpanSource(span, result.loc, config.allowValues);\n            }\n          }\n          endSpan(span, err);\n        }\n      );\n    });\n  }\n\n  private _validate(\n    obj: validateType,\n    original: validateType,\n    schema: graphqlTypes.GraphQLSchema,\n    documentAST: graphqlTypes.DocumentNode,\n    rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n    typeInfo?: graphqlTypes.TypeInfo,\n    options?: { maxErrors?: number }\n  ): ReadonlyArray<graphqlTypes.GraphQLError> {\n    const span = this.tracer.startSpan(SpanNames.VALIDATE, {});\n\n    return context.with(trace.setSpan(context.active(), span), () => {\n      return safeExecuteInTheMiddle<ReadonlyArray<graphqlTypes.GraphQLError>>(\n        () => {\n          return original.call(\n            obj,\n            schema,\n            documentAST,\n            rules,\n            options,\n            typeInfo\n          );\n        },\n        (err, errors) => {\n          if (!documentAST.loc) {\n            span.updateName(SpanNames.SCHEMA_VALIDATE);\n          }\n          if (errors && errors.length) {\n            span.recordException({\n              name: AttributeNames.ERROR_VALIDATION_NAME,\n              message: JSON.stringify(errors),\n            });\n          }\n          endSpan(span, err);\n        }\n      );\n    });\n  }\n\n  private _createExecuteSpan(\n    operation: graphqlTypes.DefinitionNode | undefined,\n    processedArgs: graphqlTypes.ExecutionArgs\n  ): api.Span {\n    const config = this._getConfig();\n\n    const span = this.tracer.startSpan(SpanNames.EXECUTE, {});\n    if (operation) {\n      const { operation: operationType, name: nameNode } =\n        operation as graphqlTypes.OperationDefinitionNode;\n\n      span.setAttribute(AttributeNames.OPERATION_TYPE, operationType);\n\n      const operationName = nameNode?.value;\n\n      // https://opentelemetry.io/docs/reference/specification/trace/semantic_conventions/instrumentation/graphql/\n      // > The span name MUST be of the format <graphql.operation.type> <graphql.operation.name> provided that graphql.operation.type and graphql.operation.name are available.\n      // > If graphql.operation.name is not available, the span SHOULD be named <graphql.operation.type>.\n      if (operationName) {\n        span.setAttribute(AttributeNames.OPERATION_NAME, operationName);\n        span.updateName(`${operationType} ${operationName}`);\n      } else {\n        span.updateName(operationType);\n      }\n    } else {\n      let operationName = ' ';\n      if (processedArgs.operationName) {\n        operationName = ` \"${processedArgs.operationName}\" `;\n      }\n      operationName = OPERATION_NOT_SUPPORTED.replace(\n        '$operationName$',\n        operationName\n      );\n      span.setAttribute(AttributeNames.OPERATION_NAME, operationName);\n    }\n\n    if (processedArgs.document?.loc) {\n      addSpanSource(span, processedArgs.document.loc, config.allowValues);\n    }\n\n    if (processedArgs.variableValues && config.allowValues) {\n      addInputVariableAttributes(span, processedArgs.variableValues);\n    }\n\n    return span;\n  }\n\n  private _wrapExecuteArgs(\n    schema: graphqlTypes.GraphQLSchema,\n    document: graphqlTypes.DocumentNode,\n    rootValue: any,\n    contextValue: any,\n    variableValues: Maybe<{ [key: string]: any }>,\n    operationName: Maybe<string>,\n    fieldResolver: Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n    typeResolver: Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n    defaultFieldResolved: graphqlTypes.GraphQLFieldResolver<any, any>\n  ): OtelExecutionArgs {\n    if (!contextValue) {\n      contextValue = {};\n    }\n\n    if (\n      contextValue[OTEL_GRAPHQL_DATA_SYMBOL] ||\n      this._getConfig().ignoreResolveSpans\n    ) {\n      return {\n        schema,\n        document,\n        rootValue,\n        contextValue,\n        variableValues,\n        operationName,\n        fieldResolver,\n        typeResolver,\n      };\n    }\n\n    const isUsingDefaultResolver = fieldResolver == null;\n    // follows graphql implementation here:\n    // https://github.com/graphql/graphql-js/blob/0b7daed9811731362c71900e12e5ea0d1ecc7f1f/src/execution/execute.ts#L494\n    const fieldResolverForExecute = fieldResolver ?? defaultFieldResolved;\n    fieldResolver = wrapFieldResolver(\n      this.tracer,\n      this._getConfig.bind(this),\n      fieldResolverForExecute,\n      isUsingDefaultResolver\n    );\n\n    if (schema) {\n      wrapFields(\n        schema.getQueryType(),\n        this.tracer,\n        this._getConfig.bind(this)\n      );\n      wrapFields(\n        schema.getMutationType(),\n        this.tracer,\n        this._getConfig.bind(this)\n      );\n    }\n\n    return {\n      schema,\n      document,\n      rootValue,\n      contextValue,\n      variableValues,\n      operationName,\n      fieldResolver,\n      typeResolver,\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15763, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-graphql/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport type * as api from '@opentelemetry/api';\n\nexport interface GraphQLInstrumentationExecutionResponseHook {\n  (span: api.Span, data: any): void;\n}\n\nexport interface GraphQLInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * When set to true it will not remove attributes values from schema source.\n   * By default all values that can be sensitive are removed and replaced\n   * with \"*\"\n   *\n   * @default false\n   */\n  allowValues?: boolean;\n\n  /**\n   * The maximum depth of fields/resolvers to instrument.\n   * When set to 0 it will not instrument fields and resolvers\n   *\n   * @default undefined\n   */\n  depth?: number;\n\n  /**\n   * Do not create spans for resolvers.\n   *\n   * @default false\n   */\n  ignoreResolveSpans?: boolean;\n\n  /**\n   * Don't create spans for the execution of the default resolver on object properties.\n   *\n   * When a resolver function is not defined on the schema for a field, graphql will\n   * use the default resolver which just looks for a property with that name on the object.\n   * If the property is not a function, it's not very interesting to trace.\n   * This option can reduce noise and number of spans created.\n   *\n   * @default false\n   */\n  ignoreTrivialResolveSpans?: boolean;\n\n  /**\n   * Whether to merge list items into a single element.\n   *\n   * @example `users.*.name` instead of `users.0.name`, `users.1.name`\n   *\n   * @default false\n   */\n  mergeItems?: boolean;\n\n  /**\n   * Hook that allows adding custom span attributes based on the data\n   * returned from \"execute\" GraphQL action.\n   *\n   * @param data - A GraphQL `ExecutionResult` object. For the exact type definitions, see the following:\n   *  - {@linkcode https://github.com/graphql/graphql-js/blob/v14.7.0/src/execution/execute.js#L115 graphql@14}\n   *  - {@linkcode https://github.com/graphql/graphql-js/blob/15.x.x/src/execution/execute.d.ts#L31 graphql@15}\n   *  - {@linkcode https://github.com/graphql/graphql-js/blob/16.x.x/src/execution/execute.ts#L127 graphql@16}\n   *\n   * @default undefined\n   */\n  responseHook?: GraphQLInstrumentationExecutionResponseHook;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15786, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-graphql/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,6JAAA,SAAkC;AAClC,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15826, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-grpc/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanStatusCode } from '@opentelemetry/api';\nimport type { SpanStatus, Span } from '@opentelemetry/api';\nimport type { status as GrpcStatus, Metadata } from '@grpc/grpc-js';\nimport type { IgnoreMatcher } from './types';\n\n// e.g., \"dns:otel-productcatalogservice:8080\" or \"otel-productcatalogservice:8080\" or \"127.0.0.1:8080\"\nexport const URI_REGEX =\n  /(?:([A-Za-z0-9+.-]+):(?:\\/\\/)?)?(?<name>[A-Za-z0-9+.-]+):(?<port>[0-9+.-]+)$/;\n\n// Equivalent to lodash _.findIndex\nexport const findIndex: <T>(args: T[], fn: (arg: T) => boolean) => number = (\n  args,\n  fn\n) => {\n  let index = -1;\n  for (const arg of args) {\n    index++;\n    if (fn(arg)) {\n      return index;\n    }\n  }\n  return -1;\n};\n\n/**\n * Convert a grpc status code to an opentelemetry SpanStatus code.\n * @param status\n */\nexport const _grpcStatusCodeToOpenTelemetryStatusCode = (\n  status?: GrpcStatus\n): SpanStatusCode => {\n  if (status !== undefined && status === 0) {\n    return SpanStatusCode.UNSET;\n  }\n  return SpanStatusCode.ERROR;\n};\n\nexport const _grpcStatusCodeToSpanStatus = (status: number): SpanStatus => {\n  return { code: _grpcStatusCodeToOpenTelemetryStatusCode(status) };\n};\n\n/**\n * Returns true if methodName matches pattern\n * @param methodName the name of the method\n * @param pattern Match pattern\n */\nconst _satisfiesPattern = (\n  methodName: string,\n  pattern: IgnoreMatcher\n): boolean => {\n  if (typeof pattern === 'string') {\n    return pattern.toLowerCase() === methodName.toLowerCase();\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(methodName);\n  } else if (typeof pattern === 'function') {\n    return pattern(methodName);\n  } else {\n    return false;\n  }\n};\n\n/**\n * Returns true if the current plugin configuration\n * ignores the given method.\n * @param methodName the name of the method\n * @param ignoredMethods a list of matching patterns\n * @param onException an error handler for matching exceptions\n */\nexport const _methodIsIgnored = (\n  methodName: string,\n  ignoredMethods?: IgnoreMatcher[]\n): boolean => {\n  if (!ignoredMethods) {\n    // No ignored gRPC methods\n    return false;\n  }\n\n  for (const pattern of ignoredMethods) {\n    if (_satisfiesPattern(methodName, pattern)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Return method and service values getting from grpc name/path\n * @param name the grpc name/path\n */\nexport const _extractMethodAndService = (\n  name: string\n): { service: string; method: string } => {\n  const serviceMethod = name.replace(/^\\//, '').split('/');\n  const service = serviceMethod.shift() || '';\n  const method = serviceMethod.join('/');\n\n  return {\n    service,\n    method,\n  };\n};\n\nexport function metadataCapture(\n  type: 'request' | 'response',\n  metadataToAdd: string[]\n) {\n  const normalizedMetadataAttributes = new Map(\n    metadataToAdd.map(value => [\n      value.toLowerCase(),\n      value.toLowerCase().replace(/-/g, '_'),\n    ])\n  );\n\n  return (span: Span, metadata: Metadata) => {\n    for (const [\n      capturedMetadata,\n      normalizedMetadata,\n    ] of normalizedMetadataAttributes) {\n      const metadataValues = metadata\n        .get(capturedMetadata)\n        .flatMap(value => (typeof value === 'string' ? value.toString() : []));\n\n      if (metadataValues === undefined || metadataValues.length === 0) {\n        continue;\n      }\n\n      const key = `rpc.${type}.metadata.${normalizedMetadata}`;\n\n      span.setAttribute(key, metadataValues);\n    }\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15945, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-grpc/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\n\ninterface AttributesType {\n  GRPC_ERROR_NAME: string;\n  GRPC_ERROR_MESSAGE: string;\n}\n\nexport const AttributeNames: Readonly<AttributesType> = {\n  GRPC_ERROR_NAME: 'grpc.error_name',\n  GRPC_ERROR_MESSAGE: 'grpc.error_message',\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAWU,QAAA,cAAc,GAA6B;IACtD,eAAe,EAAE,iBAAiB;IAClC,kBAAkB,EAAE,oBAAoB;CACzC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15973, "column": 0}, "map": {"version":3,"file":"status-code.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-grpc/src/status-code.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const GRPC_STATUS_CODE_OK = 0;\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACU,QAAA,mBAAmB,GAAG,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15998, "column": 0}, "map": {"version":3,"file":"serverUtils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-grpc/src/serverUtils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Symbol to include on grpc call if it has already emitted an error event.\n * grpc events that emit 'error' will also emit 'finish' and so only the\n * error event should be processed.\n */\n\nimport type {\n  ClientReadableStream,\n  handleBidiStreamingCall,\n  handleServerStreamingCall,\n  handleUnaryCall,\n  ServiceError,\n} from '@grpc/grpc-js';\nimport type { Span } from '@opentelemetry/api';\n\nimport type {\n  ServerCallWithMeta,\n  SendUnaryDataCallback,\n  GrpcEmitter,\n  HandleCall,\n} from './internal-types';\nimport type { IgnoreMatcher } from './types';\n\nimport { context, SpanStatusCode } from '@opentelemetry/api';\nimport { SEMATTRS_RPC_GRPC_STATUS_CODE } from '@opentelemetry/semantic-conventions';\n\nimport {\n  _grpcStatusCodeToOpenTelemetryStatusCode,\n  _methodIsIgnored,\n} from './utils';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { GRPC_STATUS_CODE_OK } from './status-code';\n\nexport const CALL_SPAN_ENDED = Symbol('opentelemetry call span ended');\n\n/**\n * Handle patching for serverStream and Bidi type server handlers\n */\nfunction serverStreamAndBidiHandler<RequestType, ResponseType>(\n  span: Span,\n  call: GrpcEmitter,\n  original:\n    | handleBidiStreamingCall<RequestType, ResponseType>\n    | handleServerStreamingCall<RequestType, ResponseType>\n): void {\n  let spanEnded = false;\n  const endSpan = () => {\n    if (!spanEnded) {\n      spanEnded = true;\n      span.end();\n    }\n  };\n\n  context.bind(context.active(), call);\n  call.on('finish', () => {\n    // @grpc/js does not expose a way to check if this call also emitted an error,\n    // e.g. call.status.code !== 0\n    if (call[CALL_SPAN_ENDED]) {\n      return;\n    }\n\n    // Set the \"grpc call had an error\" flag\n    call[CALL_SPAN_ENDED] = true;\n\n    span.setStatus({\n      code: SpanStatusCode.UNSET,\n    });\n    span.setAttribute(SEMATTRS_RPC_GRPC_STATUS_CODE, GRPC_STATUS_CODE_OK);\n\n    endSpan();\n  });\n\n  call.on('error', (err: ServiceError) => {\n    if (call[CALL_SPAN_ENDED]) {\n      return;\n    }\n\n    // Set the \"grpc call had an error\" flag\n    call[CALL_SPAN_ENDED] = true;\n\n    span.setStatus({\n      code: _grpcStatusCodeToOpenTelemetryStatusCode(err.code),\n      message: err.message,\n    });\n    span.setAttributes({\n      [AttributeNames.GRPC_ERROR_NAME]: err.name,\n      [AttributeNames.GRPC_ERROR_MESSAGE]: err.message,\n      [SEMATTRS_RPC_GRPC_STATUS_CODE]: err.code,\n    });\n    endSpan();\n  });\n\n  // Types of parameters 'call' and 'call' are incompatible.\n  return (original as Function).call({}, call);\n}\n\n/**\n * Handle patching for clientStream and unary type server handlers\n */\nfunction clientStreamAndUnaryHandler<RequestType, ResponseType>(\n  span: Span,\n  call: ServerCallWithMeta<RequestType, ResponseType>,\n  callback: SendUnaryDataCallback<ResponseType>,\n  original:\n    | handleUnaryCall<RequestType, ResponseType>\n    | ClientReadableStream<RequestType>\n): void {\n  const patchedCallback: SendUnaryDataCallback<ResponseType> = (\n    err: ServiceError | null,\n    value?: ResponseType\n  ) => {\n    if (err) {\n      if (err.code) {\n        span.setStatus({\n          code: _grpcStatusCodeToOpenTelemetryStatusCode(err.code),\n          message: err.message,\n        });\n        span.setAttribute(SEMATTRS_RPC_GRPC_STATUS_CODE, err.code);\n      }\n      span.setAttributes({\n        [AttributeNames.GRPC_ERROR_NAME]: err.name,\n        [AttributeNames.GRPC_ERROR_MESSAGE]: err.message,\n      });\n    } else {\n      span.setStatus({ code: SpanStatusCode.UNSET });\n      span.setAttribute(SEMATTRS_RPC_GRPC_STATUS_CODE, GRPC_STATUS_CODE_OK);\n    }\n\n    span.end();\n    return callback(err, value);\n  };\n\n  context.bind(context.active(), call);\n  return (original as Function).call({}, call, patchedCallback);\n}\n\n/**\n * Patch callback or EventEmitter provided by `originalFunc` and set appropriate `span`\n * properties based on its result.\n */\nexport function handleServerFunction<RequestType, ResponseType>(\n  span: Span,\n  type: string,\n  originalFunc: HandleCall<RequestType, ResponseType>,\n  call: ServerCallWithMeta<RequestType, ResponseType>,\n  callback: SendUnaryDataCallback<unknown>\n): void {\n  switch (type) {\n    case 'unary':\n    case 'clientStream':\n    case 'client_stream':\n      return clientStreamAndUnaryHandler(\n        span,\n        call,\n        callback,\n        originalFunc as\n          | handleUnaryCall<RequestType, ResponseType>\n          | ClientReadableStream<RequestType>\n      );\n    case 'serverStream':\n    case 'server_stream':\n    case 'bidi':\n      return serverStreamAndBidiHandler(\n        span,\n        call,\n        originalFunc as\n          | handleBidiStreamingCall<RequestType, ResponseType>\n          | handleServerStreamingCall<RequestType, ResponseType>\n      );\n    default:\n      break;\n  }\n}\n\n/**\n * Does not patch any callbacks or EventEmitters to omit tracing on requests\n * that should not be traced.\n */\nexport function handleUntracedServerFunction<RequestType, ResponseType>(\n  type: string,\n  originalFunc: HandleCall<RequestType, ResponseType>,\n  call: ServerCallWithMeta<RequestType, ResponseType>,\n  callback: SendUnaryDataCallback<unknown>\n): void {\n  switch (type) {\n    case 'unary':\n    case 'clientStream':\n    case 'client_stream':\n      return (originalFunc as Function).call({}, call, callback);\n    case 'serverStream':\n    case 'server_stream':\n    case 'bidi':\n      return (originalFunc as Function).call({}, call);\n    default:\n      break;\n  }\n}\n\n/**\n * Returns true if the server call should not be traced.\n */\nexport function shouldNotTraceServerCall(\n  methodName: string,\n  ignoreGrpcMethods?: IgnoreMatcher[]\n): boolean {\n  const parsedName = methodName.split('/');\n  return _methodIsIgnored(\n    parsedName[parsedName.length - 1] || methodName,\n    ignoreGrpcMethods\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16144, "column": 0}, "map": {"version":3,"file":"clientUtils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-grpc/src/clientUtils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { EventEmitter } from 'events';\nimport type { Span, SpanStatus } from '@opentelemetry/api';\nimport type { Client, Metadata, ServiceError } from '@grpc/grpc-js';\nimport type * as grpcJs from '@grpc/grpc-js';\nimport type { GrpcInstrumentation } from './';\nimport type {\n  GrpcClientFunc,\n  SendUnaryDataCallback,\n  metadataCaptureType,\n} from './internal-types';\n\nimport { propagation, context } from '@opentelemetry/api';\nimport { SEMATTRS_RPC_GRPC_STATUS_CODE } from '@opentelemetry/semantic-conventions';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { GRPC_STATUS_CODE_OK } from './status-code';\nimport {\n  _grpcStatusCodeToSpanStatus,\n  _grpcStatusCodeToOpenTelemetryStatusCode,\n  _methodIsIgnored,\n} from './utils';\nimport { errorMonitor } from 'events';\n\n/**\n * Parse a package method list and return a list of methods to patch\n * with both possible casings e.g. \"TestMethod\" & \"testMethod\"\n */\nexport function getMethodsToWrap(\n  this: GrpcInstrumentation,\n  client: typeof Client,\n  methods: { [key: string]: { originalName?: string } }\n): string[] {\n  const methodList: string[] = [];\n\n  // For a method defined in .proto as \"UnaryMethod\"\n  Object.entries(methods).forEach(([name, { originalName }]) => {\n    if (!_methodIsIgnored(name, this.getConfig().ignoreGrpcMethods)) {\n      methodList.push(name); // adds camel case method name: \"unaryMethod\"\n      if (\n        originalName &&\n        // eslint-disable-next-line no-prototype-builtins\n        client.prototype.hasOwnProperty(originalName) &&\n        name !== originalName // do not add duplicates\n      ) {\n        // adds original method name: \"UnaryMethod\",\n        methodList.push(originalName);\n      }\n    }\n  });\n\n  return methodList;\n}\n\n/**\n * Patches a callback so that the current span for this trace is also ended\n * when the callback is invoked.\n */\nexport function patchedCallback(\n  span: Span,\n  callback: SendUnaryDataCallback<ResponseType>\n) {\n  const wrappedFn: SendUnaryDataCallback<ResponseType> = (\n    err: grpcJs.ServiceError | null,\n    res?: ResponseType\n  ) => {\n    if (err) {\n      if (err.code) {\n        span.setStatus(_grpcStatusCodeToSpanStatus(err.code));\n        span.setAttribute(SEMATTRS_RPC_GRPC_STATUS_CODE, err.code);\n      }\n      span.setAttributes({\n        [AttributeNames.GRPC_ERROR_NAME]: err.name,\n        [AttributeNames.GRPC_ERROR_MESSAGE]: err.message,\n      });\n    } else {\n      span.setAttribute(SEMATTRS_RPC_GRPC_STATUS_CODE, GRPC_STATUS_CODE_OK);\n    }\n\n    span.end();\n    callback(err, res);\n  };\n  return context.bind(context.active(), wrappedFn);\n}\n\nexport function patchResponseMetadataEvent(\n  span: Span,\n  call: EventEmitter,\n  metadataCapture: metadataCaptureType\n) {\n  call.on('metadata', (responseMetadata: any) => {\n    metadataCapture.client.captureResponseMetadata(span, responseMetadata);\n  });\n}\n\nexport function patchResponseStreamEvents(span: Span, call: EventEmitter) {\n  // Both error and status events can be emitted\n  // the first one emitted set spanEnded to true\n  let spanEnded = false;\n  const endSpan = () => {\n    if (!spanEnded) {\n      span.end();\n      spanEnded = true;\n    }\n  };\n  context.bind(context.active(), call);\n  call.on(errorMonitor, (err: ServiceError) => {\n    if (spanEnded) {\n      return;\n    }\n\n    span.setStatus({\n      code: _grpcStatusCodeToOpenTelemetryStatusCode(err.code),\n      message: err.message,\n    });\n    span.setAttributes({\n      [AttributeNames.GRPC_ERROR_NAME]: err.name,\n      [AttributeNames.GRPC_ERROR_MESSAGE]: err.message,\n      [SEMATTRS_RPC_GRPC_STATUS_CODE]: err.code,\n    });\n\n    endSpan();\n  });\n\n  call.on('status', (status: SpanStatus) => {\n    if (spanEnded) {\n      return;\n    }\n\n    span.setStatus(_grpcStatusCodeToSpanStatus(status.code));\n    span.setAttribute(SEMATTRS_RPC_GRPC_STATUS_CODE, status.code);\n\n    endSpan();\n  });\n}\n\n/**\n * Execute grpc client call. Apply completion span properties and end the\n * span on callback or receiving an emitted event.\n */\nexport function makeGrpcClientRemoteCall(\n  metadataCapture: metadataCaptureType,\n  original: GrpcClientFunc,\n  args: unknown[],\n  metadata: grpcJs.Metadata,\n  self: grpcJs.Client\n): (span: Span) => EventEmitter {\n  return (span: Span) => {\n    // if unary or clientStream\n    if (!original.responseStream) {\n      const callbackFuncIndex = args.findIndex(arg => {\n        return typeof arg === 'function';\n      });\n      if (callbackFuncIndex !== -1) {\n        args[callbackFuncIndex] = patchedCallback(\n          span,\n          args[callbackFuncIndex] as SendUnaryDataCallback<ResponseType>\n        );\n      }\n    }\n\n    setSpanContext(metadata);\n    const call = original.apply(self, args);\n\n    call.on('metadata', responseMetadata => {\n      metadataCapture.client.captureResponseMetadata(span, responseMetadata);\n    });\n\n    // if server stream or bidi\n    if (original.responseStream) {\n      patchResponseStreamEvents(span, call);\n    }\n    return call;\n  };\n}\n\nexport function getMetadataIndex(args: Array<unknown | Metadata>): number {\n  // This finds an instance of Metadata among the arguments.\n  // A possible issue that could occur is if the 'options' parameter from\n  // the user contains an '_internal_repr' as well as a 'getMap' function,\n  // but this is an extremely rare case.\n  return args.findIndex((arg: unknown | Metadata) => {\n    return (\n      arg &&\n      typeof arg === 'object' &&\n      (arg as Metadata)['internalRepr'] && // changed from _internal_repr in grpc --> @grpc/grpc-js https://github.com/grpc/grpc-node/blob/95289edcaf36979cccf12797cc27335da8d01f03/packages/grpc-js/src/metadata.ts#L88\n      typeof (arg as Metadata).getMap === 'function'\n    );\n  });\n}\n\n/**\n * Returns the metadata argument from user provided arguments (`args`)\n * If no metadata is provided in `args`: adds empty metadata to `args` and returns that empty metadata\n */\nexport function extractMetadataOrSplice(\n  grpcLib: typeof grpcJs,\n  args: Array<unknown | grpcJs.Metadata>,\n  spliceIndex: number\n) {\n  let metadata: grpcJs.Metadata;\n  const metadataIndex = getMetadataIndex(args);\n  if (metadataIndex === -1) {\n    // Create metadata if it does not exist\n    metadata = new grpcLib.Metadata();\n    args.splice(spliceIndex, 0, metadata);\n  } else {\n    metadata = args[metadataIndex] as Metadata;\n  }\n  return metadata;\n}\n\n/**\n * Returns the metadata argument from user provided arguments (`args`)\n * Adds empty metadata to arguments if the default is used.\n */\nexport function extractMetadataOrSpliceDefault(\n  grpcClient: typeof grpcJs,\n  original: GrpcClientFunc,\n  args: Array<unknown | grpcJs.Metadata>\n): grpcJs.Metadata {\n  return extractMetadataOrSplice(\n    grpcClient,\n    args,\n    original.requestStream ? 0 : 1\n  );\n}\n\n/**\n * Inject opentelemetry trace context into `metadata` for use by another\n * grpc receiver\n * @param metadata\n */\nexport function setSpanContext(metadata: Metadata): void {\n  propagation.inject(context.active(), metadata, {\n    set: (meta, k, v) => meta.set(k, v),\n  });\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16330, "column": 0}, "map": {"version":3,"file":"AttributeValues.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-grpc/src/enums/AttributeValues.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface AttributeValuesType {\n  RPC_SYSTEM: string;\n}\n\nexport const AttributeValues: Readonly<AttributeValuesType> = {\n  RPC_SYSTEM: 'grpc',\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAMU,QAAA,eAAe,GAAkC;IAC5D,UAAU,EAAE,MAAM;CACnB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16357, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-grpc/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.52.1';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,OAAO,GAAG,QAAQ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16383, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-grpc/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { EventEmitter } from 'events';\n\nimport type {\n  Server,\n  serialize as Serialize,\n  deserialize as Deserialize,\n  Metadata,\n  Client,\n  ServiceDefinition,\n  loadPackageDefinition,\n  GrpcObject,\n} from '@grpc/grpc-js';\n\nimport type * as grpcJs from '@grpc/grpc-js';\n\nimport type {\n  ServerCallWithMeta,\n  SendUnaryDataCallback,\n  ServerRegisterFunction,\n  HandleCall,\n  MakeClientConstructorFunction,\n  PackageDefinition,\n  GrpcClientFunc,\n  ClientRequestFunction,\n  metadataCaptureType,\n} from './internal-types';\nimport type { GrpcInstrumentationConfig } from './types';\n\nimport {\n  context,\n  propagation,\n  ROOT_CONTEXT,\n  SpanOptions,\n  SpanKind,\n  trace,\n  Span,\n} from '@opentelemetry/api';\nimport {\n  InstrumentationNodeModuleDefinition,\n  InstrumentationBase,\n} from '@opentelemetry/instrumentation';\nimport {\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n  SEMATTRS_RPC_METHOD,\n  SEMATTRS_RPC_SERVICE,\n  SEMATTRS_RPC_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\n\nimport {\n  shouldNotTraceServerCall,\n  handleServerFunction,\n  handleUntracedServerFunction,\n} from './serverUtils';\nimport {\n  getMethodsToWrap,\n  makeGrpcClientRemoteCall,\n  extractMetadataOrSpliceDefault,\n  setSpanContext,\n  patchedCallback,\n  patchResponseStreamEvents,\n  patchResponseMetadataEvent,\n  extractMetadataOrSplice,\n} from './clientUtils';\nimport {\n  _extractMethodAndService,\n  metadataCapture,\n  URI_REGEX,\n  _methodIsIgnored,\n} from './utils';\nimport { AttributeValues } from './enums/AttributeValues';\nimport { VERSION } from './version';\n\nexport class GrpcInstrumentation extends InstrumentationBase<GrpcInstrumentationConfig> {\n  private _metadataCapture: metadataCaptureType;\n\n  constructor(config: GrpcInstrumentationConfig = {}) {\n    super('@opentelemetry/instrumentation-grpc', VERSION, config);\n    this._metadataCapture = this._createMetadataCapture();\n  }\n\n  init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        '@grpc/grpc-js',\n        ['^1.0.0'],\n        moduleExports => {\n          // Patch Server methods\n          this._wrap(\n            moduleExports.Server.prototype,\n            'register',\n            this._patchServer()\n          );\n          // Patch Client methods\n          this._wrap(\n            moduleExports,\n            'makeGenericClientConstructor',\n            this._patchClient(moduleExports)\n          );\n          this._wrap(\n            moduleExports,\n            'makeClientConstructor',\n            this._patchClient(moduleExports)\n          );\n          this._wrap(\n            moduleExports,\n            'loadPackageDefinition',\n            this._patchLoadPackageDefinition(moduleExports)\n          );\n          this._wrap(\n            moduleExports.Client.prototype,\n            'makeUnaryRequest',\n            this._patchClientRequestMethod(moduleExports, false) as any\n          );\n          this._wrap(\n            moduleExports.Client.prototype,\n            'makeClientStreamRequest',\n            this._patchClientRequestMethod(moduleExports, false) as any\n          );\n          this._wrap(\n            moduleExports.Client.prototype,\n            'makeServerStreamRequest',\n            this._patchClientRequestMethod(moduleExports, true) as any\n          );\n          this._wrap(\n            moduleExports.Client.prototype,\n            'makeBidiStreamRequest',\n            this._patchClientRequestMethod(moduleExports, true) as any\n          );\n          return moduleExports;\n        },\n        moduleExports => {\n          if (moduleExports === undefined) return;\n\n          this._unwrap(moduleExports.Server.prototype, 'register');\n          this._unwrap(moduleExports, 'makeClientConstructor');\n          this._unwrap(moduleExports, 'makeGenericClientConstructor');\n          this._unwrap(moduleExports, 'loadPackageDefinition');\n          this._unwrap(moduleExports.Client.prototype, 'makeUnaryRequest');\n          this._unwrap(\n            moduleExports.Client.prototype,\n            'makeClientStreamRequest'\n          );\n          this._unwrap(\n            moduleExports.Client.prototype,\n            'makeServerStreamRequest'\n          );\n          this._unwrap(moduleExports.Client.prototype, 'makeBidiStreamRequest');\n        }\n      ),\n    ];\n  }\n\n  override setConfig(config: GrpcInstrumentationConfig = {}): void {\n    super.setConfig(config);\n    this._metadataCapture = this._createMetadataCapture();\n  }\n\n  /**\n   * Patch for grpc.Server.prototype.register(...) function. Provides auto-instrumentation for\n   * client_stream, server_stream, bidi, unary server handler calls.\n   */\n  private _patchServer(): (\n    originalRegister: ServerRegisterFunction\n  ) => ServerRegisterFunction {\n    const instrumentation = this;\n    return (originalRegister: ServerRegisterFunction) => {\n      const config = this.getConfig();\n      instrumentation._diag.debug('patched gRPC server');\n      return function register<RequestType, ResponseType>(\n        this: Server,\n        name: string,\n        handler: HandleCall<unknown, unknown>,\n        serialize: Serialize<unknown>,\n        deserialize: Deserialize<unknown>,\n        type: string\n      ): boolean {\n        const originalRegisterResult = originalRegister.call(\n          this,\n          name,\n          handler,\n          serialize,\n          deserialize,\n          type\n        );\n        const handlerSet = this['handlers'].get(name);\n\n        instrumentation._wrap(\n          handlerSet,\n          'func',\n          (originalFunc: HandleCall<unknown, unknown>) => {\n            return function func(\n              this: typeof handlerSet,\n              call: ServerCallWithMeta<RequestType, ResponseType>,\n              callback: SendUnaryDataCallback<unknown>\n            ) {\n              const self = this;\n\n              if (shouldNotTraceServerCall(name, config.ignoreGrpcMethods)) {\n                return handleUntracedServerFunction(\n                  type,\n                  originalFunc,\n                  call,\n                  callback\n                );\n              }\n\n              const spanName = `grpc.${name.replace('/', '')}`;\n              const spanOptions: SpanOptions = {\n                kind: SpanKind.SERVER,\n              };\n\n              instrumentation._diag.debug(\n                `patch func: ${JSON.stringify(spanOptions)}`\n              );\n\n              context.with(\n                propagation.extract(ROOT_CONTEXT, call.metadata, {\n                  get: (carrier, key) => carrier.get(key).map(String),\n                  keys: carrier => Object.keys(carrier.getMap()),\n                }),\n                () => {\n                  const { service, method } = _extractMethodAndService(name);\n\n                  const span = instrumentation.tracer\n                    .startSpan(spanName, spanOptions)\n                    .setAttributes({\n                      [SEMATTRS_RPC_SYSTEM]: AttributeValues.RPC_SYSTEM,\n                      [SEMATTRS_RPC_METHOD]: method,\n                      [SEMATTRS_RPC_SERVICE]: service,\n                    });\n\n                  instrumentation._metadataCapture.server.captureRequestMetadata(\n                    span,\n                    call.metadata\n                  );\n\n                  instrumentation._wrap(\n                    call,\n                    'sendMetadata',\n                    originalSendMetadata => (responseMetadata: Metadata) => {\n                      instrumentation._metadataCapture.server.captureResponseMetadata(\n                        span,\n                        responseMetadata\n                      );\n                      originalSendMetadata.call(call, responseMetadata);\n                    }\n                  );\n\n                  context.with(trace.setSpan(context.active(), span), () => {\n                    handleServerFunction.call(\n                      self,\n                      span,\n                      type,\n                      originalFunc,\n                      call,\n                      callback\n                    );\n                  });\n                }\n              );\n            };\n          }\n        );\n        return originalRegisterResult;\n      } as typeof Server.prototype.register;\n    };\n  }\n\n  /**\n   * Patch for grpc.Client.make*Request(...) functions.\n   * Provides auto-instrumentation for client requests when using a Client without\n   * makeGenericClientConstructor/makeClientConstructor\n   */\n  private _patchClientRequestMethod<ReturnType extends EventEmitter>(\n    grpcLib: typeof grpcJs,\n    hasResponseStream: boolean\n  ): (\n    original: ClientRequestFunction<ReturnType>\n  ) => ClientRequestFunction<ReturnType> {\n    const instrumentation = this;\n    return (original: ClientRequestFunction<ReturnType>) => {\n      instrumentation._diag.debug(\n        'patched makeClientStreamRequest on grpc client'\n      );\n\n      return function makeClientStreamRequest(this: grpcJs.Client) {\n        // method must always be at first position\n        const method = arguments[0];\n        const { name, service, methodAttributeValue } =\n          instrumentation._splitMethodString(method);\n\n        // Do not attempt to trace/inject context if method is ignored\n        if (\n          method != null &&\n          _methodIsIgnored(\n            methodAttributeValue,\n            instrumentation.getConfig().ignoreGrpcMethods\n          )\n        ) {\n          return original.apply(this, [...arguments]);\n        }\n\n        const modifiedArgs = [...arguments];\n        const metadata = extractMetadataOrSplice(grpcLib, modifiedArgs, 4);\n\n        const span = instrumentation.createClientSpan(\n          name,\n          methodAttributeValue,\n          service,\n          metadata\n        );\n        instrumentation.extractNetMetadata(this, span);\n\n        // Callback is only present when there is no responseStream\n        if (!hasResponseStream) {\n          // Replace the callback with the patched one if it is there.\n          // If the callback arg is not a function on the last position then the client will throw\n          // and never call the callback -> so there's nothing to patch\n          const lastArgIndex = modifiedArgs.length - 1;\n          const callback = modifiedArgs[lastArgIndex];\n          if (typeof callback === 'function') {\n            modifiedArgs[lastArgIndex] = patchedCallback(span, callback);\n          }\n        }\n\n        return context.with(trace.setSpan(context.active(), span), () => {\n          setSpanContext(metadata);\n\n          const call = original.apply(this, [...modifiedArgs]);\n          patchResponseMetadataEvent(\n            span,\n            call,\n            instrumentation._metadataCapture\n          );\n\n          // Subscribe to response stream events when there's a response stream.\n          if (hasResponseStream) {\n            patchResponseStreamEvents(span, call);\n          }\n\n          return call;\n        });\n      };\n    };\n  }\n\n  /**\n   * Entry point for applying client patches to `grpc.makeClientConstructor(...)` equivalents\n   * @param this GrpcJsPlugin\n   */\n  private _patchClient(\n    grpcClient: typeof grpcJs\n  ): (\n    original: MakeClientConstructorFunction\n  ) => MakeClientConstructorFunction {\n    const instrumentation = this;\n    return (original: MakeClientConstructorFunction) => {\n      instrumentation._diag.debug('patching client');\n      return function makeClientConstructor(\n        this: typeof Client,\n        methods: ServiceDefinition,\n        serviceName: string,\n        options?: object\n      ) {\n        const client = original.call(this, methods, serviceName, options);\n        instrumentation._massWrap<typeof client.prototype, string>(\n          client.prototype,\n          getMethodsToWrap.call(instrumentation, client, methods),\n          instrumentation._getPatchedClientMethods(grpcClient)\n        );\n        return client;\n      };\n    };\n  }\n\n  /**\n   * Entry point for client patching for grpc.loadPackageDefinition(...)\n   * @param this - GrpcJsPlugin\n   */\n  private _patchLoadPackageDefinition(grpcClient: typeof grpcJs) {\n    const instrumentation = this;\n    instrumentation._diag.debug('patching loadPackageDefinition');\n    return (original: typeof loadPackageDefinition) => {\n      return function patchedLoadPackageDefinition(\n        this: null,\n        packageDef: PackageDefinition\n      ) {\n        const result: GrpcObject = original.call(\n          this,\n          packageDef\n        ) as GrpcObject;\n        instrumentation._patchLoadedPackage(grpcClient, result);\n        return result;\n      } as typeof loadPackageDefinition;\n    };\n  }\n\n  /**\n   * Parse initial client call properties and start a span to trace its execution\n   */\n  private _getPatchedClientMethods(\n    grpcClient: typeof grpcJs\n  ): (original: GrpcClientFunc) => () => EventEmitter {\n    const instrumentation = this;\n    return (original: GrpcClientFunc) => {\n      instrumentation._diag.debug('patch all client methods');\n      function clientMethodTrace(this: Client) {\n        const name = `grpc.${original.path.replace('/', '')}`;\n        const args = [...arguments];\n        const metadata = extractMetadataOrSpliceDefault.call(\n          instrumentation,\n          grpcClient,\n          original,\n          args\n        );\n        const { service, method } = _extractMethodAndService(original.path);\n\n        const span = instrumentation.tracer\n          .startSpan(name, { kind: SpanKind.CLIENT })\n          .setAttributes({\n            [SEMATTRS_RPC_SYSTEM]: 'grpc',\n            [SEMATTRS_RPC_METHOD]: method,\n            [SEMATTRS_RPC_SERVICE]: service,\n          });\n        instrumentation.extractNetMetadata(this, span);\n\n        instrumentation._metadataCapture.client.captureRequestMetadata(\n          span,\n          metadata\n        );\n\n        return context.with(trace.setSpan(context.active(), span), () =>\n          makeGrpcClientRemoteCall(\n            instrumentation._metadataCapture,\n            original,\n            args,\n            metadata,\n            this\n          )(span)\n        );\n      }\n      Object.assign(clientMethodTrace, original);\n      return clientMethodTrace;\n    };\n  }\n\n  private _splitMethodString(method: string) {\n    if (method == null) {\n      return { name: '', service: '', methodAttributeValue: '' };\n    }\n    const name = `grpc.${method.replace('/', '')}`;\n    const { service, method: methodAttributeValue } =\n      _extractMethodAndService(method);\n    return { name, service, methodAttributeValue };\n  }\n\n  private createClientSpan(\n    name: string,\n    methodAttributeValue: string,\n    service: string,\n    metadata?: grpcJs.Metadata\n  ) {\n    const span = this.tracer\n      .startSpan(name, { kind: SpanKind.CLIENT })\n      .setAttributes({\n        [SEMATTRS_RPC_SYSTEM]: 'grpc',\n        [SEMATTRS_RPC_METHOD]: methodAttributeValue,\n        [SEMATTRS_RPC_SERVICE]: service,\n      });\n\n    if (metadata != null) {\n      this._metadataCapture.client.captureRequestMetadata(span, metadata);\n    }\n    return span;\n  }\n\n  private extractNetMetadata(client: grpcJs.Client, span: Span) {\n    // set net.peer.* from target (e.g., \"dns:otel-productcatalogservice:8080\") as a hint to APMs\n    const parsedUri = URI_REGEX.exec(client.getChannel().getTarget());\n    if (parsedUri != null && parsedUri.groups != null) {\n      span.setAttribute(SEMATTRS_NET_PEER_NAME, parsedUri.groups['name']);\n      span.setAttribute(\n        SEMATTRS_NET_PEER_PORT,\n        parseInt(parsedUri.groups['port'])\n      );\n    }\n  }\n\n  /**\n   * Utility function to patch *all* functions loaded through a proto file.\n   * Recursively searches for Client classes and patches all methods, reversing the\n   * parsing done by grpc.loadPackageDefinition\n   * https://github.com/grpc/grpc-node/blob/1d14203c382509c3f36132bd0244c99792cb6601/packages/grpc-js/src/make-client.ts#L200-L217\n   */\n  private _patchLoadedPackage(\n    grpcClient: typeof grpcJs,\n    result: GrpcObject\n  ): void {\n    Object.values(result).forEach(service => {\n      if (typeof service === 'function') {\n        this._massWrap<typeof service.prototype, string>(\n          service.prototype,\n          getMethodsToWrap.call(this, service, service.service),\n          this._getPatchedClientMethods.call(this, grpcClient)\n        );\n      } else if (typeof service.format !== 'string') {\n        // GrpcObject\n        this._patchLoadedPackage.call(this, grpcClient, service as GrpcObject);\n      }\n    });\n  }\n\n  private _createMetadataCapture(): metadataCaptureType {\n    const config = this.getConfig();\n\n    return {\n      client: {\n        captureRequestMetadata: metadataCapture(\n          'request',\n          config.metadataToSpanAttributes?.client?.requestMetadata ?? []\n        ),\n        captureResponseMetadata: metadataCapture(\n          'response',\n          config.metadataToSpanAttributes?.client?.responseMetadata ?? []\n        ),\n      },\n      server: {\n        captureRequestMetadata: metadataCapture(\n          'request',\n          config.metadataToSpanAttributes?.server?.requestMetadata ?? []\n        ),\n        captureResponseMetadata: metadataCapture(\n          'response',\n          config.metadataToSpanAttributes?.server?.responseMetadata ?? []\n        ),\n      },\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16674, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-grpc/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { GrpcInstrumentation } from './instrumentation';\nexport type { GrpcInstrumentationConfig } from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,iDAAwD;AAA/C,OAAA,cAAA,CAAA,SAAA,uBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,kBAAA,mBAAmB;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16705, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-hapi/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.40.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-hapi';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,qCAAqC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16732, "column": 0}, "map": {"version":3,"file":"internal-types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-hapi/src/internal-types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as Hapi from '@hapi/hapi';\n\nexport const HapiComponentName = '@hapi/hapi';\n\n/**\n * This symbol is used to mark a Hapi route handler or server extension handler as\n * already patched, since its possible to use these handlers multiple times\n * i.e. when allowing multiple versions of one plugin, or when registering a plugin\n * multiple times on different servers.\n */\nexport const handlerPatched: unique symbol = Symbol('hapi-handler-patched');\n\nexport type HapiServerRouteInputMethod = (route: HapiServerRouteInput) => void;\n\nexport type HapiServerRouteInput =\n  | PatchableServerRoute\n  | PatchableServerRoute[];\n\nexport type PatchableServerRoute = Hapi.ServerRoute<any> & {\n  [handlerPatched]?: boolean;\n};\n\nexport type HapiPluginObject<T> = Hapi.ServerRegisterPluginObject<T>;\n\nexport type HapiPluginInput<T> =\n  | HapiPluginObject<T>\n  | Array<HapiPluginObject<T>>;\n\nexport type RegisterFunction<T> = (\n  plugin: HapiPluginInput<T>,\n  options?: Hapi.ServerRegisterOptions\n) => Promise<void>;\n\nexport type PatchableExtMethod = Hapi.Lifecycle.Method & {\n  [handlerPatched]?: boolean;\n};\n\nexport type ServerExtDirectInput = [\n  Hapi.ServerRequestExtType,\n  Hapi.Lifecycle.Method,\n  (Hapi.ServerExtOptions | undefined)?\n];\n\nexport const HapiLayerType = {\n  ROUTER: 'router',\n  PLUGIN: 'plugin',\n  EXT: 'server.ext',\n};\n\nexport const HapiLifecycleMethodNames = new Set([\n  'onPreAuth',\n  'onCredentials',\n  'onPostAuth',\n  'onPreHandler',\n  'onPostHandler',\n  'onPreResponse',\n  'onRequest',\n]);\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAIU,QAAA,iBAAiB,GAAG,YAAY,CAAC;AAE9C;;;;;GAKG,CACU,QAAA,cAAc,GAAkB,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAiC/D,QAAA,aAAa,GAAG;IAC3B,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,QAAQ;IAChB,GAAG,EAAE,YAAY;CAClB,CAAC;AAEW,QAAA,wBAAwB,GAAG,IAAI,GAAG,CAAC;IAC9C,WAAW;IACX,eAAe;IACf,YAAY;IACZ,cAAc;IACd,eAAe;IACf,eAAe;IACf,WAAW;CACZ,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16777, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-hapi/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  HAPI_TYPE = 'hapi.type',\n  PLUGIN_NAME = 'hapi.plugin.name',\n  EXT_TYPE = 'server.ext.type',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,IAAY,cAIX;AAJD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,YAAA,GAAA,WAAuB,CAAA;IACvB,cAAA,CAAA,cAAA,GAAA,kBAAgC,CAAA;IAChC,cAAA,CAAA,WAAA,GAAA,iBAA4B,CAAA;AAC9B,CAAC,EAJW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAIzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16807, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-hapi/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanAttributes } from '@opentelemetry/api';\nimport {\n  SEMATTRS_HTTP_METHOD,\n  SEMATTRS_HTTP_ROUTE,\n} from '@opentelemetry/semantic-conventions';\nimport type * as Hapi from '@hapi/hapi';\nimport {\n  HapiLayerType,\n  HapiLifecycleMethodNames,\n  HapiPluginObject,\n  PatchableExtMethod,\n  ServerExtDirectInput,\n} from './internal-types';\nimport { AttributeNames } from './enums/AttributeNames';\n\nexport function getPluginName<T>(plugin: Hapi.Plugin<T>): string {\n  if ((plugin as Hapi.PluginNameVersion).name) {\n    return (plugin as Hapi.PluginNameVersion).name;\n  } else {\n    return (plugin as Hapi.PluginPackage).pkg.name;\n  }\n}\n\nexport const isLifecycleExtType = (\n  variableToCheck: unknown\n): variableToCheck is Hapi.ServerRequestExtType => {\n  return (\n    typeof variableToCheck === 'string' &&\n    HapiLifecycleMethodNames.has(variableToCheck)\n  );\n};\n\nexport const isLifecycleExtEventObj = (\n  variableToCheck: unknown\n): variableToCheck is Hapi.ServerExtEventsRequestObject => {\n  const event = (variableToCheck as Hapi.ServerExtEventsRequestObject)?.type;\n  return event !== undefined && isLifecycleExtType(event);\n};\n\nexport const isDirectExtInput = (\n  variableToCheck: unknown\n): variableToCheck is ServerExtDirectInput => {\n  return (\n    Array.isArray(variableToCheck) &&\n    variableToCheck.length <= 3 &&\n    isLifecycleExtType(variableToCheck[0]) &&\n    typeof variableToCheck[1] === 'function'\n  );\n};\n\nexport const isPatchableExtMethod = (\n  variableToCheck: PatchableExtMethod | PatchableExtMethod[]\n): variableToCheck is PatchableExtMethod => {\n  return !Array.isArray(variableToCheck);\n};\n\nexport const getRouteMetadata = (\n  route: Hapi.ServerRoute,\n  pluginName?: string\n): {\n  attributes: SpanAttributes;\n  name: string;\n} => {\n  if (pluginName) {\n    return {\n      attributes: {\n        [SEMATTRS_HTTP_ROUTE]: route.path,\n        [SEMATTRS_HTTP_METHOD]: route.method,\n        [AttributeNames.HAPI_TYPE]: HapiLayerType.PLUGIN,\n        [AttributeNames.PLUGIN_NAME]: pluginName,\n      },\n      name: `${pluginName}: route - ${route.path}`,\n    };\n  }\n  return {\n    attributes: {\n      [SEMATTRS_HTTP_ROUTE]: route.path,\n      [SEMATTRS_HTTP_METHOD]: route.method,\n      [AttributeNames.HAPI_TYPE]: HapiLayerType.ROUTER,\n    },\n    name: `route - ${route.path}`,\n  };\n};\n\nexport const getExtMetadata = (\n  extPoint: Hapi.ServerRequestExtType,\n  pluginName?: string\n): {\n  attributes: SpanAttributes;\n  name: string;\n} => {\n  if (pluginName) {\n    return {\n      attributes: {\n        [AttributeNames.EXT_TYPE]: extPoint,\n        [AttributeNames.HAPI_TYPE]: HapiLayerType.EXT,\n        [AttributeNames.PLUGIN_NAME]: pluginName,\n      },\n      name: `${pluginName}: ext - ${extPoint}`,\n    };\n  }\n  return {\n    attributes: {\n      [AttributeNames.EXT_TYPE]: extPoint,\n      [AttributeNames.HAPI_TYPE]: HapiLayerType.EXT,\n    },\n    name: `ext - ${extPoint}`,\n  };\n};\n\nexport const getPluginFromInput = <T>(\n  pluginObj: HapiPluginObject<T>\n): Hapi.Plugin<T, void> => {\n  if ('plugin' in pluginObj) {\n    if ('plugin' in pluginObj.plugin) {\n      return pluginObj.plugin.plugin;\n    }\n    return pluginObj.plugin;\n  }\n  return pluginObj;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16912, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-hapi/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\n\nimport type * as Hapi from '@hapi/hapi';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  HapiComponentName,\n  HapiServerRouteInput,\n  handlerPatched,\n  PatchableServerRoute,\n  HapiServerRouteInputMethod,\n  HapiPluginInput,\n  RegisterFunction,\n  PatchableExtMethod,\n  ServerExtDirectInput,\n} from './internal-types';\nimport {\n  getRouteMetadata,\n  getPluginName,\n  isLifecycleExtType,\n  isLifecycleExtEventObj,\n  getExtMetadata,\n  isDirectExtInput,\n  isPatchableExtMethod,\n  getPluginFromInput,\n} from './utils';\n\n/** Hapi instrumentation for OpenTelemetry */\nexport class HapiInstrumentation extends InstrumentationBase {\n  constructor(config: InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    return new InstrumentationNodeModuleDefinition(\n      HapiComponentName,\n      ['>=17.0.0 <22'],\n      (module: any) => {\n        const moduleExports: typeof Hapi =\n          module[Symbol.toStringTag] === 'Module' ? module.default : module;\n        if (!isWrapped(moduleExports.server)) {\n          this._wrap(\n            moduleExports,\n            'server',\n            this._getServerPatch.bind(this) as any\n          );\n        }\n\n        if (!isWrapped(moduleExports.Server)) {\n          this._wrap(\n            moduleExports,\n            'Server',\n            this._getServerPatch.bind(this) as any\n          );\n        }\n        return moduleExports;\n      },\n      (module: any) => {\n        const moduleExports: typeof Hapi =\n          module[Symbol.toStringTag] === 'Module' ? module.default : module;\n        this._massUnwrap([moduleExports], ['server', 'Server']);\n      }\n    );\n  }\n\n  /**\n   * Patches the Hapi.server and Hapi.Server functions in order to instrument\n   * the server.route, server.ext, and server.register functions via calls to the\n   * @function _getServerRoutePatch, @function _getServerExtPatch, and\n   * @function _getServerRegisterPatch functions\n   * @param original - the original Hapi Server creation function\n   */\n  private _getServerPatch(\n    original: (options?: Hapi.ServerOptions) => Hapi.Server\n  ) {\n    const instrumentation: HapiInstrumentation = this;\n    const self = this;\n    return function server(this: Hapi.Server, opts?: Hapi.ServerOptions) {\n      const newServer: Hapi.Server = original.apply(this, [opts]);\n\n      self._wrap(newServer, 'route', originalRouter => {\n        return instrumentation._getServerRoutePatch.bind(instrumentation)(\n          originalRouter\n        );\n      });\n\n      // Casting as any is necessary here due to multiple overloads on the Hapi.ext\n      // function, which requires supporting a variety of different parameters\n      // as extension inputs\n      self._wrap(newServer, 'ext', originalExtHandler => {\n        return instrumentation._getServerExtPatch.bind(instrumentation)(\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          originalExtHandler as any\n        );\n      });\n\n      // Casting as any is necessary here due to multiple overloads on the Hapi.Server.register\n      // function, which requires supporting a variety of different types of Plugin inputs\n      self._wrap(\n        newServer,\n        'register',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        instrumentation._getServerRegisterPatch.bind(instrumentation) as any\n      );\n      return newServer;\n    };\n  }\n\n  /**\n   * Patches the plugin register function used by the Hapi Server. This function\n   * goes through each plugin that is being registered and adds instrumentation\n   * via a call to the @function _wrapRegisterHandler function.\n   * @param {RegisterFunction<T>} original - the original register function which\n   * registers each plugin on the server\n   */\n  private _getServerRegisterPatch<T>(\n    original: RegisterFunction<T>\n  ): RegisterFunction<T> {\n    const instrumentation: HapiInstrumentation = this;\n    return function register(\n      this: Hapi.Server,\n      pluginInput: HapiPluginInput<T>,\n      options?: Hapi.ServerRegisterOptions\n    ) {\n      if (Array.isArray(pluginInput)) {\n        for (const pluginObj of pluginInput) {\n          const plugin = getPluginFromInput(pluginObj);\n          instrumentation._wrapRegisterHandler(plugin);\n        }\n      } else {\n        const plugin = getPluginFromInput(pluginInput);\n        instrumentation._wrapRegisterHandler(plugin);\n      }\n      return original.apply(this, [pluginInput, options]);\n    };\n  }\n\n  /**\n   * Patches the Server.ext function which adds extension methods to the specified\n   * point along the request lifecycle. This function accepts the full range of\n   * accepted input into the standard Hapi `server.ext` function. For each extension,\n   * it adds instrumentation to the handler via a call to the @function _wrapExtMethods\n   * function.\n   * @param original - the original ext function which adds the extension method to the server\n   * @param {string} [pluginName] - if present, represents the name of the plugin responsible\n   * for adding this server extension. Else, signifies that the extension was added directly\n   */\n  private _getServerExtPatch(\n    original: (...args: unknown[]) => unknown,\n    pluginName?: string\n  ) {\n    const instrumentation: HapiInstrumentation = this;\n\n    return function ext(\n      this: ThisParameterType<typeof original>,\n      ...args: Parameters<typeof original>\n    ) {\n      if (Array.isArray(args[0])) {\n        const eventsList:\n          | Hapi.ServerExtEventsObject[]\n          | Hapi.ServerExtEventsRequestObject[] = args[0];\n        for (let i = 0; i < eventsList.length; i++) {\n          const eventObj = eventsList[i];\n          if (isLifecycleExtType(eventObj.type)) {\n            const lifecycleEventObj =\n              eventObj as Hapi.ServerExtEventsRequestObject;\n            const handler = instrumentation._wrapExtMethods(\n              lifecycleEventObj.method,\n              eventObj.type,\n              pluginName\n            );\n            lifecycleEventObj.method = handler;\n            eventsList[i] = lifecycleEventObj;\n          }\n        }\n        return original.apply(this, args);\n      } else if (isDirectExtInput(args)) {\n        const extInput: ServerExtDirectInput = args;\n        const method: PatchableExtMethod = extInput[1];\n        const handler = instrumentation._wrapExtMethods(\n          method,\n          extInput[0],\n          pluginName\n        );\n        return original.apply(this, [extInput[0], handler, extInput[2]]);\n      } else if (isLifecycleExtEventObj(args[0])) {\n        const lifecycleEventObj = args[0];\n        const handler = instrumentation._wrapExtMethods(\n          lifecycleEventObj.method,\n          lifecycleEventObj.type,\n          pluginName\n        );\n        lifecycleEventObj.method = handler;\n        return original.call(this, lifecycleEventObj);\n      }\n      return original.apply(this, args);\n    };\n  }\n\n  /**\n   * Patches the Server.route function. This function accepts either one or an array\n   * of Hapi.ServerRoute objects and adds instrumentation on each route via a call to\n   * the @function _wrapRouteHandler function.\n   * @param {HapiServerRouteInputMethod} original - the original route function which adds\n   * the route to the server\n   * @param {string} [pluginName] - if present, represents the name of the plugin responsible\n   * for adding this server route. Else, signifies that the route was added directly\n   */\n  private _getServerRoutePatch(\n    original: HapiServerRouteInputMethod,\n    pluginName?: string\n  ) {\n    const instrumentation: HapiInstrumentation = this;\n    return function route(\n      this: Hapi.Server,\n      route: HapiServerRouteInput\n    ): void {\n      if (Array.isArray(route)) {\n        for (let i = 0; i < route.length; i++) {\n          const newRoute = instrumentation._wrapRouteHandler.call(\n            instrumentation,\n            route[i],\n            pluginName\n          );\n          route[i] = newRoute;\n        }\n      } else {\n        route = instrumentation._wrapRouteHandler.call(\n          instrumentation,\n          route,\n          pluginName\n        );\n      }\n      return original.apply(this, [route]);\n    };\n  }\n\n  /**\n   * Wraps newly registered plugins to add instrumentation to the plugin's clone of\n   * the original server. Specifically, wraps the server.route and server.ext functions\n   * via calls to @function _getServerRoutePatch and @function _getServerExtPatch\n   * @param {Hapi.Plugin<T>} plugin - the new plugin which is being instrumented\n   */\n  private _wrapRegisterHandler<T>(plugin: Hapi.Plugin<T>): void {\n    const instrumentation: HapiInstrumentation = this;\n    const pluginName = getPluginName(plugin);\n    const oldHandler = plugin.register;\n    const self = this;\n    const newRegisterHandler = function (server: Hapi.Server, options: T) {\n      self._wrap(server, 'route', original => {\n        return instrumentation._getServerRoutePatch.bind(instrumentation)(\n          original,\n          pluginName\n        );\n      });\n\n      // Casting as any is necessary here due to multiple overloads on the Hapi.ext\n      // function, which requires supporting a variety of different parameters\n      // as extension inputs\n      self._wrap(server, 'ext', originalExtHandler => {\n        return instrumentation._getServerExtPatch.bind(instrumentation)(\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          originalExtHandler as any,\n          pluginName\n        );\n      });\n      return oldHandler(server, options);\n    };\n    plugin.register = newRegisterHandler;\n  }\n\n  /**\n   * Wraps request extension methods to add instrumentation to each new extension handler.\n   * Patches each individual extension in order to create the\n   * span and propagate context. It does not create spans when there is no parent span.\n   * @param {PatchableExtMethod | PatchableExtMethod[]} method - the request extension\n   * handler which is being instrumented\n   * @param {Hapi.ServerRequestExtType} extPoint - the point in the Hapi request lifecycle\n   * which this extension targets\n   * @param {string} [pluginName] - if present, represents the name of the plugin responsible\n   * for adding this server route. Else, signifies that the route was added directly\n   */\n  private _wrapExtMethods<T extends PatchableExtMethod | PatchableExtMethod[]>(\n    method: T,\n    extPoint: Hapi.ServerRequestExtType,\n    pluginName?: string\n  ): T {\n    const instrumentation: HapiInstrumentation = this;\n    if (method instanceof Array) {\n      for (let i = 0; i < method.length; i++) {\n        method[i] = instrumentation._wrapExtMethods(\n          method[i],\n          extPoint\n        ) as PatchableExtMethod;\n      }\n      return method;\n    } else if (isPatchableExtMethod(method)) {\n      if (method[handlerPatched] === true) return method;\n      method[handlerPatched] = true;\n\n      const newHandler: PatchableExtMethod = async function (\n        ...params: Parameters<Hapi.Lifecycle.Method>\n      ) {\n        if (api.trace.getSpan(api.context.active()) === undefined) {\n          return await method.apply(this, params);\n        }\n        const metadata = getExtMetadata(extPoint, pluginName);\n        const span = instrumentation.tracer.startSpan(metadata.name, {\n          attributes: metadata.attributes,\n        });\n        try {\n          return await api.context.with<\n            Parameters<Hapi.Lifecycle.Method>,\n            Hapi.Lifecycle.Method\n          >(\n            api.trace.setSpan(api.context.active(), span),\n            method,\n            undefined,\n            ...params\n          );\n        } catch (err: any) {\n          span.recordException(err);\n          span.setStatus({\n            code: api.SpanStatusCode.ERROR,\n            message: err.message,\n          });\n          throw err;\n        } finally {\n          span.end();\n        }\n      };\n      return newHandler as T;\n    }\n    return method;\n  }\n\n  /**\n   * Patches each individual route handler method in order to create the\n   * span and propagate context. It does not create spans when there is no parent span.\n   * @param {PatchableServerRoute} route - the route handler which is being instrumented\n   * @param {string} [pluginName] - if present, represents the name of the plugin responsible\n   * for adding this server route. Else, signifies that the route was added directly\n   */\n  private _wrapRouteHandler(\n    route: PatchableServerRoute,\n    pluginName?: string\n  ): PatchableServerRoute {\n    const instrumentation: HapiInstrumentation = this;\n    if (route[handlerPatched] === true) return route;\n    route[handlerPatched] = true;\n\n    const wrapHandler: (\n      oldHandler: Hapi.Lifecycle.Method\n    ) => Hapi.Lifecycle.Method = oldHandler => {\n      return async function (...params: Parameters<Hapi.Lifecycle.Method>) {\n        if (api.trace.getSpan(api.context.active()) === undefined) {\n          return await oldHandler.call(this, ...params);\n        }\n        const rpcMetadata = getRPCMetadata(api.context.active());\n        if (rpcMetadata?.type === RPCType.HTTP) {\n          rpcMetadata.route = route.path;\n        }\n        const metadata = getRouteMetadata(route, pluginName);\n        const span = instrumentation.tracer.startSpan(metadata.name, {\n          attributes: metadata.attributes,\n        });\n        try {\n          return await api.context.with(\n            api.trace.setSpan(api.context.active(), span),\n            () => oldHandler.call(this, ...params)\n          );\n        } catch (err: any) {\n          span.recordException(err);\n          span.setStatus({\n            code: api.SpanStatusCode.ERROR,\n            message: err.message,\n          });\n          throw err;\n        } finally {\n          span.end();\n        }\n      };\n    };\n\n    if (typeof route.handler === 'function') {\n      route.handler = wrapHandler(route.handler as Hapi.Lifecycle.Method);\n    } else if (typeof route.options === 'function') {\n      const oldOptions = route.options;\n      route.options = function (server) {\n        const options = oldOptions(server);\n        if (typeof options.handler === 'function') {\n          options.handler = wrapHandler(\n            options.handler as Hapi.Lifecycle.Method\n          );\n        }\n        return options;\n      };\n    } else if (typeof route.options?.handler === 'function') {\n      route.options.handler = wrapHandler(\n        route.options.handler as Hapi.Lifecycle.Method\n      );\n    }\n    return route;\n  }\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,oCAA0C;AAC1C,MAAA,wCAA8D;AAC9D,MAAA,8DAKwC;AAGxC,MAAA,iCAA0D;AAC1D,MAAA,+CAU0B;AAC1B,MAAA,6BASiB;AAEjB,2CAAA,EAA6C,CAC7C,MAAa,mBAAoB,SAAQ,kBAAA,mBAAmB;IAC1D,YAAY,SAAgC,CAAA,CAAE,CAAA;QAC5C,KAAK,CAAC,UAAA,YAAY,EAAE,UAAA,eAAe,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAES,IAAI,GAAA;QACZ,OAAO,IAAI,kBAAA,mCAAmC,CAC5C,iBAAA,iBAAiB,EACjB;YAAC,cAAc;SAAC,EAChB,CAAC,MAAW,EAAE,EAAE;YACd,MAAM,aAAa,GACjB,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;YACpE,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,MAAM,CAAC,EAAE;gBACpC,IAAI,CAAC,KAAK,CACR,aAAa,EACb,QAAQ,EACR,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAQ,CACvC,CAAC;aACH;YAED,IAAI,CAAC,CAAA,GAAA,kBAAA,SAAS,EAAC,aAAa,CAAC,MAAM,CAAC,EAAE;gBACpC,IAAI,CAAC,KAAK,CACR,aAAa,EACb,QAAQ,EACR,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAQ,CACvC,CAAC;aACH;YACD,OAAO,aAAa,CAAC;QACvB,CAAC,EACD,CAAC,MAAW,EAAE,EAAE;YACd,MAAM,aAAa,GACjB,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;YACpE,IAAI,CAAC,WAAW,CAAC;gBAAC,aAAa;aAAC,EAAE;gBAAC,QAAQ;gBAAE,QAAQ;aAAC,CAAC,CAAC;QAC1D,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;;;OAMG,CACK,eAAe,CACrB,QAAuD,EAAA;QAEvD,MAAM,eAAe,GAAwB,IAAI,CAAC;QAClD,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,SAAS,MAAM,CAAoB,IAAyB;YACjE,MAAM,SAAS,GAAgB,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;gBAAC,IAAI;aAAC,CAAC,CAAC;YAE5D,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,GAAE,cAAc,CAAC,EAAE;gBAC9C,OAAO,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,CAC/D,cAAc,CACf,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,6EAA6E;YAC7E,wEAAwE;YACxE,sBAAsB;YACtB,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,GAAE,kBAAkB,CAAC,EAAE;gBAChD,OAAO,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAC7D,8DAA8D;gBAC9D,kBAAyB,CAC1B,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,yFAAyF;YACzF,oFAAoF;YACpF,IAAI,CAAC,KAAK,CACR,SAAS,EACT,UAAU,EACV,8DAA8D;YAC9D,eAAe,CAAC,uBAAuB,CAAC,IAAI,CAAC,eAAe,CAAQ,CACrE,CAAC;YACF,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG,CACK,uBAAuB,CAC7B,QAA6B,EAAA;QAE7B,MAAM,eAAe,GAAwB,IAAI,CAAC;QAClD,OAAO,SAAS,QAAQ,CAEtB,WAA+B,EAC/B,OAAoC;YAEpC,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBAC9B,KAAK,MAAM,SAAS,IAAI,WAAW,CAAE;oBACnC,MAAM,MAAM,GAAG,CAAA,GAAA,QAAA,kBAAkB,EAAC,SAAS,CAAC,CAAC;oBAC7C,eAAe,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;iBAC9C;aACF,MAAM;gBACL,MAAM,MAAM,GAAG,CAAA,GAAA,QAAA,kBAAkB,EAAC,WAAW,CAAC,CAAC;gBAC/C,eAAe,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;aAC9C;YACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;gBAAC,WAAW;gBAAE,OAAO;aAAC,CAAC,CAAC;QACtD,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG,CACK,kBAAkB,CACxB,QAAyC,EACzC,UAAmB,EAAA;QAEnB,MAAM,eAAe,GAAwB,IAAI,CAAC;QAElD,OAAO,SAAS,GAAG,CAEjB,GAAG,IAAiC;YAEpC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC1B,MAAM,UAAU,GAE0B,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;oBAC1C,MAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAA,GAAA,QAAA,kBAAkB,EAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wBACrC,MAAM,iBAAiB,GACrB,QAA6C,CAAC;wBAChD,MAAM,OAAO,GAAG,eAAe,CAAC,eAAe,CAC7C,iBAAiB,CAAC,MAAM,EACxB,QAAQ,CAAC,IAAI,EACb,UAAU,CACX,CAAC;wBACF,iBAAiB,CAAC,MAAM,GAAG,OAAO,CAAC;wBACnC,UAAU,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC;qBACnC;iBACF;gBACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACnC,MAAM,IAAI,CAAA,GAAA,QAAA,gBAAgB,EAAC,IAAI,CAAC,EAAE;gBACjC,MAAM,QAAQ,GAAyB,IAAI,CAAC;gBAC5C,MAAM,MAAM,GAAuB,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC/C,MAAM,OAAO,GAAG,eAAe,CAAC,eAAe,CAC7C,MAAM,EACN,QAAQ,CAAC,CAAC,CAAC,EACX,UAAU,CACX,CAAC;gBACF,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;oBAAC,QAAQ,CAAC,CAAC,CAAC;oBAAE,OAAO;oBAAE,QAAQ,CAAC,CAAC,CAAC;iBAAC,CAAC,CAAC;aAClE,MAAM,IAAI,CAAA,GAAA,QAAA,sBAAsB,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC1C,MAAM,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClC,MAAM,OAAO,GAAG,eAAe,CAAC,eAAe,CAC7C,iBAAiB,CAAC,MAAM,EACxB,iBAAiB,CAAC,IAAI,EACtB,UAAU,CACX,CAAC;gBACF,iBAAiB,CAAC,MAAM,GAAG,OAAO,CAAC;gBACnC,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;aAC/C;YACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACpC,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG,CACK,oBAAoB,CAC1B,QAAoC,EACpC,UAAmB,EAAA;QAEnB,MAAM,eAAe,GAAwB,IAAI,CAAC;QAClD,OAAO,SAAS,KAAK,CAEnB,KAA2B;YAE3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACxB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;oBACrC,MAAM,QAAQ,GAAG,eAAe,CAAC,iBAAiB,CAAC,IAAI,CACrD,eAAe,EACf,KAAK,CAAC,CAAC,CAAC,EACR,UAAU,CACX,CAAC;oBACF,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;iBACrB;aACF,MAAM;gBACL,KAAK,GAAG,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAC5C,eAAe,EACf,KAAK,EACL,UAAU,CACX,CAAC;aACH;YACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;gBAAC,KAAK;aAAC,CAAC,CAAC;QACvC,CAAC,CAAC;IACJ,CAAC;IAED;;;;;OAKG,CACK,oBAAoB,CAAI,MAAsB,EAAA;QACpD,MAAM,eAAe,GAAwB,IAAI,CAAC;QAClD,MAAM,UAAU,GAAG,CAAA,GAAA,QAAA,aAAa,EAAC,MAAM,CAAC,CAAC;QACzC,MAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC;QACnC,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,kBAAkB,GAAG,SAAU,MAAmB,EAAE,OAAU;YAClE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,GAAE,QAAQ,CAAC,EAAE;gBACrC,OAAO,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,CAC/D,QAAQ,EACR,UAAU,CACX,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,6EAA6E;YAC7E,wEAAwE;YACxE,sBAAsB;YACtB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,GAAE,kBAAkB,CAAC,EAAE;gBAC7C,OAAO,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAC7D,8DAA8D;gBAC9D,kBAAyB,EACzB,UAAU,CACX,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,OAAO,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC;QACF,MAAM,CAAC,QAAQ,GAAG,kBAAkB,CAAC;IACvC,CAAC;IAED;;;;;;;;;;OAUG,CACK,eAAe,CACrB,MAAS,EACT,QAAmC,EACnC,UAAmB,EAAA;QAEnB,MAAM,eAAe,GAAwB,IAAI,CAAC;QAClD,IAAI,MAAM,YAAY,KAAK,EAAE;YAC3B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;gBACtC,MAAM,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,eAAe,CACzC,MAAM,CAAC,CAAC,CAAC,EACT,QAAQ,CACa,CAAC;aACzB;YACD,OAAO,MAAM,CAAC;SACf,MAAM,IAAI,CAAA,GAAA,QAAA,oBAAoB,EAAC,MAAM,CAAC,EAAE;YACvC,IAAI,MAAM,CAAC,iBAAA,cAAc,CAAC,KAAK,IAAI,EAAE,OAAO,MAAM,CAAC;YACnD,MAAM,CAAC,iBAAA,cAAc,CAAC,GAAG,IAAI,CAAC;YAE9B,MAAM,UAAU,GAAuB,KAAK,UAC1C,GAAG,MAAyC;gBAE5C,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,KAAK,SAAS,EAAE;oBACzD,OAAO,MAAM,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;iBACzC;gBACD,MAAM,QAAQ,GAAG,CAAA,GAAA,QAAA,cAAc,EAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;gBACtD,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE;oBAC3D,UAAU,EAAE,QAAQ,CAAC,UAAU;iBAChC,CAAC,CAAC;gBACH,IAAI;oBACF,OAAO,MAAM,GAAG,CAAC,OAAO,CAAC,IAAI,CAI3B,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,EAC7C,MAAM,EACN,SAAS,EACT,GAAG,MAAM,CACV,CAAC;iBACH,CAAC,OAAO,GAAQ,EAAE;oBACjB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;oBAC1B,IAAI,CAAC,SAAS,CAAC;wBACb,IAAI,EAAE,GAAG,CAAC,cAAc,CAAC,KAAK;wBAC9B,OAAO,EAAE,GAAG,CAAC,OAAO;qBACrB,CAAC,CAAC;oBACH,MAAM,GAAG,CAAC;iBACX,QAAS;oBACR,IAAI,CAAC,GAAG,EAAE,CAAC;iBACZ;YACH,CAAC,CAAC;YACF,OAAO,UAAe,CAAC;SACxB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG,CACK,iBAAiB,CACvB,KAA2B,EAC3B,UAAmB,EAAA;;QAEnB,MAAM,eAAe,GAAwB,IAAI,CAAC;QAClD,IAAI,KAAK,CAAC,iBAAA,cAAc,CAAC,KAAK,IAAI,EAAE,OAAO,KAAK,CAAC;QACjD,KAAK,CAAC,iBAAA,cAAc,CAAC,GAAG,IAAI,CAAC;QAE7B,MAAM,WAAW,IAEY,UAAU,CAAC,EAAE;YACxC,OAAO,KAAK,UAAW,GAAG,MAAyC;gBACjE,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,KAAK,SAAS,EAAE;oBACzD,OAAO,MAAM,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC;iBAC/C;gBACD,MAAM,WAAW,GAAG,CAAA,GAAA,OAAA,cAAc,EAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;gBACzD,IAAI,CAAA,WAAW,KAAA,QAAX,WAAW,KAAA,KAAA,IAAA,KAAA,IAAX,WAAW,CAAE,IAAI,MAAK,OAAA,OAAO,CAAC,IAAI,EAAE;oBACtC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;iBAChC;gBACD,MAAM,QAAQ,GAAG,CAAA,GAAA,QAAA,gBAAgB,EAAC,KAAK,EAAE,UAAU,CAAC,CAAC;gBACrD,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE;oBAC3D,UAAU,EAAE,QAAQ,CAAC,UAAU;iBAChC,CAAC,CAAC;gBACH,IAAI;oBACF,OAAO,MAAM,GAAG,CAAC,OAAO,CAAC,IAAI,CAC3B,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,EAC7C,GAAG,CAAG,CAAD,SAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CACvC,CAAC;iBACH,CAAC,OAAO,GAAQ,EAAE;oBACjB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;oBAC1B,IAAI,CAAC,SAAS,CAAC;wBACb,IAAI,EAAE,GAAG,CAAC,cAAc,CAAC,KAAK;wBAC9B,OAAO,EAAE,GAAG,CAAC,OAAO;qBACrB,CAAC,CAAC;oBACH,MAAM,GAAG,CAAC;iBACX,QAAS;oBACR,IAAI,CAAC,GAAG,EAAE,CAAC;iBACZ;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;YACvC,KAAK,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,OAAgC,CAAC,CAAC;SACrE,MAAM,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;YAC9C,MAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC;YACjC,KAAK,CAAC,OAAO,GAAG,SAAU,MAAM;gBAC9B,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,UAAU,EAAE;oBACzC,OAAO,CAAC,OAAO,GAAG,WAAW,CAC3B,OAAO,CAAC,OAAgC,CACzC,CAAC;iBACH;gBACD,OAAO,OAAO,CAAC;YACjB,CAAC,CAAC;SACH,MAAM,IAAI,OAAO,CAAA,CAAA,KAAA,KAAK,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,OAAO,CAAA,KAAK,UAAU,EAAE;YACvD,KAAK,CAAC,OAAO,CAAC,OAAO,GAAG,WAAW,CACjC,KAAK,CAAC,OAAO,CAAC,OAAgC,CAC/C,CAAC;SACH;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAxXD,QAAA,mBAAA,GAAA,oBAwXC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17214, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-hapi/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './enums/AttributeNames';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,0JAAA,SAAkC;AAClC,+JAAA,SAAuC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17254, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-http/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport enum AttributeNames {\n  HTTP_ERROR_NAME = 'http.error_name',\n  HTTP_ERROR_MESSAGE = 'http.error_message',\n  HTTP_STATUS_TEXT = 'http.status_text',\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH;;GAEG,CACH,IAAY,cAIX;AAJD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;IACnC,cAAA,CAAA,qBAAA,GAAA,oBAAyC,CAAA;IACzC,cAAA,CAAA,mBAAA,GAAA,kBAAqC,CAAA;AACvC,CAAC,EAJW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAIzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17286, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-http/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MetricAttributes,\n  SpanAttributes,\n  SpanStatusCode,\n  Span,\n  context,\n  SpanKind,\n} from '@opentelemetry/api';\nimport {\n  NETTRANSPORTVALUES_IP_TCP,\n  NETTRANSPORTVALUES_IP_UDP,\n  SEMATTRS_HTTP_CLIENT_IP,\n  SEMATTRS_HTTP_FLAVOR,\n  SEMATTRS_HTTP_HOST,\n  SEMATTRS_HTTP_METHOD,\n  SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH,\n  SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n  SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH,\n  SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n  SEMATTRS_HTTP_ROUTE,\n  SEMATTRS_HTTP_SCHEME,\n  SEMATTRS_HTTP_SERVER_NAME,\n  SEMATTRS_HTTP_STATUS_CODE,\n  SEMATTRS_HTTP_TARGET,\n  SEMATTRS_HTTP_URL,\n  SEMATTRS_HTTP_USER_AGENT,\n  SEMATTRS_NET_HOST_IP,\n  SEMATTRS_NET_HOST_NAME,\n  SEMATTRS_NET_HOST_PORT,\n  SEMATTRS_NET_PEER_IP,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n  SEMATTRS_NET_TRANSPORT,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  IncomingHttpHeaders,\n  IncomingMessage,\n  OutgoingHttpHeaders,\n  RequestOptions,\n  ServerResponse,\n} from 'http';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport * as url from 'url';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { Err, IgnoreMatcher, ParsedRequestOptions } from './types';\n\n/**\n * Get an absolute url\n */\nexport const getAbsoluteUrl = (\n  requestUrl: ParsedRequestOptions | null,\n  headers: IncomingHttpHeaders | OutgoingHttpHeaders,\n  fallbackProtocol = 'http:'\n): string => {\n  const reqUrlObject = requestUrl || {};\n  const protocol = reqUrlObject.protocol || fallbackProtocol;\n  const port = (reqUrlObject.port || '').toString();\n  const path = reqUrlObject.path || '/';\n  let host =\n    reqUrlObject.host || reqUrlObject.hostname || headers.host || 'localhost';\n\n  // if there is no port in host and there is a port\n  // it should be displayed if it's not 80 and 443 (default ports)\n  if (\n    (host as string).indexOf(':') === -1 &&\n    port &&\n    port !== '80' &&\n    port !== '443'\n  ) {\n    host += `:${port}`;\n  }\n\n  return `${protocol}//${host}${path}`;\n};\n\n/**\n * Parse status code from HTTP response. [More details](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/data-http.md#status)\n */\nexport const parseResponseStatus = (\n  kind: SpanKind,\n  statusCode?: number\n): SpanStatusCode => {\n  const upperBound = kind === SpanKind.CLIENT ? 400 : 500;\n  // 1xx, 2xx, 3xx are OK on client and server\n  // 4xx is OK on server\n  if (statusCode && statusCode >= 100 && statusCode < upperBound) {\n    return SpanStatusCode.UNSET;\n  }\n\n  // All other codes are error\n  return SpanStatusCode.ERROR;\n};\n\n/**\n * Check whether the given obj match pattern\n * @param constant e.g URL of request\n * @param pattern Match pattern\n */\nexport const satisfiesPattern = (\n  constant: string,\n  pattern: IgnoreMatcher\n): boolean => {\n  if (typeof pattern === 'string') {\n    return pattern === constant;\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(constant);\n  } else if (typeof pattern === 'function') {\n    return pattern(constant);\n  } else {\n    throw new TypeError('Pattern is in unsupported datatype');\n  }\n};\n\n/**\n * Check whether the given request is ignored by configuration\n * It will not re-throw exceptions from `list` provided by the client\n * @param constant e.g URL of request\n * @param [list] List of ignore patterns\n * @param [onException] callback for doing something when an exception has\n *     occurred\n */\nexport const isIgnored = (\n  constant: string,\n  list?: IgnoreMatcher[],\n  onException?: (error: unknown) => void\n): boolean => {\n  if (!list) {\n    // No ignored urls - trace everything\n    return false;\n  }\n  // Try/catch outside the loop for failing fast\n  try {\n    for (const pattern of list) {\n      if (satisfiesPattern(constant, pattern)) {\n        return true;\n      }\n    }\n  } catch (e) {\n    if (onException) {\n      onException(e);\n    }\n  }\n\n  return false;\n};\n\n/**\n * Sets the span with the error passed in params\n * @param {Span} span the span that need to be set\n * @param {Error} error error that will be set to span\n */\nexport const setSpanWithError = (span: Span, error: Err): void => {\n  const message = error.message;\n\n  span.setAttribute(AttributeNames.HTTP_ERROR_NAME, error.name);\n  span.setAttribute(AttributeNames.HTTP_ERROR_MESSAGE, message);\n  span.setStatus({ code: SpanStatusCode.ERROR, message });\n  span.recordException(error);\n};\n\n/**\n * Adds attributes for request content-length and content-encoding HTTP headers\n * @param { IncomingMessage } Request object whose headers will be analyzed\n * @param { SpanAttributes } SpanAttributes object to be modified\n */\nexport const setRequestContentLengthAttribute = (\n  request: IncomingMessage,\n  attributes: SpanAttributes\n): void => {\n  const length = getContentLength(request.headers);\n  if (length === null) return;\n\n  if (isCompressed(request.headers)) {\n    attributes[SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH] = length;\n  } else {\n    attributes[SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED] = length;\n  }\n};\n\n/**\n * Adds attributes for response content-length and content-encoding HTTP headers\n * @param { IncomingMessage } Response object whose headers will be analyzed\n * @param { SpanAttributes } SpanAttributes object to be modified\n */\nexport const setResponseContentLengthAttribute = (\n  response: IncomingMessage,\n  attributes: SpanAttributes\n): void => {\n  const length = getContentLength(response.headers);\n  if (length === null) return;\n\n  if (isCompressed(response.headers)) {\n    attributes[SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH] = length;\n  } else {\n    attributes[SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED] = length;\n  }\n};\n\nfunction getContentLength(\n  headers: OutgoingHttpHeaders | IncomingHttpHeaders\n): number | null {\n  const contentLengthHeader = headers['content-length'];\n  if (contentLengthHeader === undefined) return null;\n\n  const contentLength = parseInt(contentLengthHeader as string, 10);\n  if (isNaN(contentLength)) return null;\n\n  return contentLength;\n}\n\nexport const isCompressed = (\n  headers: OutgoingHttpHeaders | IncomingHttpHeaders\n): boolean => {\n  const encoding = headers['content-encoding'];\n\n  return !!encoding && encoding !== 'identity';\n};\n\n/**\n * Makes sure options is an url object\n * return an object with default value and parsed options\n * @param options original options for the request\n * @param [extraOptions] additional options for the request\n */\nexport const getRequestInfo = (\n  options: url.URL | RequestOptions | string,\n  extraOptions?: RequestOptions\n): {\n  origin: string;\n  pathname: string;\n  method: string;\n  optionsParsed: RequestOptions;\n} => {\n  let pathname = '/';\n  let origin = '';\n  let optionsParsed: RequestOptions;\n  if (typeof options === 'string') {\n    optionsParsed = url.parse(options);\n    pathname = (optionsParsed as url.UrlWithStringQuery).pathname || '/';\n    origin = `${optionsParsed.protocol || 'http:'}//${optionsParsed.host}`;\n    if (extraOptions !== undefined) {\n      Object.assign(optionsParsed, extraOptions);\n    }\n  } else if (options instanceof url.URL) {\n    optionsParsed = {\n      protocol: options.protocol,\n      hostname:\n        typeof options.hostname === 'string' && options.hostname.startsWith('[')\n          ? options.hostname.slice(1, -1)\n          : options.hostname,\n      path: `${options.pathname || ''}${options.search || ''}`,\n    };\n    if (options.port !== '') {\n      optionsParsed.port = Number(options.port);\n    }\n    if (options.username || options.password) {\n      optionsParsed.auth = `${options.username}:${options.password}`;\n    }\n    pathname = options.pathname;\n    origin = options.origin;\n    if (extraOptions !== undefined) {\n      Object.assign(optionsParsed, extraOptions);\n    }\n  } else {\n    optionsParsed = Object.assign(\n      { protocol: options.host ? 'http:' : undefined },\n      options\n    );\n    pathname = (options as url.URL).pathname;\n    if (!pathname && optionsParsed.path) {\n      pathname = url.parse(optionsParsed.path).pathname || '/';\n    }\n    const hostname =\n      optionsParsed.host ||\n      (optionsParsed.port != null\n        ? `${optionsParsed.hostname}${optionsParsed.port}`\n        : optionsParsed.hostname);\n    origin = `${optionsParsed.protocol || 'http:'}//${hostname}`;\n  }\n\n  // some packages return method in lowercase..\n  // ensure upperCase for consistency\n  const method = optionsParsed.method\n    ? optionsParsed.method.toUpperCase()\n    : 'GET';\n\n  return { origin, pathname, method, optionsParsed };\n};\n\n/**\n * Makes sure options is of type string or object\n * @param options for the request\n */\nexport const isValidOptionsType = (options: unknown): boolean => {\n  if (!options) {\n    return false;\n  }\n\n  const type = typeof options;\n  return type === 'string' || (type === 'object' && !Array.isArray(options));\n};\n\nexport const extractHostnameAndPort = (\n  requestOptions: Pick<\n    ParsedRequestOptions,\n    'hostname' | 'host' | 'port' | 'protocol'\n  >\n): { hostname: string; port: number | string } => {\n  if (requestOptions.hostname && requestOptions.port) {\n    return { hostname: requestOptions.hostname, port: requestOptions.port };\n  }\n  const matches = requestOptions.host?.match(/^([^:/ ]+)(:\\d{1,5})?/) || null;\n  const hostname =\n    requestOptions.hostname || (matches === null ? 'localhost' : matches[1]);\n  let port = requestOptions.port;\n  if (!port) {\n    if (matches && matches[2]) {\n      // remove the leading \":\". The extracted port would be something like \":8080\"\n      port = matches[2].substring(1);\n    } else {\n      port = requestOptions.protocol === 'https:' ? '443' : '80';\n    }\n  }\n  return { hostname, port };\n};\n\n/**\n * Returns outgoing request attributes scoped to the options passed to the request\n * @param {ParsedRequestOptions} requestOptions the same options used to make the request\n * @param {{ component: string, hostname: string, hookAttributes?: SpanAttributes }} options used to pass data needed to create attributes\n */\nexport const getOutgoingRequestAttributes = (\n  requestOptions: ParsedRequestOptions,\n  options: {\n    component: string;\n    hostname: string;\n    port: string | number;\n    hookAttributes?: SpanAttributes;\n  }\n): SpanAttributes => {\n  const hostname = options.hostname;\n  const port = options.port;\n  const requestMethod = requestOptions.method;\n  const method = requestMethod ? requestMethod.toUpperCase() : 'GET';\n  const headers = requestOptions.headers || {};\n  const userAgent = headers['user-agent'];\n  const attributes: SpanAttributes = {\n    [SEMATTRS_HTTP_URL]: getAbsoluteUrl(\n      requestOptions,\n      headers,\n      `${options.component}:`\n    ),\n    [SEMATTRS_HTTP_METHOD]: method,\n    [SEMATTRS_HTTP_TARGET]: requestOptions.path || '/',\n    [SEMATTRS_NET_PEER_NAME]: hostname,\n    [SEMATTRS_HTTP_HOST]: headers.host ?? `${hostname}:${port}`,\n  };\n\n  if (userAgent !== undefined) {\n    attributes[SEMATTRS_HTTP_USER_AGENT] = userAgent;\n  }\n  return Object.assign(attributes, options.hookAttributes);\n};\n\n/**\n * Returns outgoing request Metric attributes scoped to the request data\n * @param {SpanAttributes} spanAttributes the span attributes\n */\nexport const getOutgoingRequestMetricAttributes = (\n  spanAttributes: SpanAttributes\n): MetricAttributes => {\n  const metricAttributes: MetricAttributes = {};\n  metricAttributes[SEMATTRS_HTTP_METHOD] = spanAttributes[SEMATTRS_HTTP_METHOD];\n  metricAttributes[SEMATTRS_NET_PEER_NAME] =\n    spanAttributes[SEMATTRS_NET_PEER_NAME];\n  //TODO: http.url attribute, it should substitute any parameters to avoid high cardinality.\n  return metricAttributes;\n};\n\n/**\n * Returns attributes related to the kind of HTTP protocol used\n * @param {string} [kind] Kind of HTTP protocol used: \"1.0\", \"1.1\", \"2\", \"SPDY\" or \"QUIC\".\n */\nexport const setAttributesFromHttpKind = (\n  kind: string | undefined,\n  attributes: SpanAttributes\n): void => {\n  if (kind) {\n    attributes[SEMATTRS_HTTP_FLAVOR] = kind;\n    if (kind.toUpperCase() !== 'QUIC') {\n      attributes[SEMATTRS_NET_TRANSPORT] = NETTRANSPORTVALUES_IP_TCP;\n    } else {\n      attributes[SEMATTRS_NET_TRANSPORT] = NETTRANSPORTVALUES_IP_UDP;\n    }\n  }\n};\n\n/**\n * Returns outgoing request attributes scoped to the response data\n * @param {IncomingMessage} response the response object\n * @param {{ hostname: string }} options used to pass data needed to create attributes\n */\nexport const getOutgoingRequestAttributesOnResponse = (\n  response: IncomingMessage\n): SpanAttributes => {\n  const { statusCode, statusMessage, httpVersion, socket } = response;\n  const attributes: SpanAttributes = {};\n  if (socket) {\n    const { remoteAddress, remotePort } = socket;\n    attributes[SEMATTRS_NET_PEER_IP] = remoteAddress;\n    attributes[SEMATTRS_NET_PEER_PORT] = remotePort;\n  }\n  setResponseContentLengthAttribute(response, attributes);\n\n  if (statusCode) {\n    attributes[SEMATTRS_HTTP_STATUS_CODE] = statusCode;\n    attributes[AttributeNames.HTTP_STATUS_TEXT] = (\n      statusMessage || ''\n    ).toUpperCase();\n  }\n\n  setAttributesFromHttpKind(httpVersion, attributes);\n  return attributes;\n};\n\n/**\n * Returns outgoing request Metric attributes scoped to the response data\n * @param {SpanAttributes} spanAttributes the span attributes\n */\nexport const getOutgoingRequestMetricAttributesOnResponse = (\n  spanAttributes: SpanAttributes\n): MetricAttributes => {\n  const metricAttributes: MetricAttributes = {};\n  metricAttributes[SEMATTRS_NET_PEER_PORT] =\n    spanAttributes[SEMATTRS_NET_PEER_PORT];\n  metricAttributes[SEMATTRS_HTTP_STATUS_CODE] =\n    spanAttributes[SEMATTRS_HTTP_STATUS_CODE];\n  metricAttributes[SEMATTRS_HTTP_FLAVOR] = spanAttributes[SEMATTRS_HTTP_FLAVOR];\n  return metricAttributes;\n};\n\n/**\n * Returns incoming request attributes scoped to the request data\n * @param {IncomingMessage} request the request object\n * @param {{ component: string, serverName?: string, hookAttributes?: SpanAttributes }} options used to pass data needed to create attributes\n */\nexport const getIncomingRequestAttributes = (\n  request: IncomingMessage,\n  options: {\n    component: string;\n    serverName?: string;\n    hookAttributes?: SpanAttributes;\n  }\n): SpanAttributes => {\n  const headers = request.headers;\n  const userAgent = headers['user-agent'];\n  const ips = headers['x-forwarded-for'];\n  const method = request.method || 'GET';\n  const httpVersion = request.httpVersion;\n  const requestUrl = request.url ? url.parse(request.url) : null;\n  const host = requestUrl?.host || headers.host;\n  const hostname =\n    requestUrl?.hostname ||\n    host?.replace(/^(.*)(:[0-9]{1,5})/, '$1') ||\n    'localhost';\n  const serverName = options.serverName;\n  const attributes: SpanAttributes = {\n    [SEMATTRS_HTTP_URL]: getAbsoluteUrl(\n      requestUrl,\n      headers,\n      `${options.component}:`\n    ),\n    [SEMATTRS_HTTP_HOST]: host,\n    [SEMATTRS_NET_HOST_NAME]: hostname,\n    [SEMATTRS_HTTP_METHOD]: method,\n    [SEMATTRS_HTTP_SCHEME]: options.component,\n  };\n\n  if (typeof ips === 'string') {\n    attributes[SEMATTRS_HTTP_CLIENT_IP] = ips.split(',')[0];\n  }\n\n  if (typeof serverName === 'string') {\n    attributes[SEMATTRS_HTTP_SERVER_NAME] = serverName;\n  }\n\n  if (requestUrl) {\n    attributes[SEMATTRS_HTTP_TARGET] = requestUrl.path || '/';\n  }\n\n  if (userAgent !== undefined) {\n    attributes[SEMATTRS_HTTP_USER_AGENT] = userAgent;\n  }\n  setRequestContentLengthAttribute(request, attributes);\n  setAttributesFromHttpKind(httpVersion, attributes);\n  return Object.assign(attributes, options.hookAttributes);\n};\n\n/**\n * Returns incoming request Metric attributes scoped to the request data\n * @param {SpanAttributes} spanAttributes the span attributes\n * @param {{ component: string }} options used to pass data needed to create attributes\n */\nexport const getIncomingRequestMetricAttributes = (\n  spanAttributes: SpanAttributes\n): MetricAttributes => {\n  const metricAttributes: MetricAttributes = {};\n  metricAttributes[SEMATTRS_HTTP_SCHEME] = spanAttributes[SEMATTRS_HTTP_SCHEME];\n  metricAttributes[SEMATTRS_HTTP_METHOD] = spanAttributes[SEMATTRS_HTTP_METHOD];\n  metricAttributes[SEMATTRS_NET_HOST_NAME] =\n    spanAttributes[SEMATTRS_NET_HOST_NAME];\n  metricAttributes[SEMATTRS_HTTP_FLAVOR] = spanAttributes[SEMATTRS_HTTP_FLAVOR];\n  //TODO: http.target attribute, it should substitute any parameters to avoid high cardinality.\n  return metricAttributes;\n};\n\n/**\n * Returns incoming request attributes scoped to the response data\n * @param {(ServerResponse & { socket: Socket; })} response the response object\n */\nexport const getIncomingRequestAttributesOnResponse = (\n  request: IncomingMessage,\n  response: ServerResponse\n): SpanAttributes => {\n  // take socket from the request,\n  // since it may be detached from the response object in keep-alive mode\n  const { socket } = request;\n  const { statusCode, statusMessage } = response;\n\n  const rpcMetadata = getRPCMetadata(context.active());\n  const attributes: SpanAttributes = {};\n  if (socket) {\n    const { localAddress, localPort, remoteAddress, remotePort } = socket;\n    attributes[SEMATTRS_NET_HOST_IP] = localAddress;\n    attributes[SEMATTRS_NET_HOST_PORT] = localPort;\n    attributes[SEMATTRS_NET_PEER_IP] = remoteAddress;\n    attributes[SEMATTRS_NET_PEER_PORT] = remotePort;\n  }\n  attributes[SEMATTRS_HTTP_STATUS_CODE] = statusCode;\n  attributes[AttributeNames.HTTP_STATUS_TEXT] = (\n    statusMessage || ''\n  ).toUpperCase();\n\n  if (rpcMetadata?.type === RPCType.HTTP && rpcMetadata.route !== undefined) {\n    attributes[SEMATTRS_HTTP_ROUTE] = rpcMetadata.route;\n  }\n  return attributes;\n};\n\n/**\n * Returns incoming request Metric attributes scoped to the request data\n * @param {SpanAttributes} spanAttributes the span attributes\n */\nexport const getIncomingRequestMetricAttributesOnResponse = (\n  spanAttributes: SpanAttributes\n): MetricAttributes => {\n  const metricAttributes: MetricAttributes = {};\n  metricAttributes[SEMATTRS_HTTP_STATUS_CODE] =\n    spanAttributes[SEMATTRS_HTTP_STATUS_CODE];\n  metricAttributes[SEMATTRS_NET_HOST_PORT] =\n    spanAttributes[SEMATTRS_NET_HOST_PORT];\n  if (spanAttributes[SEMATTRS_HTTP_ROUTE] !== undefined) {\n    metricAttributes[SEMATTRS_HTTP_ROUTE] = spanAttributes[SEMATTRS_HTTP_ROUTE];\n  }\n  return metricAttributes;\n};\n\nexport function headerCapture(type: 'request' | 'response', headers: string[]) {\n  const normalizedHeaders = new Map<string, string>();\n  for (let i = 0, len = headers.length; i < len; i++) {\n    const capturedHeader = headers[i].toLowerCase();\n    normalizedHeaders.set(capturedHeader, capturedHeader.replace(/-/g, '_'));\n  }\n\n  return (\n    span: Span,\n    getHeader: (key: string) => undefined | string | string[] | number\n  ) => {\n    for (const capturedHeader of normalizedHeaders.keys()) {\n      const value = getHeader(capturedHeader);\n\n      if (value === undefined) {\n        continue;\n      }\n\n      const normalizedHeader = normalizedHeaders.get(capturedHeader);\n      const key = `http.${type}.header.${normalizedHeader}`;\n\n      if (typeof value === 'string') {\n        span.setAttribute(key, [value]);\n      } else if (Array.isArray(value)) {\n        span.setAttribute(key, value);\n      } else {\n        span.setAttribute(key, [value]);\n      }\n    }\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17734, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-http/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.52.1';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,OAAO,GAAG,QAAQ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17760, "column": 0}, "map": {"version":3,"file":"http.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-http/src/http.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  context,\n  HrTime,\n  INVALID_SPAN_CONTEXT,\n  propagation,\n  ROOT_CONTEXT,\n  Span,\n  SpanKind,\n  SpanOptions,\n  SpanStatus,\n  SpanStatusCode,\n  trace,\n  Histogram,\n  MetricAttributes,\n  ValueType,\n} from '@opentelemetry/api';\nimport {\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMilliseconds,\n  suppressTracing,\n} from '@opentelemetry/core';\nimport type * as http from 'http';\nimport type * as https from 'https';\nimport { Socket } from 'net';\nimport * as semver from 'semver';\nimport * as url from 'url';\nimport {\n  Err,\n  Func,\n  Http,\n  HttpInstrumentationConfig,\n  HttpRequestArgs,\n  Https,\n} from './types';\nimport * as utils from './utils';\nimport { VERSION } from './version';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { RPCMetadata, RPCType, setRPCMetadata } from '@opentelemetry/core';\nimport { errorMonitor } from 'events';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\n\n/**\n * Http instrumentation instrumentation for Opentelemetry\n */\nexport class HttpInstrumentation extends InstrumentationBase<HttpInstrumentationConfig> {\n  /** keep track on spans not ended */\n  private readonly _spanNotEnded: WeakSet<Span> = new WeakSet<Span>();\n  private _headerCapture;\n  private _httpServerDurationHistogram!: Histogram;\n  private _httpClientDurationHistogram!: Histogram;\n\n  constructor(config: HttpInstrumentationConfig = {}) {\n    super('@opentelemetry/instrumentation-http', VERSION, config);\n    this._headerCapture = this._createHeaderCapture();\n  }\n\n  protected override _updateMetricInstruments() {\n    this._httpServerDurationHistogram = this.meter.createHistogram(\n      'http.server.duration',\n      {\n        description: 'Measures the duration of inbound HTTP requests.',\n        unit: 'ms',\n        valueType: ValueType.DOUBLE,\n      }\n    );\n    this._httpClientDurationHistogram = this.meter.createHistogram(\n      'http.client.duration',\n      {\n        description: 'Measures the duration of outbound HTTP requests.',\n        unit: 'ms',\n        valueType: ValueType.DOUBLE,\n      }\n    );\n  }\n\n  override setConfig(config: HttpInstrumentationConfig = {}): void {\n    super.setConfig(config);\n    this._headerCapture = this._createHeaderCapture();\n  }\n\n  init(): [\n    InstrumentationNodeModuleDefinition,\n    InstrumentationNodeModuleDefinition,\n  ] {\n    return [this._getHttpsInstrumentation(), this._getHttpInstrumentation()];\n  }\n\n  private _getHttpInstrumentation() {\n    return new InstrumentationNodeModuleDefinition(\n      'http',\n      ['*'],\n      (moduleExports: Http): Http => {\n        this._wrap(\n          moduleExports,\n          'request',\n          this._getPatchOutgoingRequestFunction('http')\n        );\n        this._wrap(\n          moduleExports,\n          'get',\n          this._getPatchOutgoingGetFunction(moduleExports.request)\n        );\n        this._wrap(\n          moduleExports.Server.prototype,\n          'emit',\n          this._getPatchIncomingRequestFunction('http')\n        );\n        return moduleExports;\n      },\n      (moduleExports: Http) => {\n        if (moduleExports === undefined) return;\n\n        this._unwrap(moduleExports, 'request');\n        this._unwrap(moduleExports, 'get');\n        this._unwrap(moduleExports.Server.prototype, 'emit');\n      }\n    );\n  }\n\n  private _getHttpsInstrumentation() {\n    return new InstrumentationNodeModuleDefinition(\n      'https',\n      ['*'],\n      (moduleExports: Https): Https => {\n        this._wrap(\n          moduleExports,\n          'request',\n          this._getPatchHttpsOutgoingRequestFunction('https')\n        );\n        this._wrap(\n          moduleExports,\n          'get',\n          this._getPatchHttpsOutgoingGetFunction(moduleExports.request)\n        );\n        this._wrap(\n          moduleExports.Server.prototype,\n          'emit',\n          this._getPatchIncomingRequestFunction('https')\n        );\n        return moduleExports;\n      },\n      (moduleExports: Https) => {\n        if (moduleExports === undefined) return;\n\n        this._unwrap(moduleExports, 'request');\n        this._unwrap(moduleExports, 'get');\n        this._unwrap(moduleExports.Server.prototype, 'emit');\n      }\n    );\n  }\n\n  /**\n   * Creates spans for incoming requests, restoring spans' context if applied.\n   */\n  protected _getPatchIncomingRequestFunction(component: 'http' | 'https') {\n    return (\n      original: (event: string, ...args: unknown[]) => boolean\n    ): ((this: unknown, event: string, ...args: unknown[]) => boolean) => {\n      return this._incomingRequestFunction(component, original);\n    };\n  }\n\n  /**\n   * Creates spans for outgoing requests, sending spans' context for distributed\n   * tracing.\n   */\n  protected _getPatchOutgoingRequestFunction(component: 'http' | 'https') {\n    return (original: Func<http.ClientRequest>): Func<http.ClientRequest> => {\n      return this._outgoingRequestFunction(component, original);\n    };\n  }\n\n  protected _getPatchOutgoingGetFunction(\n    clientRequest: (\n      options: http.RequestOptions | string | url.URL,\n      ...args: HttpRequestArgs\n    ) => http.ClientRequest\n  ) {\n    return (_original: Func<http.ClientRequest>): Func<http.ClientRequest> => {\n      // Re-implement http.get. This needs to be done (instead of using\n      // getPatchOutgoingRequestFunction to patch it) because we need to\n      // set the trace context header before the returned http.ClientRequest is\n      // ended. The Node.js docs state that the only differences between\n      // request and get are that (1) get defaults to the HTTP GET method and\n      // (2) the returned request object is ended immediately. The former is\n      // already true (at least in supported Node versions up to v10), so we\n      // simply follow the latter. Ref:\n      // https://nodejs.org/dist/latest/docs/api/http.html#http_http_get_options_callback\n      // https://github.com/googleapis/cloud-trace-nodejs/blob/master/src/instrumentations/instrumentation-http.ts#L198\n      return function outgoingGetRequest<\n        T extends http.RequestOptions | string | url.URL,\n      >(options: T, ...args: HttpRequestArgs): http.ClientRequest {\n        const req = clientRequest(options, ...args);\n        req.end();\n        return req;\n      };\n    };\n  }\n\n  /** Patches HTTPS outgoing requests */\n  private _getPatchHttpsOutgoingRequestFunction(component: 'http' | 'https') {\n    return (original: Func<http.ClientRequest>): Func<http.ClientRequest> => {\n      const instrumentation = this;\n      return function httpsOutgoingRequest(\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        options: https.RequestOptions | string | URL,\n        ...args: HttpRequestArgs\n      ): http.ClientRequest {\n        // Makes sure options will have default HTTPS parameters\n        if (\n          component === 'https' &&\n          typeof options === 'object' &&\n          options?.constructor?.name !== 'URL'\n        ) {\n          options = Object.assign({}, options);\n          instrumentation._setDefaultOptions(options);\n        }\n        return instrumentation._getPatchOutgoingRequestFunction(component)(\n          original\n        )(options, ...args);\n      };\n    };\n  }\n\n  private _setDefaultOptions(options: https.RequestOptions) {\n    options.protocol = options.protocol || 'https:';\n    options.port = options.port || 443;\n  }\n\n  /** Patches HTTPS outgoing get requests */\n  private _getPatchHttpsOutgoingGetFunction(\n    clientRequest: (\n      // eslint-disable-next-line node/no-unsupported-features/node-builtins\n      options: http.RequestOptions | string | URL,\n      ...args: HttpRequestArgs\n    ) => http.ClientRequest\n  ) {\n    return (original: Func<http.ClientRequest>): Func<http.ClientRequest> => {\n      const instrumentation = this;\n      return function httpsOutgoingRequest(\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        options: https.RequestOptions | string | URL,\n        ...args: HttpRequestArgs\n      ): http.ClientRequest {\n        return instrumentation._getPatchOutgoingGetFunction(clientRequest)(\n          original\n        )(options, ...args);\n      };\n    };\n  }\n\n  /**\n   * Attach event listeners to a client request to end span and add span attributes.\n   *\n   * @param request The original request object.\n   * @param span representing the current operation\n   * @param startTime representing the start time of the request to calculate duration in Metric\n   * @param metricAttributes metric attributes\n   */\n  private _traceClientRequest(\n    request: http.ClientRequest,\n    span: Span,\n    startTime: HrTime,\n    metricAttributes: MetricAttributes\n  ): http.ClientRequest {\n    if (this.getConfig().requestHook) {\n      this._callRequestHook(span, request);\n    }\n\n    /**\n     * Determines if the request has errored or the response has ended/errored.\n     */\n    let responseFinished = false;\n\n    /*\n     * User 'response' event listeners can be added before our listener,\n     * force our listener to be the first, so response emitter is bound\n     * before any user listeners are added to it.\n     */\n    request.prependListener(\n      'response',\n      (response: http.IncomingMessage & { aborted?: boolean }) => {\n        this._diag.debug('outgoingRequest on response()');\n        if (request.listenerCount('response') <= 1) {\n          response.resume();\n        }\n        const responseAttributes =\n          utils.getOutgoingRequestAttributesOnResponse(response);\n        span.setAttributes(responseAttributes);\n        metricAttributes = Object.assign(\n          metricAttributes,\n          utils.getOutgoingRequestMetricAttributesOnResponse(responseAttributes)\n        );\n\n        if (this.getConfig().responseHook) {\n          this._callResponseHook(span, response);\n        }\n\n        this._headerCapture.client.captureRequestHeaders(span, header =>\n          request.getHeader(header)\n        );\n        this._headerCapture.client.captureResponseHeaders(\n          span,\n          header => response.headers[header]\n        );\n\n        context.bind(context.active(), response);\n\n        const endHandler = () => {\n          this._diag.debug('outgoingRequest on end()');\n          if (responseFinished) {\n            return;\n          }\n          responseFinished = true;\n          let status: SpanStatus;\n\n          if (response.aborted && !response.complete) {\n            status = { code: SpanStatusCode.ERROR };\n          } else {\n            status = {\n              code: utils.parseResponseStatus(\n                SpanKind.CLIENT,\n                response.statusCode\n              ),\n            };\n          }\n\n          span.setStatus(status);\n\n          if (this.getConfig().applyCustomAttributesOnSpan) {\n            safeExecuteInTheMiddle(\n              () =>\n                this.getConfig().applyCustomAttributesOnSpan!(\n                  span,\n                  request,\n                  response\n                ),\n              () => {},\n              true\n            );\n          }\n\n          this._closeHttpSpan(\n            span,\n            SpanKind.CLIENT,\n            startTime,\n            metricAttributes\n          );\n        };\n\n        response.on('end', endHandler);\n        // See https://github.com/open-telemetry/opentelemetry-js/pull/3625#issuecomment-1475673533\n        if (semver.lt(process.version, '16.0.0')) {\n          response.on('close', endHandler);\n        }\n        response.on(errorMonitor, (error: Err) => {\n          this._diag.debug('outgoingRequest on error()', error);\n          if (responseFinished) {\n            return;\n          }\n          responseFinished = true;\n          utils.setSpanWithError(span, error);\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error.message,\n          });\n          this._closeHttpSpan(\n            span,\n            SpanKind.CLIENT,\n            startTime,\n            metricAttributes\n          );\n        });\n      }\n    );\n    request.on('close', () => {\n      this._diag.debug('outgoingRequest on request close()');\n      if (request.aborted || responseFinished) {\n        return;\n      }\n      responseFinished = true;\n      this._closeHttpSpan(span, SpanKind.CLIENT, startTime, metricAttributes);\n    });\n    request.on(errorMonitor, (error: Err) => {\n      this._diag.debug('outgoingRequest on request error()', error);\n      if (responseFinished) {\n        return;\n      }\n      responseFinished = true;\n      utils.setSpanWithError(span, error);\n      this._closeHttpSpan(span, SpanKind.CLIENT, startTime, metricAttributes);\n    });\n\n    this._diag.debug('http.ClientRequest return request');\n    return request;\n  }\n\n  private _incomingRequestFunction(\n    component: 'http' | 'https',\n    original: (event: string, ...args: unknown[]) => boolean\n  ) {\n    const instrumentation = this;\n    return function incomingRequest(\n      this: unknown,\n      event: string,\n      ...args: unknown[]\n    ): boolean {\n      // Only traces request events\n      if (event !== 'request') {\n        return original.apply(this, [event, ...args]);\n      }\n\n      const request = args[0] as http.IncomingMessage;\n      const response = args[1] as http.ServerResponse & { socket: Socket };\n      const pathname = request.url\n        ? url.parse(request.url).pathname || '/'\n        : '/';\n      const method = request.method || 'GET';\n\n      instrumentation._diag.debug(\n        `${component} instrumentation incomingRequest`\n      );\n\n      if (\n        utils.isIgnored(\n          pathname,\n          instrumentation.getConfig().ignoreIncomingPaths,\n          (e: unknown) =>\n            instrumentation._diag.error('caught ignoreIncomingPaths error: ', e)\n        ) ||\n        safeExecuteInTheMiddle(\n          () =>\n            instrumentation.getConfig().ignoreIncomingRequestHook?.(request),\n          (e: unknown) => {\n            if (e != null) {\n              instrumentation._diag.error(\n                'caught ignoreIncomingRequestHook error: ',\n                e\n              );\n            }\n          },\n          true\n        )\n      ) {\n        return context.with(suppressTracing(context.active()), () => {\n          context.bind(context.active(), request);\n          context.bind(context.active(), response);\n          return original.apply(this, [event, ...args]);\n        });\n      }\n\n      const headers = request.headers;\n\n      const spanAttributes = utils.getIncomingRequestAttributes(request, {\n        component: component,\n        serverName: instrumentation.getConfig().serverName,\n        hookAttributes: instrumentation._callStartSpanHook(\n          request,\n          instrumentation.getConfig().startIncomingSpanHook\n        ),\n      });\n\n      const spanOptions: SpanOptions = {\n        kind: SpanKind.SERVER,\n        attributes: spanAttributes,\n      };\n\n      const startTime = hrTime();\n      const metricAttributes =\n        utils.getIncomingRequestMetricAttributes(spanAttributes);\n\n      const ctx = propagation.extract(ROOT_CONTEXT, headers);\n      const span = instrumentation._startHttpSpan(method, spanOptions, ctx);\n      const rpcMetadata: RPCMetadata = {\n        type: RPCType.HTTP,\n        span,\n      };\n\n      return context.with(\n        setRPCMetadata(trace.setSpan(ctx, span), rpcMetadata),\n        () => {\n          context.bind(context.active(), request);\n          context.bind(context.active(), response);\n\n          if (instrumentation.getConfig().requestHook) {\n            instrumentation._callRequestHook(span, request);\n          }\n          if (instrumentation.getConfig().responseHook) {\n            instrumentation._callResponseHook(span, response);\n          }\n\n          instrumentation._headerCapture.server.captureRequestHeaders(\n            span,\n            header => request.headers[header]\n          );\n\n          // After 'error', no further events other than 'close' should be emitted.\n          let hasError = false;\n          response.on('close', () => {\n            if (hasError) {\n              return;\n            }\n            instrumentation._onServerResponseFinish(\n              request,\n              response,\n              span,\n              metricAttributes,\n              startTime\n            );\n          });\n          response.on(errorMonitor, (err: Err) => {\n            hasError = true;\n            instrumentation._onServerResponseError(\n              span,\n              metricAttributes,\n              startTime,\n              err\n            );\n          });\n\n          return safeExecuteInTheMiddle(\n            () => original.apply(this, [event, ...args]),\n            error => {\n              if (error) {\n                utils.setSpanWithError(span, error);\n                instrumentation._closeHttpSpan(\n                  span,\n                  SpanKind.SERVER,\n                  startTime,\n                  metricAttributes\n                );\n                throw error;\n              }\n            }\n          );\n        }\n      );\n    };\n  }\n\n  private _outgoingRequestFunction(\n    component: 'http' | 'https',\n    original: Func<http.ClientRequest>\n  ): Func<http.ClientRequest> {\n    const instrumentation = this;\n    return function outgoingRequest(\n      this: unknown,\n      options: url.URL | http.RequestOptions | string,\n      ...args: unknown[]\n    ): http.ClientRequest {\n      if (!utils.isValidOptionsType(options)) {\n        return original.apply(this, [options, ...args]);\n      }\n      const extraOptions =\n        typeof args[0] === 'object' &&\n        (typeof options === 'string' || options instanceof url.URL)\n          ? (args.shift() as http.RequestOptions)\n          : undefined;\n      const { origin, pathname, method, optionsParsed } = utils.getRequestInfo(\n        options,\n        extraOptions\n      );\n      /**\n       * Node 8's https module directly call the http one so to avoid creating\n       * 2 span for the same request we need to check that the protocol is correct\n       * See: https://github.com/nodejs/node/blob/v8.17.0/lib/https.js#L245\n       */\n      if (\n        component === 'http' &&\n        semver.lt(process.version, '9.0.0') &&\n        optionsParsed.protocol === 'https:'\n      ) {\n        return original.apply(this, [optionsParsed, ...args]);\n      }\n\n      if (\n        utils.isIgnored(\n          origin + pathname,\n          instrumentation.getConfig().ignoreOutgoingUrls,\n          (e: unknown) =>\n            instrumentation._diag.error('caught ignoreOutgoingUrls error: ', e)\n        ) ||\n        safeExecuteInTheMiddle(\n          () =>\n            instrumentation\n              .getConfig()\n              .ignoreOutgoingRequestHook?.(optionsParsed),\n          (e: unknown) => {\n            if (e != null) {\n              instrumentation._diag.error(\n                'caught ignoreOutgoingRequestHook error: ',\n                e\n              );\n            }\n          },\n          true\n        )\n      ) {\n        return original.apply(this, [optionsParsed, ...args]);\n      }\n\n      const { hostname, port } = utils.extractHostnameAndPort(optionsParsed);\n\n      const attributes = utils.getOutgoingRequestAttributes(optionsParsed, {\n        component,\n        port,\n        hostname,\n        hookAttributes: instrumentation._callStartSpanHook(\n          optionsParsed,\n          instrumentation.getConfig().startOutgoingSpanHook\n        ),\n      });\n\n      const startTime = hrTime();\n      const metricAttributes: MetricAttributes =\n        utils.getOutgoingRequestMetricAttributes(attributes);\n\n      const spanOptions: SpanOptions = {\n        kind: SpanKind.CLIENT,\n        attributes,\n      };\n      const span = instrumentation._startHttpSpan(method, spanOptions);\n\n      const parentContext = context.active();\n      const requestContext = trace.setSpan(parentContext, span);\n\n      if (!optionsParsed.headers) {\n        optionsParsed.headers = {};\n      } else {\n        // Make a copy of the headers object to avoid mutating an object the\n        // caller might have a reference to.\n        optionsParsed.headers = Object.assign({}, optionsParsed.headers);\n      }\n      propagation.inject(requestContext, optionsParsed.headers);\n\n      return context.with(requestContext, () => {\n        /*\n         * The response callback is registered before ClientRequest is bound,\n         * thus it is needed to bind it before the function call.\n         */\n        const cb = args[args.length - 1];\n        if (typeof cb === 'function') {\n          args[args.length - 1] = context.bind(parentContext, cb);\n        }\n\n        const request: http.ClientRequest = safeExecuteInTheMiddle(\n          () => original.apply(this, [optionsParsed, ...args]),\n          error => {\n            if (error) {\n              utils.setSpanWithError(span, error);\n              instrumentation._closeHttpSpan(\n                span,\n                SpanKind.CLIENT,\n                startTime,\n                metricAttributes\n              );\n              throw error;\n            }\n          }\n        );\n\n        instrumentation._diag.debug(\n          `${component} instrumentation outgoingRequest`\n        );\n        context.bind(parentContext, request);\n        return instrumentation._traceClientRequest(\n          request,\n          span,\n          startTime,\n          metricAttributes\n        );\n      });\n    };\n  }\n\n  private _onServerResponseFinish(\n    request: http.IncomingMessage,\n    response: http.ServerResponse,\n    span: Span,\n    metricAttributes: MetricAttributes,\n    startTime: HrTime\n  ) {\n    const attributes = utils.getIncomingRequestAttributesOnResponse(\n      request,\n      response\n    );\n    metricAttributes = Object.assign(\n      metricAttributes,\n      utils.getIncomingRequestMetricAttributesOnResponse(attributes)\n    );\n\n    this._headerCapture.server.captureResponseHeaders(span, header =>\n      response.getHeader(header)\n    );\n\n    span.setAttributes(attributes).setStatus({\n      code: utils.parseResponseStatus(SpanKind.SERVER, response.statusCode),\n    });\n\n    const route = attributes[SEMATTRS_HTTP_ROUTE];\n    if (route) {\n      span.updateName(`${request.method || 'GET'} ${route}`);\n    }\n\n    if (this.getConfig().applyCustomAttributesOnSpan) {\n      safeExecuteInTheMiddle(\n        () =>\n          this.getConfig().applyCustomAttributesOnSpan!(\n            span,\n            request,\n            response\n          ),\n        () => {},\n        true\n      );\n    }\n\n    this._closeHttpSpan(span, SpanKind.SERVER, startTime, metricAttributes);\n  }\n\n  private _onServerResponseError(\n    span: Span,\n    metricAttributes: MetricAttributes,\n    startTime: HrTime,\n    error: Err\n  ) {\n    utils.setSpanWithError(span, error);\n    this._closeHttpSpan(span, SpanKind.SERVER, startTime, metricAttributes);\n  }\n\n  private _startHttpSpan(\n    name: string,\n    options: SpanOptions,\n    ctx = context.active()\n  ) {\n    /*\n     * If a parent is required but not present, we use a `NoopSpan` to still\n     * propagate context without recording it.\n     */\n    const requireParent =\n      options.kind === SpanKind.CLIENT\n        ? this.getConfig().requireParentforOutgoingSpans\n        : this.getConfig().requireParentforIncomingSpans;\n\n    let span: Span;\n    const currentSpan = trace.getSpan(ctx);\n\n    if (requireParent === true && currentSpan === undefined) {\n      span = trace.wrapSpanContext(INVALID_SPAN_CONTEXT);\n    } else if (requireParent === true && currentSpan?.spanContext().isRemote) {\n      span = currentSpan;\n    } else {\n      span = this.tracer.startSpan(name, options, ctx);\n    }\n    this._spanNotEnded.add(span);\n    return span;\n  }\n\n  private _closeHttpSpan(\n    span: Span,\n    spanKind: SpanKind,\n    startTime: HrTime,\n    metricAttributes: MetricAttributes\n  ) {\n    if (!this._spanNotEnded.has(span)) {\n      return;\n    }\n\n    span.end();\n    this._spanNotEnded.delete(span);\n\n    // Record metrics\n    const duration = hrTimeToMilliseconds(hrTimeDuration(startTime, hrTime()));\n    if (spanKind === SpanKind.SERVER) {\n      this._httpServerDurationHistogram.record(duration, metricAttributes);\n    } else if (spanKind === SpanKind.CLIENT) {\n      this._httpClientDurationHistogram.record(duration, metricAttributes);\n    }\n  }\n\n  private _callResponseHook(\n    span: Span,\n    response: http.IncomingMessage | http.ServerResponse\n  ) {\n    safeExecuteInTheMiddle(\n      () => this.getConfig().responseHook!(span, response),\n      () => {},\n      true\n    );\n  }\n\n  private _callRequestHook(\n    span: Span,\n    request: http.ClientRequest | http.IncomingMessage\n  ) {\n    safeExecuteInTheMiddle(\n      () => this.getConfig().requestHook!(span, request),\n      () => {},\n      true\n    );\n  }\n\n  private _callStartSpanHook(\n    request: http.IncomingMessage | http.RequestOptions,\n    hookFunc: Function | undefined\n  ) {\n    if (typeof hookFunc === 'function') {\n      return safeExecuteInTheMiddle(\n        () => hookFunc(request),\n        () => {},\n        true\n      );\n    }\n  }\n\n  private _createHeaderCapture() {\n    const config = this.getConfig();\n\n    return {\n      client: {\n        captureRequestHeaders: utils.headerCapture(\n          'request',\n          config.headersToSpanAttributes?.client?.requestHeaders ?? []\n        ),\n        captureResponseHeaders: utils.headerCapture(\n          'response',\n          config.headersToSpanAttributes?.client?.responseHeaders ?? []\n        ),\n      },\n      server: {\n        captureRequestHeaders: utils.headerCapture(\n          'request',\n          config.headersToSpanAttributes?.server?.requestHeaders ?? []\n        ),\n        captureResponseHeaders: utils.headerCapture(\n          'response',\n          config.headersToSpanAttributes?.server?.responseHeaders ?? []\n        ),\n      },\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18254, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-http/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span, SpanAttributes } from '@opentelemetry/api';\nimport type * as http from 'http';\nimport type * as https from 'https';\nimport {\n  ClientRequest,\n  get,\n  IncomingMessage,\n  request,\n  ServerResponse,\n  RequestOptions,\n} from 'http';\nimport * as url from 'url';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport type IgnoreMatcher = string | RegExp | ((url: string) => boolean);\nexport type HttpCallback = (res: IncomingMessage) => void;\nexport type RequestFunction = typeof request;\nexport type GetFunction = typeof get;\n\nexport type HttpCallbackOptional = HttpCallback | undefined;\n\n// from node 10+\nexport type RequestSignature = [http.RequestOptions, HttpCallbackOptional] &\n  HttpCallback;\n\nexport type HttpRequestArgs = Array<HttpCallbackOptional | RequestSignature>;\n\nexport type ParsedRequestOptions =\n  | (http.RequestOptions & Partial<url.UrlWithParsedQuery>)\n  | http.RequestOptions;\nexport type Http = typeof http;\nexport type Https = typeof https;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Func<T> = (...args: any[]) => T;\n\nexport interface HttpCustomAttributeFunction {\n  (\n    span: Span,\n    request: ClientRequest | IncomingMessage,\n    response: IncomingMessage | ServerResponse\n  ): void;\n}\n\nexport interface IgnoreIncomingRequestFunction {\n  (request: IncomingMessage): boolean;\n}\n\nexport interface IgnoreOutgoingRequestFunction {\n  (request: RequestOptions): boolean;\n}\n\nexport interface HttpRequestCustomAttributeFunction {\n  (span: Span, request: ClientRequest | IncomingMessage): void;\n}\n\nexport interface HttpResponseCustomAttributeFunction {\n  (span: Span, response: IncomingMessage | ServerResponse): void;\n}\n\nexport interface StartIncomingSpanCustomAttributeFunction {\n  (request: IncomingMessage): SpanAttributes;\n}\n\nexport interface StartOutgoingSpanCustomAttributeFunction {\n  (request: RequestOptions): SpanAttributes;\n}\n\n/**\n * Options available for the HTTP instrumentation (see [documentation](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-instrumentation-http#http-instrumentation-options))\n */\nexport interface HttpInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * Not trace all incoming requests that match paths\n   * @deprecated use `ignoreIncomingRequestHook` instead\n   */\n  ignoreIncomingPaths?: IgnoreMatcher[];\n  /** Not trace all incoming requests that matched with custom function */\n  ignoreIncomingRequestHook?: IgnoreIncomingRequestFunction;\n  /**\n   * Not trace all outgoing requests that match urls\n   * @deprecated use `ignoreOutgoingRequestHook` instead\n   */\n  ignoreOutgoingUrls?: IgnoreMatcher[];\n  /** Not trace all outgoing requests that matched with custom function */\n  ignoreOutgoingRequestHook?: IgnoreOutgoingRequestFunction;\n  /** Function for adding custom attributes after response is handled */\n  applyCustomAttributesOnSpan?: HttpCustomAttributeFunction;\n  /** Function for adding custom attributes before request is handled */\n  requestHook?: HttpRequestCustomAttributeFunction;\n  /** Function for adding custom attributes before response is handled */\n  responseHook?: HttpResponseCustomAttributeFunction;\n  /** Function for adding custom attributes before a span is started in incomingRequest */\n  startIncomingSpanHook?: StartIncomingSpanCustomAttributeFunction;\n  /** Function for adding custom attributes before a span is started in outgoingRequest */\n  startOutgoingSpanHook?: StartOutgoingSpanCustomAttributeFunction;\n  /** The primary server name of the matched virtual host. */\n  serverName?: string;\n  /** Require parent to create span for outgoing requests */\n  requireParentforOutgoingSpans?: boolean;\n  /** Require parent to create span for incoming requests */\n  requireParentforIncomingSpans?: boolean;\n  /** Map the following HTTP headers to span attributes. */\n  headersToSpanAttributes?: {\n    client?: { requestHeaders?: string[]; responseHeaders?: string[] };\n    server?: { requestHeaders?: string[]; responseHeaders?: string[] };\n  };\n}\n\nexport interface Err extends Error {\n  errno?: number;\n  code?: string;\n  path?: string;\n  syscall?: string;\n  stack?: string;\n}\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18263, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-http/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './http';\nexport * from './types';\nexport * from './utils';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,+IAAA,SAAuB;AACvB,gJAAA,SAAwB;AACxB,gJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18304, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-ioredis/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span, SpanStatusCode } from '@opentelemetry/api';\n\nexport const endSpan = (\n  span: Span,\n  err: NodeJS.ErrnoException | null | undefined\n) => {\n  if (err) {\n    span.recordException(err);\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message: err.message,\n    });\n  }\n  span.end();\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAA0D;AAEnD,MAAM,OAAO,GAAG,CACrB,IAAU,EACV,GAA6C,EAC7C,EAAE;IACF,IAAI,GAAG,EAAE;QACP,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC;YACb,IAAI,EAAE,MAAA,cAAc,CAAC,KAAK;YAC1B,OAAO,EAAE,GAAG,CAAC,OAAO;SACrB,CAAC,CAAC;KACJ;IACD,IAAI,CAAC,GAAG,EAAE,CAAC;AACb,CAAC,CAAC;AAZW,QAAA,OAAO,GAAA,QAYlB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18340, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-ioredis/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.42.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-ioredis';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18367, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-ioredis/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, trace, context, SpanKind } from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport { IORedisInstrumentationConfig } from './types';\nimport { IORedisCommand, RedisInterface } from './internal-types';\nimport {\n  DBSYSTEMVALUES_REDIS,\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport { endSpan } from './utils';\nimport { defaultDbStatementSerializer } from '@opentelemetry/redis-common';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nconst DEFAULT_CONFIG: IORedisInstrumentationConfig = {\n  requireParentSpan: true,\n};\n\nexport class IORedisInstrumentation extends InstrumentationBase {\n  protected override _config!: IORedisInstrumentationConfig;\n\n  constructor(config: IORedisInstrumentationConfig = {}) {\n    super(\n      PACKAGE_NAME,\n      PACKAGE_VERSION,\n      Object.assign({}, DEFAULT_CONFIG, config)\n    );\n  }\n\n  init(): InstrumentationNodeModuleDefinition[] {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'ioredis',\n        ['>=2.0.0 <6'],\n        (module, moduleVersion?: string) => {\n          const moduleExports =\n            module[Symbol.toStringTag] === 'Module'\n              ? module.default // ESM\n              : module; // CommonJS\n          if (isWrapped(moduleExports.prototype.sendCommand)) {\n            this._unwrap(moduleExports.prototype, 'sendCommand');\n          }\n          this._wrap(\n            moduleExports.prototype,\n            'sendCommand',\n            this._patchSendCommand(moduleVersion)\n          );\n          if (isWrapped(moduleExports.prototype.connect)) {\n            this._unwrap(moduleExports.prototype, 'connect');\n          }\n          this._wrap(\n            moduleExports.prototype,\n            'connect',\n            this._patchConnection()\n          );\n          return module;\n        },\n        module => {\n          if (module === undefined) return;\n          const moduleExports =\n            module[Symbol.toStringTag] === 'Module'\n              ? module.default // ESM\n              : module; // CommonJS\n          this._unwrap(moduleExports.prototype, 'sendCommand');\n          this._unwrap(moduleExports.prototype, 'connect');\n        }\n      ),\n    ];\n  }\n\n  /**\n   * Patch send command internal to trace requests\n   */\n  private _patchSendCommand(moduleVersion?: string) {\n    return (original: Function) => {\n      return this._traceSendCommand(original, moduleVersion);\n    };\n  }\n\n  private _patchConnection() {\n    return (original: Function) => {\n      return this._traceConnection(original);\n    };\n  }\n\n  private _traceSendCommand(original: Function, moduleVersion?: string) {\n    const instrumentation = this;\n    return function (this: RedisInterface, cmd?: IORedisCommand) {\n      if (arguments.length < 1 || typeof cmd !== 'object') {\n        return original.apply(this, arguments);\n      }\n      const config =\n        instrumentation.getConfig() as IORedisInstrumentationConfig;\n      const dbStatementSerializer =\n        config?.dbStatementSerializer || defaultDbStatementSerializer;\n\n      const hasNoParentSpan = trace.getSpan(context.active()) === undefined;\n      if (config?.requireParentSpan === true && hasNoParentSpan) {\n        return original.apply(this, arguments);\n      }\n\n      const span = instrumentation.tracer.startSpan(cmd.name, {\n        kind: SpanKind.CLIENT,\n        attributes: {\n          [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_REDIS,\n          [SEMATTRS_DB_STATEMENT]: dbStatementSerializer(cmd.name, cmd.args),\n        },\n      });\n\n      if (config?.requestHook) {\n        safeExecuteInTheMiddle(\n          () =>\n            config?.requestHook!(span, {\n              moduleVersion,\n              cmdName: cmd.name,\n              cmdArgs: cmd.args,\n            }),\n          e => {\n            if (e) {\n              diag.error('ioredis instrumentation: request hook failed', e);\n            }\n          },\n          true\n        );\n      }\n\n      const { host, port } = this.options;\n\n      span.setAttributes({\n        [SEMATTRS_NET_PEER_NAME]: host,\n        [SEMATTRS_NET_PEER_PORT]: port,\n        [SEMATTRS_DB_CONNECTION_STRING]: `redis://${host}:${port}`,\n      });\n\n      try {\n        const result = original.apply(this, arguments);\n\n        const origResolve = cmd.resolve;\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        cmd.resolve = function (result: any) {\n          safeExecuteInTheMiddle(\n            () => config?.responseHook?.(span, cmd.name, cmd.args, result),\n            e => {\n              if (e) {\n                diag.error('ioredis instrumentation: response hook failed', e);\n              }\n            },\n            true\n          );\n\n          endSpan(span, null);\n          origResolve(result);\n        };\n\n        const origReject = cmd.reject;\n        cmd.reject = function (err: Error) {\n          endSpan(span, err);\n          origReject(err);\n        };\n\n        return result;\n      } catch (error: any) {\n        endSpan(span, error);\n        throw error;\n      }\n    };\n  }\n\n  private _traceConnection(original: Function) {\n    const instrumentation = this;\n    return function (this: RedisInterface) {\n      const config =\n        instrumentation.getConfig() as IORedisInstrumentationConfig;\n      const hasNoParentSpan = trace.getSpan(context.active()) === undefined;\n      if (config?.requireParentSpan === true && hasNoParentSpan) {\n        return original.apply(this, arguments);\n      }\n\n      const span = instrumentation.tracer.startSpan('connect', {\n        kind: SpanKind.CLIENT,\n        attributes: {\n          [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_REDIS,\n          [SEMATTRS_DB_STATEMENT]: 'connect',\n        },\n      });\n      const { host, port } = this.options;\n\n      span.setAttributes({\n        [SEMATTRS_NET_PEER_NAME]: host,\n        [SEMATTRS_NET_PEER_PORT]: port,\n        [SEMATTRS_DB_CONNECTION_STRING]: `redis://${host}:${port}`,\n      });\n      try {\n        const client = original.apply(this, arguments);\n        endSpan(span, null);\n        return client;\n      } catch (error: any) {\n        endSpan(span, error);\n        throw error;\n      }\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18538, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-ioredis/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport { Span } from '@opentelemetry/api';\n\nexport type CommandArgs = Array<string | Buffer | number | any[]>;\n\n/**\n * Function that can be used to serialize db.statement tag\n * @param cmdName - The name of the command (eg. set, get, mset)\n * @param cmdArgs - Array of arguments passed to the command\n *\n * @returns serialized string that will be used as the db.statement attribute.\n */\nexport type DbStatementSerializer = (\n  cmdName: string,\n  cmdArgs: CommandArgs\n) => string;\n\nexport interface IORedisRequestHookInformation {\n  moduleVersion?: string;\n  cmdName: string;\n  cmdArgs: CommandArgs;\n}\n\nexport interface RedisRequestCustomAttributeFunction {\n  (span: Span, requestInfo: IORedisRequestHookInformation): void;\n}\n\n/**\n * Function that can be used to add custom attributes to span on response from redis server\n * @param span - The span created for the redis command, on which attributes can be set\n * @param cmdName - The name of the command (eg. set, get, mset)\n * @param cmdArgs - Array of arguments passed to the command\n * @param response - The response object which is returned to the user who called this command.\n *  Can be used to set custom attributes on the span.\n *  The type of the response varies depending on the specific command.\n */\nexport interface RedisResponseCustomAttributeFunction {\n  (span: Span, cmdName: string, cmdArgs: CommandArgs, response: unknown): void;\n}\n\n/**\n * Options available for the IORedis Instrumentation (see [documentation](https://github.com/open-telemetry/opentelemetry-js-contrib/blob/main/plugins/node/opentelemetry-instrumentation-ioredis/README.md#ioredis-instrumentation-options))\n */\nexport interface IORedisInstrumentationConfig extends InstrumentationConfig {\n  /** Custom serializer function for the db.statement tag */\n  dbStatementSerializer?: DbStatementSerializer;\n\n  /** Function for adding custom attributes on db request */\n  requestHook?: RedisRequestCustomAttributeFunction;\n\n  /** Function for adding custom attributes on db response */\n  responseHook?: RedisResponseCustomAttributeFunction;\n\n  /** Require parent to create ioredis span, default when unset is true */\n  requireParentSpan?: boolean;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18561, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-ioredis/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,6JAAA,SAAkC;AAClC,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18601, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/redis-common/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * List of regexes and the number of arguments that should be serialized for matching commands.\n * For example, HSET should serialize which key and field it's operating on, but not its value.\n * Setting the subset to -1 will serialize all arguments.\n * Commands without a match will have their first argument serialized.\n *\n * Refer to https://redis.io/commands/ for the full list.\n */\nconst serializationSubsets = [\n  {\n    regex: /^ECHO/i,\n    args: 0,\n  },\n  {\n    regex: /^(LPUSH|MSET|PFA|PUBLISH|RPUSH|SADD|SET|SPUBLISH|XADD|ZADD)/i,\n    args: 1,\n  },\n  {\n    regex: /^(HSET|HMSET|LSET|LINSERT)/i,\n    args: 2,\n  },\n  {\n    regex:\n      /^(ACL|BIT|B[LRZ]|CLIENT|CLUSTER|CONFIG|COMMAND|DECR|DEL|EVAL|EX|FUNCTION|GEO|GET|HINCR|HMGET|HSCAN|INCR|L[TRLM]|MEMORY|P[EFISTU]|RPOP|S[CDIMORSU]|XACK|X[CDGILPRT]|Z[CDILMPRS])/i,\n    args: -1,\n  },\n];\n\nexport type DbStatementSerializer = (\n  cmdName: string,\n  cmdArgs: Array<string | Buffer | number | any[]>\n) => string;\n\n/**\n * Given the redis command name and arguments, return a combination of the\n * command name + the allowed arguments according to `serializationSubsets`.\n * @param cmdName The redis command name\n * @param cmdArgs The redis command arguments\n * @returns a combination of the command name + args according to `serializationSubsets`.\n */\nexport const defaultDbStatementSerializer: DbStatementSerializer = (\n  cmdName,\n  cmdArgs\n) => {\n  if (Array.isArray(cmdArgs) && cmdArgs.length) {\n    const nArgsToSerialize =\n      serializationSubsets.find(({ regex }) => {\n        return regex.test(cmdName);\n      })?.args ?? 0;\n    const argsToSerialize =\n      nArgsToSerialize >= 0 ? cmdArgs.slice(0, nArgsToSerialize) : cmdArgs;\n    if (cmdArgs.length > argsToSerialize.length) {\n      argsToSerialize.push(\n        `[${cmdArgs.length - nArgsToSerialize} other arguments]`\n      );\n    }\n    return `${cmdName} ${argsToSerialize.join(' ')}`;\n  }\n  return cmdName;\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH;;;;;;;GAOG,CACH,MAAM,oBAAoB,GAAG;IAC3B;QACE,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,CAAC;KACR;IACD;QACE,KAAK,EAAE,8DAA8D;QACrE,IAAI,EAAE,CAAC;KACR;IACD;QACE,KAAK,EAAE,6BAA6B;QACpC,IAAI,EAAE,CAAC;KACR;IACD;QACE,KAAK,EACH,kLAAkL;QACpL,IAAI,EAAE,CAAC,CAAC;KACT;CACF,CAAC;AAOF;;;;;;GAMG,CACI,MAAM,4BAA4B,GAA0B,CACjE,OAAO,EACP,OAAO,EACP,EAAE;;IACF,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE;QAC5C,MAAM,gBAAgB,GACpB,CAAA,KAAA,CAAA,KAAA,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;YACtC,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QAChB,MAAM,eAAe,GACnB,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QACvE,IAAI,OAAO,CAAC,MAAM,GAAG,eAAe,CAAC,MAAM,EAAE;YAC3C,eAAe,CAAC,IAAI,CAClB,CAAA,CAAA,EAAI,OAAO,CAAC,MAAM,GAAG,gBAAgB,CAAA,iBAAA,CAAmB,CACzD,CAAC;SACH;QACD,OAAO,GAAG,OAAO,CAAA,CAAA,EAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;KAClD;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAnBW,QAAA,4BAA4B,GAAA,6BAmBvC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18671, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-kafkajs/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.2.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-kafkajs';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,OAAO,CAAC;AAC1B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18698, "column": 0}, "map": {"version":3,"file":"propagator.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-kafkajs/src/propagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors, Aspecto\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TextMapGetter } from '@opentelemetry/api';\n\n/*\nsame as open telemetry's `defaultTextMapGetter`,\nbut also handle case where header is buffer,\nadding toString() to make sure string is returned\n*/\nexport const bufferTextMapGetter: TextMapGetter = {\n  get(carrier, key) {\n    if (!carrier) {\n      return undefined;\n    }\n\n    const keys = Object.keys(carrier);\n\n    for (const carrierKey of keys) {\n      if (carrierKey === key || carrierKey.toLowerCase() === key) {\n        return carrier[carrierKey]?.toString();\n      }\n    }\n\n    return undefined;\n  },\n\n  keys(carrier) {\n    return carrier ? Object.keys(carrier) : [];\n  },\n};\n"],"names":[],"mappings":";;;;;AAiBA;;;;EAIE,CACW,QAAA,mBAAmB,GAAkB;IAChD,GAAG,EAAC,OAAO,EAAE,GAAG;;QACd,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,SAAS,CAAC;SAClB;QAED,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAElC,KAAK,MAAM,UAAU,IAAI,IAAI,CAAE;YAC7B,IAAI,UAAU,KAAK,GAAG,IAAI,UAAU,CAAC,WAAW,EAAE,KAAK,GAAG,EAAE;gBAC1D,OAAO,CAAA,KAAA,OAAO,CAAC,UAAU,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,QAAQ,EAAE,CAAC;aACxC;SACF;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,IAAI,EAAC,OAAO;QACV,OAAO,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC7C,CAAC;CACF,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18730, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-kafkajs/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors, Aspecto\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  SpanKind,\n  Span,\n  SpanStatusCode,\n  Context,\n  propagation,\n  Link,\n  trace,\n  context,\n  ROOT_CONTEXT,\n} from '@opentelemetry/api';\nimport {\n  MESSAGINGOPERATIONVALUES_PROCESS,\n  MESSAGINGOPERATIONVALUES_RECEIVE,\n  SEMATTRS_MESSAGING_SYSTEM,\n  SEMATTRS_MESSAGING_DESTINATION,\n  SEMATTRS_MESSAGING_OPERATION,\n} from '@opentelemetry/semantic-conventions';\nimport type * as kafkaJs from 'kafkajs';\nimport type {\n  EachBatchHandler,\n  EachMessageHandler,\n  Producer,\n  RecordMetadata,\n  Message,\n  ConsumerRunConfig,\n  KafkaMessage,\n  Consumer,\n} from 'kafkajs';\nimport { KafkaJsInstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { bufferTextMapGetter } from './propagator';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\n\nexport class KafkaJsInstrumentation extends InstrumentationBase {\n  protected override _config!: KafkaJsInstrumentationConfig;\n\n  constructor(config: KafkaJsInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    const unpatch = (moduleExports: typeof kafkaJs) => {\n      if (isWrapped(moduleExports?.Kafka?.prototype.producer)) {\n        this._unwrap(moduleExports.Kafka.prototype, 'producer');\n      }\n      if (isWrapped(moduleExports?.Kafka?.prototype.consumer)) {\n        this._unwrap(moduleExports.Kafka.prototype, 'consumer');\n      }\n    };\n\n    const module = new InstrumentationNodeModuleDefinition(\n      'kafkajs',\n      ['>=0.1.0 <3'],\n      (moduleExports: typeof kafkaJs) => {\n        unpatch(moduleExports);\n        this._wrap(\n          moduleExports?.Kafka?.prototype,\n          'producer',\n          this._getProducerPatch()\n        );\n        this._wrap(\n          moduleExports?.Kafka?.prototype,\n          'consumer',\n          this._getConsumerPatch()\n        );\n\n        return moduleExports;\n      },\n      unpatch\n    );\n    return module;\n  }\n\n  private _getConsumerPatch() {\n    const instrumentation = this;\n    return (original: kafkaJs.Kafka['consumer']) => {\n      return function consumer(\n        this: kafkaJs.Kafka,\n        ...args: Parameters<kafkaJs.Kafka['consumer']>\n      ) {\n        const newConsumer: Consumer = original.apply(this, args);\n\n        if (isWrapped(newConsumer.run)) {\n          instrumentation._unwrap(newConsumer, 'run');\n        }\n\n        instrumentation._wrap(\n          newConsumer,\n          'run',\n          instrumentation._getConsumerRunPatch()\n        );\n\n        return newConsumer;\n      };\n    };\n  }\n\n  private _getProducerPatch() {\n    const instrumentation = this;\n    return (original: kafkaJs.Kafka['producer']) => {\n      return function consumer(\n        this: kafkaJs.Kafka,\n        ...args: Parameters<kafkaJs.Kafka['producer']>\n      ) {\n        const newProducer: Producer = original.apply(this, args);\n\n        if (isWrapped(newProducer.sendBatch)) {\n          instrumentation._unwrap(newProducer, 'sendBatch');\n        }\n        instrumentation._wrap(\n          newProducer,\n          'sendBatch',\n          instrumentation._getProducerSendBatchPatch()\n        );\n\n        if (isWrapped(newProducer.send)) {\n          instrumentation._unwrap(newProducer, 'send');\n        }\n        instrumentation._wrap(\n          newProducer,\n          'send',\n          instrumentation._getProducerSendPatch()\n        );\n\n        return newProducer;\n      };\n    };\n  }\n\n  private _getConsumerRunPatch() {\n    const instrumentation = this;\n    return (original: Consumer['run']) => {\n      return function run(\n        this: Consumer,\n        ...args: Parameters<Consumer['run']>\n      ): ReturnType<Consumer['run']> {\n        const config = args[0];\n        if (config?.eachMessage) {\n          if (isWrapped(config.eachMessage)) {\n            instrumentation._unwrap(config, 'eachMessage');\n          }\n          instrumentation._wrap(\n            config,\n            'eachMessage',\n            instrumentation._getConsumerEachMessagePatch()\n          );\n        }\n        if (config?.eachBatch) {\n          if (isWrapped(config.eachBatch)) {\n            instrumentation._unwrap(config, 'eachBatch');\n          }\n          instrumentation._wrap(\n            config,\n            'eachBatch',\n            instrumentation._getConsumerEachBatchPatch()\n          );\n        }\n        return original.call(this, config);\n      };\n    };\n  }\n\n  private _getConsumerEachMessagePatch() {\n    const instrumentation = this;\n    return (original: ConsumerRunConfig['eachMessage']) => {\n      return function eachMessage(\n        this: unknown,\n        ...args: Parameters<EachMessageHandler>\n      ): Promise<void> {\n        const payload = args[0];\n        const propagatedContext: Context = propagation.extract(\n          ROOT_CONTEXT,\n          payload.message.headers,\n          bufferTextMapGetter\n        );\n        const span = instrumentation._startConsumerSpan(\n          payload.topic,\n          payload.message,\n          MESSAGINGOPERATIONVALUES_PROCESS,\n          propagatedContext\n        );\n\n        const eachMessagePromise = context.with(\n          trace.setSpan(propagatedContext, span),\n          () => {\n            return original!.apply(this, args);\n          }\n        );\n        return instrumentation._endSpansOnPromise([span], eachMessagePromise);\n      };\n    };\n  }\n\n  private _getConsumerEachBatchPatch() {\n    return (original: ConsumerRunConfig['eachBatch']) => {\n      const instrumentation = this;\n      return function eachBatch(\n        this: unknown,\n        ...args: Parameters<EachBatchHandler>\n      ): Promise<void> {\n        const payload = args[0];\n        // https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/messaging.md#topic-with-multiple-consumers\n        const receivingSpan = instrumentation._startConsumerSpan(\n          payload.batch.topic,\n          undefined,\n          MESSAGINGOPERATIONVALUES_RECEIVE,\n          ROOT_CONTEXT\n        );\n        return context.with(\n          trace.setSpan(context.active(), receivingSpan),\n          () => {\n            const spans = payload.batch.messages.map(\n              (message: KafkaMessage) => {\n                const propagatedContext: Context = propagation.extract(\n                  ROOT_CONTEXT,\n                  message.headers,\n                  bufferTextMapGetter\n                );\n                const spanContext = trace\n                  .getSpan(propagatedContext)\n                  ?.spanContext();\n                let origSpanLink: Link | undefined;\n                if (spanContext) {\n                  origSpanLink = {\n                    context: spanContext,\n                  };\n                }\n                return instrumentation._startConsumerSpan(\n                  payload.batch.topic,\n                  message,\n                  MESSAGINGOPERATIONVALUES_PROCESS,\n                  undefined,\n                  origSpanLink\n                );\n              }\n            );\n            const batchMessagePromise: Promise<void> = original!.apply(\n              this,\n              args\n            );\n            spans.unshift(receivingSpan);\n            return instrumentation._endSpansOnPromise(\n              spans,\n              batchMessagePromise\n            );\n          }\n        );\n      };\n    };\n  }\n\n  private _getProducerSendBatchPatch() {\n    const instrumentation = this;\n    return (original: Producer['sendBatch']) => {\n      return function sendBatch(\n        this: Producer,\n        ...args: Parameters<Producer['sendBatch']>\n      ): ReturnType<Producer['sendBatch']> {\n        const batch = args[0];\n        const messages = batch.topicMessages || [];\n        const spans: Span[] = messages\n          .map(topicMessage =>\n            topicMessage.messages.map(message =>\n              instrumentation._startProducerSpan(topicMessage.topic, message)\n            )\n          )\n          .reduce((acc, val) => acc.concat(val), []);\n\n        const origSendResult: Promise<RecordMetadata[]> = original.apply(\n          this,\n          args\n        );\n        return instrumentation._endSpansOnPromise(spans, origSendResult);\n      };\n    };\n  }\n\n  private _getProducerSendPatch() {\n    const instrumentation = this;\n    return (original: Producer['send']) => {\n      return function send(\n        this: Producer,\n        ...args: Parameters<Producer['send']>\n      ): ReturnType<Producer['send']> {\n        const record = args[0];\n        const spans: Span[] = record.messages.map(message => {\n          return instrumentation._startProducerSpan(record.topic, message);\n        });\n\n        const origSendResult: Promise<RecordMetadata[]> = original.apply(\n          this,\n          args\n        );\n        return instrumentation._endSpansOnPromise(spans, origSendResult);\n      };\n    };\n  }\n\n  private _endSpansOnPromise<T>(\n    spans: Span[],\n    sendPromise: Promise<T>\n  ): Promise<T> {\n    return Promise.resolve(sendPromise)\n      .catch(reason => {\n        let errorMessage: string;\n        if (typeof reason === 'string') errorMessage = reason;\n        else if (\n          typeof reason === 'object' &&\n          Object.prototype.hasOwnProperty.call(reason, 'message')\n        )\n          errorMessage = reason.message;\n\n        spans.forEach(span =>\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: errorMessage,\n          })\n        );\n\n        throw reason;\n      })\n      .finally(() => {\n        spans.forEach(span => span.end());\n      });\n  }\n\n  private _startConsumerSpan(\n    topic: string,\n    message: KafkaMessage | undefined,\n    operation: string,\n    context: Context | undefined,\n    link?: Link\n  ) {\n    const span = this.tracer.startSpan(\n      topic,\n      {\n        kind: SpanKind.CONSUMER,\n        attributes: {\n          [SEMATTRS_MESSAGING_SYSTEM]: 'kafka',\n          [SEMATTRS_MESSAGING_DESTINATION]: topic,\n          [SEMATTRS_MESSAGING_OPERATION]: operation,\n        },\n        links: link ? [link] : [],\n      },\n      context\n    );\n\n    if (this._config?.consumerHook && message) {\n      safeExecuteInTheMiddle(\n        () => this._config.consumerHook!(span, { topic, message }),\n        e => {\n          if (e) this._diag.error('consumerHook error', e);\n        },\n        true\n      );\n    }\n\n    return span;\n  }\n\n  private _startProducerSpan(topic: string, message: Message) {\n    const span = this.tracer.startSpan(topic, {\n      kind: SpanKind.PRODUCER,\n      attributes: {\n        [SEMATTRS_MESSAGING_SYSTEM]: 'kafka',\n        [SEMATTRS_MESSAGING_DESTINATION]: topic,\n      },\n    });\n\n    message.headers = message.headers ?? {};\n    propagation.inject(trace.setSpan(context.active(), span), message.headers);\n\n    if (this._config?.producerHook) {\n      safeExecuteInTheMiddle(\n        () => this._config.producerHook!(span, { topic, message }),\n        e => {\n          if (e) this._diag.error('producerHook error', e);\n        },\n        true\n      );\n    }\n\n    return span;\n  }\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAU4B;AAC5B,MAAA,wEAM6C;AAa7C,MAAA,iCAA0D;AAC1D,MAAA,uCAAmD;AACnD,MAAA,8DAKwC;AAExC,MAAa,sBAAuB,SAAQ,kBAAA,mBAAmB;IAG7D,YAAY,SAAuC,CAAA,CAAE,CAAA;QACnD,KAAK,CAAC,UAAA,YAAY,EAAE,UAAA,eAAe,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAES,IAAI,GAAA;QACZ,MAAM,OAAO,GAAG,CAAC,aAA6B,EAAE,EAAE;;YAChD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,CAAA,KAAA,aAAa,KAAA,QAAb,aAAa,KAAA,KAAA,IAAA,KAAA,IAAb,aAAa,CAAE,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACvD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;aACzD;YACD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,CAAA,KAAA,aAAa,KAAA,QAAb,aAAa,KAAA,KAAA,IAAA,KAAA,IAAb,aAAa,CAAE,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACvD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;aACzD;QACH,CAAC,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,kBAAA,mCAAmC,CACpD,SAAS,EACT;YAAC,YAAY;SAAC,EACd,CAAC,aAA6B,EAAE,EAAE;;YAChC,OAAO,CAAC,aAAa,CAAC,CAAC;YACvB,IAAI,CAAC,KAAK,CACR,CAAA,KAAA,aAAa,KAAA,QAAb,aAAa,KAAA,KAAA,IAAA,KAAA,IAAb,aAAa,CAAE,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,SAAS,EAC/B,UAAU,EACV,IAAI,CAAC,iBAAiB,EAAE,CACzB,CAAC;YACF,IAAI,CAAC,KAAK,CACR,CAAA,KAAA,aAAa,KAAA,QAAb,aAAa,KAAA,KAAA,IAAA,KAAA,IAAb,aAAa,CAAE,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,SAAS,EAC/B,UAAU,EACV,IAAI,CAAC,iBAAiB,EAAE,CACzB,CAAC;YAEF,OAAO,aAAa,CAAC;QACvB,CAAC,EACD,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,iBAAiB,GAAA;QACvB,MAAM,eAAe,GAAG,IAAI,CAAC;QAC7B,OAAO,CAAC,QAAmC,EAAE,EAAE;YAC7C,OAAO,SAAS,QAAQ,CAEtB,GAAG,IAA2C;gBAE9C,MAAM,WAAW,GAAa,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAEzD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,WAAW,CAAC,GAAG,CAAC,EAAE;oBAC9B,eAAe,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;iBAC7C;gBAED,eAAe,CAAC,KAAK,CACnB,WAAW,EACX,KAAK,EACL,eAAe,CAAC,oBAAoB,EAAE,CACvC,CAAC;gBAEF,OAAO,WAAW,CAAC;YACrB,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,iBAAiB,GAAA;QACvB,MAAM,eAAe,GAAG,IAAI,CAAC;QAC7B,OAAO,CAAC,QAAmC,EAAE,EAAE;YAC7C,OAAO,SAAS,QAAQ,CAEtB,GAAG,IAA2C;gBAE9C,MAAM,WAAW,GAAa,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAEzD,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,WAAW,CAAC,SAAS,CAAC,EAAE;oBACpC,eAAe,CAAC,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;iBACnD;gBACD,eAAe,CAAC,KAAK,CACnB,WAAW,EACX,WAAW,EACX,eAAe,CAAC,0BAA0B,EAAE,CAC7C,CAAC;gBAEF,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,WAAW,CAAC,IAAI,CAAC,EAAE;oBAC/B,eAAe,CAAC,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;iBAC9C;gBACD,eAAe,CAAC,KAAK,CACnB,WAAW,EACX,MAAM,EACN,eAAe,CAAC,qBAAqB,EAAE,CACxC,CAAC;gBAEF,OAAO,WAAW,CAAC;YACrB,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,oBAAoB,GAAA;QAC1B,MAAM,eAAe,GAAG,IAAI,CAAC;QAC7B,OAAO,CAAC,QAAyB,EAAE,EAAE;YACnC,OAAO,SAAS,GAAG,CAEjB,GAAG,IAAiC;gBAEpC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,WAAW,EAAE;oBACvB,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,MAAM,CAAC,WAAW,CAAC,EAAE;wBACjC,eAAe,CAAC,OAAO,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;qBAChD;oBACD,eAAe,CAAC,KAAK,CACnB,MAAM,EACN,aAAa,EACb,eAAe,CAAC,4BAA4B,EAAE,CAC/C,CAAC;iBACH;gBACD,IAAI,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,SAAS,EAAE;oBACrB,IAAI,CAAA,GAAA,kBAAA,SAAS,EAAC,MAAM,CAAC,SAAS,CAAC,EAAE;wBAC/B,eAAe,CAAC,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;qBAC9C;oBACD,eAAe,CAAC,KAAK,CACnB,MAAM,EACN,WAAW,EACX,eAAe,CAAC,0BAA0B,EAAE,CAC7C,CAAC;iBACH;gBACD,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACrC,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,4BAA4B,GAAA;QAClC,MAAM,eAAe,GAAG,IAAI,CAAC;QAC7B,OAAO,CAAC,QAA0C,EAAE,EAAE;YACpD,OAAO,SAAS,WAAW,CAEzB,GAAG,IAAoC;gBAEvC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM,iBAAiB,GAAY,MAAA,WAAW,CAAC,OAAO,CACpD,MAAA,YAAY,EACZ,OAAO,CAAC,OAAO,CAAC,OAAO,EACvB,aAAA,mBAAmB,CACpB,CAAC;gBACF,MAAM,IAAI,GAAG,eAAe,CAAC,kBAAkB,CAC7C,OAAO,CAAC,KAAK,EACb,OAAO,CAAC,OAAO,EACf,uBAAA,gCAAgC,EAChC,iBAAiB,CAClB,CAAC;gBAEF,MAAM,kBAAkB,GAAG,MAAA,OAAO,CAAC,IAAI,CACrC,MAAA,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,EACtC,GAAG,EAAE;oBACH,OAAO,QAAS,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACrC,CAAC,CACF,CAAC;gBACF,OAAO,eAAe,CAAC,kBAAkB,CAAC;oBAAC,IAAI;iBAAC,EAAE,kBAAkB,CAAC,CAAC;YACxE,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,0BAA0B,GAAA;QAChC,OAAO,CAAC,QAAwC,EAAE,EAAE;YAClD,MAAM,eAAe,GAAG,IAAI,CAAC;YAC7B,OAAO,SAAS,SAAS,CAEvB,GAAG,IAAkC;gBAErC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxB,gKAAgK;gBAChK,MAAM,aAAa,GAAG,eAAe,CAAC,kBAAkB,CACtD,OAAO,CAAC,KAAK,CAAC,KAAK,EACnB,SAAS,EACT,uBAAA,gCAAgC,EAChC,MAAA,YAAY,CACb,CAAC;gBACF,OAAO,MAAA,OAAO,CAAC,IAAI,CACjB,MAAA,KAAK,CAAC,OAAO,CAAC,MAAA,OAAO,CAAC,MAAM,EAAE,EAAE,aAAa,CAAC,EAC9C,GAAG,EAAE;oBACH,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CACtC,CAAC,OAAqB,EAAE,EAAE;;wBACxB,MAAM,iBAAiB,GAAY,MAAA,WAAW,CAAC,OAAO,CACpD,MAAA,YAAY,EACZ,OAAO,CAAC,OAAO,EACf,aAAA,mBAAmB,CACpB,CAAC;wBACF,MAAM,WAAW,GAAG,CAAA,KAAA,MAAA,KAAK,CACtB,OAAO,CAAC,iBAAiB,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GACzB,WAAW,EAAE,CAAC;wBAClB,IAAI,YAA8B,CAAC;wBACnC,IAAI,WAAW,EAAE;4BACf,YAAY,GAAG;gCACb,OAAO,EAAE,WAAW;6BACrB,CAAC;yBACH;wBACD,OAAO,eAAe,CAAC,kBAAkB,CACvC,OAAO,CAAC,KAAK,CAAC,KAAK,EACnB,OAAO,EACP,uBAAA,gCAAgC,EAChC,SAAS,EACT,YAAY,CACb,CAAC;oBACJ,CAAC,CACF,CAAC;oBACF,MAAM,mBAAmB,GAAkB,QAAS,CAAC,KAAK,CACxD,IAAI,EACJ,IAAI,CACL,CAAC;oBACF,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;oBAC7B,OAAO,eAAe,CAAC,kBAAkB,CACvC,KAAK,EACL,mBAAmB,CACpB,CAAC;gBACJ,CAAC,CACF,CAAC;YACJ,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,0BAA0B,GAAA;QAChC,MAAM,eAAe,GAAG,IAAI,CAAC;QAC7B,OAAO,CAAC,QAA+B,EAAE,EAAE;YACzC,OAAO,SAAS,SAAS,CAEvB,GAAG,IAAuC;gBAE1C,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,QAAQ,GAAG,KAAK,CAAC,aAAa,IAAI,EAAE,CAAC;gBAC3C,MAAM,KAAK,GAAW,QAAQ,CAC3B,GAAG,EAAC,YAAY,CAAC,EAAE,AAClB,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAC,OAAO,CAAC,EAAE,AAClC,eAAe,CAAC,kBAAkB,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAChE,CACF,CACA,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAG,CAAD,EAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;gBAE7C,MAAM,cAAc,GAA8B,QAAQ,CAAC,KAAK,CAC9D,IAAI,EACJ,IAAI,CACL,CAAC;gBACF,OAAO,eAAe,CAAC,kBAAkB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;YACnE,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,qBAAqB,GAAA;QAC3B,MAAM,eAAe,GAAG,IAAI,CAAC;QAC7B,OAAO,CAAC,QAA0B,EAAE,EAAE;YACpC,OAAO,SAAS,IAAI,CAElB,GAAG,IAAkC;gBAErC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACvB,MAAM,KAAK,GAAW,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAC,OAAO,CAAC,EAAE;oBAClD,OAAO,eAAe,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;gBACnE,CAAC,CAAC,CAAC;gBAEH,MAAM,cAAc,GAA8B,QAAQ,CAAC,KAAK,CAC9D,IAAI,EACJ,IAAI,CACL,CAAC;gBACF,OAAO,eAAe,CAAC,kBAAkB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;YACnE,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,kBAAkB,CACxB,KAAa,EACb,WAAuB,EAAA;QAEvB,OAAO,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAChC,KAAK,EAAC,MAAM,CAAC,EAAE;YACd,IAAI,YAAoB,CAAC;YACzB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,YAAY,GAAG,MAAM,CAAC;iBACjD,IACH,OAAO,MAAM,KAAK,QAAQ,IAC1B,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,EAEvD,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC;YAEhC,KAAK,CAAC,OAAO,EAAC,IAAI,CAAC,EAAE,AACnB,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAE,MAAA,cAAc,CAAC,KAAK;oBAC1B,OAAO,EAAE,YAAY;iBACtB,CAAC,CACH,CAAC;YAEF,MAAM,MAAM,CAAC;QACf,CAAC,CAAC,CACD,OAAO,CAAC,GAAG,EAAE;YACZ,KAAK,CAAC,OAAO,EAAC,IAAI,CAAC,EAAE,AAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,kBAAkB,CACxB,KAAa,EACb,OAAiC,EACjC,SAAiB,EACjB,OAA4B,EAC5B,IAAW,EAAA;;QAEX,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAChC,KAAK,EACL;YACE,IAAI,EAAE,MAAA,QAAQ,CAAC,QAAQ;YACvB,UAAU,EAAE;gBACV,CAAC,uBAAA,yBAAyB,CAAC,EAAE,OAAO;gBACpC,CAAC,uBAAA,8BAA8B,CAAC,EAAE,KAAK;gBACvC,CAAC,uBAAA,4BAA4B,CAAC,EAAE,SAAS;aAC1C;YACD,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;gBAAC,IAAI;aAAC,CAAC,CAAC,CAAC,EAAE;SAC1B,EACD,OAAO,CACR,CAAC;QAEF,IAAI,CAAA,CAAA,KAAA,IAAI,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,YAAY,KAAI,OAAO,EAAE;YACzC,CAAA,GAAA,kBAAA,sBAAsB,EACpB,GAAG,CAAG,CAAD,GAAK,CAAC,OAAO,CAAC,YAAa,CAAC,IAAI,EAAE;oBAAE,KAAK;oBAAE,OAAO;gBAAA,CAAE,CAAC,GAC1D,CAAC,CAAC,EAAE;gBACF,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;YACnD,CAAC,EACD,IAAI,CACL,CAAC;SACH;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,kBAAkB,CAAC,KAAa,EAAE,OAAgB,EAAA;;QACxD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;YACxC,IAAI,EAAE,MAAA,QAAQ,CAAC,QAAQ;YACvB,UAAU,EAAE;gBACV,CAAC,uBAAA,yBAAyB,CAAC,EAAE,OAAO;gBACpC,CAAC,uBAAA,8BAA8B,CAAC,EAAE,KAAK;aACxC;SACF,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,OAAO,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,CAAE,CAAC;QACxC,MAAA,WAAW,CAAC,MAAM,CAAC,MAAA,KAAK,CAAC,OAAO,CAAC,MAAA,OAAO,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;QAE3E,IAAI,CAAA,KAAA,IAAI,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,YAAY,EAAE;YAC9B,CAAA,GAAA,kBAAA,sBAAsB,EACpB,GAAG,CAAG,CAAD,GAAK,CAAC,OAAO,CAAC,YAAa,CAAC,IAAI,EAAE;oBAAE,KAAK;oBAAE,OAAO;gBAAA,CAAE,CAAC,GAC1D,CAAC,CAAC,EAAE;gBACF,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;YACnD,CAAC,EACD,IAAI,CACL,CAAC;SACH;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA/VD,QAAA,sBAAA,GAAA,uBA+VC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18963, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-kafkajs/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors, Aspecto\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface KafkajsMessage {\n  key?: Buffer | string | null;\n  value: Buffer | string | null;\n  partition?: number;\n  headers?: Record<string, Buffer | string | (Buffer | string)[] | undefined>;\n  timestamp?: string;\n}\n\nexport interface MessageInfo<T = KafkajsMessage> {\n  topic: string;\n  message: T;\n}\n\nexport interface KafkaProducerCustomAttributeFunction<T = KafkajsMessage> {\n  (span: Span, info: MessageInfo<T>): void;\n}\n\nexport interface KafkaConsumerCustomAttributeFunction<T = KafkajsMessage> {\n  (span: Span, info: MessageInfo<T>): void;\n}\n\nexport interface KafkaJsInstrumentationConfig extends InstrumentationConfig {\n  /** hook for adding custom attributes before producer message is sent */\n  producerHook?: KafkaProducerCustomAttributeFunction;\n\n  /** hook for adding custom attributes before consumer message is processed */\n  consumerHook?: KafkaConsumerCustomAttributeFunction;\n}\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18972, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-kafkajs/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors, Aspecto\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,6JAAA,SAAkC;AAClC,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19012, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-knex/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.39.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-knex';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,qCAAqC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19039, "column": 0}, "map": {"version":3,"file":"constants.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-knex/src/constants.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const MODULE_NAME = 'knex';\nexport const SUPPORTED_VERSIONS = [\n  // use \"lib/execution\" for runner.js, \"lib\" for client.js as basepath, latest tested 0.95.6\n  '>=0.22.0 <4',\n  // use \"lib\" as basepath\n  '>=0.10.0 <0.18.0',\n  '>=0.19.0 <0.22.0',\n  // use \"src\" as basepath\n  '>=0.18.0 <0.19.0',\n];\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEU,QAAA,WAAW,GAAG,MAAM,CAAC;AACrB,QAAA,kBAAkB,GAAG;IAChC,2FAA2F;IAC3F,aAAa;IACb,wBAAwB;IACxB,kBAAkB;IAClB,kBAAkB;IAClB,wBAAwB;IACxB,kBAAkB;CACnB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19073, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-knex/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DBSYSTEMVALUES_SQLITE,\n  DBSYSTEMVALUES_POSTGRESQL,\n} from '@opentelemetry/semantic-conventions';\n\ntype Exception = {\n  new (message: string): Exception;\n  constructor: Exception;\n  errno?: number;\n  code?: string;\n  stack?: string;\n};\n\nexport const getFormatter = (runner: any) => {\n  if (runner) {\n    if (runner.client) {\n      if (runner.client._formatQuery) {\n        return runner.client._formatQuery.bind(runner.client);\n      } else if (runner.client.SqlString) {\n        return runner.client.SqlString.format.bind(runner.client.SqlString);\n      }\n    }\n    if (runner.builder) {\n      return runner.builder.toString.bind(runner.builder);\n    }\n  }\n  return () => '<noop formatter>';\n};\n\nexport const cloneErrorWithNewMessage = (err: Exception, message: string) => {\n  if (err && err instanceof Error) {\n    const clonedError = new (err.constructor as Exception)(message);\n    clonedError.code = err.code;\n    clonedError.stack = err.stack;\n    clonedError.errno = err.errno;\n    return clonedError;\n  }\n  return err;\n};\n\nconst systemMap = new Map([\n  ['sqlite3', DBSYSTEMVALUES_SQLITE],\n  ['pg', DBSYSTEMVALUES_POSTGRESQL],\n]);\nexport const mapSystem = (knexSystem: string) => {\n  return systemMap.get(knexSystem) || knexSystem;\n};\n\nexport const getName = (db: string, operation?: string, table?: string) => {\n  if (operation) {\n    if (table) {\n      return `${operation} ${db}.${table}`;\n    }\n    return `${operation} ${db}`;\n  }\n  return db;\n};\n\nexport const limitLength = (str: string, maxLength: number) => {\n  if (\n    typeof str === 'string' &&\n    typeof maxLength === 'number' &&\n    0 < maxLength &&\n    maxLength < str.length\n  ) {\n    return str.substr(0, maxLength) + '..';\n  }\n  return str;\n};\n\nexport const extractTableName = (builder: any): string => {\n  const table = builder?._single?.table;\n  if (typeof table === 'object') {\n    return extractTableName(table);\n  }\n  return table;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19165, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-knex/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport * as constants from './constants';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport {\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_OPERATION,\n  SEMATTRS_DB_SQL_TABLE,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_DB_USER,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n  SEMATTRS_NET_TRANSPORT,\n} from '@opentelemetry/semantic-conventions';\nimport * as utils from './utils';\nimport { KnexInstrumentationConfig } from './types';\n\nconst contextSymbol = Symbol('opentelemetry.instrumentation-knex.context');\nconst DEFAULT_CONFIG: KnexInstrumentationConfig = {\n  maxQueryLength: 1022,\n  requireParentSpan: false,\n};\n\nexport class KnexInstrumentation extends InstrumentationBase<KnexInstrumentationConfig> {\n  constructor(config: KnexInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, { ...DEFAULT_CONFIG, ...config });\n  }\n\n  override setConfig(config: KnexInstrumentationConfig = {}) {\n    super.setConfig({ ...DEFAULT_CONFIG, ...config });\n  }\n\n  init() {\n    const module = new InstrumentationNodeModuleDefinition(\n      constants.MODULE_NAME,\n      constants.SUPPORTED_VERSIONS\n    );\n\n    module.files.push(\n      this.getClientNodeModuleFileInstrumentation('src'),\n      this.getClientNodeModuleFileInstrumentation('lib'),\n      this.getRunnerNodeModuleFileInstrumentation('src'),\n      this.getRunnerNodeModuleFileInstrumentation('lib'),\n      this.getRunnerNodeModuleFileInstrumentation('lib/execution')\n    );\n\n    return module;\n  }\n\n  private getRunnerNodeModuleFileInstrumentation(basePath: string) {\n    return new InstrumentationNodeModuleFile(\n      `knex/${basePath}/runner.js`,\n      constants.SUPPORTED_VERSIONS,\n      (Runner: any, moduleVersion) => {\n        this.ensureWrapped(\n          Runner.prototype,\n          'query',\n          this.createQueryWrapper(moduleVersion)\n        );\n        return Runner;\n      },\n      (Runner: any, moduleVersion) => {\n        this._unwrap(Runner.prototype, 'query');\n        return Runner;\n      }\n    );\n  }\n\n  private getClientNodeModuleFileInstrumentation(basePath: string) {\n    return new InstrumentationNodeModuleFile(\n      `knex/${basePath}/client.js`,\n      constants.SUPPORTED_VERSIONS,\n      (Client: any) => {\n        this.ensureWrapped(\n          Client.prototype,\n          'queryBuilder',\n          this.storeContext.bind(this)\n        );\n        this.ensureWrapped(\n          Client.prototype,\n          'schemaBuilder',\n          this.storeContext.bind(this)\n        );\n        this.ensureWrapped(\n          Client.prototype,\n          'raw',\n          this.storeContext.bind(this)\n        );\n        return Client;\n      },\n      (Client: any) => {\n        this._unwrap(Client.prototype, 'queryBuilder');\n        this._unwrap(Client.prototype, 'schemaBuilder');\n        this._unwrap(Client.prototype, 'raw');\n        return Client;\n      }\n    );\n  }\n\n  private createQueryWrapper(moduleVersion?: string) {\n    const instrumentation = this;\n    return function wrapQuery(original: (...args: any[]) => any) {\n      return function wrapped_logging_method(this: any, query: any) {\n        const config = this.client.config;\n\n        const table = utils.extractTableName(this.builder);\n        // `method` actually refers to the knex API method - Not exactly \"operation\"\n        // in the spec sense, but matches most of the time.\n        const operation = query?.method;\n        const name =\n          config?.connection?.filename || config?.connection?.database;\n        const { maxQueryLength } = instrumentation.getConfig();\n\n        const attributes: api.SpanAttributes = {\n          'knex.version': moduleVersion,\n          [SEMATTRS_DB_SYSTEM]: utils.mapSystem(config.client),\n          [SEMATTRS_DB_SQL_TABLE]: table,\n          [SEMATTRS_DB_OPERATION]: operation,\n          [SEMATTRS_DB_USER]: config?.connection?.user,\n          [SEMATTRS_DB_NAME]: name,\n          [SEMATTRS_NET_PEER_NAME]: config?.connection?.host,\n          [SEMATTRS_NET_PEER_PORT]: config?.connection?.port,\n          [SEMATTRS_NET_TRANSPORT]:\n            config?.connection?.filename === ':memory:' ? 'inproc' : undefined,\n        };\n        if (maxQueryLength) {\n          // filters both undefined and 0\n          attributes[SEMATTRS_DB_STATEMENT] = utils.limitLength(\n            query?.sql,\n            maxQueryLength\n          );\n        }\n\n        const parentContext =\n          this.builder[contextSymbol] || api.context.active();\n        const parentSpan = api.trace.getSpan(parentContext);\n        const hasActiveParent =\n          parentSpan && api.trace.isSpanContextValid(parentSpan.spanContext());\n        if (instrumentation._config.requireParentSpan && !hasActiveParent) {\n          return original.bind(this)(...arguments);\n        }\n\n        const span = instrumentation.tracer.startSpan(\n          utils.getName(name, operation, table),\n          {\n            kind: api.SpanKind.CLIENT,\n            attributes,\n          },\n          parentContext\n        );\n        const spanContext = api.trace.setSpan(api.context.active(), span);\n\n        return api.context\n          .with(spanContext, original, this, ...arguments)\n          .then((result: unknown) => {\n            span.end();\n            return result;\n          })\n          .catch((err: any) => {\n            // knex adds full query with all the binding values to the message,\n            // we want to undo that without changing the original error\n            const formatter = utils.getFormatter(this);\n            const fullQuery = formatter(query.sql, query.bindings || []);\n            const message = err.message.replace(fullQuery + ' - ', '');\n            const clonedError = utils.cloneErrorWithNewMessage(err, message);\n            span.recordException(clonedError);\n            span.setStatus({ code: api.SpanStatusCode.ERROR, message });\n            span.end();\n            throw err;\n          });\n      };\n    };\n  }\n\n  private storeContext(original: Function) {\n    return function wrapped_logging_method(this: any) {\n      const builder = original.apply(this, arguments);\n      // Builder is a custom promise type and when awaited it fails to propagate context.\n      // We store the parent context at the moment of initiating the builder\n      // otherwise we'd have nothing to attach the span as a child for in `query`.\n      Object.defineProperty(builder, contextSymbol, {\n        value: api.context.active(),\n      });\n      return builder;\n    };\n  }\n\n  ensureWrapped(obj: any, methodName: string, wrapper: (original: any) => any) {\n    if (isWrapped(obj[methodName])) {\n      this._unwrap(obj, methodName);\n    }\n    this._wrap(obj, methodName, wrapper);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19313, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-knex/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface KnexInstrumentationConfig extends InstrumentationConfig {\n  /** max query length in db.statement attribute \"..\" is added to the end when query is truncated  */\n  maxQueryLength?: number;\n  /** only create spans if part of an existing trace */\n  requireParentSpan?: boolean;\n}\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19322, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-knex/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,0JAAA,SAAkC;AAClC,gJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19362, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-koa/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport enum KoaLayerType {\n  ROUTER = 'router',\n  MIDDLEWARE = 'middleware',\n}\n\n/**\n * Information about the current Koa middleware layer\n * The middleware layer type is any by default.\n * One can install koa types packages `@types/koa` and `@types/koa__router`\n * with compatible versions to the koa version used in the project\n * to get more specific types for the middleware layer property.\n *\n * Example use in a custom attribute function:\n * ```ts\n * import type { Middleware, ParameterizedContext, DefaultState } from 'koa';\n * import type { RouterParamContext } from '@koa/router';\n *\n * type KoaContext = ParameterizedContext<DefaultState, RouterParamContext>;\n * type KoaMiddleware = Middleware<DefaultState, KoaContext>;\n *\n * const koaConfig: KoaInstrumentationConfig<KoaContext, KoaMiddleware> = {\n *  requestHook: (span: Span, info: KoaRequestInfo<KoaContext, KoaMiddleware>) => {\n *   // custom typescript code that can access the typed into.middlewareLayer and info.context\n * }\n *\n */\nexport type KoaRequestInfo<KoaContextType = any, KoaMiddlewareType = any> = {\n  context: KoaContextType;\n  middlewareLayer: KoaMiddlewareType;\n  layerType: KoaLayerType;\n};\n\n/**\n * Function that can be used to add custom attributes to the current span\n * @param span - The Express middleware layer span.\n * @param context - The current KoaContext.\n */\nexport interface KoaRequestCustomAttributeFunction<\n  KoaContextType = any,\n  KoaMiddlewareType = any\n> {\n  (span: Span, info: KoaRequestInfo<KoaContextType, KoaMiddlewareType>): void;\n}\n\n/**\n * Options available for the Koa Instrumentation (see [documentation](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-Instrumentation-koa#koa-Instrumentation-options))\n */\nexport interface KoaInstrumentationConfig<\n  KoaContextType = any,\n  KoaMiddlewareType = any\n> extends InstrumentationConfig {\n  /** Ignore specific layers based on their type */\n  ignoreLayersType?: KoaLayerType[];\n  /** Function for adding custom attributes to each middleware layer span */\n  requestHook?: KoaRequestCustomAttributeFunction<\n    KoaContextType,\n    KoaMiddlewareType\n  >;\n}\n"],"names":[],"mappings":";;;;;AAkBA,IAAY,YAGX;AAHD,CAAA,SAAY,YAAY;IACtB,YAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,YAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EAHW,YAAY,GAAZ,QAAA,YAAY,IAAA,CAAZ,QAAA,YAAY,GAAA,CAAA,CAAA,GAGvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19377, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-koa/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.42.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-koa';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,oCAAoC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19404, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-koa/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  KOA_TYPE = 'koa.type',\n  KOA_NAME = 'koa.name',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,IAAY,cAGX;AAHD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,WAAA,GAAA,UAAqB,CAAA;IACrB,cAAA,CAAA,WAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAGzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19433, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-koa/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { KoaLayerType, KoaInstrumentationConfig } from './types';\nimport { KoaContext, KoaMiddleware } from './internal-types';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { Attributes } from '@opentelemetry/api';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\n\nexport const getMiddlewareMetadata = (\n  context: KoaContext,\n  layer: KoaMiddleware,\n  isRouter: boolean,\n  layerPath?: string | RegExp\n): {\n  attributes: Attributes;\n  name: string;\n} => {\n  if (isRouter) {\n    return {\n      attributes: {\n        [AttributeNames.KOA_NAME]: layerPath?.toString(),\n        [AttributeNames.KOA_TYPE]: KoaLayerType.ROUTER,\n        [SEMATTRS_HTTP_ROUTE]: layerPath?.toString(),\n      },\n      name: context._matchedRouteName || `router - ${layerPath}`,\n    };\n  } else {\n    return {\n      attributes: {\n        [AttributeNames.KOA_NAME]: layer.name ?? 'middleware',\n        [AttributeNames.KOA_TYPE]: KoaLayerType.MIDDLEWARE,\n      },\n      name: `middleware - ${layer.name}`,\n    };\n  }\n};\n\n/**\n * Check whether the given request is ignored by configuration\n * @param [list] List of ignore patterns\n * @param [onException] callback for doing something when an exception has\n *     occurred\n */\nexport const isLayerIgnored = (\n  type: KoaLayerType,\n  config?: KoaInstrumentationConfig\n): boolean => {\n  return !!(\n    Array.isArray(config?.ignoreLayersType) &&\n    config?.ignoreLayersType?.includes(type)\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,MAAA,6BAAiE;AAEjE,MAAA,qDAAwD;AAExD,MAAA,wEAA0E;AAEnE,MAAM,qBAAqB,GAAG,CACnC,OAAmB,EACnB,KAAoB,EACpB,QAAiB,EACjB,SAA2B,EAI3B,EAAE;;IACF,IAAI,QAAQ,EAAE;QACZ,OAAO;YACL,UAAU,EAAE;gBACV,CAAC,iBAAA,cAAc,CAAC,QAAQ,CAAC,EAAE,SAAS,KAAA,QAAT,SAAS,KAAA,KAAA,IAAA,KAAA,IAAT,SAAS,CAAE,QAAQ,EAAE;gBAChD,CAAC,iBAAA,cAAc,CAAC,QAAQ,CAAC,EAAE,QAAA,YAAY,CAAC,MAAM;gBAC9C,CAAC,uBAAA,mBAAmB,CAAC,EAAE,SAAS,KAAA,QAAT,SAAS,KAAA,KAAA,IAAA,KAAA,IAAT,SAAS,CAAE,QAAQ,EAAE;aAC7C;YACD,IAAI,EAAE,OAAO,CAAC,iBAAiB,IAAI,CAAA,SAAA,EAAY,SAAS,EAAE;SAC3D,CAAC;KACH,MAAM;QACL,OAAO;YACL,UAAU,EAAE;gBACV,CAAC,iBAAA,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAA,KAAA,KAAK,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,YAAY;gBACrD,CAAC,iBAAA,cAAc,CAAC,QAAQ,CAAC,EAAE,QAAA,YAAY,CAAC,UAAU;aACnD;YACD,IAAI,EAAE,CAAA,aAAA,EAAgB,KAAK,CAAC,IAAI,EAAE;SACnC,CAAC;KACH;AACH,CAAC,CAAC;AA3BW,QAAA,qBAAqB,GAAA,sBA2BhC;AAEF;;;;;GAKG,CACI,MAAM,cAAc,GAAG,CAC5B,IAAkB,EAClB,MAAiC,EACxB,EAAE;;IACX,OAAO,CAAC,CAAC,CACP,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,gBAAgB,CAAC,KACvC,CAAA,KAAA,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,gBAAgB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,QAAQ,CAAC,IAAI,CAAC,CAAA,CACzC,CAAC;AACJ,CAAC,CAAC;AARW,QAAA,cAAc,GAAA,eAQzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19492, "column": 0}, "map": {"version":3,"file":"internal-types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-koa/src/internal-types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { Middleware, ParameterizedContext, DefaultState } from 'koa';\nimport type * as Router from '@koa/router';\n\nexport type KoaContext = ParameterizedContext<\n  DefaultState,\n  Router.RouterParamContext\n>;\nexport type KoaMiddleware = Middleware<DefaultState, KoaContext> & {\n  router?: Router;\n};\n\n/**\n * This symbol is used to mark a Koa layer as being already instrumented\n * since its possible to use a given layer multiple times (ex: middlewares)\n */\nexport const kLayerPatched: unique symbol = Symbol('koa-layer-patched');\n\nexport type KoaPatchedMiddleware = KoaMiddleware & {\n  [kLayerPatched]?: boolean;\n};\n"],"names":[],"mappings":";;;;;AA0BA;;;GAGG,CACU,QAAA,aAAa,GAAkB,MAAM,CAAC,mBAAmB,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19506, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-koa/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\n\nimport type * as koa from 'koa';\nimport { KoaLayerType, KoaInstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { getMiddlewareMetadata, isLayerIgnored } from './utils';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport {\n  kLayerPatched,\n  KoaContext,\n  KoaMiddleware,\n  KoaPatchedMiddleware,\n} from './internal-types';\n\n/** Koa instrumentation for OpenTelemetry */\nexport class KoaInstrumentation extends InstrumentationBase {\n  constructor(config: KoaInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  override setConfig(config: KoaInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n  }\n\n  override getConfig(): KoaInstrumentationConfig {\n    return this._config as KoaInstrumentationConfig;\n  }\n\n  protected init() {\n    return new InstrumentationNodeModuleDefinition(\n      'koa',\n      ['>=2.0.0 <3'],\n      (module: any) => {\n        const moduleExports: typeof koa =\n          module[Symbol.toStringTag] === 'Module'\n            ? module.default // ESM\n            : module; // CommonJS\n        if (moduleExports == null) {\n          return moduleExports;\n        }\n        if (isWrapped(moduleExports.prototype.use)) {\n          this._unwrap(moduleExports.prototype, 'use');\n        }\n        this._wrap(\n          moduleExports.prototype,\n          'use',\n          this._getKoaUsePatch.bind(this)\n        );\n        return module;\n      },\n      (module: any) => {\n        const moduleExports: typeof koa =\n          module[Symbol.toStringTag] === 'Module'\n            ? module.default // ESM\n            : module; // CommonJS\n        if (isWrapped(moduleExports.prototype.use)) {\n          this._unwrap(moduleExports.prototype, 'use');\n        }\n      }\n    );\n  }\n\n  /**\n   * Patches the Koa.use function in order to instrument each original\n   * middleware layer which is introduced\n   * @param {KoaMiddleware} middleware - the original middleware function\n   */\n  private _getKoaUsePatch(original: (middleware: KoaMiddleware) => koa) {\n    const plugin = this;\n    return function use(this: koa, middlewareFunction: KoaMiddleware) {\n      let patchedFunction: KoaMiddleware;\n      if (middlewareFunction.router) {\n        patchedFunction = plugin._patchRouterDispatch(middlewareFunction);\n      } else {\n        patchedFunction = plugin._patchLayer(middlewareFunction, false);\n      }\n      return original.apply(this, [patchedFunction]);\n    };\n  }\n\n  /**\n   * Patches the dispatch function used by @koa/router. This function\n   * goes through each routed middleware and adds instrumentation via a call\n   * to the @function _patchLayer function.\n   * @param {KoaMiddleware} dispatchLayer - the original dispatch function which dispatches\n   * routed middleware\n   */\n  private _patchRouterDispatch(dispatchLayer: KoaMiddleware): KoaMiddleware {\n    api.diag.debug('Patching @koa/router dispatch');\n\n    const router = dispatchLayer.router;\n\n    const routesStack = router?.stack ?? [];\n    for (const pathLayer of routesStack) {\n      const path = pathLayer.path;\n      const pathStack = pathLayer.stack;\n      for (let j = 0; j < pathStack.length; j++) {\n        const routedMiddleware: KoaMiddleware = pathStack[j];\n        pathStack[j] = this._patchLayer(routedMiddleware, true, path);\n      }\n    }\n\n    return dispatchLayer;\n  }\n\n  /**\n   * Patches each individual @param middlewareLayer function in order to create the\n   * span and propagate context. It does not create spans when there is no parent span.\n   * @param {KoaMiddleware} middlewareLayer - the original middleware function.\n   * @param {boolean} isRouter - tracks whether the original middleware function\n   * was dispatched by the router originally\n   * @param {string?} layerPath - if present, provides additional data from the\n   * router about the routed path which the middleware is attached to\n   */\n  private _patchLayer(\n    middlewareLayer: KoaPatchedMiddleware,\n    isRouter: boolean,\n    layerPath?: string | RegExp\n  ): KoaMiddleware {\n    const layerType = isRouter ? KoaLayerType.ROUTER : KoaLayerType.MIDDLEWARE;\n    // Skip patching layer if its ignored in the config\n    if (\n      middlewareLayer[kLayerPatched] === true ||\n      isLayerIgnored(layerType, this.getConfig())\n    )\n      return middlewareLayer;\n\n    if (\n      middlewareLayer.constructor.name === 'GeneratorFunction' ||\n      middlewareLayer.constructor.name === 'AsyncGeneratorFunction'\n    ) {\n      api.diag.debug('ignoring generator-based Koa middleware layer');\n      return middlewareLayer;\n    }\n\n    middlewareLayer[kLayerPatched] = true;\n\n    api.diag.debug('patching Koa middleware layer');\n    return async (context: KoaContext, next: koa.Next) => {\n      const parent = api.trace.getSpan(api.context.active());\n      if (parent === undefined) {\n        return middlewareLayer(context, next);\n      }\n      const metadata = getMiddlewareMetadata(\n        context,\n        middlewareLayer,\n        isRouter,\n        layerPath\n      );\n      const span = this.tracer.startSpan(metadata.name, {\n        attributes: metadata.attributes,\n      });\n\n      const rpcMetadata = getRPCMetadata(api.context.active());\n\n      if (rpcMetadata?.type === RPCType.HTTP && context._matchedRoute) {\n        rpcMetadata.route = context._matchedRoute.toString();\n      }\n\n      if (this.getConfig().requestHook) {\n        safeExecuteInTheMiddle(\n          () =>\n            this.getConfig().requestHook!(span, {\n              context,\n              middlewareLayer,\n              layerType,\n            }),\n          e => {\n            if (e) {\n              api.diag.error('koa instrumentation: request hook failed', e);\n            }\n          },\n          true\n        );\n      }\n\n      const newContext = api.trace.setSpan(api.context.active(), span);\n      return api.context.with(newContext, async () => {\n        try {\n          return await middlewareLayer(context, next);\n        } catch (err: any) {\n          span.recordException(err);\n          throw err;\n        } finally {\n          span.end();\n        }\n      });\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19665, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-koa/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\nexport * from './enums/AttributeNames';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,yJAAA,SAAkC;AAClC,+IAAA,SAAwB;AACxB,8JAAA,SAAuC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19706, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-lru-memoizer/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.39.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-lru-memoizer';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,6CAA6C,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19733, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-lru-memoizer/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context } from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n} from '@opentelemetry/instrumentation';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nexport class LruMemoizerInstrumentation extends InstrumentationBase {\n  constructor(config: InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init(): InstrumentationNodeModuleDefinition[] {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'lru-memoizer',\n        ['>=1.3 <3'],\n        moduleExports => {\n          // moduleExports is a function which receives an options object,\n          // and returns a \"memoizer\" function upon invocation.\n          // We want to patch this \"memoizer's\" internal function\n          const asyncMemoizer = function (this: unknown) {\n            // This following function is invoked every time the user wants to get a (possible) memoized value\n            // We replace it with another function in which we bind the current context to the last argument (callback)\n            const origMemoizer = moduleExports.apply(this, arguments);\n            return function (this: unknown) {\n              const modifiedArguments = [...arguments];\n              // last argument is the callback\n              const origCallback = modifiedArguments.pop();\n              const callbackWithContext =\n                typeof origCallback === 'function'\n                  ? context.bind(context.active(), origCallback)\n                  : origCallback;\n              modifiedArguments.push(callbackWithContext);\n              return origMemoizer.apply(this, modifiedArguments);\n            };\n          };\n\n          // sync function preserves context, but we still need to export it\n          // as the lru-memoizer package does\n          asyncMemoizer.sync = moduleExports.sync;\n          return asyncMemoizer;\n        },\n        undefined // no need to disable as this instrumentation does not create any spans\n      ),\n    ];\n  }\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAA6C;AAC7C,MAAA,8DAIwC;AACxC,MAAA,iCAA0D;AAE1D,MAAa,0BAA2B,SAAQ,kBAAA,mBAAmB;IACjE,YAAY,SAAgC,CAAA,CAAE,CAAA;QAC5C,KAAK,CAAC,UAAA,YAAY,EAAE,UAAA,eAAe,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,IAAI,GAAA;QACF,OAAO;YACL,IAAI,kBAAA,mCAAmC,CACrC,cAAc,EACd;gBAAC,UAAU;aAAC,GACZ,aAAa,CAAC,EAAE;gBACd,gEAAgE;gBAChE,qDAAqD;gBACrD,uDAAuD;gBACvD,MAAM,aAAa,GAAG;oBACpB,kGAAkG;oBAClG,2GAA2G;oBAC3G,MAAM,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;oBAC1D,OAAO;wBACL,MAAM,iBAAiB,GAAG,CAAC;+BAAG,SAAS;yBAAC,CAAC;wBACzC,gCAAgC;wBAChC,MAAM,YAAY,GAAG,iBAAiB,CAAC,GAAG,EAAE,CAAC;wBAC7C,MAAM,mBAAmB,GACvB,OAAO,YAAY,KAAK,UAAU,GAC9B,MAAA,OAAO,CAAC,IAAI,CAAC,MAAA,OAAO,CAAC,MAAM,EAAE,EAAE,YAAY,CAAC,GAC5C,YAAY,CAAC;wBACnB,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;wBAC5C,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;oBACrD,CAAC,CAAC;gBACJ,CAAC,CAAC;gBAEF,kEAAkE;gBAClE,mCAAmC;gBACnC,aAAa,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;gBACxC,OAAO,aAAa,CAAC;YACvB,CAAC,EACD,SAAS,CAAC,uEAAuE;;SAEpF,CAAC;IACJ,CAAC;CACF;AAxCD,QAAA,0BAAA,GAAA,2BAwCC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19797, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-lru-memoizer/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,kKAAA,SAAkC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19836, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-memcached/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as Memcached from 'memcached';\nimport {\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\n\nexport const getPeerAttributes = (\n  client: any /* Memcached, but the type definitions are lacking */,\n  server: string | undefined,\n  query: Memcached.CommandData\n) => {\n  if (!server) {\n    if (client.servers.length === 1) {\n      server = client.servers[0];\n    } else {\n      let redundancy =\n        client.redundancy && client.redundancy < client.servers.length;\n      const queryRedundancy = query.redundancyEnabled;\n\n      if (redundancy && queryRedundancy) {\n        redundancy = client.HashRing.range(\n          query.key,\n          client.redundancy + 1,\n          true\n        );\n        server = redundancy.shift();\n      } else {\n        server = client.HashRing.get(query.key);\n      }\n    }\n  }\n\n  if (typeof server === 'string') {\n    const [host, port] = server && server.split(':');\n    if (host && port) {\n      const portNumber = parseInt(port, 10);\n      if (!isNaN(portNumber)) {\n        return {\n          [SEMATTRS_NET_PEER_NAME]: host,\n          [SEMATTRS_NET_PEER_PORT]: portNumber,\n        };\n      }\n      return {\n        [SEMATTRS_NET_PEER_NAME]: host,\n      };\n    }\n  }\n  return {};\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAGH,MAAA,wEAG6C;AAEtC,MAAM,iBAAiB,GAAG,CAC/B,MAAW,CAAC,mDAAA,EAAqD,GACjE,MAA0B,EAC1B,KAA4B,EAC5B,EAAE;IACF,IAAI,CAAC,MAAM,EAAE;QACX,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC5B,MAAM;YACL,IAAI,UAAU,GACZ,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YACjE,MAAM,eAAe,GAAG,KAAK,CAAC,iBAAiB,CAAC;YAEhD,IAAI,UAAU,IAAI,eAAe,EAAE;gBACjC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAChC,KAAK,CAAC,GAAG,EACT,MAAM,CAAC,UAAU,GAAG,CAAC,EACrB,IAAI,CACL,CAAC;gBACF,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;aAC7B,MAAM;gBACL,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACzC;SACF;KACF;IAED,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC9B,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACtC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;gBACtB,OAAO;oBACL,CAAC,uBAAA,sBAAsB,CAAC,EAAE,IAAI;oBAC9B,CAAC,uBAAA,sBAAsB,CAAC,EAAE,UAAU;iBACrC,CAAC;aACH;YACD,OAAO;gBACL,CAAC,uBAAA,sBAAsB,CAAC,EAAE,IAAI;aAC/B,CAAC;SACH;KACF;IACD,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC,CAAC;AA1CW,QAAA,iBAAiB,GAAA,kBA0C5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19894, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-memcached/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.38.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-memcached';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,0CAA0C,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19921, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-memcached/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n} from '@opentelemetry/instrumentation';\nimport type * as Memcached from 'memcached';\nimport {\n  DBSYSTEMVALUES_MEMCACHED,\n  SEMATTRS_DB_OPERATION,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\nimport * as utils from './utils';\nimport { InstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nexport class MemcachedInstrumentation extends InstrumentationBase {\n  static readonly COMPONENT = 'memcached';\n  static readonly COMMON_ATTRIBUTES = {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_MEMCACHED,\n  };\n  static readonly DEFAULT_CONFIG: InstrumentationConfig = {\n    enhancedDatabaseReporting: false,\n  };\n\n  constructor(config: InstrumentationConfig = {}) {\n    super(\n      PACKAGE_NAME,\n      PACKAGE_VERSION,\n      Object.assign({}, MemcachedInstrumentation.DEFAULT_CONFIG, config)\n    );\n  }\n\n  override setConfig(config: InstrumentationConfig = {}) {\n    this._config = Object.assign(\n      {},\n      MemcachedInstrumentation.DEFAULT_CONFIG,\n      config\n    );\n  }\n\n  init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'memcached',\n        ['>=2.2.0 <3'],\n        (moduleExports: typeof Memcached, moduleVersion) => {\n          this.ensureWrapped(\n            moduleExports.prototype,\n            'command',\n            this.wrapCommand.bind(this, moduleVersion)\n          );\n          return moduleExports;\n        },\n        (moduleExports: typeof Memcached) => {\n          if (moduleExports === undefined) return;\n          // `command` is documented API missing from the types\n          this._unwrap(moduleExports.prototype, 'command' as keyof Memcached);\n        }\n      ),\n    ];\n  }\n\n  wrapCommand(\n    moduleVersion: undefined | string,\n    original: (\n      queryCompiler: () => Memcached.CommandData,\n      server?: string\n    ) => any\n  ) {\n    const instrumentation = this;\n    return function (\n      this: Memcached,\n      queryCompiler: () => Memcached.CommandData,\n      server?: string\n    ) {\n      if (typeof queryCompiler !== 'function') {\n        return original.apply(this, arguments as any);\n      }\n      // The name will be overwritten later\n      const span = instrumentation.tracer.startSpan(\n        'unknown memcached command',\n        {\n          kind: api.SpanKind.CLIENT,\n          attributes: {\n            'memcached.version': moduleVersion,\n            ...MemcachedInstrumentation.COMMON_ATTRIBUTES,\n          },\n        }\n      );\n      const parentContext = api.context.active();\n      const context = api.trace.setSpan(parentContext, span);\n\n      return api.context.with(\n        context,\n        original,\n        this,\n        instrumentation.wrapQueryCompiler.call(\n          instrumentation,\n          queryCompiler,\n          this,\n          server,\n          parentContext,\n          span\n        ),\n        server\n      );\n    };\n  }\n\n  wrapQueryCompiler(\n    original: () => Memcached.CommandData,\n    client: Memcached,\n    server: undefined | string,\n    callbackContext: api.Context,\n    span: api.Span\n  ) {\n    const instrumentation = this;\n    return function (this: Memcached) {\n      const query = original.apply(this, arguments as any);\n      const callback = query.callback;\n\n      span.updateName(`memcached ${query.type}`);\n      span.setAttributes({\n        'db.memcached.key': query.key,\n        'db.memcached.lifetime': query.lifetime,\n        [SEMATTRS_DB_OPERATION]: query.type,\n        [SEMATTRS_DB_STATEMENT]: (\n          instrumentation._config as InstrumentationConfig\n        ).enhancedDatabaseReporting\n          ? query.command\n          : undefined,\n        ...utils.getPeerAttributes(client, server, query),\n      });\n\n      query.callback = api.context.bind(\n        callbackContext,\n        function (this: Memcached.CommandData, err: any) {\n          if (err) {\n            span.recordException(err);\n            span.setStatus({\n              code: api.SpanStatusCode.ERROR,\n              message: err.message,\n            });\n          }\n\n          span.end();\n\n          if (typeof callback === 'function') {\n            return callback.apply(this, arguments as any);\n          }\n        }\n      );\n\n      return query;\n    };\n  }\n\n  private ensureWrapped(\n    obj: any,\n    methodName: string,\n    wrapper: (original: any) => any\n  ) {\n    if (isWrapped(obj[methodName])) {\n      this._unwrap(obj, methodName);\n    }\n    this._wrap(obj, methodName, wrapper);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20032, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-memcached/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig as BaseInstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface InstrumentationConfig extends BaseInstrumentationConfig {\n  enhancedDatabaseReporting?: boolean;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20055, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-memcached/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,+JAAA,SAAkC;AAClC,qJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20095, "column": 0}, "map": {"version":3,"file":"internal-types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mongodb/src/internal-types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport { Span } from '@opentelemetry/api';\n\nexport interface MongoDBInstrumentationExecutionResponseHook {\n  (span: Span, responseInfo: MongoResponseHookInformation): void;\n}\n\n/**\n * Function that can be used to serialize db.statement tag\n * @param cmd - MongoDB command object\n *\n * @returns serialized string that will be used as the db.statement attribute.\n */\nexport type DbStatementSerializer = (cmd: Record<string, unknown>) => string;\n\nexport interface MongoDBInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * If true, additional information about query parameters and\n   * results will be attached (as `attributes`) to spans representing\n   * database operations.\n   */\n  enhancedDatabaseReporting?: boolean;\n\n  /**\n   * Hook that allows adding custom span attributes based on the data\n   * returned from MongoDB actions.\n   *\n   * @default undefined\n   */\n  responseHook?: MongoDBInstrumentationExecutionResponseHook;\n\n  /**\n   * Custom serializer function for the db.statement tag\n   */\n  dbStatementSerializer?: DbStatementSerializer;\n}\n\nexport type Func<T> = (...args: unknown[]) => T;\nexport type MongoInternalCommand = {\n  findandmodify: boolean;\n  createIndexes: boolean;\n  count: boolean;\n  aggregate: boolean;\n  ismaster: boolean;\n  indexes?: unknown[];\n  query?: Record<string, unknown>;\n  limit?: number;\n  q?: Record<string, unknown>;\n  u?: Record<string, unknown>;\n};\n\nexport type ServerSession = {\n  id: any;\n  lastUse: number;\n  txnNumber: number;\n  isDirty: boolean;\n};\n\nexport type CursorState = { cmd: MongoInternalCommand } & Record<\n  string,\n  unknown\n>;\n\nexport interface MongoResponseHookInformation {\n  data: CommandResult;\n}\n\n// https://github.com/mongodb/node-mongodb-native/blob/3.6/lib/core/connection/command_result.js\nexport type CommandResult = {\n  result?: unknown;\n  connection?: unknown;\n  message?: unknown;\n};\n\n// https://github.com/mongodb/node-mongodb-native/blob/3.6/lib/core/wireprotocol/index.js\nexport type WireProtocolInternal = {\n  insert: (\n    server: MongoInternalTopology,\n    ns: string,\n    ops: unknown[],\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n  update: (\n    server: MongoInternalTopology,\n    ns: string,\n    ops: unknown[],\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n  remove: (\n    server: MongoInternalTopology,\n    ns: string,\n    ops: unknown[],\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n  killCursors: (\n    server: MongoInternalTopology,\n    ns: string,\n    cursorState: CursorState,\n    callback: Function\n  ) => unknown;\n  getMore: (\n    server: MongoInternalTopology,\n    ns: string,\n    cursorState: CursorState,\n    batchSize: number,\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n  query: (\n    server: MongoInternalTopology,\n    ns: string,\n    cmd: MongoInternalCommand,\n    cursorState: CursorState,\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n  command: (\n    server: MongoInternalTopology,\n    ns: string,\n    cmd: MongoInternalCommand,\n    options: unknown | Function,\n    callback?: Function\n  ) => unknown;\n};\n\n// https://github.com/mongodb/node-mongodb-native/blob/3.6/lib/topologies/server.js#L172\n// https://github.com/mongodb/node-mongodb-native/blob/2.2/lib/server.js#L174\nexport type MongoInternalTopology = {\n  s?: {\n    // those are for mongodb@3\n    options?: {\n      host?: string;\n      port?: number;\n      servername?: string;\n    };\n    // those are for mongodb@2\n    host?: string;\n    port?: number;\n  };\n  // mongodb@3 with useUnifiedTopology option\n  description?: {\n    address?: string;\n  };\n};\n\nexport enum MongodbCommandType {\n  CREATE_INDEXES = 'createIndexes',\n  FIND_AND_MODIFY = 'findAndModify',\n  IS_MASTER = 'isMaster',\n  COUNT = 'count',\n  AGGREGATE = 'aggregate',\n  UNKNOWN = 'unknown',\n}\n\n// https://github.com/mongodb/js-bson/blob/main/src/bson.ts\nexport type Document = {\n  [key: string]: any;\n};\n\n// https://github.com/mongodb/node-mongodb-native/blob/v6.4.0/src/utils.ts#L281\nexport interface MongodbNamespace {\n  db: string;\n  collection?: string;\n}\n\nexport type V4Connection = {\n  command: Function;\n  // From version 6.4.0 the method does not expect a callback and returns a promise\n  // https://github.com/mongodb/node-mongodb-native/blob/v6.4.2/src/cmap/connection.ts\n  commandPromise(\n    ns: MongodbNamespace,\n    cmd: Document,\n    options: undefined | unknown,\n    // From v6.6.0 we have this new param which is a constructor function\n    // https://github.com/mongodb/node-mongodb-native/blob/v6.6.0/src/cmap/connection.ts#L588\n    responseType: undefined | unknown\n  ): Promise<any>;\n  // Earlier versions expect a callback param and return void\n  // https://github.com/mongodb/node-mongodb-native/blob/v4.2.2/src/cmap/connection.ts\n  commandCallback(\n    ns: MongodbNamespace,\n    cmd: Document,\n    options: undefined | unknown,\n    callback: any\n  ): void;\n};\n\n// https://github.com/mongodb/node-mongodb-native/blob/v4.2.2/src/cmap/connection_pool.ts\nexport type V4ConnectionPool = {\n  // Instrumentation just cares about carrying the async context so\n  // types of callback params are not needed\n  checkOut: (callback: (error: any, connection: any) => void) => void;\n};\n\nexport type V4Connect = {\n  connect: Function;\n  // From version 6.4.0 the method does not expect a callback and returns a promise\n  // https://github.com/mongodb/node-mongodb-native/blob/v6.4.0/src/cmap/connect.ts\n  connectPromise: (options: any) => Promise<any>;\n  // Earlier versions expect a callback param and return void\n  // https://github.com/mongodb/node-mongodb-native/blob/v4.2.2/src/cmap/connect.ts\n  connectCallback: (options: any, callback: any) => void;\n};\n\n// https://github.com/mongodb/node-mongodb-native/blob/v4.2.2/src/sessions.ts\nexport type V4Session = {\n  acquire: () => ServerSession;\n  release: (session: ServerSession) => void;\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAsJH,IAAY,kBAOX;AAPD,CAAA,SAAY,kBAAkB;IAC5B,kBAAA,CAAA,iBAAA,GAAA,eAAgC,CAAA;IAChC,kBAAA,CAAA,kBAAA,GAAA,eAAiC,CAAA;IACjC,kBAAA,CAAA,YAAA,GAAA,UAAsB,CAAA;IACtB,kBAAA,CAAA,QAAA,GAAA,OAAe,CAAA;IACf,kBAAA,CAAA,YAAA,GAAA,WAAuB,CAAA;IACvB,kBAAA,CAAA,UAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAPW,kBAAkB,GAAlB,QAAA,kBAAkB,IAAA,CAAlB,QAAA,kBAAkB,GAAA,CAAA,CAAA,GAO7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20128, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mongodb/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.46.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-mongodb';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20155, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mongodb/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  context,\n  trace,\n  Span,\n  SpanKind,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  DBSYSTEMVALUES_MONGODB,\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_DB_MONGODB_COLLECTION,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_OPERATION,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\nimport { MongoDBInstrumentationConfig, CommandResult } from './types';\nimport {\n  CursorState,\n  ServerSession,\n  MongodbCommandType,\n  MongoInternalCommand,\n  MongodbNamespace,\n  MongoInternalTopology,\n  WireProtocolInternal,\n  V4Connection,\n  V4ConnectionPool,\n} from './internal-types';\nimport { V4Connect, V4Session } from './internal-types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { UpDownCounter } from '@opentelemetry/api';\n\n/** mongodb instrumentation plugin for OpenTelemetry */\nexport class MongoDBInstrumentation extends InstrumentationBase {\n  private _connectionsUsage!: UpDownCounter;\n  private _poolName!: string;\n\n  protected override _config!: MongoDBInstrumentationConfig;\n\n  constructor(config: MongoDBInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  override _updateMetricInstruments() {\n    this._connectionsUsage = this.meter.createUpDownCounter(\n      'db.client.connections.usage',\n      {\n        description:\n          'The number of connections that are currently in state described by the state attribute.',\n        unit: '{connection}',\n      }\n    );\n  }\n\n  init() {\n    const {\n      v3PatchConnection: v3PatchConnection,\n      v3UnpatchConnection: v3UnpatchConnection,\n    } = this._getV3ConnectionPatches();\n\n    const { v4PatchConnect, v4UnpatchConnect } = this._getV4ConnectPatches();\n    const {\n      v4PatchConnectionCallback,\n      v4PatchConnectionPromise,\n      v4UnpatchConnection,\n    } = this._getV4ConnectionPatches();\n    const { v4PatchConnectionPool, v4UnpatchConnectionPool } =\n      this._getV4ConnectionPoolPatches();\n    const { v4PatchSessions, v4UnpatchSessions } = this._getV4SessionsPatches();\n\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'mongodb',\n        ['>=3.3.0 <4'],\n        undefined,\n        undefined,\n        [\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/core/wireprotocol/index.js',\n            ['>=3.3.0 <4'],\n            v3PatchConnection,\n            v3UnpatchConnection\n          ),\n        ]\n      ),\n      new InstrumentationNodeModuleDefinition(\n        'mongodb',\n        ['>=4.0.0 <7'],\n        undefined,\n        undefined,\n        [\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/cmap/connection.js',\n            ['>=4.0.0 <6.4'],\n            v4PatchConnectionCallback,\n            v4UnpatchConnection\n          ),\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/cmap/connection.js',\n            ['>=6.4.0 <7'],\n            v4PatchConnectionPromise,\n            v4UnpatchConnection\n          ),\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/cmap/connection_pool.js',\n            ['>=4.0.0 <6.4'],\n            v4PatchConnectionPool,\n            v4UnpatchConnectionPool\n          ),\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/cmap/connect.js',\n            ['>=4.0.0 <7'],\n            v4PatchConnect,\n            v4UnpatchConnect\n          ),\n          new InstrumentationNodeModuleFile(\n            'mongodb/lib/sessions.js',\n            ['>=4.0.0 <7'],\n            v4PatchSessions,\n            v4UnpatchSessions\n          ),\n        ]\n      ),\n    ];\n  }\n\n  private _getV3ConnectionPatches<T extends WireProtocolInternal>() {\n    return {\n      v3PatchConnection: (moduleExports: T) => {\n        // patch insert operation\n        if (isWrapped(moduleExports.insert)) {\n          this._unwrap(moduleExports, 'insert');\n        }\n        this._wrap(\n          moduleExports,\n          'insert',\n          this._getV3PatchOperation('insert')\n        );\n        // patch remove operation\n        if (isWrapped(moduleExports.remove)) {\n          this._unwrap(moduleExports, 'remove');\n        }\n        this._wrap(\n          moduleExports,\n          'remove',\n          this._getV3PatchOperation('remove')\n        );\n        // patch update operation\n        if (isWrapped(moduleExports.update)) {\n          this._unwrap(moduleExports, 'update');\n        }\n        this._wrap(\n          moduleExports,\n          'update',\n          this._getV3PatchOperation('update')\n        );\n        // patch other command\n        if (isWrapped(moduleExports.command)) {\n          this._unwrap(moduleExports, 'command');\n        }\n        this._wrap(moduleExports, 'command', this._getV3PatchCommand());\n        // patch query\n        if (isWrapped(moduleExports.query)) {\n          this._unwrap(moduleExports, 'query');\n        }\n        this._wrap(moduleExports, 'query', this._getV3PatchFind());\n        // patch get more operation on cursor\n        if (isWrapped(moduleExports.getMore)) {\n          this._unwrap(moduleExports, 'getMore');\n        }\n        this._wrap(moduleExports, 'getMore', this._getV3PatchCursor());\n        return moduleExports;\n      },\n      v3UnpatchConnection: (moduleExports?: T) => {\n        if (moduleExports === undefined) return;\n        this._unwrap(moduleExports, 'insert');\n        this._unwrap(moduleExports, 'remove');\n        this._unwrap(moduleExports, 'update');\n        this._unwrap(moduleExports, 'command');\n        this._unwrap(moduleExports, 'query');\n        this._unwrap(moduleExports, 'getMore');\n      },\n    };\n  }\n\n  private _getV4SessionsPatches<T extends V4Session>() {\n    return {\n      v4PatchSessions: (moduleExports: any) => {\n        if (isWrapped(moduleExports.acquire)) {\n          this._unwrap(moduleExports, 'acquire');\n        }\n        this._wrap(\n          moduleExports.ServerSessionPool.prototype,\n          'acquire',\n          this._getV4AcquireCommand()\n        );\n\n        if (isWrapped(moduleExports.release)) {\n          this._unwrap(moduleExports, 'release');\n        }\n        this._wrap(\n          moduleExports.ServerSessionPool.prototype,\n          'release',\n          this._getV4ReleaseCommand()\n        );\n        return moduleExports;\n      },\n      v4UnpatchSessions: (moduleExports?: T) => {\n        if (moduleExports === undefined) return;\n        if (isWrapped(moduleExports.acquire)) {\n          this._unwrap(moduleExports, 'acquire');\n        }\n        if (isWrapped(moduleExports.release)) {\n          this._unwrap(moduleExports, 'release');\n        }\n      },\n    };\n  }\n\n  private _getV4AcquireCommand() {\n    const instrumentation = this;\n    return (original: V4Session['acquire']) => {\n      return function patchAcquire(this: any) {\n        const nSessionsBeforeAcquire = this.sessions.length;\n        const session = original.call(this);\n        const nSessionsAfterAcquire = this.sessions.length;\n\n        if (nSessionsBeforeAcquire === nSessionsAfterAcquire) {\n          //no session in the pool. a new session was created and used\n          instrumentation._connectionsUsage.add(1, {\n            state: 'used',\n            'pool.name': instrumentation._poolName,\n          });\n        } else if (nSessionsBeforeAcquire - 1 === nSessionsAfterAcquire) {\n          //a session was already in the pool. remove it from the pool and use it.\n          instrumentation._connectionsUsage.add(-1, {\n            state: 'idle',\n            'pool.name': instrumentation._poolName,\n          });\n          instrumentation._connectionsUsage.add(1, {\n            state: 'used',\n            'pool.name': instrumentation._poolName,\n          });\n        }\n        return session;\n      };\n    };\n  }\n\n  private _getV4ReleaseCommand() {\n    const instrumentation = this;\n    return (original: V4Session['release']) => {\n      return function patchRelease(this: any, session: ServerSession) {\n        const cmdPromise = original.call(this, session);\n\n        instrumentation._connectionsUsage.add(-1, {\n          state: 'used',\n          'pool.name': instrumentation._poolName,\n        });\n        instrumentation._connectionsUsage.add(1, {\n          state: 'idle',\n          'pool.name': instrumentation._poolName,\n        });\n        return cmdPromise;\n      };\n    };\n  }\n\n  private _getV4ConnectionPoolPatches<T extends V4ConnectionPool>() {\n    return {\n      v4PatchConnectionPool: (moduleExports: any) => {\n        const poolPrototype = moduleExports.ConnectionPool.prototype;\n\n        if (isWrapped(poolPrototype.checkOut)) {\n          this._unwrap(poolPrototype, 'checkOut');\n        }\n\n        this._wrap(\n          poolPrototype,\n          'checkOut',\n          this._getV4ConnectionPoolCheckOut()\n        );\n        return moduleExports;\n      },\n      v4UnpatchConnectionPool: (moduleExports?: any) => {\n        if (moduleExports === undefined) return;\n\n        this._unwrap(moduleExports.ConnectionPool.prototype, 'checkOut');\n      },\n    };\n  }\n\n  private _getV4ConnectPatches<T extends V4Connect>() {\n    return {\n      v4PatchConnect: (moduleExports: any) => {\n        if (isWrapped(moduleExports.connect)) {\n          this._unwrap(moduleExports, 'connect');\n        }\n\n        this._wrap(moduleExports, 'connect', this._getV4ConnectCommand());\n        return moduleExports;\n      },\n      v4UnpatchConnect: (moduleExports?: T) => {\n        if (moduleExports === undefined) return;\n\n        this._unwrap(moduleExports, 'connect');\n      },\n    };\n  }\n\n  // This patch will become unnecessary once\n  // https://jira.mongodb.org/browse/NODE-5639 is done.\n  private _getV4ConnectionPoolCheckOut() {\n    return (original: V4ConnectionPool['checkOut']) => {\n      return function patchedCheckout(this: unknown, callback: any) {\n        const patchedCallback = context.bind(context.active(), callback);\n        return original.call(this, patchedCallback);\n      };\n    };\n  }\n\n  private _getV4ConnectCommand() {\n    const instrumentation = this;\n\n    return (\n      original: V4Connect['connectCallback'] | V4Connect['connectPromise']\n    ) => {\n      return function patchedConnect(\n        this: unknown,\n        options: any,\n        callback: any\n      ) {\n        // from v6.4 `connect` method only accepts an options param and returns a promise\n        // with the connection\n        if (original.length === 1) {\n          const result = (original as V4Connect['connectPromise']).call(\n            this,\n            options\n          );\n          if (result && typeof result.then === 'function') {\n            result.then(\n              () => instrumentation.setPoolName(options),\n              // this handler is set to pass the lint rules\n              () => undefined\n            );\n          }\n          return result;\n        }\n\n        // Earlier versions expects a callback param and return void\n        const patchedCallback = function (err: any, conn: any) {\n          if (err || !conn) {\n            callback(err, conn);\n            return;\n          }\n          instrumentation.setPoolName(options);\n          callback(err, conn);\n        };\n\n        return (original as V4Connect['connectCallback']).call(\n          this,\n          options,\n          patchedCallback\n        );\n      };\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private _getV4ConnectionPatches<T extends V4Connection>() {\n    return {\n      v4PatchConnectionCallback: (moduleExports: any) => {\n        // patch insert operation\n        if (isWrapped(moduleExports.Connection.prototype.command)) {\n          this._unwrap(moduleExports.Connection.prototype, 'command');\n        }\n\n        this._wrap(\n          moduleExports.Connection.prototype,\n          'command',\n          this._getV4PatchCommandCallback()\n        );\n        return moduleExports;\n      },\n      v4PatchConnectionPromise: (moduleExports: any) => {\n        // patch insert operation\n        if (isWrapped(moduleExports.Connection.prototype.command)) {\n          this._unwrap(moduleExports.Connection.prototype, 'command');\n        }\n\n        this._wrap(\n          moduleExports.Connection.prototype,\n          'command',\n          this._getV4PatchCommandPromise()\n        );\n        return moduleExports;\n      },\n      v4UnpatchConnection: (moduleExports?: any) => {\n        if (moduleExports === undefined) return;\n        this._unwrap(moduleExports.Connection.prototype, 'command');\n      },\n    };\n  }\n\n  /** Creates spans for common operations */\n  private _getV3PatchOperation(operationName: 'insert' | 'update' | 'remove') {\n    const instrumentation = this;\n    return (original: WireProtocolInternal[typeof operationName]) => {\n      return function patchedServerCommand(\n        this: unknown,\n        server: MongoInternalTopology,\n        ns: string,\n        ops: unknown[],\n        options: unknown | Function,\n        callback?: Function\n      ) {\n        const currentSpan = trace.getSpan(context.active());\n        const resultHandler =\n          typeof options === 'function' ? options : callback;\n        if (\n          !currentSpan ||\n          typeof resultHandler !== 'function' ||\n          typeof ops !== 'object'\n        ) {\n          if (typeof options === 'function') {\n            return original.call(this, server, ns, ops, options);\n          } else {\n            return original.call(this, server, ns, ops, options, callback);\n          }\n        }\n        const span = instrumentation.tracer.startSpan(\n          `mongodb.${operationName}`,\n          {\n            kind: SpanKind.CLIENT,\n          }\n        );\n\n        instrumentation._populateV3Attributes(\n          span,\n          ns,\n          server,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ops[0] as any,\n          operationName\n        );\n        const patchedCallback = instrumentation._patchEnd(span, resultHandler);\n        // handle when options is the callback to send the correct number of args\n        if (typeof options === 'function') {\n          return original.call(this, server, ns, ops, patchedCallback);\n        } else {\n          return original.call(this, server, ns, ops, options, patchedCallback);\n        }\n      };\n    };\n  }\n\n  /** Creates spans for command operation */\n  private _getV3PatchCommand() {\n    const instrumentation = this;\n    return (original: WireProtocolInternal['command']) => {\n      return function patchedServerCommand(\n        this: unknown,\n        server: MongoInternalTopology,\n        ns: string,\n        cmd: MongoInternalCommand,\n        options: unknown | Function,\n        callback?: Function\n      ) {\n        const currentSpan = trace.getSpan(context.active());\n        const resultHandler =\n          typeof options === 'function' ? options : callback;\n        if (\n          !currentSpan ||\n          typeof resultHandler !== 'function' ||\n          typeof cmd !== 'object'\n        ) {\n          if (typeof options === 'function') {\n            return original.call(this, server, ns, cmd, options);\n          } else {\n            return original.call(this, server, ns, cmd, options, callback);\n          }\n        }\n        const commandType = MongoDBInstrumentation._getCommandType(cmd);\n        const type =\n          commandType === MongodbCommandType.UNKNOWN ? 'command' : commandType;\n        const span = instrumentation.tracer.startSpan(`mongodb.${type}`, {\n          kind: SpanKind.CLIENT,\n        });\n        const operation =\n          commandType === MongodbCommandType.UNKNOWN ? undefined : commandType;\n        instrumentation._populateV3Attributes(span, ns, server, cmd, operation);\n        const patchedCallback = instrumentation._patchEnd(span, resultHandler);\n        // handle when options is the callback to send the correct number of args\n        if (typeof options === 'function') {\n          return original.call(this, server, ns, cmd, patchedCallback);\n        } else {\n          return original.call(this, server, ns, cmd, options, patchedCallback);\n        }\n      };\n    };\n  }\n\n  /** Creates spans for command operation */\n  private _getV4PatchCommandCallback() {\n    const instrumentation = this;\n    return (original: V4Connection['commandCallback']) => {\n      return function patchedV4ServerCommand(\n        this: any,\n        ns: MongodbNamespace,\n        cmd: any,\n        options: undefined | unknown,\n        callback: any\n      ) {\n        const currentSpan = trace.getSpan(context.active());\n        const resultHandler = callback;\n        const commandType = Object.keys(cmd)[0];\n\n        if (\n          typeof resultHandler !== 'function' ||\n          typeof cmd !== 'object' ||\n          cmd.ismaster ||\n          cmd.hello\n        ) {\n          return original.call(this, ns, cmd, options, callback);\n        }\n\n        let span = undefined;\n        if (currentSpan) {\n          span = instrumentation.tracer.startSpan(`mongodb.${commandType}`, {\n            kind: SpanKind.CLIENT,\n          });\n          instrumentation._populateV4Attributes(\n            span,\n            this,\n            ns,\n            cmd,\n            commandType\n          );\n        }\n        const patchedCallback = instrumentation._patchEnd(\n          span,\n          resultHandler,\n          this.id,\n          commandType\n        );\n\n        return original.call(this, ns, cmd, options, patchedCallback);\n      };\n    };\n  }\n\n  private _getV4PatchCommandPromise() {\n    const instrumentation = this;\n    return (original: V4Connection['commandPromise']) => {\n      return function patchedV4ServerCommand(\n        this: any,\n        ...args: Parameters<V4Connection['commandPromise']>\n      ) {\n        const [ns, cmd] = args;\n        const currentSpan = trace.getSpan(context.active());\n        const commandType = Object.keys(cmd)[0];\n        const resultHandler = () => undefined;\n\n        if (typeof cmd !== 'object' || cmd.ismaster || cmd.hello) {\n          return original.apply(this, args);\n        }\n\n        let span = undefined;\n        if (currentSpan) {\n          span = instrumentation.tracer.startSpan(`mongodb.${commandType}`, {\n            kind: SpanKind.CLIENT,\n          });\n          instrumentation._populateV4Attributes(\n            span,\n            this,\n            ns,\n            cmd,\n            commandType\n          );\n        }\n\n        const patchedCallback = instrumentation._patchEnd(\n          span,\n          resultHandler,\n          this.id,\n          commandType\n        );\n\n        const result = original.apply(this, args);\n        result.then(\n          (res: any) => patchedCallback(null, res),\n          (err: any) => patchedCallback(err)\n        );\n\n        return result;\n      };\n    };\n  }\n\n  /** Creates spans for find operation */\n  private _getV3PatchFind() {\n    const instrumentation = this;\n    return (original: WireProtocolInternal['query']) => {\n      return function patchedServerCommand(\n        this: unknown,\n        server: MongoInternalTopology,\n        ns: string,\n        cmd: MongoInternalCommand,\n        cursorState: CursorState,\n        options: unknown | Function,\n        callback?: Function\n      ) {\n        const currentSpan = trace.getSpan(context.active());\n        const resultHandler =\n          typeof options === 'function' ? options : callback;\n        if (\n          !currentSpan ||\n          typeof resultHandler !== 'function' ||\n          typeof cmd !== 'object'\n        ) {\n          if (typeof options === 'function') {\n            return original.call(this, server, ns, cmd, cursorState, options);\n          } else {\n            return original.call(\n              this,\n              server,\n              ns,\n              cmd,\n              cursorState,\n              options,\n              callback\n            );\n          }\n        }\n        const span = instrumentation.tracer.startSpan('mongodb.find', {\n          kind: SpanKind.CLIENT,\n        });\n        instrumentation._populateV3Attributes(span, ns, server, cmd, 'find');\n        const patchedCallback = instrumentation._patchEnd(span, resultHandler);\n        // handle when options is the callback to send the correct number of args\n        if (typeof options === 'function') {\n          return original.call(\n            this,\n            server,\n            ns,\n            cmd,\n            cursorState,\n            patchedCallback\n          );\n        } else {\n          return original.call(\n            this,\n            server,\n            ns,\n            cmd,\n            cursorState,\n            options,\n            patchedCallback\n          );\n        }\n      };\n    };\n  }\n\n  /** Creates spans for find operation */\n  private _getV3PatchCursor() {\n    const instrumentation = this;\n    return (original: WireProtocolInternal['getMore']) => {\n      return function patchedServerCommand(\n        this: unknown,\n        server: MongoInternalTopology,\n        ns: string,\n        cursorState: CursorState,\n        batchSize: number,\n        options: unknown | Function,\n        callback?: Function\n      ) {\n        const currentSpan = trace.getSpan(context.active());\n        const resultHandler =\n          typeof options === 'function' ? options : callback;\n        if (!currentSpan || typeof resultHandler !== 'function') {\n          if (typeof options === 'function') {\n            return original.call(\n              this,\n              server,\n              ns,\n              cursorState,\n              batchSize,\n              options\n            );\n          } else {\n            return original.call(\n              this,\n              server,\n              ns,\n              cursorState,\n              batchSize,\n              options,\n              callback\n            );\n          }\n        }\n        const span = instrumentation.tracer.startSpan('mongodb.getMore', {\n          kind: SpanKind.CLIENT,\n        });\n        instrumentation._populateV3Attributes(\n          span,\n          ns,\n          server,\n          cursorState.cmd,\n          'getMore'\n        );\n        const patchedCallback = instrumentation._patchEnd(span, resultHandler);\n        // handle when options is the callback to send the correct number of args\n        if (typeof options === 'function') {\n          return original.call(\n            this,\n            server,\n            ns,\n            cursorState,\n            batchSize,\n            patchedCallback\n          );\n        } else {\n          return original.call(\n            this,\n            server,\n            ns,\n            cursorState,\n            batchSize,\n            options,\n            patchedCallback\n          );\n        }\n      };\n    };\n  }\n\n  /**\n   * Get the mongodb command type from the object.\n   * @param command Internal mongodb command object\n   */\n  private static _getCommandType(\n    command: MongoInternalCommand\n  ): MongodbCommandType {\n    if (command.createIndexes !== undefined) {\n      return MongodbCommandType.CREATE_INDEXES;\n    } else if (command.findandmodify !== undefined) {\n      return MongodbCommandType.FIND_AND_MODIFY;\n    } else if (command.ismaster !== undefined) {\n      return MongodbCommandType.IS_MASTER;\n    } else if (command.count !== undefined) {\n      return MongodbCommandType.COUNT;\n    } else if (command.aggregate !== undefined) {\n      return MongodbCommandType.AGGREGATE;\n    } else {\n      return MongodbCommandType.UNKNOWN;\n    }\n  }\n\n  /**\n   * Populate span's attributes by fetching related metadata from the context\n   * @param span span to add attributes to\n   * @param connectionCtx mongodb internal connection context\n   * @param ns mongodb namespace\n   * @param command mongodb internal representation of a command\n   */\n  private _populateV4Attributes(\n    span: Span,\n    connectionCtx: any,\n    ns: MongodbNamespace,\n    command?: any,\n    operation?: string\n  ) {\n    let host, port: undefined | string;\n    if (connectionCtx) {\n      const hostParts =\n        typeof connectionCtx.address === 'string'\n          ? connectionCtx.address.split(':')\n          : '';\n      if (hostParts.length === 2) {\n        host = hostParts[0];\n        port = hostParts[1];\n      }\n    }\n    // capture parameters within the query as well if enhancedDatabaseReporting is enabled.\n    let commandObj: Record<string, unknown>;\n    if (command?.documents && command.documents[0]) {\n      commandObj = command.documents[0];\n    } else if (command?.cursors) {\n      commandObj = command.cursors;\n    } else {\n      commandObj = command;\n    }\n\n    this._addAllSpanAttributes(\n      span,\n      ns.db,\n      ns.collection,\n      host,\n      port,\n      commandObj,\n      operation\n    );\n  }\n\n  /**\n   * Populate span's attributes by fetching related metadata from the context\n   * @param span span to add attributes to\n   * @param ns mongodb namespace\n   * @param topology mongodb internal representation of the network topology\n   * @param command mongodb internal representation of a command\n   */\n  private _populateV3Attributes(\n    span: Span,\n    ns: string,\n    topology: MongoInternalTopology,\n    command?: MongoInternalCommand,\n    operation?: string | undefined\n  ) {\n    // add network attributes to determine the remote server\n    let host: undefined | string;\n    let port: undefined | string;\n    if (topology && topology.s) {\n      host = topology.s.options?.host ?? topology.s.host;\n      port = (topology.s.options?.port ?? topology.s.port)?.toString();\n      if (host == null || port == null) {\n        const address = topology.description?.address;\n        if (address) {\n          const addressSegments = address.split(':');\n          host = addressSegments[0];\n          port = addressSegments[1];\n        }\n      }\n    }\n\n    // The namespace is a combination of the database name and the name of the\n    // collection or index, like so: [database-name].[collection-or-index-name].\n    // It could be a string or an instance of MongoDBNamespace, as such we\n    // always coerce to a string to extract db and collection.\n    const [dbName, dbCollection] = ns.toString().split('.');\n    // capture parameters within the query as well if enhancedDatabaseReporting is enabled.\n    const commandObj = command?.query ?? command?.q ?? command;\n\n    this._addAllSpanAttributes(\n      span,\n      dbName,\n      dbCollection,\n      host,\n      port,\n      commandObj,\n      operation\n    );\n  }\n\n  private _addAllSpanAttributes(\n    span: Span,\n    dbName?: string,\n    dbCollection?: string,\n    host?: undefined | string,\n    port?: undefined | string,\n    commandObj?: any,\n    operation?: string | undefined\n  ) {\n    // add database related attributes\n    span.setAttributes({\n      [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_MONGODB,\n      [SEMATTRS_DB_NAME]: dbName,\n      [SEMATTRS_DB_MONGODB_COLLECTION]: dbCollection,\n      [SEMATTRS_DB_OPERATION]: operation,\n      [SEMATTRS_DB_CONNECTION_STRING]: `mongodb://${host}:${port}/${dbName}`,\n    });\n\n    if (host && port) {\n      span.setAttribute(SEMATTRS_NET_PEER_NAME, host);\n      const portNumber = parseInt(port, 10);\n      if (!isNaN(portNumber)) {\n        span.setAttribute(SEMATTRS_NET_PEER_PORT, portNumber);\n      }\n    }\n    if (!commandObj) return;\n    const dbStatementSerializer =\n      typeof this._config.dbStatementSerializer === 'function'\n        ? this._config.dbStatementSerializer\n        : this._defaultDbStatementSerializer.bind(this);\n\n    safeExecuteInTheMiddle(\n      () => {\n        const query = dbStatementSerializer(commandObj);\n        span.setAttribute(SEMATTRS_DB_STATEMENT, query);\n      },\n      err => {\n        if (err) {\n          this._diag.error('Error running dbStatementSerializer hook', err);\n        }\n      },\n      true\n    );\n  }\n\n  private _defaultDbStatementSerializer(commandObj: Record<string, unknown>) {\n    const enhancedDbReporting = !!this._config?.enhancedDatabaseReporting;\n    const resultObj = enhancedDbReporting\n      ? commandObj\n      : this._scrubStatement(commandObj);\n    return JSON.stringify(resultObj);\n  }\n\n  private _scrubStatement(value: unknown): unknown {\n    if (Array.isArray(value)) {\n      return value.map(element => this._scrubStatement(element));\n    }\n\n    if (typeof value === 'object' && value !== null) {\n      return Object.fromEntries(\n        Object.entries(value).map(([key, element]) => [\n          key,\n          this._scrubStatement(element),\n        ])\n      );\n    }\n\n    // A value like string or number, possible contains PII, scrub it\n    return '?';\n  }\n\n  /**\n   * Triggers the response hook in case it is defined.\n   * @param span The span to add the results to.\n   * @param result The command result\n   */\n  private _handleExecutionResult(span: Span, result: CommandResult) {\n    const config: MongoDBInstrumentationConfig = this.getConfig();\n    if (typeof config.responseHook === 'function') {\n      safeExecuteInTheMiddle(\n        () => {\n          config.responseHook!(span, { data: result });\n        },\n        err => {\n          if (err) {\n            this._diag.error('Error running response hook', err);\n          }\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * Ends a created span.\n   * @param span The created span to end.\n   * @param resultHandler A callback function.\n   * @param connectionId: The connection ID of the Command response.\n   */\n  private _patchEnd(\n    span: Span | undefined,\n    resultHandler: Function,\n    connectionId?: number,\n    commandType?: string\n  ): Function {\n    // mongodb is using \"tick\" when calling a callback, this way the context\n    // in final callback (resultHandler) is lost\n    const activeContext = context.active();\n    const instrumentation = this;\n    return function patchedEnd(this: {}, ...args: unknown[]) {\n      const error = args[0];\n      if (span) {\n        if (error instanceof Error) {\n          span?.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error.message,\n          });\n        } else {\n          const result = args[1] as CommandResult;\n          instrumentation._handleExecutionResult(span, result);\n        }\n        span.end();\n      }\n\n      return context.with(activeContext, () => {\n        if (commandType === 'endSessions') {\n          instrumentation._connectionsUsage.add(-1, {\n            state: 'idle',\n            'pool.name': instrumentation._poolName,\n          });\n        }\n        return resultHandler.apply(this, args);\n      });\n    };\n  }\n  private setPoolName(options: any) {\n    const host = options.hostAddress?.host;\n    const port = options.hostAddress?.port;\n    const database = options.dbName;\n    const poolName = `mongodb://${host}:${port}/${database}`;\n    this._poolName = poolName;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20781, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mongodb/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport { Span } from '@opentelemetry/api';\n\nexport interface MongoDBInstrumentationExecutionResponseHook {\n  (span: Span, responseInfo: MongoResponseHookInformation): void;\n}\n\n/**\n * Function that can be used to serialize db.statement tag\n * @param cmd - MongoDB command object\n *\n * @returns serialized string that will be used as the db.statement attribute.\n */\nexport type DbStatementSerializer = (cmd: Record<string, unknown>) => string;\n\nexport interface MongoDBInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * If true, additional information about query parameters and\n   * results will be attached (as `attributes`) to spans representing\n   * database operations.\n   */\n  enhancedDatabaseReporting?: boolean;\n\n  /**\n   * Hook that allows adding custom span attributes based on the data\n   * returned from MongoDB actions.\n   *\n   * @default undefined\n   */\n  responseHook?: MongoDBInstrumentationExecutionResponseHook;\n\n  /**\n   * Custom serializer function for the db.statement tag\n   */\n  dbStatementSerializer?: DbStatementSerializer;\n}\n\nexport interface MongoResponseHookInformation {\n  data: CommandResult;\n}\n\n// https://github.com/mongodb/node-mongodb-native/blob/3.6/lib/core/connection/command_result.js\nexport type CommandResult = {\n  result?: unknown;\n  connection?: unknown;\n  message?: unknown;\n};\n\nexport enum MongodbCommandType {\n  CREATE_INDEXES = 'createIndexes',\n  FIND_AND_MODIFY = 'findAndModify',\n  IS_MASTER = 'isMaster',\n  COUNT = 'count',\n  UNKNOWN = 'unknown',\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAkDH,IAAY,kBAMX;AAND,CAAA,SAAY,kBAAkB;IAC5B,kBAAA,CAAA,iBAAA,GAAA,eAAgC,CAAA;IAChC,kBAAA,CAAA,kBAAA,GAAA,eAAiC,CAAA;IACjC,kBAAA,CAAA,YAAA,GAAA,UAAsB,CAAA;IACtB,kBAAA,CAAA,QAAA,GAAA,OAAe,CAAA;IACf,kBAAA,CAAA,UAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EANW,kBAAkB,GAAlB,QAAA,kBAAkB,IAAA,CAAlB,QAAA,kBAAkB,GAAA,CAAA,CAAA,GAM7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20813, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mongodb/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,6JAAA,SAAkC;AAClC,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20853, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mongoose/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Attributes, SpanStatusCode, diag, Span } from '@opentelemetry/api';\nimport type { Collection } from 'mongoose';\nimport { MongooseResponseCustomAttributesFunction } from './types';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport {\n  SEMATTRS_DB_MONGODB_COLLECTION,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_USER,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\n\nexport function getAttributesFromCollection(\n  collection: Collection\n): Attributes {\n  return {\n    [SEMATTRS_DB_MONGODB_COLLECTION]: collection.name,\n    [SEMATTRS_DB_NAME]: collection.conn.name,\n    [SEMATTRS_DB_USER]: collection.conn.user,\n    [SEMATTRS_NET_PEER_NAME]: collection.conn.host,\n    [SEMATTRS_NET_PEER_PORT]: collection.conn.port,\n  };\n}\n\nfunction setErrorStatus(span: Span, error: any = {}) {\n  span.recordException(error);\n\n  span.setStatus({\n    code: SpanStatusCode.ERROR,\n    message: `${error.message} ${\n      error.code ? `\\nMongoose Error Code: ${error.code}` : ''\n    }`,\n  });\n}\n\nfunction applyResponseHook(\n  span: Span,\n  response: any,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n  moduleVersion: string | undefined = undefined\n) {\n  if (!responseHook) {\n    return;\n  }\n\n  safeExecuteInTheMiddle(\n    () => responseHook(span, { moduleVersion, response }),\n    e => {\n      if (e) {\n        diag.error('mongoose instrumentation: responseHook error', e);\n      }\n    },\n    true\n  );\n}\n\nexport function handlePromiseResponse(\n  execResponse: any,\n  span: Span,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n  moduleVersion: string | undefined = undefined\n): any {\n  if (!(execResponse instanceof Promise)) {\n    applyResponseHook(span, execResponse, responseHook, moduleVersion);\n    span.end();\n    return execResponse;\n  }\n\n  return execResponse\n    .then(response => {\n      applyResponseHook(span, response, responseHook, moduleVersion);\n      return response;\n    })\n    .catch(err => {\n      setErrorStatus(span, err);\n      throw err;\n    })\n    .finally(() => span.end());\n}\n\nexport function handleCallbackResponse(\n  callback: Function,\n  exec: Function,\n  originalThis: any,\n  span: Span,\n  args: IArguments,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n  moduleVersion: string | undefined = undefined\n) {\n  let callbackArgumentIndex = 0;\n  if (args.length === 2) {\n    callbackArgumentIndex = 1;\n  }\n\n  args[callbackArgumentIndex] = (err: Error, response: any): any => {\n    err\n      ? setErrorStatus(span, err)\n      : applyResponseHook(span, response, responseHook, moduleVersion);\n\n    span.end();\n    return callback!(err, response);\n  };\n\n  return exec.apply(originalThis, args);\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,MAAA,sCAA4E;AAG5E,MAAA,8DAAwE;AACxE,MAAA,wEAM6C;AAE7C,SAAgB,2BAA2B,CACzC,UAAsB;IAEtB,OAAO;QACL,CAAC,uBAAA,8BAA8B,CAAC,EAAE,UAAU,CAAC,IAAI;QACjD,CAAC,uBAAA,gBAAgB,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI;QACxC,CAAC,uBAAA,gBAAgB,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI;QACxC,CAAC,uBAAA,sBAAsB,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI;QAC9C,CAAC,uBAAA,sBAAsB,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI;KAC/C,CAAC;AACJ,CAAC;AAVD,QAAA,2BAAA,GAAA,4BAUC;AAED,SAAS,cAAc,CAAC,IAAU,EAAE,QAAa,CAAA,CAAE;IACjD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAE5B,IAAI,CAAC,SAAS,CAAC;QACb,IAAI,EAAE,MAAA,cAAc,CAAC,KAAK;QAC1B,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,CAAA,CAAA,EACvB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,uBAAA,EAA0B,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EACxD,EAAE;KACH,CAAC,CAAC;AACL,CAAC;AAED,SAAS,iBAAiB,CACxB,IAAU,EACV,QAAa,EACb,YAAuD,EACvD,gBAAoC,SAAS;IAE7C,IAAI,CAAC,YAAY,EAAE;QACjB,OAAO;KACR;IAED,CAAA,GAAA,kBAAA,sBAAsB,EACpB,GAAG,CAAG,CAAD,WAAa,CAAC,IAAI,EAAE;YAAE,aAAa;YAAE,QAAQ;QAAA,CAAE,CAAC,GACrD,CAAC,CAAC,EAAE;QACF,IAAI,CAAC,EAAE;YACL,MAAA,IAAI,CAAC,KAAK,CAAC,8CAA8C,EAAE,CAAC,CAAC,CAAC;SAC/D;IACH,CAAC,EACD,IAAI,CACL,CAAC;AACJ,CAAC;AAED,SAAgB,qBAAqB,CACnC,YAAiB,EACjB,IAAU,EACV,YAAuD,EACvD,gBAAoC,SAAS;IAE7C,IAAI,CAAC,CAAC,YAAY,YAAY,OAAO,CAAC,EAAE;QACtC,iBAAiB,CAAC,IAAI,EAAE,YAAY,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;QACnE,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO,YAAY,CAAC;KACrB;IAED,OAAO,YAAY,CAChB,IAAI,EAAC,QAAQ,CAAC,EAAE;QACf,iBAAiB,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;QAC/D,OAAO,QAAQ,CAAC;IAClB,CAAC,CAAC,CACD,KAAK,EAAC,GAAG,CAAC,EAAE;QACX,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC1B,MAAM,GAAG,CAAC;IACZ,CAAC,CAAC,CACD,OAAO,CAAC,GAAG,CAAG,CAAD,GAAK,CAAC,GAAG,EAAE,CAAC,CAAC;AAC/B,CAAC;AAtBD,QAAA,qBAAA,GAAA,sBAsBC;AAED,SAAgB,sBAAsB,CACpC,QAAkB,EAClB,IAAc,EACd,YAAiB,EACjB,IAAU,EACV,IAAgB,EAChB,YAAuD,EACvD,gBAAoC,SAAS;IAE7C,IAAI,qBAAqB,GAAG,CAAC,CAAC;IAC9B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACrB,qBAAqB,GAAG,CAAC,CAAC;KAC3B;IAED,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,GAAU,EAAE,QAAa,EAAO,EAAE;QAC/D,GAAG,GACC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,GACzB,iBAAiB,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;QAEnE,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO,QAAS,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;IAEF,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AACxC,CAAC;AAxBD,QAAA,sBAAA,GAAA,uBAwBC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20938, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mongoose/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.41.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-mongoose';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,yCAAyC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20965, "column": 0}, "map": {"version":3,"file":"mongoose.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mongoose/src/mongoose.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, Span, trace, Attributes, SpanKind } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport type * as mongoose from 'mongoose';\nimport { MongooseInstrumentationConfig, SerializerPayload } from './types';\nimport {\n  handleCallbackResponse,\n  handlePromiseResponse,\n  getAttributesFromCollection,\n} from './utils';\nimport {\n  InstrumentationBase,\n  InstrumentationModuleDefinition,\n  InstrumentationNodeModuleDefinition,\n} from '@opentelemetry/instrumentation';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  SEMATTRS_DB_OPERATION,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\n\nconst contextCaptureFunctionsCommon = [\n  'deleteOne',\n  'deleteMany',\n  'find',\n  'findOne',\n  'estimatedDocumentCount',\n  'countDocuments',\n  'distinct',\n  'where',\n  '$where',\n  'findOneAndUpdate',\n  'findOneAndDelete',\n  'findOneAndReplace',\n];\n\nconst contextCaptureFunctions6 = [\n  'remove',\n  'count',\n  'findOneAndRemove',\n  ...contextCaptureFunctionsCommon,\n];\nconst contextCaptureFunctions7 = [\n  'count',\n  'findOneAndRemove',\n  ...contextCaptureFunctionsCommon,\n];\nconst contextCaptureFunctions8 = [...contextCaptureFunctionsCommon];\n\nfunction getContextCaptureFunctions(\n  moduleVersion: string | undefined\n): string[] {\n  /* istanbul ignore next */\n  if (!moduleVersion) {\n    return contextCaptureFunctionsCommon;\n  } else if (moduleVersion.startsWith('6.') || moduleVersion.startsWith('5.')) {\n    return contextCaptureFunctions6;\n  } else if (moduleVersion.startsWith('7.')) {\n    return contextCaptureFunctions7;\n  } else {\n    return contextCaptureFunctions8;\n  }\n}\n\nfunction instrumentRemove(moduleVersion: string | undefined): boolean {\n  return (\n    (moduleVersion &&\n      (moduleVersion.startsWith('5.') || moduleVersion.startsWith('6.'))) ||\n    false\n  );\n}\n\n// when mongoose functions are called, we store the original call context\n// and then set it as the parent for the spans created by Query/Aggregate exec()\n// calls. this bypass the unlinked spans issue on thenables await operations.\nexport const _STORED_PARENT_SPAN: unique symbol = Symbol('stored-parent-span');\n\nexport class MongooseInstrumentation extends InstrumentationBase<MongooseInstrumentationConfig> {\n  constructor(config: MongooseInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init(): InstrumentationModuleDefinition {\n    const module = new InstrumentationNodeModuleDefinition(\n      'mongoose',\n      ['>=5.9.7 <9'],\n      this.patch.bind(this),\n      this.unpatch.bind(this)\n    );\n    return module;\n  }\n\n  private patch(\n    moduleExports: typeof mongoose,\n    moduleVersion: string | undefined\n  ) {\n    this._wrap(\n      moduleExports.Model.prototype,\n      'save',\n      this.patchOnModelMethods('save', moduleVersion)\n    );\n    // mongoose applies this code on module require:\n    // Model.prototype.$save = Model.prototype.save;\n    // which captures the save function before it is patched.\n    // so we need to apply the same logic after instrumenting the save function.\n    moduleExports.Model.prototype.$save = moduleExports.Model.prototype.save;\n\n    if (instrumentRemove(moduleVersion)) {\n      this._wrap(\n        moduleExports.Model.prototype,\n        'remove',\n        this.patchOnModelMethods('remove', moduleVersion)\n      );\n    }\n\n    this._wrap(\n      moduleExports.Query.prototype,\n      'exec',\n      this.patchQueryExec(moduleVersion)\n    );\n    this._wrap(\n      moduleExports.Aggregate.prototype,\n      'exec',\n      this.patchAggregateExec(moduleVersion)\n    );\n\n    const contextCaptureFunctions = getContextCaptureFunctions(moduleVersion);\n\n    contextCaptureFunctions.forEach((funcName: string) => {\n      this._wrap(\n        moduleExports.Query.prototype,\n        funcName as any,\n        this.patchAndCaptureSpanContext(funcName)\n      );\n    });\n    this._wrap(moduleExports.Model, 'aggregate', this.patchModelAggregate());\n\n    return moduleExports;\n  }\n\n  private unpatch(\n    moduleExports: typeof mongoose,\n    moduleVersion: string | undefined\n  ): void {\n    const contextCaptureFunctions = getContextCaptureFunctions(moduleVersion);\n\n    this._unwrap(moduleExports.Model.prototype, 'save');\n    // revert the patch for $save which we applied by aliasing it to patched `save`\n    moduleExports.Model.prototype.$save = moduleExports.Model.prototype.save;\n\n    if (instrumentRemove(moduleVersion)) {\n      this._unwrap(moduleExports.Model.prototype, 'remove');\n    }\n\n    this._unwrap(moduleExports.Query.prototype, 'exec');\n    this._unwrap(moduleExports.Aggregate.prototype, 'exec');\n\n    contextCaptureFunctions.forEach((funcName: string) => {\n      this._unwrap(moduleExports.Query.prototype, funcName as any);\n    });\n    this._unwrap(moduleExports.Model, 'aggregate');\n  }\n\n  private patchAggregateExec(moduleVersion: string | undefined) {\n    const self = this;\n    return (originalAggregate: Function) => {\n      return function exec(this: any, callback?: Function) {\n        if (\n          self.getConfig().requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalAggregate.apply(this, arguments);\n        }\n\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes: Attributes = {};\n        const { dbStatementSerializer } = self.getConfig();\n        if (dbStatementSerializer) {\n          attributes[SEMATTRS_DB_STATEMENT] = dbStatementSerializer(\n            'aggregate',\n            {\n              options: this.options,\n              aggregatePipeline: this._pipeline,\n            }\n          );\n        }\n\n        const span = self._startSpan(\n          this._model.collection,\n          this._model?.modelName,\n          'aggregate',\n          attributes,\n          parentSpan\n        );\n\n        return self._handleResponse(\n          span,\n          originalAggregate,\n          this,\n          arguments,\n          callback,\n          moduleVersion\n        );\n      };\n    };\n  }\n\n  private patchQueryExec(moduleVersion: string | undefined) {\n    const self = this;\n    return (originalExec: Function) => {\n      return function exec(this: any, callback?: Function) {\n        if (\n          self.getConfig().requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalExec.apply(this, arguments);\n        }\n\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes: Attributes = {};\n        const { dbStatementSerializer } = self.getConfig();\n        if (dbStatementSerializer) {\n          attributes[SEMATTRS_DB_STATEMENT] = dbStatementSerializer(this.op, {\n            condition: this._conditions,\n            updates: this._update,\n            options: this.options,\n            fields: this._fields,\n          });\n        }\n        const span = self._startSpan(\n          this.mongooseCollection,\n          this.model.modelName,\n          this.op,\n          attributes,\n          parentSpan\n        );\n\n        return self._handleResponse(\n          span,\n          originalExec,\n          this,\n          arguments,\n          callback,\n          moduleVersion\n        );\n      };\n    };\n  }\n\n  private patchOnModelMethods(op: string, moduleVersion: string | undefined) {\n    const self = this;\n    return (originalOnModelFunction: Function) => {\n      return function method(this: any, options?: any, callback?: Function) {\n        if (\n          self.getConfig().requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalOnModelFunction.apply(this, arguments);\n        }\n\n        const serializePayload: SerializerPayload = { document: this };\n        if (options && !(options instanceof Function)) {\n          serializePayload.options = options;\n        }\n        const attributes: Attributes = {};\n        const { dbStatementSerializer } = self.getConfig();\n        if (dbStatementSerializer) {\n          attributes[SEMATTRS_DB_STATEMENT] = dbStatementSerializer(\n            op,\n            serializePayload\n          );\n        }\n        const span = self._startSpan(\n          this.constructor.collection,\n          this.constructor.modelName,\n          op,\n          attributes\n        );\n\n        if (options instanceof Function) {\n          callback = options;\n          options = undefined;\n        }\n\n        return self._handleResponse(\n          span,\n          originalOnModelFunction,\n          this,\n          arguments,\n          callback,\n          moduleVersion\n        );\n      };\n    };\n  }\n\n  // we want to capture the otel span on the object which is calling exec.\n  // in the special case of aggregate, we need have no function to path\n  // on the Aggregate object to capture the context on, so we patch\n  // the aggregate of Model, and set the context on the Aggregate object\n  private patchModelAggregate() {\n    const self = this;\n    return (original: Function) => {\n      return function captureSpanContext(this: any) {\n        const currentSpan = trace.getSpan(context.active());\n        const aggregate = self._callOriginalFunction(() =>\n          original.apply(this, arguments)\n        );\n        if (aggregate) aggregate[_STORED_PARENT_SPAN] = currentSpan;\n        return aggregate;\n      };\n    };\n  }\n\n  private patchAndCaptureSpanContext(funcName: string) {\n    const self = this;\n    return (original: Function) => {\n      return function captureSpanContext(this: any) {\n        this[_STORED_PARENT_SPAN] = trace.getSpan(context.active());\n        return self._callOriginalFunction(() =>\n          original.apply(this, arguments)\n        );\n      };\n    };\n  }\n\n  private _startSpan(\n    collection: mongoose.Collection,\n    modelName: string,\n    operation: string,\n    attributes: Attributes,\n    parentSpan?: Span\n  ): Span {\n    return this.tracer.startSpan(\n      `mongoose.${modelName}.${operation}`,\n      {\n        kind: SpanKind.CLIENT,\n        attributes: {\n          ...attributes,\n          ...getAttributesFromCollection(collection),\n          [SEMATTRS_DB_OPERATION]: operation,\n          [SEMATTRS_DB_SYSTEM]: 'mongoose',\n        },\n      },\n      parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined\n    );\n  }\n\n  private _handleResponse(\n    span: Span,\n    exec: Function,\n    originalThis: any,\n    args: IArguments,\n    callback?: Function,\n    moduleVersion: string | undefined = undefined\n  ) {\n    const self = this;\n    if (callback instanceof Function) {\n      return self._callOriginalFunction(() =>\n        handleCallbackResponse(\n          callback,\n          exec,\n          originalThis,\n          span,\n          args,\n          self.getConfig().responseHook,\n          moduleVersion\n        )\n      );\n    } else {\n      const response = self._callOriginalFunction(() =>\n        exec.apply(originalThis, args)\n      );\n      return handlePromiseResponse(\n        response,\n        span,\n        self.getConfig().responseHook,\n        moduleVersion\n      );\n    }\n  }\n\n  private _callOriginalFunction<T>(originalFunction: (...args: any[]) => T): T {\n    if (this.getConfig().suppressInternalInstrumentation) {\n      return context.with(suppressTracing(context.active()), originalFunction);\n    } else {\n      return originalFunction();\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21208, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mongoose/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface SerializerPayload {\n  condition?: any;\n  options?: any;\n  updates?: any;\n  document?: any;\n  aggregatePipeline?: any;\n  fields?: any;\n}\n\nexport type DbStatementSerializer = (\n  operation: string,\n  payload: SerializerPayload\n) => string;\n\nexport interface ResponseInfo {\n  moduleVersion: string | undefined;\n  response: any;\n}\n\nexport type MongooseResponseCustomAttributesFunction = (\n  span: Span,\n  responseInfo: ResponseInfo\n) => void;\n\nexport interface MongooseInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * Mongoose operation use mongodb under the hood.\n   * If mongodb instrumentation is enabled, a mongoose operation will also create\n   * a mongodb operation describing the communication with mongoDB servers.\n   * Setting the `suppressInternalInstrumentation` config value to `true` will\n   * cause the instrumentation to suppress instrumentation of underlying operations,\n   * effectively causing mongodb spans to be non-recordable.\n   */\n  suppressInternalInstrumentation?: boolean;\n\n  /** Custom serializer function for the db.statement tag */\n  dbStatementSerializer?: DbStatementSerializer;\n\n  /** hook for adding custom attributes using the response payload */\n  responseHook?: MongooseResponseCustomAttributesFunction;\n\n  /** Set to true if you do not want to collect traces that start with mongoose */\n  requireParentSpan?: boolean;\n}\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21217, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mongoose/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './mongoose';\nexport * from './types';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,uJAAA,SAA2B;AAC3B,oJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21257, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/sql-common/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  trace,\n  Span,\n  ROOT_CONTEXT,\n  defaultTextMapSetter,\n} from '@opentelemetry/api';\nimport { W3CTraceContextPropagator } from '@opentelemetry/core';\n\n// NOTE: This function currently is returning false-positives\n// in cases where comment characters appear in string literals\n// (\"SELECT '-- not a comment';\" would return true, although has no comment)\nfunction hasValidSqlComment(query: string): boolean {\n  const indexOpeningDashDashComment = query.indexOf('--');\n  if (indexOpeningDashDashComment >= 0) {\n    return true;\n  }\n\n  const indexOpeningSlashComment = query.indexOf('/*');\n  if (indexOpeningSlashComment < 0) {\n    return false;\n  }\n\n  const indexClosingSlashComment = query.indexOf('*/');\n  return indexOpeningDashDashComment < indexClosingSlashComment;\n}\n\n// sqlcommenter specification (https://google.github.io/sqlcommenter/spec/#value-serialization)\n// expects us to URL encode based on the RFC 3986 spec (https://en.wikipedia.org/wiki/Percent-encoding),\n// but encodeURIComponent does not handle some characters correctly (! ' ( ) *),\n// which means we need special handling for this\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction fixedEncodeURIComponent(str: string) {\n  return encodeURIComponent(str).replace(\n    /[!'()*]/g,\n    c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n  );\n}\n\nexport function addSqlCommenterComment(span: Span, query: string): string {\n  if (typeof query !== 'string' || query.length === 0) {\n    return query;\n  }\n\n  // As per sqlcommenter spec we shall not add a comment if there already is a comment\n  // in the query\n  if (hasValidSqlComment(query)) {\n    return query;\n  }\n\n  const propagator = new W3CTraceContextPropagator();\n  const headers: { [key: string]: string } = {};\n  propagator.inject(\n    trace.setSpan(ROOT_CONTEXT, span),\n    headers,\n    defaultTextMapSetter\n  );\n\n  // sqlcommenter spec requires keys in the comment to be sorted lexicographically\n  const sortedKeys = Object.keys(headers).sort();\n\n  if (sortedKeys.length === 0) {\n    return query;\n  }\n\n  const commentString = sortedKeys\n    .map(key => {\n      const encodedValue = fixedEncodeURIComponent(headers[key]);\n      return `${key}='${encodedValue}'`;\n    })\n    .join(',');\n\n  return `${query} /*${commentString}*/`;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAK4B;AAC5B,MAAA,wCAAgE;AAEhE,6DAA6D;AAC7D,8DAA8D;AAC9D,4EAA4E;AAC5E,SAAS,kBAAkB,CAAC,KAAa;IACvC,MAAM,2BAA2B,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACxD,IAAI,2BAA2B,IAAI,CAAC,EAAE;QACpC,OAAO,IAAI,CAAC;KACb;IAED,MAAM,wBAAwB,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrD,IAAI,wBAAwB,GAAG,CAAC,EAAE;QAChC,OAAO,KAAK,CAAC;KACd;IAED,MAAM,wBAAwB,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrD,OAAO,2BAA2B,GAAG,wBAAwB,CAAC;AAChE,CAAC;AAED,+FAA+F;AAC/F,wGAAwG;AACxG,gFAAgF;AAChF,gDAAgD;AAChD,sGAAsG;AACtG,SAAS,uBAAuB,CAAC,GAAW;IAC1C,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC,OAAO,CACpC,UAAU,GACV,CAAC,CAAC,EAAE,AAAC,CAAA,CAAA,EAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE,CACtD,CAAC;AACJ,CAAC;AAED,SAAgB,sBAAsB,CAAC,IAAU,EAAE,KAAa;IAC9D,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACnD,OAAO,KAAK,CAAC;KACd;IAED,oFAAoF;IACpF,eAAe;IACf,IAAI,kBAAkB,CAAC,KAAK,CAAC,EAAE;QAC7B,OAAO,KAAK,CAAC;KACd;IAED,MAAM,UAAU,GAAG,IAAI,OAAA,yBAAyB,EAAE,CAAC;IACnD,MAAM,OAAO,GAA8B,CAAA,CAAE,CAAC;IAC9C,UAAU,CAAC,MAAM,CACf,MAAA,KAAK,CAAC,OAAO,CAAC,MAAA,YAAY,EAAE,IAAI,CAAC,EACjC,OAAO,EACP,MAAA,oBAAoB,CACrB,CAAC;IAEF,gFAAgF;IAChF,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAE/C,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;QAC3B,OAAO,KAAK,CAAC;KACd;IAED,MAAM,aAAa,GAAG,UAAU,CAC7B,GAAG,EAAC,GAAG,CAAC,EAAE;QACT,MAAM,YAAY,GAAG,uBAAuB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3D,OAAO,GAAG,GAAG,CAAA,EAAA,EAAK,YAAY,CAAA,CAAA,CAAG,CAAC;IACpC,CAAC,CAAC,CACD,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,OAAO,GAAG,KAAK,CAAA,GAAA,EAAM,aAAa,CAAA,EAAA,CAAI,CAAC;AACzC,CAAC;AAlCD,QAAA,sBAAA,GAAA,uBAkCC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21330, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql2/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes } from '@opentelemetry/api';\nimport {\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_USER,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\n\n/*\n  Following types declare an expectation on mysql2 types and define a subset we\n  use in the instrumentation of the types actually defined in mysql2 package\n\n  We need to import them here so that the installing party of the instrumentation\n  doesn't have to absolutely install the mysql2 package as well - specially\n  important for auto-loaders and meta-packages.\n*/\ninterface QueryOptions {\n  sql: string;\n  values?: any | any[] | { [param: string]: any };\n}\n\ninterface Query {\n  sql: string;\n}\n\ninterface Config {\n  host?: string;\n  port?: number;\n  database?: string;\n  user?: string;\n  connectionConfig?: Config;\n}\n/**\n * Get an Attributes map from a mysql connection config object\n *\n * @param config ConnectionConfig\n */\nexport function getConnectionAttributes(config: Config): Attributes {\n  const { host, port, database, user } = getConfig(config);\n  const portNumber = parseInt(port, 10);\n  if (!isNaN(portNumber)) {\n    return {\n      [SEMATTRS_NET_PEER_NAME]: host,\n      [SEMATTRS_NET_PEER_PORT]: portNumber,\n      [SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n      [SEMATTRS_DB_NAME]: database,\n      [SEMATTRS_DB_USER]: user,\n    };\n  }\n  return {\n    [SEMATTRS_NET_PEER_NAME]: host,\n    [SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n    [SEMATTRS_DB_NAME]: database,\n    [SEMATTRS_DB_USER]: user,\n  };\n}\n\nfunction getConfig(config: any) {\n  const { host, port, database, user } =\n    (config && config.connectionConfig) || config || {};\n  return { host, port, database, user };\n}\n\nfunction getJDBCString(\n  host: string | undefined,\n  port: number | undefined,\n  database: string | undefined\n) {\n  let jdbcString = `jdbc:mysql://${host || 'localhost'}`;\n\n  if (typeof port === 'number') {\n    jdbcString += `:${port}`;\n  }\n\n  if (typeof database === 'string') {\n    jdbcString += `/${database}`;\n  }\n\n  return jdbcString;\n}\n\n/**\n * Conjures up the value for the db.statement attribute by formatting a SQL query.\n *\n * @returns the database statement being executed.\n */\nexport function getDbStatement(\n  query: string | Query | QueryOptions,\n  format: (\n    sql: string,\n    values: any[],\n    stringifyObjects?: boolean,\n    timeZone?: string\n  ) => string,\n  values?: any[]\n): string {\n  if (typeof query === 'string') {\n    return values ? format(query, values) : query;\n  } else {\n    // According to https://github.com/mysqljs/mysql#performing-queries\n    // The values argument will override the values in the option object.\n    return values || (query as QueryOptions).values\n      ? format(query.sql, values || (query as QueryOptions).values)\n      : query.sql;\n  }\n}\n\n/**\n * The span name SHOULD be set to a low cardinality value\n * representing the statement executed on the database.\n *\n * @returns SQL statement without variable arguments or SQL verb\n */\nexport function getSpanName(query: string | Query | QueryOptions): string {\n  const rawQuery = typeof query === 'object' ? query.sql : query;\n  // Extract the SQL verb\n  return rawQuery?.split(' ')?.[0];\n}\n\nexport const once = (fn: Function) => {\n  let called = false;\n  return (...args: unknown[]) => {\n    if (called) return;\n    called = true;\n    return fn(...args);\n  };\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21433, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql2/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.40.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-mysql2';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,uCAAuC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21460, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql2/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  DBSYSTEMVALUES_MYSQL,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\nimport { addSqlCommenterComment } from '@opentelemetry/sql-common';\nimport type * as mysqlTypes from 'mysql2';\nimport { MySQL2InstrumentationConfig } from './types';\nimport {\n  getConnectionAttributes,\n  getDbStatement,\n  getSpanName,\n  once,\n} from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\ntype formatType = typeof mysqlTypes.format;\n\nexport class MySQL2Instrumentation extends InstrumentationBase {\n  static readonly COMMON_ATTRIBUTES = {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_MYSQL,\n  };\n\n  constructor(config: MySQL2InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'mysql2',\n        ['>=1.4.2 <4'],\n        (moduleExports: any) => {\n          const ConnectionPrototype: mysqlTypes.Connection =\n            moduleExports.Connection.prototype;\n          if (isWrapped(ConnectionPrototype.query)) {\n            this._unwrap(ConnectionPrototype, 'query');\n          }\n          this._wrap(\n            ConnectionPrototype,\n            'query',\n            this._patchQuery(moduleExports.format, false) as any\n          );\n\n          if (isWrapped(ConnectionPrototype.execute)) {\n            this._unwrap(ConnectionPrototype, 'execute');\n          }\n          this._wrap(\n            ConnectionPrototype,\n            'execute',\n            this._patchQuery(moduleExports.format, true) as any\n          );\n\n          return moduleExports;\n        },\n        (moduleExports: any) => {\n          if (moduleExports === undefined) return;\n          const ConnectionPrototype: mysqlTypes.Connection =\n            moduleExports.Connection.prototype;\n          this._unwrap(ConnectionPrototype, 'query');\n          this._unwrap(ConnectionPrototype, 'execute');\n        }\n      ),\n    ];\n  }\n\n  private _patchQuery(format: formatType, isPrepared: boolean) {\n    return (originalQuery: Function): Function => {\n      const thisPlugin = this;\n      return function query(\n        this: mysqlTypes.Connection,\n        query: string | mysqlTypes.Query | mysqlTypes.QueryOptions,\n        _valuesOrCallback?: unknown[] | Function,\n        _callback?: Function\n      ) {\n        const thisPluginConfig: MySQL2InstrumentationConfig =\n          thisPlugin._config;\n\n        let values;\n        if (Array.isArray(_valuesOrCallback)) {\n          values = _valuesOrCallback;\n        } else if (arguments[2]) {\n          values = [_valuesOrCallback];\n        }\n\n        const span = thisPlugin.tracer.startSpan(getSpanName(query), {\n          kind: api.SpanKind.CLIENT,\n          attributes: {\n            ...MySQL2Instrumentation.COMMON_ATTRIBUTES,\n            ...getConnectionAttributes(this.config),\n            [SEMATTRS_DB_STATEMENT]: getDbStatement(query, format, values),\n          },\n        });\n\n        if (!isPrepared && thisPluginConfig.addSqlCommenterCommentToQueries) {\n          arguments[0] = query =\n            typeof query === 'string'\n              ? addSqlCommenterComment(span, query)\n              : Object.assign(query, {\n                  sql: addSqlCommenterComment(span, query.sql),\n                });\n        }\n\n        const endSpan = once((err?: any, results?: any) => {\n          if (err) {\n            span.setStatus({\n              code: api.SpanStatusCode.ERROR,\n              message: err.message,\n            });\n          } else {\n            if (typeof thisPluginConfig.responseHook === 'function') {\n              safeExecuteInTheMiddle(\n                () => {\n                  thisPluginConfig.responseHook!(span, {\n                    queryResults: results,\n                  });\n                },\n                err => {\n                  if (err) {\n                    thisPlugin._diag.warn('Failed executing responseHook', err);\n                  }\n                },\n                true\n              );\n            }\n          }\n\n          span.end();\n        });\n\n        if (arguments.length === 1) {\n          if (typeof (query as any).onResult === 'function') {\n            thisPlugin._wrap(\n              query as any,\n              'onResult',\n              thisPlugin._patchCallbackQuery(endSpan)\n            );\n          }\n\n          const streamableQuery: mysqlTypes.Query = originalQuery.apply(\n            this,\n            arguments\n          );\n\n          // `end` in mysql behaves similarly to `result` in mysql2.\n          streamableQuery\n            .once('error', err => {\n              endSpan(err);\n            })\n            .once('result', results => {\n              endSpan(undefined, results);\n            });\n\n          return streamableQuery;\n        }\n\n        if (typeof arguments[1] === 'function') {\n          thisPlugin._wrap(\n            arguments,\n            1,\n            thisPlugin._patchCallbackQuery(endSpan)\n          );\n        } else if (typeof arguments[2] === 'function') {\n          thisPlugin._wrap(\n            arguments,\n            2,\n            thisPlugin._patchCallbackQuery(endSpan)\n          );\n        }\n\n        return originalQuery.apply(this, arguments);\n      };\n    };\n  }\n\n  private _patchCallbackQuery(endSpan: Function) {\n    return (originalCallback: Function) => {\n      return function (\n        err: mysqlTypes.QueryError | null,\n        results?: any,\n        fields?: mysqlTypes.FieldPacket[]\n      ) {\n        endSpan(err, results);\n        return originalCallback(...arguments);\n      };\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21597, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql2/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport type { Span } from '@opentelemetry/api';\n\nexport interface MySQL2ResponseHookInformation {\n  queryResults: any;\n}\n\nexport interface MySQL2InstrumentationExecutionResponseHook {\n  (span: Span, responseHookInfo: MySQL2ResponseHookInformation): void;\n}\n\nexport interface MySQL2InstrumentationConfig extends InstrumentationConfig {\n  /**\n   * Hook that allows adding custom span attributes based on the data\n   * returned MySQL2 queries.\n   *\n   * @default undefined\n   */\n  responseHook?: MySQL2InstrumentationExecutionResponseHook;\n\n  /**\n   * If true, queries are modified to also include a comment with\n   * the tracing context, following the {@link https://github.com/open-telemetry/opentelemetry-sqlcommenter sqlcommenter} format\n   */\n  addSqlCommenterCommentToQueries?: boolean;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21620, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql2/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,4JAAA,SAAkC;AAClC,kJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21660, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql/src/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Mysql specific attributes not covered by semantic conventions\nexport enum AttributeNames {\n  MYSQL_VALUES = 'db.mysql.values',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,gEAAgE;AAChE,IAAY,cAEX;AAFD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,eAAA,GAAA,iBAAgC,CAAA;AAClC,CAAC,EAFW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAEzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21689, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes } from '@opentelemetry/api';\nimport {\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_USER,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\nimport type {\n  ConnectionConfig,\n  PoolActualConfig,\n  Query,\n  QueryOptions,\n} from 'mysql';\nimport type * as mysqlTypes from 'mysql';\n\n/**\n * Get an Attributes map from a mysql connection config object\n *\n * @param config ConnectionConfig\n */\nexport function getConnectionAttributes(\n  config: ConnectionConfig | PoolActualConfig\n): Attributes {\n  const { host, port, database, user } = getConfig(config);\n  const portNumber = parseInt(port, 10);\n  if (!isNaN(portNumber)) {\n    return {\n      [SEMATTRS_NET_PEER_NAME]: host,\n      [SEMATTRS_NET_PEER_PORT]: portNumber,\n      [SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n      [SEMATTRS_DB_NAME]: database,\n      [SEMATTRS_DB_USER]: user,\n    };\n  }\n  return {\n    [SEMATTRS_NET_PEER_NAME]: host,\n    [SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n    [SEMATTRS_DB_NAME]: database,\n    [SEMATTRS_DB_USER]: user,\n  };\n}\n\nfunction getConfig(config: any) {\n  const { host, port, database, user } =\n    (config && config.connectionConfig) || config || {};\n  return { host, port, database, user };\n}\n\nfunction getJDBCString(\n  host: string | undefined,\n  port: number | undefined,\n  database: string | undefined\n) {\n  let jdbcString = `jdbc:mysql://${host || 'localhost'}`;\n\n  if (typeof port === 'number') {\n    jdbcString += `:${port}`;\n  }\n\n  if (typeof database === 'string') {\n    jdbcString += `/${database}`;\n  }\n\n  return jdbcString;\n}\n\n/**\n * @returns the database statement being executed.\n */\nexport function getDbStatement(query: string | Query | QueryOptions): string {\n  if (typeof query === 'string') {\n    return query;\n  } else {\n    return query.sql;\n  }\n}\n\nexport function getDbValues(\n  query: string | Query | QueryOptions,\n  values?: any[]\n): string {\n  if (typeof query === 'string') {\n    return arrayStringifyHelper(values);\n  } else {\n    // According to https://github.com/mysqljs/mysql#performing-queries\n    // The values argument will override the values in the option object.\n    return arrayStringifyHelper(values || query.values);\n  }\n}\n\n/**\n * The span name SHOULD be set to a low cardinality value\n * representing the statement executed on the database.\n *\n * @returns SQL statement without variable arguments or SQL verb\n */\nexport function getSpanName(query: string | Query | QueryOptions): string {\n  if (typeof query === 'object') {\n    return query.sql;\n  }\n  return query.split(' ')[0];\n}\n\nexport function arrayStringifyHelper(arr: Array<unknown> | undefined): string {\n  if (arr) return `[${arr.toString()}]`;\n  return '';\n}\n\nexport function getPoolName(pool: mysqlTypes.Pool): string {\n  const c = pool.config.connectionConfig;\n  let poolName = '';\n  poolName += c.host ? `host: '${c.host}', ` : '';\n  poolName += c.port ? `port: ${c.port}, ` : '';\n  poolName += c.database ? `database: '${c.database}', ` : '';\n  poolName += c.user ? `user: '${c.user}'` : '';\n  if (!c.user) {\n    poolName = poolName.substring(0, poolName.length - 2); //omit last comma\n  }\n  return poolName.trim();\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21807, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.40.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-mysql';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,sCAAsC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21834, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  Context,\n  trace,\n  Span,\n  SpanKind,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport {\n  DBSYSTEMVALUES_MYSQL,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n} from '@opentelemetry/semantic-conventions';\nimport type * as mysqlTypes from 'mysql';\nimport { AttributeNames } from './AttributeNames';\nimport { MySQLInstrumentationConfig } from './types';\nimport {\n  getConnectionAttributes,\n  getDbStatement,\n  getDbValues,\n  getSpanName,\n  getPoolName,\n} from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { UpDownCounter, MeterProvider } from '@opentelemetry/api';\n\ntype getConnectionCallbackType = (\n  err: mysqlTypes.MysqlError,\n  connection: mysqlTypes.PoolConnection\n) => void;\n\nexport class MySQLInstrumentation extends InstrumentationBase {\n  static readonly COMMON_ATTRIBUTES = {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_MYSQL,\n  };\n  private _connectionsUsage!: UpDownCounter;\n\n  constructor(config: MySQLInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n    this._setMetricInstruments();\n  }\n\n  override setMeterProvider(meterProvider: MeterProvider) {\n    super.setMeterProvider(meterProvider);\n    this._setMetricInstruments();\n  }\n\n  private _setMetricInstruments() {\n    this._connectionsUsage = this.meter.createUpDownCounter(\n      'db.client.connections.usage', //TODO:: use semantic convention\n      {\n        description:\n          'The number of connections that are currently in state described by the state attribute.',\n        unit: '{connection}',\n      }\n    );\n  }\n\n  protected init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'mysql',\n        ['>=2.0.0 <3'],\n        (moduleExports: typeof mysqlTypes) => {\n          if (isWrapped(moduleExports.createConnection)) {\n            this._unwrap(moduleExports, 'createConnection');\n          }\n          this._wrap(\n            moduleExports,\n            'createConnection',\n            this._patchCreateConnection() as any\n          );\n\n          if (isWrapped(moduleExports.createPool)) {\n            this._unwrap(moduleExports, 'createPool');\n          }\n          this._wrap(\n            moduleExports,\n            'createPool',\n            this._patchCreatePool() as any\n          );\n\n          if (isWrapped(moduleExports.createPoolCluster)) {\n            this._unwrap(moduleExports, 'createPoolCluster');\n          }\n          this._wrap(\n            moduleExports,\n            'createPoolCluster',\n            this._patchCreatePoolCluster() as any\n          );\n\n          return moduleExports;\n        },\n        (moduleExports: typeof mysqlTypes) => {\n          if (moduleExports === undefined) return;\n          this._unwrap(moduleExports, 'createConnection');\n          this._unwrap(moduleExports, 'createPool');\n          this._unwrap(moduleExports, 'createPoolCluster');\n        }\n      ),\n    ];\n  }\n\n  // global export function\n  private _patchCreateConnection() {\n    return (originalCreateConnection: Function) => {\n      const thisPlugin = this;\n\n      return function createConnection(\n        _connectionUri: string | mysqlTypes.ConnectionConfig\n      ) {\n        const originalResult = originalCreateConnection(...arguments);\n\n        // This is unwrapped on next call after unpatch\n        thisPlugin._wrap(\n          originalResult,\n          'query',\n          thisPlugin._patchQuery(originalResult) as any\n        );\n\n        return originalResult;\n      };\n    };\n  }\n\n  // global export function\n  private _patchCreatePool() {\n    return (originalCreatePool: Function) => {\n      const thisPlugin = this;\n      return function createPool(_config: string | mysqlTypes.PoolConfig) {\n        const pool = originalCreatePool(...arguments);\n\n        thisPlugin._wrap(pool, 'query', thisPlugin._patchQuery(pool));\n        thisPlugin._wrap(\n          pool,\n          'getConnection',\n          thisPlugin._patchGetConnection(pool)\n        );\n        thisPlugin._wrap(pool, 'end', thisPlugin._patchPoolEnd(pool));\n        thisPlugin._setPoolcallbacks(pool, thisPlugin, '');\n\n        return pool;\n      };\n    };\n  }\n  private _patchPoolEnd(pool: any) {\n    return (originalPoolEnd: Function) => {\n      const thisPlugin = this;\n      return function end(callback?: unknown) {\n        const nAll = (pool as any)._allConnections.length;\n        const nFree = (pool as any)._freeConnections.length;\n        const nUsed = nAll - nFree;\n        const poolName = getPoolName(pool);\n        thisPlugin._connectionsUsage.add(-nUsed, {\n          state: 'used',\n          name: poolName,\n        });\n        thisPlugin._connectionsUsage.add(-nFree, {\n          state: 'idle',\n          name: poolName,\n        });\n        originalPoolEnd.apply(pool, arguments);\n      };\n    };\n  }\n\n  // global export function\n  private _patchCreatePoolCluster() {\n    return (originalCreatePoolCluster: Function) => {\n      const thisPlugin = this;\n      return function createPool(_config: string | mysqlTypes.PoolConfig) {\n        const cluster = originalCreatePoolCluster(...arguments);\n\n        // This is unwrapped on next call after unpatch\n        thisPlugin._wrap(\n          cluster,\n          'getConnection',\n          thisPlugin._patchGetConnection(cluster)\n        );\n        thisPlugin._wrap(cluster, 'add', thisPlugin._patchAdd(cluster));\n\n        return cluster;\n      };\n    };\n  }\n  private _patchAdd(cluster: mysqlTypes.PoolCluster) {\n    return (originalAdd: Function) => {\n      const thisPlugin = this;\n      return function add(id: string, config: unknown) {\n        // Unwrap if unpatch has been called\n        if (!thisPlugin['_enabled']) {\n          thisPlugin._unwrap(cluster, 'add');\n          return originalAdd.apply(cluster, arguments);\n        }\n        originalAdd.apply(cluster, arguments);\n        const nodes = cluster['_nodes' as keyof mysqlTypes.PoolCluster] as any;\n        if (nodes) {\n          const nodeId =\n            typeof id === 'object'\n              ? 'CLUSTER::' + (cluster as any)._lastId\n              : String(id);\n\n          const pool = nodes[nodeId].pool;\n          thisPlugin._setPoolcallbacks(pool, thisPlugin, id);\n        }\n      };\n    };\n  }\n\n  // method on cluster or pool\n  private _patchGetConnection(pool: mysqlTypes.Pool | mysqlTypes.PoolCluster) {\n    return (originalGetConnection: Function) => {\n      const thisPlugin = this;\n\n      return function getConnection(\n        arg1?: unknown,\n        arg2?: unknown,\n        arg3?: unknown\n      ) {\n        // Unwrap if unpatch has been called\n        if (!thisPlugin['_enabled']) {\n          thisPlugin._unwrap(pool, 'getConnection');\n          return originalGetConnection.apply(pool, arguments);\n        }\n\n        if (arguments.length === 1 && typeof arg1 === 'function') {\n          const patchFn = thisPlugin._getConnectionCallbackPatchFn(\n            arg1 as getConnectionCallbackType\n          );\n          return originalGetConnection.call(pool, patchFn);\n        }\n        if (arguments.length === 2 && typeof arg2 === 'function') {\n          const patchFn = thisPlugin._getConnectionCallbackPatchFn(\n            arg2 as getConnectionCallbackType\n          );\n          return originalGetConnection.call(pool, arg1, patchFn);\n        }\n        if (arguments.length === 3 && typeof arg3 === 'function') {\n          const patchFn = thisPlugin._getConnectionCallbackPatchFn(\n            arg3 as getConnectionCallbackType\n          );\n          return originalGetConnection.call(pool, arg1, arg2, patchFn);\n        }\n\n        return originalGetConnection.apply(pool, arguments);\n      };\n    };\n  }\n\n  private _getConnectionCallbackPatchFn(cb: getConnectionCallbackType) {\n    const thisPlugin = this;\n    const activeContext = context.active();\n    return function (\n      this: any,\n      err: mysqlTypes.MysqlError,\n      connection: mysqlTypes.PoolConnection\n    ) {\n      if (connection) {\n        // this is the callback passed into a query\n        // no need to unwrap\n        if (!isWrapped(connection.query)) {\n          thisPlugin._wrap(\n            connection,\n            'query',\n            thisPlugin._patchQuery(connection)\n          );\n        }\n      }\n      if (typeof cb === 'function') {\n        context.with(activeContext, cb, this, err, connection);\n      }\n    };\n  }\n\n  private _patchQuery(connection: mysqlTypes.Connection | mysqlTypes.Pool) {\n    return (originalQuery: Function): mysqlTypes.QueryFunction => {\n      const thisPlugin = this;\n\n      return function query(\n        query: string | mysqlTypes.Query | mysqlTypes.QueryOptions,\n        _valuesOrCallback?: unknown[] | mysqlTypes.queryCallback,\n        _callback?: mysqlTypes.queryCallback\n      ) {\n        if (!thisPlugin['_enabled']) {\n          thisPlugin._unwrap(connection, 'query');\n          return originalQuery.apply(connection, arguments);\n        }\n\n        const span = thisPlugin.tracer.startSpan(getSpanName(query), {\n          kind: SpanKind.CLIENT,\n          attributes: {\n            ...MySQLInstrumentation.COMMON_ATTRIBUTES,\n            ...getConnectionAttributes(connection.config),\n          },\n        });\n\n        span.setAttribute(SEMATTRS_DB_STATEMENT, getDbStatement(query));\n\n        const instrumentationConfig: MySQLInstrumentationConfig =\n          thisPlugin.getConfig();\n\n        if (instrumentationConfig.enhancedDatabaseReporting) {\n          let values;\n\n          if (Array.isArray(_valuesOrCallback)) {\n            values = _valuesOrCallback;\n          } else if (arguments[2]) {\n            values = [_valuesOrCallback];\n          }\n\n          span.setAttribute(\n            AttributeNames.MYSQL_VALUES,\n            getDbValues(query, values)\n          );\n        }\n\n        const cbIndex = Array.from(arguments).findIndex(\n          arg => typeof arg === 'function'\n        );\n\n        const parentContext = context.active();\n\n        if (cbIndex === -1) {\n          const streamableQuery: mysqlTypes.Query = context.with(\n            trace.setSpan(context.active(), span),\n            () => {\n              return originalQuery.apply(connection, arguments);\n            }\n          );\n          context.bind(parentContext, streamableQuery);\n\n          return streamableQuery\n            .on('error', err =>\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message,\n              })\n            )\n            .on('end', () => {\n              span.end();\n            });\n        } else {\n          thisPlugin._wrap(\n            arguments,\n            cbIndex,\n            thisPlugin._patchCallbackQuery(span, parentContext)\n          );\n\n          return context.with(trace.setSpan(context.active(), span), () => {\n            return originalQuery.apply(connection, arguments);\n          });\n        }\n      };\n    };\n  }\n\n  private _patchCallbackQuery(span: Span, parentContext: Context) {\n    return (originalCallback: Function) => {\n      return function (\n        err: mysqlTypes.MysqlError | null,\n        results?: any,\n        fields?: mysqlTypes.FieldInfo[]\n      ) {\n        if (err) {\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: err.message,\n          });\n        }\n        span.end();\n        return context.with(parentContext, () =>\n          originalCallback(...arguments)\n        );\n      };\n    };\n  }\n  private _setPoolcallbacks(\n    pool: mysqlTypes.Pool,\n    thisPlugin: MySQLInstrumentation,\n    id: string\n  ) {\n    //TODO:: use semantic convention\n    const poolName = id || getPoolName(pool);\n\n    pool.on('connection', connection => {\n      thisPlugin._connectionsUsage.add(1, {\n        state: 'idle',\n        name: poolName,\n      });\n    });\n\n    pool.on('acquire', connection => {\n      thisPlugin._connectionsUsage.add(-1, {\n        state: 'idle',\n        name: poolName,\n      });\n      thisPlugin._connectionsUsage.add(1, {\n        state: 'used',\n        name: poolName,\n      });\n    });\n\n    pool.on('release', connection => {\n      thisPlugin._connectionsUsage.add(-1, {\n        state: 'used',\n        name: poolName,\n      });\n      thisPlugin._connectionsUsage.add(1, {\n        state: 'idle',\n        name: poolName,\n      });\n    });\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22121, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface MySQLInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * If true, an attribute containing the query's parameters will be attached\n   * the spans generated to represent the query.\n   */\n  enhancedDatabaseReporting?: boolean;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22144, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-mysql/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,2JAAA,SAAkC;AAClC,iJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22184, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-nestjs-core/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.39.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-nestjs-core';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,4CAA4C,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22211, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-nestjs-core/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  VERSION = 'nestjs.version',\n  TYPE = 'nestjs.type',\n  MODULE = 'nestjs.module',\n  CONTROLLER = 'nestjs.controller',\n  CALLBACK = 'nestjs.callback',\n  PIPES = 'nestjs.pipes',\n  INTERCEPTORS = 'nestjs.interceptors',\n  GUARDS = 'nestjs.guards',\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAY,cASX;AATD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,UAAA,GAAA,gBAA0B,CAAA;IAC1B,cAAA,CAAA,OAAA,GAAA,aAAoB,CAAA;IACpB,cAAA,CAAA,SAAA,GAAA,eAAwB,CAAA;IACxB,cAAA,CAAA,aAAA,GAAA,mBAAgC,CAAA;IAChC,cAAA,CAAA,WAAA,GAAA,iBAA4B,CAAA;IAC5B,cAAA,CAAA,QAAA,GAAA,cAAsB,CAAA;IACtB,cAAA,CAAA,eAAA,GAAA,qBAAoC,CAAA;IACpC,cAAA,CAAA,SAAA,GAAA,eAAwB,CAAA;AAC1B,CAAC,EATW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GASzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22246, "column": 0}, "map": {"version":3,"file":"NestType.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-nestjs-core/src/enums/NestType.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum NestType {\n  APP_CREATION = 'app_creation',\n  REQUEST_CONTEXT = 'request_context',\n  REQUEST_HANDLER = 'handler',\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAY,QAIX;AAJD,CAAA,SAAY,QAAQ;IAClB,QAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;IAC7B,QAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;IACnC,QAAA,CAAA,kBAAA,GAAA,SAA2B,CAAA;AAC7B,CAAC,EAJW,QAAQ,GAAR,QAAA,QAAQ,IAAA,CAAR,QAAA,QAAQ,GAAA,CAAA,CAAA,GAInB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22276, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-nestjs-core/src/enums/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { AttributeNames } from './AttributeNames';\nexport { NestType } from './NestType';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,+CAAkD;AAAzC,OAAA,cAAA,CAAA,SAAA,kBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,cAAc;IAAA;AAAA,GAAA;AACvB,IAAA,mCAAsC;AAA7B,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22314, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-nestjs-core/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport type { NestFactory } from '@nestjs/core/nest-factory.js';\nimport type { RouterExecutionContext } from '@nestjs/core/router/router-execution-context.js';\nimport type { Controller } from '@nestjs/common/interfaces';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  SEMATTRS_HTTP_METHOD,\n  SEMATTRS_HTTP_ROUTE,\n  SEMATTRS_HTTP_URL,\n} from '@opentelemetry/semantic-conventions';\nimport { AttributeNames, NestType } from './enums';\n\nconst supportedVersions = ['>=4.0.0 <11'];\n\nexport class NestInstrumentation extends InstrumentationBase {\n  static readonly COMPONENT = '@nestjs/core';\n  static readonly COMMON_ATTRIBUTES = {\n    component: NestInstrumentation.COMPONENT,\n  };\n\n  constructor(config: InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init() {\n    const module = new InstrumentationNodeModuleDefinition(\n      NestInstrumentation.COMPONENT,\n      supportedVersions\n    );\n\n    module.files.push(\n      this.getNestFactoryFileInstrumentation(supportedVersions),\n      this.getRouterExecutionContextFileInstrumentation(supportedVersions)\n    );\n\n    return module;\n  }\n\n  getNestFactoryFileInstrumentation(versions: string[]) {\n    return new InstrumentationNodeModuleFile(\n      '@nestjs/core/nest-factory.js',\n      versions,\n      (NestFactoryStatic: any, moduleVersion?: string) => {\n        this.ensureWrapped(\n          NestFactoryStatic.NestFactoryStatic.prototype,\n          'create',\n          createWrapNestFactoryCreate(this.tracer, moduleVersion)\n        );\n        return NestFactoryStatic;\n      },\n      (NestFactoryStatic: any) => {\n        this._unwrap(NestFactoryStatic.NestFactoryStatic.prototype, 'create');\n      }\n    );\n  }\n\n  getRouterExecutionContextFileInstrumentation(versions: string[]) {\n    return new InstrumentationNodeModuleFile(\n      '@nestjs/core/router/router-execution-context.js',\n      versions,\n      (RouterExecutionContext: any, moduleVersion?: string) => {\n        this.ensureWrapped(\n          RouterExecutionContext.RouterExecutionContext.prototype,\n          'create',\n          createWrapCreateHandler(this.tracer, moduleVersion)\n        );\n        return RouterExecutionContext;\n      },\n      (RouterExecutionContext: any) => {\n        this._unwrap(\n          RouterExecutionContext.RouterExecutionContext.prototype,\n          'create'\n        );\n      }\n    );\n  }\n\n  private ensureWrapped(\n    obj: any,\n    methodName: string,\n    wrapper: (original: any) => any\n  ) {\n    if (isWrapped(obj[methodName])) {\n      this._unwrap(obj, methodName);\n    }\n    this._wrap(obj, methodName, wrapper);\n  }\n}\n\nfunction createWrapNestFactoryCreate(\n  tracer: api.Tracer,\n  moduleVersion?: string\n) {\n  return function wrapCreate(original: typeof NestFactory.create) {\n    return function createWithTrace(\n      this: typeof NestFactory,\n      nestModule: any\n      /* serverOrOptions */\n    ) {\n      const span = tracer.startSpan('Create Nest App', {\n        attributes: {\n          ...NestInstrumentation.COMMON_ATTRIBUTES,\n          [AttributeNames.TYPE]: NestType.APP_CREATION,\n          [AttributeNames.VERSION]: moduleVersion,\n          [AttributeNames.MODULE]: nestModule.name,\n        },\n      });\n      const spanContext = api.trace.setSpan(api.context.active(), span);\n\n      return api.context.with(spanContext, async () => {\n        try {\n          return await original.apply(this, arguments as any);\n        } catch (e: any) {\n          throw addError(span, e);\n        } finally {\n          span.end();\n        }\n      });\n    };\n  };\n}\n\nfunction createWrapCreateHandler(tracer: api.Tracer, moduleVersion?: string) {\n  return function wrapCreateHandler(\n    original: RouterExecutionContext['create']\n  ) {\n    return function createHandlerWithTrace(\n      this: RouterExecutionContext,\n      instance: Controller,\n      callback: (...args: any[]) => unknown\n    ) {\n      arguments[1] = createWrapHandler(tracer, moduleVersion, callback);\n      const handler = original.apply(this, arguments as any);\n      const callbackName = callback.name;\n      const instanceName =\n        instance.constructor && instance.constructor.name\n          ? instance.constructor.name\n          : 'UnnamedInstance';\n      const spanName = callbackName\n        ? `${instanceName}.${callbackName}`\n        : instanceName;\n\n      return function (\n        this: any,\n        req: any,\n        res: any,\n        next: (...args: any[]) => unknown\n      ) {\n        const span = tracer.startSpan(spanName, {\n          attributes: {\n            ...NestInstrumentation.COMMON_ATTRIBUTES,\n            [AttributeNames.VERSION]: moduleVersion,\n            [AttributeNames.TYPE]: NestType.REQUEST_CONTEXT,\n            [SEMATTRS_HTTP_METHOD]: req.method,\n            [SEMATTRS_HTTP_URL]: req.originalUrl || req.url,\n            [SEMATTRS_HTTP_ROUTE]:\n              req.route?.path || req.routeOptions?.url || req.routerPath,\n            [AttributeNames.CONTROLLER]: instanceName,\n            [AttributeNames.CALLBACK]: callbackName,\n          },\n        });\n        const spanContext = api.trace.setSpan(api.context.active(), span);\n\n        return api.context.with(spanContext, async () => {\n          try {\n            return await handler.apply(this, arguments as any);\n          } catch (e: any) {\n            throw addError(span, e);\n          } finally {\n            span.end();\n          }\n        });\n      };\n    };\n  };\n}\n\nfunction createWrapHandler(\n  tracer: api.Tracer,\n  moduleVersion: string | undefined,\n  handler: Function\n) {\n  const spanName = handler.name || 'anonymous nest handler';\n  const options = {\n    attributes: {\n      ...NestInstrumentation.COMMON_ATTRIBUTES,\n      [AttributeNames.VERSION]: moduleVersion,\n      [AttributeNames.TYPE]: NestType.REQUEST_HANDLER,\n      [AttributeNames.CALLBACK]: handler.name,\n    },\n  };\n  const wrappedHandler = function (this: RouterExecutionContext) {\n    const span = tracer.startSpan(spanName, options);\n    const spanContext = api.trace.setSpan(api.context.active(), span);\n\n    return api.context.with(spanContext, async () => {\n      try {\n        return await handler.apply(this, arguments);\n      } catch (e: any) {\n        throw addError(span, e);\n      } finally {\n        span.end();\n      }\n    });\n  };\n\n  if (handler.name) {\n    Object.defineProperty(wrappedHandler, 'name', { value: handler.name });\n  }\n\n  // Get the current metadata and set onto the wrapper to ensure other decorators ( ie: NestJS EventPattern / RolesGuard )\n  // won't be affected by the use of this instrumentation\n  Reflect.getMetadataKeys(handler).forEach(metadataKey => {\n    Reflect.defineMetadata(\n      metadataKey,\n      Reflect.getMetadata(metadataKey, handler),\n      wrappedHandler\n    );\n  });\n  return wrappedHandler;\n}\n\nconst addError = (span: api.Span, error: Error) => {\n  span.recordException(error);\n  span.setStatus({ code: api.SpanStatusCode.ERROR, message: error.message });\n  return error;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22483, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-nestjs-core/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './enums/AttributeNames';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,iKAAA,SAAkC;AAClC,sKAAA,SAAuC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22523, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-net/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* The following attributes are not official, see open-telemetry/opentelemetry-specification#1652 */\nexport enum TLSAttributes {\n  PROTOCOL = 'tls.protocol',\n  AUTHORIZED = 'tls.authorized',\n  CIPHER_NAME = 'tls.cipher.name',\n  CIPHER_VERSION = 'tls.cipher.version',\n  CERTIFICATE_FINGERPRINT = 'tls.certificate.fingerprint',\n  CERTIFICATE_SERIAL_NUMBER = 'tls.certificate.serialNumber',\n  CERTIFICATE_VALID_FROM = 'tls.certificate.validFrom',\n  CERTIFICATE_VALID_TO = 'tls.certificate.validTo',\n  ALPN_PROTOCOL = 'tls.alpnProtocol',\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,kGAAA,EAAoG,CACpG,IAAY,aAUX;AAVD,CAAA,SAAY,aAAa;IACvB,aAAA,CAAA,WAAA,GAAA,cAAyB,CAAA;IACzB,aAAA,CAAA,aAAA,GAAA,gBAA6B,CAAA;IAC7B,aAAA,CAAA,cAAA,GAAA,iBAA+B,CAAA;IAC/B,aAAA,CAAA,iBAAA,GAAA,oBAAqC,CAAA;IACrC,aAAA,CAAA,0BAAA,GAAA,6BAAuD,CAAA;IACvD,aAAA,CAAA,4BAAA,GAAA,8BAA0D,CAAA;IAC1D,aAAA,CAAA,yBAAA,GAAA,2BAAoD,CAAA;IACpD,aAAA,CAAA,uBAAA,GAAA,yBAAgD,CAAA;IAChD,aAAA,CAAA,gBAAA,GAAA,kBAAkC,CAAA;AACpC,CAAC,EAVW,aAAa,GAAb,QAAA,aAAa,IAAA,CAAb,QAAA,aAAa,GAAA,CAAA,CAAA,GAUxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22559, "column": 0}, "map": {"version":3,"file":"internal-types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-net/src/internal-types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface NormalizedOptions {\n  host?: string;\n  port?: number;\n  path?: string;\n}\n\nexport enum SocketEvent {\n  CLOSE = 'close',\n  CONNECT = 'connect',\n  ERROR = 'error',\n  SECURE_CONNECT = 'secureConnect',\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAQH,IAAY,WAKX;AALD,CAAA,SAAY,WAAW;IACrB,WAAA,CAAA,QAAA,GAAA,OAAe,CAAA;IACf,WAAA,CAAA,UAAA,GAAA,SAAmB,CAAA;IACnB,WAAA,CAAA,QAAA,GAAA,OAAe,CAAA;IACf,WAAA,CAAA,iBAAA,GAAA,eAAgC,CAAA;AAClC,CAAC,EALW,WAAW,GAAX,QAAA,WAAW,IAAA,CAAX,QAAA,WAAW,GAAA,CAAA,CAAA,GAKtB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22590, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-net/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NormalizedOptions } from './internal-types';\nimport {\n  NETTRANSPORTVALUES_PIPE,\n  NETTRANSPORTVALUES_UNIX,\n} from '@opentelemetry/semantic-conventions';\nimport { platform } from 'os';\n\nexport const IPC_TRANSPORT =\n  platform() === 'win32' ? NETTRANSPORTVALUES_PIPE : NETTRANSPORTVALUES_UNIX;\n\nfunction getHost(args: unknown[]) {\n  return typeof args[1] === 'string' ? args[1] : 'localhost';\n}\n\nexport function getNormalizedArgs(\n  args: unknown[]\n): NormalizedOptions | null | undefined {\n  const opt = args[0];\n  if (!opt) {\n    return;\n  }\n\n  switch (typeof opt) {\n    case 'number':\n      return {\n        port: opt,\n        host: getHost(args),\n      };\n    case 'object':\n      if (Array.isArray(opt)) {\n        return getNormalizedArgs(opt);\n      }\n      return opt;\n    case 'string': {\n      const maybePort = Number(opt);\n      if (maybePort >= 0) {\n        return {\n          port: maybePort,\n          host: getHost(args),\n        };\n      }\n\n      return {\n        path: opt,\n      };\n    }\n    default:\n      return;\n  }\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAGH,MAAA,wEAG6C;AAC7C,MAAA,qBAA8B;AAEjB,QAAA,aAAa,GACxB,CAAA,GAAA,KAAA,QAAQ,GAAE,KAAK,OAAO,CAAC,CAAC,CAAC,uBAAA,uBAAuB,CAAC,CAAC,CAAC,8CAAuB,CAAC;AAE7E,SAAS,OAAO,CAAC,IAAe;IAC9B,OAAO,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;AAC7D,CAAC;AAED,SAAgB,iBAAiB,CAC/B,IAAe;IAEf,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,CAAC,GAAG,EAAE;QACR,OAAO;KACR;IAED,OAAQ,OAAO,GAAG,EAAE;QAClB,KAAK,QAAQ;YACX,OAAO;gBACL,IAAI,EAAE,GAAG;gBACT,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC;aACpB,CAAC;QACJ,KAAK,QAAQ;YACX,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACtB,OAAO,iBAAiB,CAAC,GAAG,CAAC,CAAC;aAC/B;YACD,OAAO,GAAG,CAAC;QACb,KAAK,QAAQ,CAAC;YAAC;gBACb,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,SAAS,IAAI,CAAC,EAAE;oBAClB,OAAO;wBACL,IAAI,EAAE,SAAS;wBACf,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC;qBACpB,CAAC;iBACH;gBAED,OAAO;oBACL,IAAI,EAAE,GAAG;iBACV,CAAC;aACH;QACD;YACE,OAAO;KACV;AACH,CAAC;AAnCD,QAAA,iBAAA,GAAA,kBAmCC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22654, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-net/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.38.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-net';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,oCAAoC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22681, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-net/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span, SpanStatusCode, context, trace } from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  SEMATTRS_NET_HOST_IP,\n  SEMATTRS_NET_HOST_PORT,\n  SEMATTRS_NET_PEER_IP,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n  SEMATTRS_NET_TRANSPORT,\n  NETTRANSPORTVALUES_IP_TCP,\n} from '@opentelemetry/semantic-conventions';\nimport { TLSAttributes } from './types';\nimport { NormalizedOptions, SocketEvent } from './internal-types';\nimport { getNormalizedArgs, IPC_TRANSPORT } from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { Socket } from 'net';\nimport { TLSSocket } from 'tls';\nimport type * as net from 'net';\n\nexport class NetInstrumentation extends InstrumentationBase {\n  constructor(config: InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init(): InstrumentationNodeModuleDefinition[] {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'net',\n        ['*'],\n        (moduleExports: typeof net) => {\n          if (isWrapped(moduleExports.Socket.prototype.connect)) {\n            this._unwrap(moduleExports.Socket.prototype, 'connect');\n          }\n          this._wrap(\n            moduleExports.Socket.prototype,\n            'connect',\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this._getPatchedConnect() as any\n          );\n          return moduleExports;\n        },\n        (moduleExports: typeof net) => {\n          if (moduleExports === undefined) return;\n          this._unwrap(moduleExports.Socket.prototype, 'connect');\n        }\n      ),\n    ];\n  }\n\n  private _getPatchedConnect() {\n    return (original: (...args: unknown[]) => void) => {\n      const plugin = this;\n      return function patchedConnect(this: Socket, ...args: unknown[]) {\n        const options = getNormalizedArgs(args);\n\n        const span =\n          this instanceof TLSSocket\n            ? plugin._startTLSSpan(options, this)\n            : plugin._startSpan(options, this);\n\n        return safeExecuteInTheMiddle(\n          () => original.apply(this, args),\n          error => {\n            if (error !== undefined) {\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: error.message,\n              });\n              span.recordException(error);\n              span.end();\n            }\n          }\n        );\n      };\n    };\n  }\n\n  private _startSpan(\n    options: NormalizedOptions | undefined | null,\n    socket: Socket\n  ) {\n    if (!options) {\n      return this._startGenericSpan(socket);\n    }\n    if (options.path) {\n      return this._startIpcSpan(options, socket);\n    }\n    return this._startTcpSpan(options, socket);\n  }\n\n  private _startTLSSpan(\n    options: NormalizedOptions | undefined | null,\n    socket: TLSSocket\n  ) {\n    const tlsSpan = this.tracer.startSpan('tls.connect');\n\n    const netSpan = context.with(\n      trace.setSpan(context.active(), tlsSpan),\n      () => {\n        return this._startSpan(options, socket);\n      }\n    );\n\n    const otelTlsSpanListener = () => {\n      const peerCertificate = socket.getPeerCertificate(true);\n      const cipher = socket.getCipher();\n      const protocol = socket.getProtocol();\n      const attributes = {\n        [TLSAttributes.PROTOCOL]: String(protocol),\n        [TLSAttributes.AUTHORIZED]: String(socket.authorized),\n        [TLSAttributes.CIPHER_NAME]: cipher.name,\n        [TLSAttributes.CIPHER_VERSION]: cipher.version,\n        [TLSAttributes.CERTIFICATE_FINGERPRINT]: peerCertificate.fingerprint,\n        [TLSAttributes.CERTIFICATE_SERIAL_NUMBER]: peerCertificate.serialNumber,\n        [TLSAttributes.CERTIFICATE_VALID_FROM]: peerCertificate.valid_from,\n        [TLSAttributes.CERTIFICATE_VALID_TO]: peerCertificate.valid_to,\n        [TLSAttributes.ALPN_PROTOCOL]: '',\n      };\n      if (socket.alpnProtocol) {\n        attributes[TLSAttributes.ALPN_PROTOCOL] = socket.alpnProtocol;\n      }\n\n      tlsSpan.setAttributes(attributes);\n      tlsSpan.end();\n    };\n\n    const otelTlsErrorListener = (e: Error) => {\n      tlsSpan.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      tlsSpan.end();\n    };\n\n    /* if we use once and tls.connect() uses a callback this is never executed */\n    socket.prependOnceListener(SocketEvent.SECURE_CONNECT, otelTlsSpanListener);\n    socket.once(SocketEvent.ERROR, otelTlsErrorListener);\n\n    const otelTlsRemoveListeners = () => {\n      socket.removeListener(SocketEvent.SECURE_CONNECT, otelTlsSpanListener);\n      socket.removeListener(SocketEvent.ERROR, otelTlsErrorListener);\n      for (const event of SOCKET_EVENTS) {\n        socket.removeListener(event, otelTlsRemoveListeners);\n      }\n    };\n\n    for (const event of [\n      SocketEvent.CLOSE,\n      SocketEvent.ERROR,\n      SocketEvent.SECURE_CONNECT,\n    ]) {\n      socket.once(event, otelTlsRemoveListeners);\n    }\n\n    return netSpan;\n  }\n\n  /* It might still be useful to pick up errors due to invalid connect arguments. */\n  private _startGenericSpan(socket: Socket) {\n    const span = this.tracer.startSpan('connect');\n\n    registerListeners(socket, span);\n\n    return span;\n  }\n\n  private _startIpcSpan(options: NormalizedOptions, socket: Socket) {\n    const span = this.tracer.startSpan('ipc.connect', {\n      attributes: {\n        [SEMATTRS_NET_TRANSPORT]: IPC_TRANSPORT,\n        [SEMATTRS_NET_PEER_NAME]: options.path,\n      },\n    });\n\n    registerListeners(socket, span);\n\n    return span;\n  }\n\n  private _startTcpSpan(options: NormalizedOptions, socket: Socket) {\n    const span = this.tracer.startSpan('tcp.connect', {\n      attributes: {\n        [SEMATTRS_NET_TRANSPORT]: NETTRANSPORTVALUES_IP_TCP,\n        [SEMATTRS_NET_PEER_NAME]: options.host,\n        [SEMATTRS_NET_PEER_PORT]: options.port,\n      },\n    });\n\n    registerListeners(socket, span, { hostAttributes: true });\n\n    return span;\n  }\n}\n\nconst SOCKET_EVENTS = [\n  SocketEvent.CLOSE,\n  SocketEvent.CONNECT,\n  SocketEvent.ERROR,\n];\n\nfunction spanEndHandler(span: Span) {\n  return () => {\n    span.end();\n  };\n}\n\nfunction spanErrorHandler(span: Span) {\n  return (e: Error) => {\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message: e.message,\n    });\n  };\n}\n\nfunction registerListeners(\n  socket: Socket,\n  span: Span,\n  { hostAttributes = false }: { hostAttributes?: boolean } = {}\n) {\n  const setSpanError = spanErrorHandler(span);\n  const setSpanEnd = spanEndHandler(span);\n\n  const setHostAttributes = () => {\n    span.setAttributes({\n      [SEMATTRS_NET_PEER_IP]: socket.remoteAddress,\n      [SEMATTRS_NET_HOST_IP]: socket.localAddress,\n      [SEMATTRS_NET_HOST_PORT]: socket.localPort,\n    });\n  };\n\n  socket.once(SocketEvent.ERROR, setSpanError);\n\n  if (hostAttributes) {\n    socket.once(SocketEvent.CONNECT, setHostAttributes);\n  }\n\n  const removeListeners = () => {\n    socket.removeListener(SocketEvent.ERROR, setSpanError);\n    socket.removeListener(SocketEvent.CONNECT, setHostAttributes);\n    for (const event of SOCKET_EVENTS) {\n      socket.removeListener(event, setSpanEnd);\n      socket.removeListener(event, removeListeners);\n    }\n  };\n\n  for (const event of SOCKET_EVENTS) {\n    socket.once(event, setSpanEnd);\n    socket.once(event, removeListeners);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22888, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-net/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,yJAAA,SAAkC;AAClC,+IAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22928, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pg/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Postgresql specific attributes not covered by semantic conventions\nexport enum AttributeNames {\n  PG_VALUES = 'db.postgresql.values',\n  PG_PLAN = 'db.postgresql.plan',\n  IDLE_TIMEOUT_MILLIS = 'db.postgresql.idle.timeout.millis',\n  MAX_CLIENT = 'db.postgresql.max.client',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,qEAAqE;AACrE,IAAY,cAKX;AALD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,YAAA,GAAA,sBAAkC,CAAA;IAClC,cAAA,CAAA,UAAA,GAAA,oBAA8B,CAAA;IAC9B,cAAA,CAAA,sBAAA,GAAA,mCAAyD,CAAA;IACzD,cAAA,CAAA,aAAA,GAAA,0BAAuC,CAAA;AACzC,CAAC,EALW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAKzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22960, "column": 0}, "map": {"version":3,"file":"SpanNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pg/src/enums/SpanNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Contains span names produced by instrumentation\nexport enum SpanNames {\n  QUERY_PREFIX = 'pg.query',\n  CONNECT = 'pg.connect',\n  POOL_CONNECT = 'pg-pool.connect',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,kDAAkD;AAClD,IAAY,SAIX;AAJD,CAAA,SAAY,SAAS;IACnB,SAAA,CAAA,eAAA,GAAA,UAAyB,CAAA;IACzB,SAAA,CAAA,UAAA,GAAA,YAAsB,CAAA;IACtB,SAAA,CAAA,eAAA,GAAA,iBAAgC,CAAA;AAClC,CAAC,EAJW,SAAS,GAAT,QAAA,SAAS,IAAA,CAAT,QAAA,SAAS,GAAA,CAAA,CAAA,GAIpB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22991, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pg/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  trace,\n  Span,\n  SpanStatusCode,\n  Tracer,\n  SpanKind,\n  diag,\n} from '@opentelemetry/api';\nimport { AttributeNames } from './enums/AttributeNames';\nimport {\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n  SEMATTRS_DB_USER,\n  SEMATTRS_DB_STATEMENT,\n  DBSYSTEMVALUES_POSTGRESQL,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  PgClientExtended,\n  PostgresCallback,\n  PgPoolCallback,\n  PgPoolExtended,\n  PgParsedConnectionParams,\n  PgPoolOptionsParams,\n} from './internal-types';\nimport { PgInstrumentationConfig } from './types';\nimport type * as pgTypes from 'pg';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport { SpanNames } from './enums/SpanNames';\n\n/**\n * Helper function to get a low cardinality span name from whatever info we have\n * about the query.\n *\n * This is tricky, because we don't have most of the information (table name,\n * operation name, etc) the spec recommends using to build a low-cardinality\n * value w/o parsing. So, we use db.name and assume that, if the query's a named\n * prepared statement, those `name` values will be low cardinality. If we don't\n * have a named prepared statement, we try to parse an operation (despite the\n * spec's warnings).\n *\n * @params dbName The name of the db against which this query is being issued,\n *   which could be missing if no db name was given at the time that the\n *   connection was established.\n * @params queryConfig Information we have about the query being issued, typed\n *   to reflect only the validation we've actually done on the args to\n *   `client.query()`. This will be undefined if `client.query()` was called\n *   with invalid arguments.\n */\nexport function getQuerySpanName(\n  dbName: string | undefined,\n  queryConfig?: { text: string; name?: unknown }\n) {\n  // NB: when the query config is invalid, we omit the dbName too, so that\n  // someone (or some tool) reading the span name doesn't misinterpret the\n  // dbName as being a prepared statement or sql commit name.\n  if (!queryConfig) return SpanNames.QUERY_PREFIX;\n\n  // Either the name of a prepared statement; or an attempted parse\n  // of the SQL command, normalized to uppercase; or unknown.\n  const command =\n    typeof queryConfig.name === 'string' && queryConfig.name\n      ? queryConfig.name\n      : parseNormalizedOperationName(queryConfig.text);\n\n  return `${SpanNames.QUERY_PREFIX}:${command}${dbName ? ` ${dbName}` : ''}`;\n}\n\nfunction parseNormalizedOperationName(queryText: string) {\n  const indexOfFirstSpace = queryText.indexOf(' ');\n  let sqlCommand =\n    indexOfFirstSpace === -1\n      ? queryText\n      : queryText.slice(0, indexOfFirstSpace);\n  sqlCommand = sqlCommand.toUpperCase();\n\n  // Handle query text being \"COMMIT;\", which has an extra semicolon before the space.\n  return sqlCommand.endsWith(';') ? sqlCommand.slice(0, -1) : sqlCommand;\n}\n\nexport function getConnectionString(params: PgParsedConnectionParams) {\n  const host = params.host || 'localhost';\n  const port = params.port || 5432;\n  const database = params.database || '';\n  return `postgresql://${host}:${port}/${database}`;\n}\n\nfunction getPort(port: number | undefined): number | undefined {\n  // Port may be NaN as parseInt() is used on the value, passing null will result in NaN being parsed.\n  // https://github.com/brianc/node-postgres/blob/2a8efbee09a284be12748ed3962bc9b816965e36/packages/pg/lib/connection-parameters.js#L66\n  if (Number.isInteger(port)) {\n    return port;\n  }\n\n  // Unable to find the default used in pg code, so falling back to 'undefined'.\n  return undefined;\n}\n\nexport function getSemanticAttributesFromConnection(\n  params: PgParsedConnectionParams\n) {\n  return {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_POSTGRESQL,\n    [SEMATTRS_DB_NAME]: params.database, // required\n    [SEMATTRS_DB_CONNECTION_STRING]: getConnectionString(params), // required\n    [SEMATTRS_NET_PEER_NAME]: params.host, // required\n    [SEMATTRS_NET_PEER_PORT]: getPort(params.port),\n    [SEMATTRS_DB_USER]: params.user,\n  };\n}\n\nexport function getSemanticAttributesFromPool(params: PgPoolOptionsParams) {\n  return {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_POSTGRESQL,\n    [SEMATTRS_DB_NAME]: params.database, // required\n    [SEMATTRS_DB_CONNECTION_STRING]: getConnectionString(params), // required\n    [SEMATTRS_NET_PEER_NAME]: params.host, // required\n    [SEMATTRS_NET_PEER_PORT]: getPort(params.port),\n    [SEMATTRS_DB_USER]: params.user,\n    [AttributeNames.IDLE_TIMEOUT_MILLIS]: params.idleTimeoutMillis,\n    [AttributeNames.MAX_CLIENT]: params.maxClient,\n  };\n}\n\nexport function shouldSkipInstrumentation(\n  instrumentationConfig: PgInstrumentationConfig\n) {\n  return (\n    instrumentationConfig.requireParentSpan === true &&\n    trace.getSpan(context.active()) === undefined\n  );\n}\n\n// Create a span from our normalized queryConfig object,\n// or return a basic span if no queryConfig was given/could be created.\nexport function handleConfigQuery(\n  this: PgClientExtended,\n  tracer: Tracer,\n  instrumentationConfig: PgInstrumentationConfig,\n  queryConfig?: { text: string; values?: unknown; name?: unknown }\n) {\n  // Create child span.\n  const { connectionParameters } = this;\n  const dbName = connectionParameters.database;\n\n  const spanName = getQuerySpanName(dbName, queryConfig);\n  const span = tracer.startSpan(spanName, {\n    kind: SpanKind.CLIENT,\n    attributes: getSemanticAttributesFromConnection(connectionParameters),\n  });\n\n  if (!queryConfig) {\n    return span;\n  }\n\n  // Set attributes\n  if (queryConfig.text) {\n    span.setAttribute(SEMATTRS_DB_STATEMENT, queryConfig.text);\n  }\n\n  if (\n    instrumentationConfig.enhancedDatabaseReporting &&\n    Array.isArray(queryConfig.values)\n  ) {\n    try {\n      const convertedValues = queryConfig.values.map(value => {\n        if (value == null) {\n          return 'null';\n        } else if (value instanceof Buffer) {\n          return value.toString();\n        } else if (typeof value === 'object') {\n          if (typeof value.toPostgres === 'function') {\n            return value.toPostgres();\n          }\n          return JSON.stringify(value);\n        } else {\n          //string, number\n          return value.toString();\n        }\n      });\n      span.setAttribute(AttributeNames.PG_VALUES, convertedValues);\n    } catch (e) {\n      diag.error('failed to stringify ', queryConfig.values, e);\n    }\n  }\n\n  // Set plan name attribute, if present\n  if (typeof queryConfig.name === 'string') {\n    span.setAttribute(AttributeNames.PG_PLAN, queryConfig.name);\n  }\n\n  return span;\n}\n\nexport function handleExecutionResult(\n  config: PgInstrumentationConfig,\n  span: Span,\n  pgResult: pgTypes.QueryResult | pgTypes.QueryArrayResult | unknown\n) {\n  if (typeof config.responseHook === 'function') {\n    safeExecuteInTheMiddle(\n      () => {\n        config.responseHook!(span, {\n          data: pgResult as pgTypes.QueryResult | pgTypes.QueryArrayResult,\n        });\n      },\n      err => {\n        if (err) {\n          diag.error('Error running response hook', err);\n        }\n      },\n      true\n    );\n  }\n}\n\nexport function patchCallback(\n  instrumentationConfig: PgInstrumentationConfig,\n  span: Span,\n  cb: PostgresCallback\n): PostgresCallback {\n  return function patchedCallback(\n    this: PgClientExtended,\n    err: Error,\n    res: object\n  ) {\n    if (err) {\n      // span.recordException(err);\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: err.message,\n      });\n    } else {\n      handleExecutionResult(instrumentationConfig, span, res);\n    }\n\n    span.end();\n    cb.call(this, err, res);\n  };\n}\n\nexport function patchCallbackPGPool(\n  span: Span,\n  cb: PgPoolCallback\n): PgPoolCallback {\n  return function patchedCallback(\n    this: PgPoolExtended,\n    err: Error,\n    res: object,\n    done: any\n  ) {\n    if (err) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: err.message,\n      });\n    }\n    span.end();\n    cb.call(this, err, res, done);\n  };\n}\n\nexport function patchClientConnectCallback(span: Span, cb: Function): Function {\n  return function patchedClientConnectCallback(\n    this: pgTypes.Client,\n    err: Error\n  ) {\n    if (err) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: err.message,\n      });\n    }\n    span.end();\n    cb.apply(this, arguments);\n  };\n}\n\n/**\n * Attempt to get a message string from a thrown value, while being quite\n * defensive, to recognize the fact that, in JS, any kind of value (even\n * primitives) can be thrown.\n */\nexport function getErrorMessage(e: unknown) {\n  return typeof e === 'object' && e !== null && 'message' in e\n    ? String((e as { message?: unknown }).message)\n    : undefined;\n}\n\nexport function isObjectWithTextString(it: unknown): it is ObjectWithText {\n  return (\n    typeof it === 'object' &&\n    typeof (it as null | { text?: unknown })?.text === 'string'\n  );\n}\n\nexport type ObjectWithText = {\n  text: string;\n  [k: string]: unknown;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 23216, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pg/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.43.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-pg';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,mCAAmC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 23243, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pg/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\n\nimport {\n  context,\n  trace,\n  Span,\n  SpanStatusCode,\n  SpanKind,\n} from '@opentelemetry/api';\nimport type * as pgTypes from 'pg';\nimport type * as pgPoolTypes from 'pg-pool';\nimport {\n  PgClientConnect,\n  PgClientExtended,\n  PostgresCallback,\n  PgPoolExtended,\n  PgPoolCallback,\n} from './internal-types';\nimport { PgInstrumentationConfig } from './types';\nimport * as utils from './utils';\nimport { addSqlCommenterComment } from '@opentelemetry/sql-common';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { SpanNames } from './enums/SpanNames';\n\nexport class PgInstrumentation extends InstrumentationBase {\n  constructor(config: PgInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    const modulePG = new InstrumentationNodeModuleDefinition(\n      'pg',\n      ['>=8.0.0 <9'],\n      (module: any) => {\n        const moduleExports: typeof pgTypes =\n          module[Symbol.toStringTag] === 'Module'\n            ? module.default // ESM\n            : module; // CommonJS\n        if (isWrapped(moduleExports.Client.prototype.query)) {\n          this._unwrap(moduleExports.Client.prototype, 'query');\n        }\n\n        if (isWrapped(moduleExports.Client.prototype.connect)) {\n          this._unwrap(moduleExports.Client.prototype, 'connect');\n        }\n\n        this._wrap(\n          moduleExports.Client.prototype,\n          'query',\n          this._getClientQueryPatch() as any\n        );\n\n        this._wrap(\n          moduleExports.Client.prototype,\n          'connect',\n          this._getClientConnectPatch() as any\n        );\n\n        return module;\n      },\n      (module: any) => {\n        const moduleExports: typeof pgTypes =\n          module[Symbol.toStringTag] === 'Module'\n            ? module.default // ESM\n            : module; // CommonJS\n        if (isWrapped(moduleExports.Client.prototype.query)) {\n          this._unwrap(moduleExports.Client.prototype, 'query');\n        }\n      }\n    );\n\n    const modulePGPool = new InstrumentationNodeModuleDefinition(\n      'pg-pool',\n      ['>=2.0.0 <4'],\n      (moduleExports: typeof pgPoolTypes) => {\n        if (isWrapped(moduleExports.prototype.connect)) {\n          this._unwrap(moduleExports.prototype, 'connect');\n        }\n        this._wrap(\n          moduleExports.prototype,\n          'connect',\n          this._getPoolConnectPatch() as any\n        );\n        return moduleExports;\n      },\n      (moduleExports: typeof pgPoolTypes) => {\n        if (isWrapped(moduleExports.prototype.connect)) {\n          this._unwrap(moduleExports.prototype, 'connect');\n        }\n      }\n    );\n\n    return [modulePG, modulePGPool];\n  }\n\n  override setConfig(config: PgInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n  }\n\n  override getConfig(): PgInstrumentationConfig {\n    return this._config as PgInstrumentationConfig;\n  }\n\n  private _getClientConnectPatch() {\n    const plugin = this;\n    return (original: PgClientConnect) => {\n      return function connect(this: pgTypes.Client, callback?: Function) {\n        if (utils.shouldSkipInstrumentation(plugin.getConfig())) {\n          return original.call(this, callback);\n        }\n\n        const span = plugin.tracer.startSpan(SpanNames.CONNECT, {\n          kind: SpanKind.CLIENT,\n          attributes: utils.getSemanticAttributesFromConnection(this),\n        });\n\n        if (callback) {\n          const parentSpan = trace.getSpan(context.active());\n          callback = utils.patchClientConnectCallback(span, callback);\n          if (parentSpan) {\n            callback = context.bind(context.active(), callback);\n          }\n        }\n\n        const connectResult: unknown = context.with(\n          trace.setSpan(context.active(), span),\n          () => {\n            return original.call(this, callback);\n          }\n        );\n\n        return handleConnectResult(span, connectResult);\n      };\n    };\n  }\n\n  private _getClientQueryPatch() {\n    const plugin = this;\n    return (original: typeof pgTypes.Client.prototype.query) => {\n      this._diag.debug('Patching pg.Client.prototype.query');\n      return function query(this: PgClientExtended, ...args: unknown[]) {\n        if (utils.shouldSkipInstrumentation(plugin.getConfig())) {\n          return original.apply(this, args as never);\n        }\n\n        // client.query(text, cb?), client.query(text, values, cb?), and\n        // client.query(configObj, cb?) are all valid signatures. We construct\n        // a queryConfig obj from all (valid) signatures to build the span in a\n        // unified way. We verify that we at least have query text, and code\n        // defensively when dealing with `queryConfig` after that (to handle all\n        // the other invalid cases, like a non-array for values being provided).\n        // The type casts here reflect only what we've actually validated.\n        const arg0 = args[0];\n        const firstArgIsString = typeof arg0 === 'string';\n        const firstArgIsQueryObjectWithText =\n          utils.isObjectWithTextString(arg0);\n\n        // TODO: remove the `as ...` casts below when the TS version is upgraded.\n        // Newer TS versions will use the result of firstArgIsQueryObjectWithText\n        // to properly narrow arg0, but TS 4.3.5 does not.\n        const queryConfig = firstArgIsString\n          ? {\n              text: arg0 as string,\n              values: Array.isArray(args[1]) ? args[1] : undefined,\n            }\n          : firstArgIsQueryObjectWithText\n          ? (arg0 as utils.ObjectWithText)\n          : undefined;\n\n        const instrumentationConfig = plugin.getConfig();\n\n        const span = utils.handleConfigQuery.call(\n          this,\n          plugin.tracer,\n          instrumentationConfig,\n          queryConfig\n        );\n\n        // Modify query text w/ a tracing comment before invoking original for\n        // tracing, but only if args[0] has one of our expected shapes.\n        if (instrumentationConfig.addSqlCommenterCommentToQueries) {\n          args[0] = firstArgIsString\n            ? addSqlCommenterComment(span, arg0)\n            : firstArgIsQueryObjectWithText\n            ? {\n                ...arg0,\n                text: addSqlCommenterComment(span, arg0.text),\n              }\n            : args[0];\n        }\n\n        // Bind callback (if any) to parent span (if any)\n        if (args.length > 0) {\n          const parentSpan = trace.getSpan(context.active());\n          if (typeof args[args.length - 1] === 'function') {\n            // Patch ParameterQuery callback\n            args[args.length - 1] = utils.patchCallback(\n              instrumentationConfig,\n              span,\n              args[args.length - 1] as PostgresCallback // nb: not type safe.\n            );\n\n            // If a parent span exists, bind the callback\n            if (parentSpan) {\n              args[args.length - 1] = context.bind(\n                context.active(),\n                args[args.length - 1]\n              );\n            }\n          } else if (typeof queryConfig?.callback === 'function') {\n            // Patch ConfigQuery callback\n            let callback = utils.patchCallback(\n              plugin.getConfig(),\n              span,\n              queryConfig.callback as PostgresCallback // nb: not type safe.\n            );\n\n            // If a parent span existed, bind the callback\n            if (parentSpan) {\n              callback = context.bind(context.active(), callback);\n            }\n\n            (args[0] as { callback?: PostgresCallback }).callback = callback;\n          }\n        }\n\n        if (\n          typeof instrumentationConfig.requestHook === 'function' &&\n          queryConfig\n        ) {\n          safeExecuteInTheMiddle(\n            () => {\n              // pick keys to expose explicitly, so we're not leaking pg package\n              // internals that are subject to change\n              const { database, host, port, user } = this.connectionParameters;\n              const connection = { database, host, port, user };\n\n              instrumentationConfig.requestHook!(span, {\n                connection,\n                query: {\n                  text: queryConfig.text,\n                  // nb: if `client.query` is called with illegal arguments\n                  // (e.g., if `queryConfig.values` is passed explicitly, but a\n                  // non-array is given), then the type casts will be wrong. But\n                  // we leave it up to the queryHook to handle that, and we\n                  // catch and swallow any errors it throws. The other options\n                  // are all worse. E.g., we could leave `queryConfig.values`\n                  // and `queryConfig.name` as `unknown`, but then the hook body\n                  // would be forced to validate (or cast) them before using\n                  // them, which seems incredibly cumbersome given that these\n                  // casts will be correct 99.9% of the time -- and pg.query\n                  // will immediately throw during development in the other .1%\n                  // of cases. Alternatively, we could simply skip calling the\n                  // hook when `values` or `name` don't have the expected type,\n                  // but that would add unnecessary validation overhead to every\n                  // hook invocation and possibly be even more confusing/unexpected.\n                  values: queryConfig.values as unknown[],\n                  name: queryConfig.name as string | undefined,\n                },\n              });\n            },\n            err => {\n              if (err) {\n                plugin._diag.error('Error running query hook', err);\n              }\n            },\n            true\n          );\n        }\n\n        let result: unknown;\n        try {\n          result = original.apply(this, args as never);\n        } catch (e: unknown) {\n          // span.recordException(e);\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: utils.getErrorMessage(e),\n          });\n          span.end();\n          throw e;\n        }\n\n        // Bind promise to parent span and end the span\n        if (result instanceof Promise) {\n          return result\n            .then((result: unknown) => {\n              // Return a pass-along promise which ends the span and then goes to user's orig resolvers\n              return new Promise(resolve => {\n                utils.handleExecutionResult(plugin.getConfig(), span, result);\n                span.end();\n                resolve(result);\n              });\n            })\n            .catch((error: Error) => {\n              return new Promise((_, reject) => {\n                span.setStatus({\n                  code: SpanStatusCode.ERROR,\n                  message: error.message,\n                });\n                span.end();\n                reject(error);\n              });\n            });\n        }\n\n        // else returns void\n        return result; // void\n      };\n    };\n  }\n\n  private _getPoolConnectPatch() {\n    const plugin = this;\n    return (originalConnect: typeof pgPoolTypes.prototype.connect) => {\n      return function connect(this: PgPoolExtended, callback?: PgPoolCallback) {\n        if (utils.shouldSkipInstrumentation(plugin.getConfig())) {\n          return originalConnect.call(this, callback as any);\n        }\n\n        // setup span\n        const span = plugin.tracer.startSpan(SpanNames.POOL_CONNECT, {\n          kind: SpanKind.CLIENT,\n          attributes: utils.getSemanticAttributesFromPool(this.options),\n        });\n\n        if (callback) {\n          const parentSpan = trace.getSpan(context.active());\n          callback = utils.patchCallbackPGPool(\n            span,\n            callback\n          ) as PgPoolCallback;\n          // If a parent span exists, bind the callback\n          if (parentSpan) {\n            callback = context.bind(context.active(), callback);\n          }\n        }\n\n        const connectResult: unknown = context.with(\n          trace.setSpan(context.active(), span),\n          () => {\n            return originalConnect.call(this, callback as any);\n          }\n        );\n\n        return handleConnectResult(span, connectResult);\n      };\n    };\n  }\n}\n\nfunction handleConnectResult(span: Span, connectResult: unknown) {\n  if (!(connectResult instanceof Promise)) {\n    return connectResult;\n  }\n\n  const connectResultPromise = connectResult as Promise<unknown>;\n  return context.bind(\n    context.active(),\n    connectResultPromise\n      .then(result => {\n        span.end();\n        return result;\n      })\n      .catch((error: unknown) => {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: utils.getErrorMessage(error),\n        });\n        span.end();\n        return Promise.reject(error);\n      })\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 23527, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pg/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as pgTypes from 'pg';\nimport type * as api from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface PgResponseHookInformation {\n  data: pgTypes.QueryResult | pgTypes.QueryArrayResult;\n}\n\nexport interface PgInstrumentationExecutionResponseHook {\n  (span: api.Span, responseInfo: PgResponseHookInformation): void;\n}\n\nexport interface PgRequestHookInformation {\n  query: {\n    text: string;\n    name?: string;\n    values?: unknown[];\n  };\n  connection: {\n    database?: string;\n    host?: string;\n    port?: number;\n    user?: string;\n  };\n}\n\nexport interface PgInstrumentationExecutionRequestHook {\n  (span: api.Span, queryInfo: PgRequestHookInformation): void;\n}\n\nexport interface PgInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * If true, an attribute containing the query's parameters will be attached\n   * the spans generated to represent the query.\n   */\n  enhancedDatabaseReporting?: boolean;\n\n  /**\n   * Hook that allows adding custom span attributes or updating the\n   * span's name based on the data about the query to execute.\n   *\n   * @default undefined\n   */\n  requestHook?: PgInstrumentationExecutionRequestHook;\n\n  /**\n   * Hook that allows adding custom span attributes based on the data\n   * returned from \"query\" Pg actions.\n   *\n   * @default undefined\n   */\n  responseHook?: PgInstrumentationExecutionResponseHook;\n\n  /**\n   * If true, requires a parent span to create new spans.\n   *\n   * @default false\n   */\n  requireParentSpan?: boolean;\n\n  /**\n   * If true, queries are modified to also include a comment with\n   * the tracing context, following the {@link https://github.com/open-telemetry/opentelemetry-sqlcommenter sqlcommenter} format\n   */\n  addSqlCommenterCommentToQueries?: boolean;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 23550, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pg/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\nexport * from './enums/AttributeNames';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,wJAAA,SAAkC;AAClC,8IAAA,SAAwB;AACxB,6JAAA,SAAuC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 23591, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pino/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.41.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-pino';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,qCAAqC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 23618, "column": 0}, "map": {"version":3,"file":"log-sending-utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pino/src/log-sending-utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Writable } from 'stream';\n\nimport { logs, Logger, SeverityNumber } from '@opentelemetry/api-logs';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { millisToHrTime } from '@opentelemetry/core';\n\n// This block is a copy (modulo code style and TypeScript types) of the Pino\n// code that defines log level value and names. This file is part of\n// *instrumenting* Pino, so we want to avoid a dependency on the library.\nconst DEFAULT_LEVELS = {\n  trace: 10,\n  debug: 20,\n  info: 30,\n  warn: 40,\n  error: 50,\n  fatal: 60,\n};\n\nconst OTEL_SEV_NUM_FROM_PINO_LEVEL: { [level: number]: SeverityNumber } = {\n  [DEFAULT_LEVELS.trace]: SeverityNumber.TRACE,\n  [DEFAULT_LEVELS.debug]: SeverityNumber.DEBUG,\n  [DEFAULT_LEVELS.info]: SeverityNumber.INFO,\n  [DEFAULT_LEVELS.warn]: SeverityNumber.WARN,\n  [DEFAULT_LEVELS.error]: SeverityNumber.ERROR,\n  [DEFAULT_LEVELS.fatal]: SeverityNumber.FATAL,\n};\n\nconst EXTRA_SEV_NUMS = [\n  SeverityNumber.TRACE2,\n  SeverityNumber.TRACE3,\n  SeverityNumber.TRACE4,\n  SeverityNumber.DEBUG2,\n  SeverityNumber.DEBUG3,\n  SeverityNumber.DEBUG4,\n  SeverityNumber.INFO2,\n  SeverityNumber.INFO3,\n  SeverityNumber.INFO4,\n  SeverityNumber.WARN2,\n  SeverityNumber.WARN3,\n  SeverityNumber.WARN4,\n  SeverityNumber.ERROR2,\n  SeverityNumber.ERROR3,\n  SeverityNumber.ERROR4,\n  SeverityNumber.FATAL2,\n  SeverityNumber.FATAL3,\n  SeverityNumber.FATAL4,\n];\n\nfunction severityNumberFromPinoLevel(lvl: number) {\n  // Fast common case: one of the known levels\n  const sev = OTEL_SEV_NUM_FROM_PINO_LEVEL[lvl];\n  if (sev !== undefined) {\n    return sev;\n  }\n\n  // Otherwise, scale the Pino level range -- 10 (trace) to 70 (fatal+10)\n  // -- onto the extra OTel severity numbers (TRACE2, TRACE3, ..., FATAL4).\n  // Values below trace (10) map to SeverityNumber.TRACE2, which may be\n  // considered a bit weird, but it means the unnumbered levels are always\n  // just for exactly matching values.\n  const relativeLevelWeight = (lvl - 10) / (70 - 10);\n  const otelSevIdx = Math.floor(relativeLevelWeight * EXTRA_SEV_NUMS.length);\n  const cappedOTelIdx = Math.min(\n    EXTRA_SEV_NUMS.length - 1,\n    Math.max(0, otelSevIdx)\n  );\n  const otelSevValue = EXTRA_SEV_NUMS[cappedOTelIdx];\n  return otelSevValue;\n}\n\n/**\n * Return a function that knows how to convert the \"time\" field value on a\n * Pino log record to an OTel LogRecord timestamp value.\n *\n * How to convert the serialized \"time\" on a Pino log record\n * depends on the Logger's `Symbol(pino.time)` prop, configurable\n * via https://getpino.io/#/docs/api?id=timestamp-boolean-function\n *\n * For example:\n *    const logger = pino({timestamp: pino.stdTimeFunctions.isoTime})\n * results in log record entries of the form:\n *    ,\"time\":\"2024-05-17T22:03:25.969Z\"\n * `otelTimestampFromTime` will be given the value of the \"time\" field:\n *   \"2024-05-17T22:03:25.969Z\"\n * which should be parsed to a number of milliseconds since the epoch.\n */\nexport function getTimeConverter(pinoLogger: any, pinoMod: any) {\n  const stdTimeFns = pinoMod.stdTimeFunctions;\n  const loggerTimeFn = pinoLogger[pinoMod.symbols.timeSym];\n  if (loggerTimeFn === stdTimeFns.epochTime) {\n    return (time: number) => time;\n  } else if (loggerTimeFn === stdTimeFns.unixTime) {\n    return (time: number) => time * 1e3;\n  } else if (loggerTimeFn === stdTimeFns.isoTime) {\n    return (time: string) => new Date(time).getTime();\n  } else if (loggerTimeFn === stdTimeFns.nullTime) {\n    return () => Date.now();\n  } else {\n    // The logger has a custom time function. Don't guess.\n    return () => NaN;\n  }\n}\n\ninterface OTelPinoStreamOptions {\n  messageKey: string;\n  levels: any; // Pino.LevelMapping\n  otelTimestampFromTime: (time: any) => number;\n}\n\n/**\n * A Pino stream for sending records to the OpenTelemetry Logs API.\n *\n * - This stream emits an 'unknown' event on an unprocessable pino record.\n *   The event arguments are: `logLine: string`, `err: string | Error`.\n */\nexport class OTelPinoStream extends Writable {\n  private _otelLogger: Logger;\n  private _messageKey: string;\n  private _levels;\n  private _otelTimestampFromTime;\n\n  constructor(options: OTelPinoStreamOptions) {\n    super();\n\n    // Note: A PINO_CONFIG event was added to pino (2024-04-04) to send config\n    // to transports. Eventually OTelPinoStream might be able to use this\n    // for auto-configuration in newer pino versions. The event currently does\n    // not include the `timeSym` value that is needed here, however.\n    this._messageKey = options.messageKey;\n    this._levels = options.levels;\n    this._otelTimestampFromTime = options.otelTimestampFromTime;\n\n    // Cannot use `instrumentation.logger` until have delegating LoggerProvider:\n    // https://github.com/open-telemetry/opentelemetry-js/issues/4399\n    this._otelLogger = logs.getLogger(PACKAGE_NAME, PACKAGE_VERSION);\n  }\n\n  override _write(s: string, _encoding: string, callback: Function) {\n    /* istanbul ignore if */\n    if (!s) {\n      return;\n    }\n\n    // Parse, and handle edge cases similar to how `pino-abtract-transport` does:\n    // https://github.com/pinojs/pino-abstract-transport/blob/v1.2.0/index.js#L28-L45\n    // - Emitting an 'unknown' event on parse error mimicks pino-abstract-transport.\n    let recObj;\n    try {\n      recObj = JSON.parse(s);\n    } catch (parseErr) {\n      // Invalid JSON suggests a bug in Pino, or a logger configuration bug\n      // (a bogus `options.timestamp` or serializer).\n      this.emit('unknown', s.toString(), parseErr);\n      callback();\n      return;\n    }\n    /* istanbul ignore if */\n    if (recObj === null) {\n      this.emit('unknown', s.toString(), 'Null value ignored');\n      callback();\n      return;\n    }\n    /* istanbul ignore if */\n    if (typeof recObj !== 'object') {\n      recObj = {\n        data: recObj,\n      };\n    }\n\n    const {\n      time,\n      [this._messageKey]: body,\n      level, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n      // The typical Pino `hostname` and `pid` fields are removed because they\n      // are redundant with the OpenTelemetry `host.name` and `process.pid`\n      // Resource attributes, respectively. This code cannot change the\n      // LoggerProvider's `resource`, so getting the OpenTelemetry equivalents\n      // depends on the user using the OpenTelemetry HostDetector and\n      // ProcessDetector.\n      // https://getpino.io/#/docs/api?id=opt-base\n      hostname, // eslint-disable-line @typescript-eslint/no-unused-vars\n      pid, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n      // The `trace_id` et al fields that may have been added by the\n      // \"log correlation\" feature are stripped, because they are redundant.\n      trace_id, // eslint-disable-line @typescript-eslint/no-unused-vars\n      span_id, // eslint-disable-line @typescript-eslint/no-unused-vars\n      trace_flags, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n      ...attributes\n    } = recObj;\n\n    let timestamp = this._otelTimestampFromTime(time);\n    if (isNaN(timestamp)) {\n      attributes['time'] = time; // save the unexpected \"time\" field to attributes\n      timestamp = Date.now();\n    }\n\n    // This avoids a possible subtle bug when a Pino logger uses\n    // `time: pino.stdTimeFunctions.unixTime` and logs in the first half-second\n    // since process start. The rounding involved results in:\n    //    timestamp < performance.timeOrigin\n    // If that is passed to Logger.emit() it will be misinterpreted by\n    // `timeInputToHrTime` as a `performance.now()` value.\n    const timestampHrTime = millisToHrTime(timestamp);\n\n    // Prefer using `stream.lastLevel`, because `recObj.level` can be customized\n    // to anything via `formatters.level`\n    // (https://getpino.io/#/docs/api?id=formatters-object).\n    const lastLevel = (this as any).lastLevel;\n\n    const otelRec = {\n      timestamp: timestampHrTime,\n      observedTimestamp: timestampHrTime,\n      severityNumber: severityNumberFromPinoLevel(lastLevel),\n      severityText: this._levels.labels[lastLevel],\n      body,\n      attributes,\n    };\n\n    this._otelLogger.emit(otelRec);\n    callback();\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 23836, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pino/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  diag,\n  trace,\n  isSpanContextValid,\n  Span,\n} from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { PinoInstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { getTimeConverter, OTelPinoStream } from './log-sending-utils';\n\nconst pinoVersions = ['>=5.14.0 <10'];\n\nconst DEFAULT_LOG_KEYS = {\n  traceId: 'trace_id',\n  spanId: 'span_id',\n  traceFlags: 'trace_flags',\n};\n\nexport class PinoInstrumentation extends InstrumentationBase {\n  constructor(config: PinoInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    return [\n      new InstrumentationNodeModuleDefinition('pino', pinoVersions, module => {\n        const isESM = module[Symbol.toStringTag] === 'Module';\n        const moduleExports = isESM ? module.default : module;\n        const instrumentation = this;\n\n        const patchedPino = Object.assign((...args: unknown[]) => {\n          const config = instrumentation.getConfig();\n          const isEnabled = instrumentation.isEnabled();\n\n          const logger = moduleExports(...args);\n\n          // Setup \"log correlation\" -- injection of `trace_id` et al fields.\n          // Note: If the Pino logger is configured with `nestedKey`, then\n          // the `trace_id` et al fields added by `otelMixin` will be nested\n          // as well. https://getpino.io/#/docs/api?id=mixin-function\n          const otelMixin = instrumentation._getMixinFunction();\n          const mixinSym = moduleExports.symbols.mixinSym;\n          const origMixin = logger[mixinSym];\n          if (origMixin === undefined) {\n            logger[mixinSym] = otelMixin;\n          } else {\n            logger[mixinSym] = (ctx: object, level: number) => {\n              return Object.assign(\n                otelMixin(ctx, level),\n                origMixin(ctx, level)\n              );\n            };\n          }\n\n          // Setup \"log sending\" -- sending log records to the Logs API.\n          // This depends on `pino.multistream`, which was added in v7.0.0.\n          if (\n            isEnabled &&\n            !config.disableLogSending &&\n            typeof moduleExports.multistream === 'function'\n          ) {\n            const otelTimestampFromTime = getTimeConverter(\n              logger,\n              moduleExports\n            );\n            const otelStream = new OTelPinoStream({\n              messageKey: logger[moduleExports.symbols.messageKeySym],\n              levels: logger.levels,\n              otelTimestampFromTime,\n            });\n            (otelStream as any)[Symbol.for('pino.metadata')] = true; // for `stream.lastLevel`\n\n            // An error typically indicates a Pino bug, or logger configuration\n            // bug. `diag.warn` *once* for the first error on the assumption\n            // subsequent ones stem from the same bug.\n            otelStream.once('unknown', (line, err) => {\n              instrumentation._diag.warn(\n                'could not send pino log line (will only log first occurrence)',\n                { line, err }\n              );\n            });\n\n            // Use pino's own `multistream` to send to the original stream and\n            // to the OTel Logs API/SDK.\n            // https://getpino.io/#/docs/api?id=pinomultistreamstreamsarray-opts-gt-multistreamres\n            const origStream = logger[moduleExports.symbols.streamSym];\n            logger[moduleExports.symbols.streamSym] = moduleExports.multistream(\n              [\n                { level: logger.level, stream: origStream },\n                { level: logger.level, stream: otelStream },\n              ],\n              { levels: logger.levels.values }\n            );\n          }\n\n          return logger;\n        }, moduleExports);\n\n        if (typeof patchedPino.pino === 'function') {\n          patchedPino.pino = patchedPino;\n        }\n        if (typeof patchedPino.default === 'function') {\n          patchedPino.default = patchedPino;\n        }\n        /* istanbul ignore if */\n        if (isESM) {\n          if (module.pino) {\n            // This was added in pino@6.8.0 (https://github.com/pinojs/pino/pull/936).\n            module.pino = patchedPino;\n          }\n          module.default = patchedPino;\n        }\n\n        return patchedPino;\n      }),\n    ];\n  }\n\n  override getConfig(): PinoInstrumentationConfig {\n    return this._config;\n  }\n\n  override setConfig(config: PinoInstrumentationConfig = {}) {\n    this._config = config;\n  }\n\n  private _callHook(span: Span, record: Record<string, string>, level: number) {\n    const hook = this.getConfig().logHook;\n\n    if (!hook) {\n      return;\n    }\n\n    safeExecuteInTheMiddle(\n      () => hook(span, record, level),\n      err => {\n        if (err) {\n          diag.error('pino instrumentation: error calling logHook', err);\n        }\n      },\n      true\n    );\n  }\n\n  private _getMixinFunction() {\n    const instrumentation = this;\n    return function otelMixin(_context: object, level: number) {\n      if (\n        !instrumentation.isEnabled() ||\n        instrumentation.getConfig().disableLogCorrelation\n      ) {\n        return {};\n      }\n\n      const span = trace.getSpan(context.active());\n\n      if (!span) {\n        return {};\n      }\n\n      const spanContext = span.spanContext();\n\n      if (!isSpanContextValid(spanContext)) {\n        return {};\n      }\n\n      const logKeys = instrumentation.getConfig().logKeys ?? DEFAULT_LOG_KEYS;\n\n      const record = {\n        [logKeys.traceId]: spanContext.traceId,\n        [logKeys.spanId]: spanContext.spanId,\n        [logKeys.traceFlags]: `0${spanContext.traceFlags.toString(16)}`,\n      };\n\n      instrumentation._callHook(span, record, level);\n\n      return record;\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 23999, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pino/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type LogHookFunction = (\n  span: Span,\n  record: Record<string, any>,\n  level?: number // Available in pino >= 7.9.0\n) => void;\n\nexport interface PinoInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * Whether to disable the automatic sending of log records to the\n   * OpenTelemetry Logs SDK.\n   * @default false\n   */\n  disableLogSending?: boolean;\n\n  /**\n   * Whether to disable the injection trace-context fields, and possibly other\n   * fields from `logHook()`, into log records for log correlation.\n   * @default false\n   */\n  disableLogCorrelation?: boolean;\n\n  /**\n   * A function that allows injecting additional fields in log records. It is\n   * called, as `logHook(span, record)`, for each log record emitted in a valid\n   * span context. It requires `disableLogCorrelation` to be false.\n   */\n  logHook?: LogHookFunction;\n\n  /**\n   * Configure the names of field injected into logs when there is span context\n   * available.\n   */\n  logKeys?: {\n    traceId: string;\n    spanId: string;\n    traceFlags: string;\n  };\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24022, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-pino/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,0JAAA,SAAkC;AAClC,gJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24062, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-redis/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as redisTypes from 'redis';\nimport {\n  context,\n  Tracer,\n  SpanKind,\n  Span,\n  SpanStatusCode,\n  trace,\n  diag,\n} from '@opentelemetry/api';\nimport { RedisCommand, RedisInstrumentationConfig } from './types';\nimport { EventEmitter } from 'events';\nimport { RedisInstrumentation } from './';\nimport {\n  DBSYSTEMVALUES_REDIS,\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport { RedisPluginClientTypes } from './internal-types';\nimport { defaultDbStatementSerializer } from '@opentelemetry/redis-common';\n\nconst endSpan = (span: Span, err?: Error | null) => {\n  if (err) {\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message: err.message,\n    });\n  }\n  span.end();\n};\n\nexport const getTracedCreateClient = (tracer: Tracer, original: Function) => {\n  return function createClientTrace(this: redisTypes.RedisClient) {\n    const client: redisTypes.RedisClient = original.apply(this, arguments);\n    return context.bind(context.active(), client);\n  };\n};\n\nexport const getTracedCreateStreamTrace = (\n  tracer: Tracer,\n  original: Function\n) => {\n  return function create_stream_trace(this: redisTypes.RedisClient) {\n    if (!Object.prototype.hasOwnProperty.call(this, 'stream')) {\n      Object.defineProperty(this, 'stream', {\n        get() {\n          return this._patched_redis_stream;\n        },\n        set(val: EventEmitter) {\n          context.bind(context.active(), val);\n          this._patched_redis_stream = val;\n        },\n      });\n    }\n    return original.apply(this, arguments);\n  };\n};\n\nexport const getTracedInternalSendCommand = (\n  tracer: Tracer,\n  original: Function,\n  config?: RedisInstrumentationConfig\n) => {\n  return function internal_send_command_trace(\n    this: RedisPluginClientTypes,\n    cmd?: RedisCommand\n  ) {\n    // New versions of redis (2.4+) use a single options object\n    // instead of named arguments\n    if (arguments.length !== 1 || typeof cmd !== 'object') {\n      // We don't know how to trace this call, so don't start/stop a span\n      return original.apply(this, arguments);\n    }\n\n    const hasNoParentSpan = trace.getSpan(context.active()) === undefined;\n    if (config?.requireParentSpan === true && hasNoParentSpan) {\n      return original.apply(this, arguments);\n    }\n\n    const dbStatementSerializer =\n      config?.dbStatementSerializer || defaultDbStatementSerializer;\n    const span = tracer.startSpan(\n      `${RedisInstrumentation.COMPONENT}-${cmd.command}`,\n      {\n        kind: SpanKind.CLIENT,\n        attributes: {\n          [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_REDIS,\n          [SEMATTRS_DB_STATEMENT]: dbStatementSerializer(cmd.command, cmd.args),\n        },\n      }\n    );\n\n    // Set attributes for not explicitly typed RedisPluginClientTypes\n    if (this.connection_options) {\n      span.setAttributes({\n        [SEMATTRS_NET_PEER_NAME]: this.connection_options.host,\n        [SEMATTRS_NET_PEER_PORT]: this.connection_options.port,\n      });\n    }\n    if (this.address) {\n      span.setAttribute(\n        SEMATTRS_DB_CONNECTION_STRING,\n        `redis://${this.address}`\n      );\n    }\n\n    const originalCallback = arguments[0].callback;\n    if (originalCallback) {\n      const originalContext = context.active();\n      (arguments[0] as RedisCommand).callback = function callback<T>(\n        this: unknown,\n        err: Error | null,\n        reply: T\n      ) {\n        if (config?.responseHook) {\n          const responseHook = config.responseHook;\n          safeExecuteInTheMiddle(\n            () => {\n              responseHook(span, cmd.command, cmd.args, reply);\n            },\n            err => {\n              if (err) {\n                diag.error('Error executing responseHook', err);\n              }\n            },\n            true\n          );\n        }\n\n        endSpan(span, err);\n        return context.with(\n          originalContext,\n          originalCallback,\n          this,\n          ...arguments\n        );\n      };\n    }\n    try {\n      // Span will be ended in callback\n      return original.apply(this, arguments);\n    } catch (rethrow: any) {\n      endSpan(span, rethrow);\n      throw rethrow; // rethrow after ending span\n    }\n  };\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24182, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-redis/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.41.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-redis';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,sCAAsC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24209, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-redis/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n} from '@opentelemetry/instrumentation';\nimport {\n  getTracedCreateClient,\n  getTracedCreateStreamTrace,\n  getTracedInternalSendCommand,\n} from './utils';\nimport { RedisInstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nconst DEFAULT_CONFIG: RedisInstrumentationConfig = {\n  requireParentSpan: false,\n};\n\nexport class RedisInstrumentation extends InstrumentationBase {\n  static readonly COMPONENT = 'redis';\n\n  protected override _config!: RedisInstrumentationConfig;\n\n  constructor(config: RedisInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  override setConfig(config: RedisInstrumentationConfig = {}) {\n    this._config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  protected init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'redis',\n        ['>=2.6.0 <4'],\n        moduleExports => {\n          if (\n            isWrapped(\n              moduleExports.RedisClient.prototype['internal_send_command']\n            )\n          ) {\n            this._unwrap(\n              moduleExports.RedisClient.prototype,\n              'internal_send_command'\n            );\n          }\n          this._wrap(\n            moduleExports.RedisClient.prototype,\n            'internal_send_command',\n            this._getPatchInternalSendCommand()\n          );\n\n          if (isWrapped(moduleExports.RedisClient.prototype['create_stream'])) {\n            this._unwrap(moduleExports.RedisClient.prototype, 'create_stream');\n          }\n          this._wrap(\n            moduleExports.RedisClient.prototype,\n            'create_stream',\n            this._getPatchCreateStream()\n          );\n\n          if (isWrapped(moduleExports.createClient)) {\n            this._unwrap(moduleExports, 'createClient');\n          }\n          this._wrap(\n            moduleExports,\n            'createClient',\n            this._getPatchCreateClient()\n          );\n          return moduleExports;\n        },\n        moduleExports => {\n          if (moduleExports === undefined) return;\n          this._unwrap(\n            moduleExports.RedisClient.prototype,\n            'internal_send_command'\n          );\n          this._unwrap(moduleExports.RedisClient.prototype, 'create_stream');\n          this._unwrap(moduleExports, 'createClient');\n        }\n      ),\n    ];\n  }\n  /**\n   * Patch internal_send_command(...) to trace requests\n   */\n  private _getPatchInternalSendCommand() {\n    const tracer = this.tracer;\n    const config = this._config;\n    return function internal_send_command(original: Function) {\n      return getTracedInternalSendCommand(tracer, original, config);\n    };\n  }\n\n  private _getPatchCreateClient() {\n    const tracer = this.tracer;\n    return function createClient(original: Function) {\n      return getTracedCreateClient(tracer, original);\n    };\n  }\n\n  private _getPatchCreateStream() {\n    const tracer = this.tracer;\n    return function createReadStream(original: Function) {\n      return getTracedCreateStreamTrace(tracer, original);\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24296, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-redis/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\n// exported from\n// https://github.com/redis/node-redis/blob/v3.1.2/lib/command.js\nexport interface RedisCommand {\n  command: string;\n  args: string[];\n  buffer_args: boolean;\n  callback: (err: Error | null, reply: unknown) => void;\n  call_on_write: boolean;\n}\n\n/**\n * Function that can be used to serialize db.statement tag\n * @param cmdName - The name of the command (eg. set, get, mset)\n * @param cmdArgs - Array of arguments passed to the command\n *\n * @returns serialized string that will be used as the db.statement attribute.\n */\nexport type DbStatementSerializer = (\n  cmdName: RedisCommand['command'],\n  cmdArgs: RedisCommand['args']\n) => string;\n\n/**\n * Function that can be used to add custom attributes to span on response from redis server\n * @param span - The span created for the redis command, on which attributes can be set\n * @param cmdName - The name of the command (eg. set, get, mset)\n * @param cmdArgs - Array of arguments passed to the command\n * @param response - The response object which is returned to the user who called this command.\n *  Can be used to set custom attributes on the span.\n *  The type of the response varies depending on the specific command.\n */\nexport interface RedisResponseCustomAttributeFunction {\n  (\n    span: Span,\n    cmdName: RedisCommand['command'],\n    cmdArgs: RedisCommand['args'],\n    response: unknown\n  ): void;\n}\n\nexport interface RedisInstrumentationConfig extends InstrumentationConfig {\n  /** Custom serializer function for the db.statement tag */\n  dbStatementSerializer?: DbStatementSerializer;\n\n  /** Function for adding custom attributes on db response */\n  responseHook?: RedisResponseCustomAttributeFunction;\n\n  /** Require parent to create redis span, default when unset is false */\n  requireParentSpan?: boolean;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24319, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-redis/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,2JAAA,SAAkC;AAClC,iJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24359, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-redis-4/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Attributes, DiagLogger } from '@opentelemetry/api';\nimport {\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_DB_CONNECTION_STRING,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n  DBSYSTEMVALUES_REDIS,\n} from '@opentelemetry/semantic-conventions';\n\nexport function getClientAttributes(\n  diag: DiagLogger,\n  options: any\n): Attributes {\n  return {\n    [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_REDIS,\n    [SEMATTRS_NET_PEER_NAME]: options?.socket?.host,\n    [SEMATTRS_NET_PEER_PORT]: options?.socket?.port,\n    [SEMATTRS_DB_CONNECTION_STRING]:\n      removeCredentialsFromDBConnectionStringAttribute(diag, options?.url),\n  };\n}\n\n/**\n * removeCredentialsFromDBConnectionStringAttribute removes basic auth from url and user_pwd from query string\n *\n * Examples:\n *   redis://user:pass@localhost:6379/mydb => redis://localhost:6379/mydb\n *   redis://localhost:6379?db=mydb&user_pwd=pass => redis://localhost:6379?db=mydb\n */\nfunction removeCredentialsFromDBConnectionStringAttribute(\n  diag: DiagLogger,\n  url?: unknown\n): string | undefined {\n  if (typeof url !== 'string') {\n    return;\n  }\n\n  try {\n    const u = new URL(url);\n    u.searchParams.delete('user_pwd');\n    u.username = '';\n    u.password = '';\n    return u.href;\n  } catch (err) {\n    diag.error('failed to sanitize redis connection url', err);\n  }\n  return;\n}\n"],"names":[],"mappings":";;;;;AAgBA,MAAA,wEAM6C;AAE7C,SAAgB,mBAAmB,CACjC,IAAgB,EAChB,OAAY;;IAEZ,OAAO;QACL,CAAC,uBAAA,kBAAkB,CAAC,EAAE,uBAAA,oBAAoB;QAC1C,CAAC,uBAAA,sBAAsB,CAAC,EAAE,CAAA,KAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,IAAI;QAC/C,CAAC,uBAAA,sBAAsB,CAAC,EAAE,CAAA,KAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,IAAI;QAC/C,CAAC,uBAAA,6BAA6B,CAAC,EAC7B,gDAAgD,CAAC,IAAI,EAAE,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,GAAG,CAAC;KACvE,CAAC;AACJ,CAAC;AAXD,QAAA,mBAAA,GAAA,oBAWC;AAED;;;;;;GAMG,CACH,SAAS,gDAAgD,CACvD,IAAgB,EAChB,GAAa;IAEb,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,OAAO;KACR;IAED,IAAI;QACF,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAClC,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;QAChB,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;QAChB,OAAO,CAAC,CAAC,IAAI,CAAC;KACf,CAAC,OAAO,GAAG,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,yCAAyC,EAAE,GAAG,CAAC,CAAC;KAC5D;IACD,OAAO;AACT,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24401, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-redis-4/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.41.1';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-redis-4';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24428, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-redis-4/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  trace,\n  context,\n  SpanKind,\n  Span,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n} from '@opentelemetry/instrumentation';\nimport { getClientAttributes } from './utils';\nimport { defaultDbStatementSerializer } from '@opentelemetry/redis-common';\nimport { RedisInstrumentationConfig } from './types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { SEMATTRS_DB_STATEMENT } from '@opentelemetry/semantic-conventions';\nimport type { MultiErrorReply } from './internal-types';\n\nconst OTEL_OPEN_SPANS = Symbol(\n  'opentelemetry.instrumentation.redis.open_spans'\n);\nconst MULTI_COMMAND_OPTIONS = Symbol(\n  'opentelemetry.instrumentation.redis.multi_command_options'\n);\n\ninterface MutliCommandInfo {\n  span: Span;\n  commandName: string;\n  commandArgs: Array<string | Buffer>;\n}\n\nconst DEFAULT_CONFIG: RedisInstrumentationConfig = {\n  requireParentSpan: false,\n};\n\nexport class RedisInstrumentation extends InstrumentationBase<RedisInstrumentationConfig> {\n  static readonly COMPONENT = 'redis';\n\n  constructor(config: RedisInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, { ...DEFAULT_CONFIG, ...config });\n  }\n\n  override setConfig(config: RedisInstrumentationConfig = {}) {\n    super.setConfig({ ...DEFAULT_CONFIG, ...config });\n  }\n\n  protected init() {\n    // @node-redis/client is a new package introduced and consumed by 'redis 4.0.x'\n    // on redis@4.1.0 it was changed to @redis/client.\n    // we will instrument both packages\n    return [\n      this._getInstrumentationNodeModuleDefinition('@redis/client'),\n      this._getInstrumentationNodeModuleDefinition('@node-redis/client'),\n    ];\n  }\n\n  private _getInstrumentationNodeModuleDefinition(\n    basePackageName: string\n  ): InstrumentationNodeModuleDefinition {\n    const commanderModuleFile = new InstrumentationNodeModuleFile(\n      `${basePackageName}/dist/lib/commander.js`,\n      ['^1.0.0'],\n      (moduleExports: any, moduleVersion?: string) => {\n        const transformCommandArguments =\n          moduleExports.transformCommandArguments;\n        if (!transformCommandArguments) {\n          this._diag.error(\n            'internal instrumentation error, missing transformCommandArguments function'\n          );\n          return moduleExports;\n        }\n\n        // function name and signature changed in redis 4.1.0 from 'extendWithCommands' to 'attachCommands'\n        // the matching internal package names starts with 1.0.x (for redis 4.0.x)\n        const functionToPatch = moduleVersion?.startsWith('1.0.')\n          ? 'extendWithCommands'\n          : 'attachCommands';\n        // this is the function that extend a redis client with a list of commands.\n        // the function patches the commandExecutor to record a span\n        if (isWrapped(moduleExports?.[functionToPatch])) {\n          this._unwrap(moduleExports, functionToPatch);\n        }\n        this._wrap(\n          moduleExports,\n          functionToPatch,\n          this._getPatchExtendWithCommands(transformCommandArguments)\n        );\n\n        return moduleExports;\n      },\n      (moduleExports: any) => {\n        if (isWrapped(moduleExports?.extendWithCommands)) {\n          this._unwrap(moduleExports, 'extendWithCommands');\n        }\n        if (isWrapped(moduleExports?.attachCommands)) {\n          this._unwrap(moduleExports, 'attachCommands');\n        }\n      }\n    );\n\n    const multiCommanderModule = new InstrumentationNodeModuleFile(\n      `${basePackageName}/dist/lib/client/multi-command.js`,\n      ['^1.0.0'],\n      (moduleExports: any) => {\n        const redisClientMultiCommandPrototype =\n          moduleExports?.default?.prototype;\n\n        if (isWrapped(redisClientMultiCommandPrototype?.exec)) {\n          this._unwrap(redisClientMultiCommandPrototype, 'exec');\n        }\n        this._wrap(\n          redisClientMultiCommandPrototype,\n          'exec',\n          this._getPatchMultiCommandsExec()\n        );\n\n        if (isWrapped(redisClientMultiCommandPrototype?.addCommand)) {\n          this._unwrap(redisClientMultiCommandPrototype, 'addCommand');\n        }\n        this._wrap(\n          redisClientMultiCommandPrototype,\n          'addCommand',\n          this._getPatchMultiCommandsAddCommand()\n        );\n\n        return moduleExports;\n      },\n      (moduleExports: any) => {\n        const redisClientMultiCommandPrototype =\n          moduleExports?.default?.prototype;\n        if (isWrapped(redisClientMultiCommandPrototype?.exec)) {\n          this._unwrap(redisClientMultiCommandPrototype, 'exec');\n        }\n        if (isWrapped(redisClientMultiCommandPrototype?.addCommand)) {\n          this._unwrap(redisClientMultiCommandPrototype, 'addCommand');\n        }\n      }\n    );\n\n    const clientIndexModule = new InstrumentationNodeModuleFile(\n      `${basePackageName}/dist/lib/client/index.js`,\n      ['^1.0.0'],\n      (moduleExports: any) => {\n        const redisClientPrototype = moduleExports?.default?.prototype;\n\n        // In some @redis/client versions 'multi' is a method. In later\n        // versions, as of https://github.com/redis/node-redis/pull/2324,\n        // 'MULTI' is a method and 'multi' is a property defined in the\n        // constructor that points to 'MULTI', and therefore it will not\n        // be defined on the prototype.\n        if (redisClientPrototype?.multi) {\n          if (isWrapped(redisClientPrototype?.multi)) {\n            this._unwrap(redisClientPrototype, 'multi');\n          }\n          this._wrap(\n            redisClientPrototype,\n            'multi',\n            this._getPatchRedisClientMulti()\n          );\n        }\n        if (redisClientPrototype?.MULTI) {\n          if (isWrapped(redisClientPrototype?.MULTI)) {\n            this._unwrap(redisClientPrototype, 'MULTI');\n          }\n          this._wrap(\n            redisClientPrototype,\n            'MULTI',\n            this._getPatchRedisClientMulti()\n          );\n        }\n\n        if (isWrapped(redisClientPrototype?.sendCommand)) {\n          this._unwrap(redisClientPrototype, 'sendCommand');\n        }\n        this._wrap(\n          redisClientPrototype,\n          'sendCommand',\n          this._getPatchRedisClientSendCommand()\n        );\n\n        this._wrap(\n          redisClientPrototype,\n          'connect',\n          this._getPatchedClientConnect()\n        );\n\n        return moduleExports;\n      },\n      (moduleExports: any) => {\n        const redisClientPrototype = moduleExports?.default?.prototype;\n        if (isWrapped(redisClientPrototype?.multi)) {\n          this._unwrap(redisClientPrototype, 'multi');\n        }\n        if (isWrapped(redisClientPrototype?.MULTI)) {\n          this._unwrap(redisClientPrototype, 'MULTI');\n        }\n        if (isWrapped(redisClientPrototype?.sendCommand)) {\n          this._unwrap(redisClientPrototype, 'sendCommand');\n        }\n      }\n    );\n\n    return new InstrumentationNodeModuleDefinition(\n      basePackageName,\n      ['^1.0.0'],\n      (moduleExports: any) => {\n        return moduleExports;\n      },\n      () => {},\n      [commanderModuleFile, multiCommanderModule, clientIndexModule]\n    );\n  }\n\n  // serves both for redis 4.0.x where function name is extendWithCommands\n  // and redis ^4.1.0 where function name is attachCommands\n  private _getPatchExtendWithCommands(transformCommandArguments: Function) {\n    const plugin = this;\n    return function extendWithCommandsPatchWrapper(original: Function) {\n      return function extendWithCommandsPatch(this: any, config: any) {\n        if (config?.BaseClass?.name !== 'RedisClient') {\n          return original.apply(this, arguments);\n        }\n\n        const origExecutor = config.executor;\n        config.executor = function (\n          this: any,\n          command: any,\n          args: Array<string | Buffer>\n        ) {\n          const redisCommandArguments = transformCommandArguments(\n            command,\n            args\n          ).args;\n          return plugin._traceClientCommand(\n            origExecutor,\n            this,\n            arguments,\n            redisCommandArguments\n          );\n        };\n        return original.apply(this, arguments);\n      };\n    };\n  }\n\n  private _getPatchMultiCommandsExec() {\n    const plugin = this;\n    return function execPatchWrapper(original: Function) {\n      return function execPatch(this: any) {\n        const execRes = original.apply(this, arguments);\n        if (typeof execRes?.then !== 'function') {\n          plugin._diag.error(\n            'got non promise result when patching RedisClientMultiCommand.exec'\n          );\n          return execRes;\n        }\n\n        return execRes\n          .then((redisRes: unknown[]) => {\n            const openSpans = this[OTEL_OPEN_SPANS];\n            plugin._endSpansWithRedisReplies(openSpans, redisRes);\n            return redisRes;\n          })\n          .catch((err: Error) => {\n            const openSpans = this[OTEL_OPEN_SPANS];\n            if (!openSpans) {\n              plugin._diag.error(\n                'cannot find open spans to end for redis multi command'\n              );\n            } else {\n              const replies =\n                err.constructor.name === 'MultiErrorReply'\n                  ? (err as MultiErrorReply).replies\n                  : new Array(openSpans.length).fill(err);\n              plugin._endSpansWithRedisReplies(openSpans, replies);\n            }\n            return Promise.reject(err);\n          });\n      };\n    };\n  }\n\n  private _getPatchMultiCommandsAddCommand() {\n    const plugin = this;\n    return function addCommandWrapper(original: Function) {\n      return function addCommandPatch(this: any, args: Array<string | Buffer>) {\n        return plugin._traceClientCommand(original, this, arguments, args);\n      };\n    };\n  }\n\n  private _getPatchRedisClientMulti() {\n    return function multiPatchWrapper(original: Function) {\n      return function multiPatch(this: any) {\n        const multiRes = original.apply(this, arguments);\n        multiRes[MULTI_COMMAND_OPTIONS] = this.options;\n        return multiRes;\n      };\n    };\n  }\n\n  private _getPatchRedisClientSendCommand() {\n    const plugin = this;\n    return function sendCommandWrapper(original: Function) {\n      return function sendCommandPatch(\n        this: any,\n        args: Array<string | Buffer>\n      ) {\n        return plugin._traceClientCommand(original, this, arguments, args);\n      };\n    };\n  }\n\n  private _getPatchedClientConnect() {\n    const plugin = this;\n    return function connectWrapper(original: Function) {\n      return function patchedConnect(this: any): Promise<void> {\n        const options = this.options;\n\n        const attributes = getClientAttributes(plugin._diag, options);\n\n        const span = plugin.tracer.startSpan(\n          `${RedisInstrumentation.COMPONENT}-connect`,\n          {\n            kind: SpanKind.CLIENT,\n            attributes,\n          }\n        );\n\n        const res = context.with(trace.setSpan(context.active(), span), () => {\n          return original.apply(this);\n        });\n\n        return res\n          .then((result: unknown) => {\n            span.end();\n            return result;\n          })\n          .catch((error: Error) => {\n            span.recordException(error);\n            span.setStatus({\n              code: SpanStatusCode.ERROR,\n              message: error.message,\n            });\n            span.end();\n            return Promise.reject(error);\n          });\n      };\n    };\n  }\n\n  private _traceClientCommand(\n    origFunction: Function,\n    origThis: any,\n    origArguments: IArguments,\n    redisCommandArguments: Array<string | Buffer>\n  ) {\n    const hasNoParentSpan = trace.getSpan(context.active()) === undefined;\n    if (hasNoParentSpan && this.getConfig().requireParentSpan) {\n      return origFunction.apply(origThis, origArguments);\n    }\n\n    const clientOptions = origThis.options || origThis[MULTI_COMMAND_OPTIONS];\n\n    const commandName = redisCommandArguments[0] as string; // types also allows it to be a Buffer, but in practice it only string\n    const commandArgs = redisCommandArguments.slice(1);\n\n    const dbStatementSerializer =\n      this.getConfig().dbStatementSerializer || defaultDbStatementSerializer;\n\n    const attributes = getClientAttributes(this._diag, clientOptions);\n\n    try {\n      const dbStatement = dbStatementSerializer(commandName, commandArgs);\n      if (dbStatement != null) {\n        attributes[SEMATTRS_DB_STATEMENT] = dbStatement;\n      }\n    } catch (e) {\n      this._diag.error('dbStatementSerializer throw an exception', e, {\n        commandName,\n      });\n    }\n\n    const span = this.tracer.startSpan(\n      `${RedisInstrumentation.COMPONENT}-${commandName}`,\n      {\n        kind: SpanKind.CLIENT,\n        attributes,\n      }\n    );\n\n    const res = context.with(trace.setSpan(context.active(), span), () => {\n      return origFunction.apply(origThis, origArguments);\n    });\n    if (typeof res?.then === 'function') {\n      res.then(\n        (redisRes: unknown) => {\n          this._endSpanWithResponse(\n            span,\n            commandName,\n            commandArgs,\n            redisRes,\n            undefined\n          );\n        },\n        (err: any) => {\n          this._endSpanWithResponse(span, commandName, commandArgs, null, err);\n        }\n      );\n    } else {\n      const redisClientMultiCommand = res as {\n        [OTEL_OPEN_SPANS]?: Array<MutliCommandInfo>;\n      };\n      redisClientMultiCommand[OTEL_OPEN_SPANS] =\n        redisClientMultiCommand[OTEL_OPEN_SPANS] || [];\n      redisClientMultiCommand[OTEL_OPEN_SPANS]!.push({\n        span,\n        commandName,\n        commandArgs,\n      });\n    }\n    return res;\n  }\n\n  private _endSpansWithRedisReplies(\n    openSpans: Array<MutliCommandInfo>,\n    replies: unknown[]\n  ) {\n    if (!openSpans) {\n      return this._diag.error(\n        'cannot find open spans to end for redis multi command'\n      );\n    }\n    if (replies.length !== openSpans.length) {\n      return this._diag.error(\n        'number of multi command spans does not match response from redis'\n      );\n    }\n    for (let i = 0; i < openSpans.length; i++) {\n      const { span, commandName, commandArgs } = openSpans[i];\n      const currCommandRes = replies[i];\n      const [res, err] =\n        currCommandRes instanceof Error\n          ? [null, currCommandRes]\n          : [currCommandRes, undefined];\n      this._endSpanWithResponse(span, commandName, commandArgs, res, err);\n    }\n  }\n\n  private _endSpanWithResponse(\n    span: Span,\n    commandName: string,\n    commandArgs: Array<string | Buffer>,\n    response: unknown,\n    error: Error | undefined\n  ) {\n    const { responseHook } = this.getConfig();\n    if (!error && responseHook) {\n      try {\n        responseHook(span, commandName, commandArgs, response);\n      } catch (err) {\n        this._diag.error('responseHook throw an exception', err);\n      }\n    }\n    if (error) {\n      span.recordException(error);\n      span.setStatus({ code: SpanStatusCode.ERROR, message: error?.message });\n    }\n    span.end();\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24764, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-redis-4/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\n/**\n * Function that can be used to serialize db.statement tag\n * @param cmdName - The name of the command (eg. set, get, mset)\n * @param cmdArgs - Array of arguments passed to the command\n *\n * @returns serialized string that will be used as the db.statement attribute.\n */\nexport type DbStatementSerializer = (\n  cmdName: string,\n  cmdArgs: Array<string | Buffer>\n) => string;\n\n/**\n * Function that can be used to add custom attributes to span on response from redis server\n * @param span - The span created for the redis command, on which attributes can be set\n * @param cmdName - The name of the command (eg. set, get, mset)\n * @param cmdArgs - Array of arguments passed to the command\n * @param response - The response object which is returned to the user who called this command.\n *  Can be used to set custom attributes on the span.\n *  The type of the response varies depending on the specific command.\n */\nexport interface RedisResponseCustomAttributeFunction {\n  (\n    span: Span,\n    cmdName: string,\n    cmdArgs: Array<string | Buffer>,\n    response: unknown\n  ): void;\n}\n\nexport interface RedisInstrumentationConfig extends InstrumentationConfig {\n  /** Custom serializer function for the db.statement tag */\n  dbStatementSerializer?: DbStatementSerializer;\n\n  /** Function for adding custom attributes on db response */\n  responseHook?: RedisResponseCustomAttributeFunction;\n\n  /** Require parent to create redis span, default when unset is false */\n  requireParentSpan?: boolean;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24787, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-redis-4/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,6JAAA,SAAkC;AAClC,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24827, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-restify/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport enum LayerType {\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request_handler',\n}\n\nexport interface RestifyRequestInfo {\n  request: any; // Request type from @types/restify package\n  layerType: LayerType;\n}\n\n/**\n * Function that can be used to add custom attributes to the current span\n * @param span - The restify handler span.\n * @param info - The restify request info object.\n */\nexport interface RestifyCustomAttributeFunction {\n  (span: Span, info: RestifyRequestInfo): void;\n}\n\n/**\n * Options available for the restify Instrumentation\n */\nexport interface RestifyInstrumentationConfig extends InstrumentationConfig {\n  /** Function for adding custom attributes to each handler span */\n  requestHook?: RestifyCustomAttributeFunction;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAKH,IAAY,SAGX;AAHD,CAAA,SAAY,SAAS;IACnB,SAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,SAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;AACrC,CAAC,EAHW,SAAS,GAAT,QAAA,SAAS,IAAA,CAAT,QAAA,SAAS,GAAA,CAAA,CAAA,GAGpB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24856, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-restify/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  TYPE = 'restify.type',\n  NAME = 'restify.name',\n  METHOD = 'restify.method',\n  VERSION = 'restify.version',\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,IAAY,cAKX;AALD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,OAAA,GAAA,cAAqB,CAAA;IACrB,cAAA,CAAA,OAAA,GAAA,cAAqB,CAAA;IACrB,cAAA,CAAA,SAAA,GAAA,gBAAyB,CAAA;IACzB,cAAA,CAAA,UAAA,GAAA,iBAA2B,CAAA;AAC7B,CAAC,EALW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAKzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24887, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-restify/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.40.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-restify';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24914, "column": 0}, "map": {"version":3,"file":"constants.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-restify/src/constants.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const RESTIFY_MW_METHODS = ['use', 'pre'];\nexport const RESTIFY_METHODS = [\n  'del',\n  'get',\n  'head',\n  'opts',\n  'post',\n  'put',\n  'patch',\n];\nexport const MODULE_NAME = 'restify';\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACU,QAAA,kBAAkB,GAAG;IAAC,KAAK;IAAE,KAAK;CAAC,CAAC;AACpC,QAAA,eAAe,GAAG;IAC7B,KAAK;IACL,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,KAAK;IACL,OAAO;CACR,CAAC;AACW,QAAA,WAAW,GAAG,SAAS,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24952, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-restify/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// util.types.isPromise is supported from 10.0.0\nexport const isPromise = (value?: any): value is Promise<unknown> => {\n  return !!(\n    value &&\n    typeof value.then === 'function' &&\n    typeof value.catch === 'function' &&\n    value.toString() === '[object Promise]'\n  );\n};\n\n// util.types.isAsyncFunction is supported from 10.0.0\nexport const isAsyncFunction = (value?: unknown) => {\n  return !!(\n    value &&\n    typeof value === 'function' &&\n    value.constructor?.name === 'AsyncFunction'\n  );\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,gDAAgD;AACzC,MAAM,SAAS,GAAG,CAAC,KAAW,EAA6B,EAAE;IAClE,OAAO,CAAC,CAAC,CACP,KAAK,IACL,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,IAChC,OAAO,KAAK,CAAC,KAAK,KAAK,UAAU,IACjC,KAAK,CAAC,QAAQ,EAAE,KAAK,kBAAkB,CACxC,CAAC;AACJ,CAAC,CAAC;AAPW,QAAA,SAAS,GAAA,UAOpB;AAEF,sDAAsD;AAC/C,MAAM,eAAe,GAAG,CAAC,KAAe,EAAE,EAAE;;IACjD,OAAO,CAAC,CAAC,CACP,KAAK,IACL,OAAO,KAAK,KAAK,UAAU,IAC3B,CAAA,CAAA,KAAA,KAAK,CAAC,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,IAAI,MAAK,eAAe,CAC5C,CAAC;AACJ,CAAC,CAAC;AANW,QAAA,eAAe,GAAA,gBAM1B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24987, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-restify/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as types from './internal-types';\nimport type * as restify from 'restify';\n\nimport * as api from '@opentelemetry/api';\nimport type { Server } from 'restify';\nimport { LayerType } from './types';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport * as constants from './constants';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\nimport { isPromise, isAsyncFunction } from './utils';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport type { RestifyInstrumentationConfig } from './types';\n\nconst supportedVersions = ['>=4.0.0 <12'];\n\nexport class RestifyInstrumentation extends InstrumentationBase {\n  constructor(config: RestifyInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  private _moduleVersion?: string;\n  private _isDisabled = false;\n\n  override setConfig(config: RestifyInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n  }\n\n  override getConfig(): RestifyInstrumentationConfig {\n    return this._config as RestifyInstrumentationConfig;\n  }\n\n  init() {\n    const module = new InstrumentationNodeModuleDefinition(\n      constants.MODULE_NAME,\n      supportedVersions,\n      (moduleExports, moduleVersion) => {\n        this._moduleVersion = moduleVersion;\n        return moduleExports;\n      }\n    );\n\n    module.files.push(\n      new InstrumentationNodeModuleFile(\n        'restify/lib/server.js',\n        supportedVersions,\n        moduleExports => {\n          this._isDisabled = false;\n          const Server: any = moduleExports;\n          for (const name of constants.RESTIFY_METHODS) {\n            if (isWrapped(Server.prototype[name])) {\n              this._unwrap(Server.prototype, name);\n            }\n            this._wrap(\n              Server.prototype,\n              name as keyof Server,\n              this._methodPatcher.bind(this)\n            );\n          }\n          for (const name of constants.RESTIFY_MW_METHODS) {\n            if (isWrapped(Server.prototype[name])) {\n              this._unwrap(Server.prototype, name);\n            }\n            this._wrap(\n              Server.prototype,\n              name as keyof Server,\n              this._middlewarePatcher.bind(this)\n            );\n          }\n          return moduleExports;\n        },\n        moduleExports => {\n          this._isDisabled = true;\n          if (moduleExports) {\n            const Server: any = moduleExports;\n            for (const name of constants.RESTIFY_METHODS) {\n              this._unwrap(Server.prototype, name as keyof Server);\n            }\n            for (const name of constants.RESTIFY_MW_METHODS) {\n              this._unwrap(Server.prototype, name as keyof Server);\n            }\n          }\n        }\n      )\n    );\n\n    return module;\n  }\n\n  private _middlewarePatcher(original: Function, methodName?: string) {\n    const instrumentation = this;\n    return function (this: Server, ...handler: types.NestedRequestHandlers) {\n      return original.call(\n        this,\n        instrumentation._handlerPatcher(\n          { type: LayerType.MIDDLEWARE, methodName },\n          handler\n        )\n      );\n    };\n  }\n\n  private _methodPatcher(original: Function, methodName?: string) {\n    const instrumentation = this;\n    return function (\n      this: Server,\n      path: any,\n      ...handler: types.NestedRequestHandlers\n    ) {\n      return original.call(\n        this,\n        path,\n        ...instrumentation._handlerPatcher(\n          { type: LayerType.REQUEST_HANDLER, path, methodName },\n          handler\n        )\n      );\n    };\n  }\n\n  // will return the same type as `handler`, but all functions recursively patched\n  private _handlerPatcher(\n    metadata: types.Metadata,\n    handler: restify.RequestHandler | types.NestedRequestHandlers\n  ): any {\n    if (Array.isArray(handler)) {\n      return handler.map(handler => this._handlerPatcher(metadata, handler));\n    }\n    if (typeof handler === 'function') {\n      return (\n        req: types.Request,\n        res: restify.Response,\n        next: restify.Next\n      ) => {\n        if (this._isDisabled) {\n          return handler(req, res, next);\n        }\n        const route =\n          typeof req.getRoute === 'function'\n            ? req.getRoute()?.path\n            : req.route?.path;\n\n        // replace HTTP instrumentations name with one that contains a route\n        const httpMetadata = getRPCMetadata(api.context.active());\n        if (httpMetadata?.type === RPCType.HTTP) {\n          httpMetadata.route = route;\n        }\n\n        const fnName = handler.name || undefined;\n        const spanName =\n          metadata.type === LayerType.REQUEST_HANDLER\n            ? `request handler - ${route}`\n            : `middleware - ${fnName || 'anonymous'}`;\n        const attributes = {\n          [AttributeNames.NAME]: fnName,\n          [AttributeNames.VERSION]: this._moduleVersion || 'n/a',\n          [AttributeNames.TYPE]: metadata.type,\n          [AttributeNames.METHOD]: metadata.methodName,\n          [SEMATTRS_HTTP_ROUTE]: route,\n        };\n        const span = this.tracer.startSpan(\n          spanName,\n          {\n            attributes,\n          },\n          api.context.active()\n        );\n\n        const instrumentation = this;\n        const requestHook = instrumentation.getConfig().requestHook;\n        if (requestHook) {\n          safeExecuteInTheMiddle(\n            () => {\n              return requestHook!(span, {\n                request: req,\n                layerType: metadata.type,\n              });\n            },\n            e => {\n              if (e) {\n                instrumentation._diag.error('request hook failed', e);\n              }\n            },\n            true\n          );\n        }\n\n        const patchedNext = (err?: any) => {\n          span.end();\n          next(err);\n        };\n        patchedNext.ifError = next.ifError;\n\n        const wrapPromise = (promise: Promise<unknown>) => {\n          return promise\n            .then(value => {\n              span.end();\n              return value;\n            })\n            .catch(err => {\n              span.recordException(err);\n              span.end();\n              throw err;\n            });\n        };\n\n        const newContext = api.trace.setSpan(api.context.active(), span);\n        return api.context.with(\n          newContext,\n          (req: types.Request, res: restify.Response, next: restify.Next) => {\n            if (isAsyncFunction(handler)) {\n              return wrapPromise(handler(req, res, next));\n            }\n            try {\n              const result = handler(req, res, next);\n              if (isPromise(result)) {\n                return wrapPromise(result);\n              }\n              span.end();\n              return result;\n            } catch (err: any) {\n              span.recordException(err);\n              span.end();\n              throw err;\n            }\n          },\n          this,\n          req,\n          res,\n          patchedNext\n        );\n      };\n    }\n\n    return handler;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25170, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-restify/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './enums/AttributeNames';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,6JAAA,SAAkC;AAClC,kKAAA,SAAuC;AACvC,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25211, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-router/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.39.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-router';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,uCAAuC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25238, "column": 0}, "map": {"version":3,"file":"constants.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-router/src/constants.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const MODULE_NAME = 'router';\n\n// Router.prototype.handle\nexport const ROUTE_ROUTER_FN = `function router(req, res, next) {\n    router.handle(req, res, next)\n  }`;\n\n// Route.prototype.dispatch\nexport const ROUTER_HANDLE_FN = `function handle(req, res, next) {\n    route.dispatch(req, res, next)\n  }`;\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEU,QAAA,WAAW,GAAG,QAAQ,CAAC;AAEpC,0BAA0B;AACb,QAAA,eAAe,GAAG,CAAA;;IAE3B,CAAC;AAEL,2BAA2B;AACd,QAAA,gBAAgB,GAAG,CAAA;;IAE5B,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25271, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-router/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as constants from './constants';\nimport * as types from './internal-types';\n\n// Detect whether a function is a router package internal plumbing handler\nexport const isInternal = (fn: Function) => {\n  // Note that both of those functions are sync\n  if (fn.name === 'handle' && fn.toString() === constants.ROUTER_HANDLE_FN) {\n    return true;\n  }\n  if (fn.name === 'router' && fn.toString() === constants.ROUTE_ROUTER_FN) {\n    return true;\n  }\n  return false;\n};\n\nexport const renameHttpSpan = (\n  span?: types.InstrumentationSpan,\n  method?: string,\n  route?: string\n) => {\n  if (\n    typeof method === 'string' &&\n    typeof route === 'string' &&\n    span?.name?.startsWith('HTTP ')\n  ) {\n    span.updateName(`${method.toUpperCase()} ${route}`);\n  }\n};\n\nexport const once = (fn: Function) => {\n  let run = true;\n  return () => {\n    if (run) {\n      run = false;\n      fn();\n    }\n  };\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,mCAAyC;AAGzC,0EAA0E;AACnE,MAAM,UAAU,GAAG,CAAC,EAAY,EAAE,EAAE;IACzC,6CAA6C;IAC7C,IAAI,EAAE,CAAC,IAAI,KAAK,QAAQ,IAAI,EAAE,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,gBAAgB,EAAE;QACxE,OAAO,IAAI,CAAC;KACb;IACD,IAAI,EAAE,CAAC,IAAI,KAAK,QAAQ,IAAI,EAAE,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,eAAe,EAAE;QACvE,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AATW,QAAA,UAAU,GAAA,WASrB;AAEK,MAAM,cAAc,GAAG,CAC5B,IAAgC,EAChC,MAAe,EACf,KAAc,EACd,EAAE;;IACF,IACE,OAAO,MAAM,KAAK,QAAQ,IAC1B,OAAO,KAAK,KAAK,QAAQ,KACzB,CAAA,KAAA,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAA,KAAA,IAAJ,IAAI,CAAE,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,UAAU,CAAC,OAAO,CAAC,CAAA,EAC/B;QACA,IAAI,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,CAAA,CAAA,EAAI,KAAK,EAAE,CAAC,CAAC;KACrD;AACH,CAAC,CAAC;AAZW,QAAA,cAAc,GAAA,eAYzB;AAEK,MAAM,IAAI,GAAG,CAAC,EAAY,EAAE,EAAE;IACnC,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,OAAO,GAAG,EAAE;QACV,IAAI,GAAG,EAAE;YACP,GAAG,GAAG,KAAK,CAAC;YACZ,EAAE,EAAE,CAAC;SACN;IACH,CAAC,CAAC;AACJ,CAAC,CAAC;AARW,QAAA,IAAI,GAAA,KAQf","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25325, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-router/src/enums/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  TYPE = 'router.type',\n  NAME = 'router.name',\n  METHOD = 'router.method',\n  VERSION = 'router.version',\n}\n\nexport default AttributeNames;\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAY,cAKX;AALD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,OAAA,GAAA,aAAoB,CAAA;IACpB,cAAA,CAAA,OAAA,GAAA,aAAoB,CAAA;IACpB,cAAA,CAAA,SAAA,GAAA,eAAwB,CAAA;IACxB,cAAA,CAAA,UAAA,GAAA,gBAA0B,CAAA;AAC5B,CAAC,EALW,cAAc,GAAd,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA,GAKzB;AAED,QAAA,OAAA,GAAe,cAAc,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25357, "column": 0}, "map": {"version":3,"file":"LayerType.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-router/src/enums/LayerType.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LayerType {\n  MIDDLEWARE = 'middleware',\n  REQUEST_HANDLER = 'request_handler',\n}\n\nexport default LayerType;\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAY,SAGX;AAHD,CAAA,SAAY,SAAS;IACnB,SAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,SAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;AACrC,CAAC,EAHW,SAAS,GAAT,QAAA,SAAS,IAAA,CAAT,QAAA,SAAS,GAAA,CAAA,CAAA,GAGpB;AAED,QAAA,OAAA,GAAe,SAAS,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25387, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-router/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationConfig,\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\n\nimport * as http from 'http';\nimport type * as Router from 'router';\n\nimport * as types from './internal-types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport * as constants from './constants';\nimport * as utils from './utils';\nimport AttributeNames from './enums/AttributeNames';\nimport LayerType from './enums/LayerType';\n\nconst supportedVersions = ['>=1.0.0 <2'];\n\nexport class RouterInstrumentation extends InstrumentationBase {\n  constructor(config: InstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  private _moduleVersion?: string;\n\n  init() {\n    const module = new InstrumentationNodeModuleDefinition(\n      constants.MODULE_NAME,\n      supportedVersions,\n      (moduleExports, moduleVersion) => {\n        this._moduleVersion = moduleVersion;\n        return moduleExports;\n      }\n    );\n\n    module.files.push(\n      new InstrumentationNodeModuleFile(\n        'router/lib/layer.js',\n        supportedVersions,\n        moduleExports => {\n          const Layer: any = moduleExports;\n          if (isWrapped(Layer.prototype.handle_request)) {\n            this._unwrap(Layer.prototype, 'handle_request');\n          }\n          this._wrap(\n            Layer.prototype,\n            'handle_request',\n            this._requestHandlerPatcher.bind(this)\n          );\n          if (isWrapped(Layer.prototype.handle_error)) {\n            this._unwrap(Layer.prototype, 'handle_error');\n          }\n          this._wrap(\n            Layer.prototype,\n            'handle_error',\n            this._errorHandlerPatcher.bind(this)\n          );\n          return moduleExports;\n        },\n        moduleExports => {\n          const Layer: any = moduleExports;\n          this._unwrap(Layer.prototype, 'handle_request');\n          this._unwrap(Layer.prototype, 'handle_error');\n          return moduleExports;\n        }\n      )\n    );\n\n    return module;\n  }\n\n  // Define handle_request wrapper separately to ensure the signature has the correct length\n  private _requestHandlerPatcher(original: Router.Layer['handle_request']) {\n    const instrumentation = this;\n    return function wrapped_handle_request(\n      this: Router.Layer,\n      req: Router.RoutedRequest,\n      res: http.ServerResponse,\n      next: Router.NextFunction\n    ) {\n      // Skip creating spans if the registered handler is of invalid length, because\n      // we know router will ignore those\n      if (utils.isInternal(this.handle) || this.handle.length > 3) {\n        return original.call(this, req, res, next);\n      }\n      const { context, wrappedNext } = instrumentation._setupSpan(\n        this,\n        req,\n        res,\n        next\n      );\n      return api.context.with(context, original, this, req, res, wrappedNext);\n    };\n  }\n\n  // Define handle_error wrapper separately to ensure the signature has the correct length\n  private _errorHandlerPatcher(original: Router.Layer['handle_error']) {\n    const instrumentation = this;\n    return function wrapped_handle_request(\n      this: Router.Layer,\n      error: Error,\n      req: Router.RoutedRequest,\n      res: http.ServerResponse,\n      next: Router.NextFunction\n    ) {\n      // Skip creating spans if the registered handler is of invalid length, because\n      // we know router will ignore those\n      if (utils.isInternal(this.handle) || this.handle.length !== 4) {\n        return original.call(this, error, req, res, next);\n      }\n      const { context, wrappedNext } = instrumentation._setupSpan(\n        this,\n        req,\n        res,\n        next\n      );\n      return api.context.with(\n        context,\n        original,\n        this,\n        error,\n        req,\n        res,\n        wrappedNext\n      );\n    };\n  }\n\n  private _setupSpan(\n    layer: Router.Layer,\n    req: Router.RoutedRequest,\n    res: http.ServerResponse,\n    next: Router.NextFunction\n  ) {\n    const fnName = layer.handle.name || '<anonymous>';\n    const type = layer.method\n      ? LayerType.REQUEST_HANDLER\n      : LayerType.MIDDLEWARE;\n    const route = req.baseUrl + (req.route?.path ?? '') || '/';\n    const spanName =\n      type === LayerType.REQUEST_HANDLER\n        ? `request handler - ${route}`\n        : `middleware - ${fnName}`;\n    const attributes = {\n      [AttributeNames.NAME]: fnName,\n      [AttributeNames.VERSION]: this._moduleVersion,\n      [AttributeNames.TYPE]: type,\n      [SEMATTRS_HTTP_ROUTE]: route,\n    };\n\n    const parent = api.context.active();\n    const parentSpan = api.trace.getSpan(parent) as types.InstrumentationSpan;\n    const span = this.tracer.startSpan(\n      spanName,\n      {\n        attributes,\n      },\n      parent\n    ) as types.InstrumentationSpan;\n    const endSpan = utils.once(span.end.bind(span));\n\n    utils.renameHttpSpan(parentSpan, layer.method, route);\n    // make sure spans are ended at least when response is finished\n    res.prependOnceListener('finish', endSpan);\n\n    const wrappedNext: Router.NextFunction = err => {\n      if (err) {\n        span.recordException(err);\n      }\n      endSpan();\n      if (parent) {\n        return api.context.with(parent, next, undefined, err);\n      }\n      return next(err);\n    };\n\n    return {\n      context: api.trace.setSpan(parent, span),\n      wrappedNext,\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25514, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-router/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './enums/AttributeNames';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,4JAAA,SAAkC;AAClC,iKAAA,SAAuC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25554, "column": 0}, "map": {"version":3,"file":"AttributeNames.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-socket.io/src/AttributeNames.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SocketIoInstrumentationAttributes = {\n  SOCKET_IO_ROOMS: 'messaging.socket.io.rooms',\n  SOCKET_IO_NAMESPACE: 'messaging.socket.io.namespace',\n  SOCKET_IO_EVENT_NAME: 'messaging.socket.io.event_name',\n};\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACU,QAAA,iCAAiC,GAAG;IAC/C,eAAe,EAAE,2BAA2B;IAC5C,mBAAmB,EAAE,+BAA+B;IACpD,oBAAoB,EAAE,gCAAgC;CACvD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25583, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-socket.io/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.41.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-socket.io';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,0CAA0C,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25610, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-socket.io/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SocketIoInstrumentationConfig } from './types';\n\nexport const isPromise = (value: any): value is Promise<unknown> => {\n  return typeof value?.then === 'function';\n};\n\nexport const normalizeConfig = (config?: SocketIoInstrumentationConfig) => {\n  config = Object.assign({}, config);\n  if (!Array.isArray(config.emitIgnoreEventList)) {\n    config.emitIgnoreEventList = [];\n  }\n  if (!Array.isArray(config.onIgnoreEventList)) {\n    config.onIgnoreEventList = [];\n  }\n  return config;\n};\n\nexport const extractRoomsAttributeValue = (self: any): any[] => {\n  let rooms =\n    self.rooms ||\n    self._rooms ||\n    self.sockets?._rooms ||\n    self.sockets?.rooms ||\n    [];\n  // Some of the attributes above are of Set type. Convert it.\n  if (!Array.isArray(rooms)) {\n    rooms = Array.from<string>(rooms);\n  }\n  // only for v2: this.id is only set for v2. That's to mimic later versions which have this.id in the rooms Set.\n  if (rooms.length === 0 && self.id) {\n    rooms.push(self.id);\n  }\n  return rooms;\n};\n"],"names":[],"mappings":";;;;;AAiBO,MAAM,SAAS,GAAG,CAAC,KAAU,EAA6B,EAAE;IACjE,OAAO,OAAO,CAAA,KAAK,KAAA,QAAL,KAAK,KAAA,KAAA,IAAA,KAAA,IAAL,KAAK,CAAE,IAAI,CAAA,KAAK,UAAU,CAAC;AAC3C,CAAC,CAAC;AAFW,QAAA,SAAS,GAAA,UAEpB;AAEK,MAAM,eAAe,GAAG,CAAC,MAAsC,EAAE,EAAE;IACxE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,MAAM,CAAC,CAAC;IACnC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE;QAC9C,MAAM,CAAC,mBAAmB,GAAG,EAAE,CAAC;KACjC;IACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;QAC5C,MAAM,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC/B;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AATW,QAAA,eAAe,GAAA,gBAS1B;AAEK,MAAM,0BAA0B,GAAG,CAAC,IAAS,EAAS,EAAE;;IAC7D,IAAI,KAAK,GACP,IAAI,CAAC,KAAK,IACV,IAAI,CAAC,MAAM,KACX,CAAA,KAAA,IAAI,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,CAAA,KACpB,CAAA,KAAA,IAAI,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,KAAK,CAAA,IACnB,EAAE,CAAC;IACL,4DAA4D;IAC5D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACzB,KAAK,GAAG,KAAK,CAAC,IAAI,CAAS,KAAK,CAAC,CAAC;KACnC;IACD,+GAA+G;IAC/G,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE;QACjC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACrB;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAhBW,QAAA,0BAA0B,GAAA,2BAgBrC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 25649, "column": 0}, "map": {"version":3,"file":"socket.io.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-socket.io/src/socket.io.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  context,\n  trace,\n  Span,\n  SpanKind,\n  SpanStatusCode,\n} from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleFile,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  SEMATTRS_MESSAGING_DESTINATION,\n  SEMATTRS_MESSAGING_DESTINATION_KIND,\n  SEMATTRS_MESSAGING_OPERATION,\n  SEMATTRS_MESSAGING_SYSTEM,\n  MESSAGINGOPERATIONVALUES_RECEIVE,\n  MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n} from '@opentelemetry/semantic-conventions';\nimport { SocketIoInstrumentationConfig } from './types';\nimport { SocketIoInstrumentationAttributes } from './AttributeNames';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  extractRoomsAttributeValue,\n  isPromise,\n  normalizeConfig,\n} from './utils';\n\nconst reservedEvents = [\n  'connect',\n  'connect_error',\n  'disconnect',\n  'disconnecting',\n  'newListener',\n  'removeListener',\n];\n\nexport class SocketIoInstrumentation extends InstrumentationBase {\n  protected override _config!: SocketIoInstrumentationConfig;\n\n  constructor(config: SocketIoInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, normalizeConfig(config));\n  }\n\n  protected init() {\n    const socketInstrumentation = new InstrumentationNodeModuleFile(\n      'socket.io/dist/socket.js',\n      ['>=3 <5'],\n      (moduleExports, moduleVersion) => {\n        if (moduleExports === undefined || moduleExports === null) {\n          return moduleExports;\n        }\n        if (moduleVersion === undefined) {\n          return moduleExports;\n        }\n        if (isWrapped(moduleExports?.Socket?.prototype?.on)) {\n          this._unwrap(moduleExports.Socket.prototype, 'on');\n        }\n        this._wrap(\n          moduleExports.Socket.prototype,\n          'on',\n          this._patchOn(moduleVersion)\n        );\n        if (isWrapped(moduleExports?.Socket?.prototype?.emit)) {\n          this._unwrap(moduleExports.Socket.prototype, 'emit');\n        }\n        this._wrap(\n          moduleExports.Socket.prototype,\n          'emit',\n          this._patchEmit(moduleVersion)\n        );\n        return moduleExports;\n      },\n      moduleExports => {\n        if (isWrapped(moduleExports?.Socket?.prototype?.on)) {\n          this._unwrap(moduleExports.Socket.prototype, 'on');\n        }\n        if (isWrapped(moduleExports?.Socket?.prototype?.emit)) {\n          this._unwrap(moduleExports.Socket.prototype, 'emit');\n        }\n        return moduleExports;\n      }\n    );\n\n    const broadcastOperatorInstrumentation = new InstrumentationNodeModuleFile(\n      'socket.io/dist/broadcast-operator.js',\n      ['>=4 <5'],\n      (moduleExports, moduleVersion) => {\n        if (moduleExports === undefined || moduleExports === null) {\n          return moduleExports;\n        }\n        if (moduleVersion === undefined) {\n          return moduleExports;\n        }\n        if (isWrapped(moduleExports?.BroadcastOperator?.prototype?.emit)) {\n          this._unwrap(moduleExports.BroadcastOperator.prototype, 'emit');\n        }\n        this._wrap(\n          moduleExports.BroadcastOperator.prototype,\n          'emit',\n          this._patchEmit(moduleVersion)\n        );\n        return moduleExports;\n      },\n      moduleExports => {\n        if (isWrapped(moduleExports?.BroadcastOperator?.prototype?.emit)) {\n          this._unwrap(moduleExports.BroadcastOperator.prototype, 'emit');\n        }\n        return moduleExports;\n      }\n    );\n    const namespaceInstrumentation = new InstrumentationNodeModuleFile(\n      'socket.io/dist/namespace.js',\n      ['<4'],\n      (moduleExports, moduleVersion) => {\n        if (moduleExports === undefined || moduleExports === null) {\n          return moduleExports;\n        }\n        if (moduleVersion === undefined) {\n          return moduleExports;\n        }\n        if (isWrapped(moduleExports?.Namespace?.prototype?.emit)) {\n          this._unwrap(moduleExports.Namespace.prototype, 'emit');\n        }\n        this._wrap(\n          moduleExports.Namespace.prototype,\n          'emit',\n          this._patchEmit(moduleVersion)\n        );\n        return moduleExports;\n      },\n      moduleExports => {\n        if (isWrapped(moduleExports?.Namespace?.prototype?.emit)) {\n          this._unwrap(moduleExports.Namespace.prototype, 'emit');\n        }\n      }\n    );\n    const socketInstrumentationLegacy = new InstrumentationNodeModuleFile(\n      'socket.io/lib/socket.js',\n      ['2'],\n      (moduleExports, moduleVersion) => {\n        if (moduleExports === undefined || moduleExports === null) {\n          return moduleExports;\n        }\n        if (moduleVersion === undefined) {\n          return moduleExports;\n        }\n        if (isWrapped(moduleExports.prototype?.on)) {\n          this._unwrap(moduleExports.prototype, 'on');\n        }\n        this._wrap(moduleExports.prototype, 'on', this._patchOn(moduleVersion));\n        if (isWrapped(moduleExports.prototype?.emit)) {\n          this._unwrap(moduleExports.prototype, 'emit');\n        }\n        this._wrap(\n          moduleExports.prototype,\n          'emit',\n          this._patchEmit(moduleVersion)\n        );\n        return moduleExports;\n      },\n      moduleExports => {\n        if (isWrapped(moduleExports.prototype?.on)) {\n          this._unwrap(moduleExports.prototype, 'on');\n        }\n        if (isWrapped(moduleExports.prototype?.emit)) {\n          this._unwrap(moduleExports.prototype, 'emit');\n        }\n        return moduleExports;\n      }\n    );\n    const namespaceInstrumentationLegacy = new InstrumentationNodeModuleFile(\n      'socket.io/lib/namespace.js',\n      ['2'],\n      (moduleExports, moduleVersion) => {\n        if (moduleExports === undefined || moduleExports === null) {\n          return moduleExports;\n        }\n        if (moduleVersion === undefined) {\n          return moduleExports;\n        }\n        if (isWrapped(moduleExports?.prototype?.emit)) {\n          this._unwrap(moduleExports.prototype, 'emit');\n        }\n        this._wrap(\n          moduleExports.prototype,\n          'emit',\n          this._patchEmit(moduleVersion)\n        );\n        return moduleExports;\n      },\n      moduleExports => {\n        if (isWrapped(moduleExports?.prototype?.emit)) {\n          this._unwrap(moduleExports.prototype, 'emit');\n        }\n      }\n    );\n\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'socket.io',\n        ['>=3 <5'],\n        (moduleExports, moduleVersion) => {\n          if (moduleExports === undefined || moduleExports === null) {\n            return moduleExports;\n          }\n          if (moduleVersion === undefined) {\n            return moduleExports;\n          }\n          if (isWrapped(moduleExports?.Server?.prototype?.on)) {\n            this._unwrap(moduleExports.Server.prototype, 'on');\n          }\n          this._wrap(\n            moduleExports.Server.prototype,\n            'on',\n            this._patchOn(moduleVersion)\n          );\n          return moduleExports;\n        },\n        moduleExports => {\n          if (isWrapped(moduleExports?.Server?.prototype?.on)) {\n            this._unwrap(moduleExports.Server.prototype, 'on');\n          }\n          return moduleExports;\n        },\n        [\n          broadcastOperatorInstrumentation,\n          namespaceInstrumentation,\n          socketInstrumentation,\n        ]\n      ),\n      new InstrumentationNodeModuleDefinition(\n        'socket.io',\n        ['2'],\n        (moduleExports, moduleVersion) => {\n          if (moduleExports === undefined || moduleExports === null) {\n            return moduleExports;\n          }\n          if (moduleVersion === undefined) {\n            return moduleExports;\n          }\n          if (isWrapped(moduleExports?.prototype?.on)) {\n            this._unwrap(moduleExports.prototype, 'on');\n          }\n          this._wrap(\n            moduleExports.prototype,\n            'on',\n            this._patchOn(moduleVersion)\n          );\n          return moduleExports;\n        },\n        (moduleExports, moduleVersion) => {\n          if (isWrapped(moduleExports?.prototype?.on)) {\n            this._unwrap(moduleExports.prototype, 'on');\n          }\n          return moduleExports;\n        },\n        [namespaceInstrumentationLegacy, socketInstrumentationLegacy]\n      ),\n    ];\n  }\n\n  override setConfig(config: SocketIoInstrumentationConfig = {}) {\n    return super.setConfig(normalizeConfig(config));\n  }\n\n  private _patchOn(moduleVersion: string) {\n    const self = this;\n    return (original: Function) => {\n      return function (this: any, ev: any, originalListener: Function) {\n        if (!self._config.traceReserved && reservedEvents.includes(ev)) {\n          return original.apply(this, arguments);\n        }\n        if (self._config.onIgnoreEventList?.includes(ev)) {\n          return original.apply(this, arguments);\n        }\n        const wrappedListener = function (this: any, ...args: any[]) {\n          const eventName = ev;\n          const defaultNamespace = '/';\n          const namespace = this.name || this.adapter?.nsp?.name;\n          const destination =\n            namespace === defaultNamespace\n              ? eventName\n              : `${namespace} ${eventName}`;\n          const span: Span = self.tracer.startSpan(\n            `${destination} ${MESSAGINGOPERATIONVALUES_RECEIVE}`,\n            {\n              kind: SpanKind.CONSUMER,\n              attributes: {\n                [SEMATTRS_MESSAGING_SYSTEM]: 'socket.io',\n                [SEMATTRS_MESSAGING_DESTINATION]: namespace,\n                [SEMATTRS_MESSAGING_OPERATION]:\n                  MESSAGINGOPERATIONVALUES_RECEIVE,\n                [SocketIoInstrumentationAttributes.SOCKET_IO_EVENT_NAME]:\n                  eventName,\n              },\n            }\n          );\n\n          if (self._config.onHook) {\n            safeExecuteInTheMiddle(\n              () =>\n                self._config?.onHook?.(span, { moduleVersion, payload: args }),\n              e => {\n                if (e) self._diag.error('onHook error', e);\n              },\n              true\n            );\n          }\n          return context.with(trace.setSpan(context.active(), span), () =>\n            self.endSpan(() => originalListener.apply(this, arguments), span)\n          );\n        };\n        return original.apply(this, [ev, wrappedListener]);\n      };\n    };\n  }\n\n  private endSpan(traced: () => any | Promise<any>, span: Span) {\n    try {\n      const result = traced();\n      if (isPromise(result)) {\n        return result.then(\n          value => {\n            span.end();\n            return value;\n          },\n          err => {\n            span.recordException(err);\n            span.setStatus({\n              code: SpanStatusCode.ERROR,\n              message: err?.message,\n            });\n            span.end();\n            throw err;\n          }\n        );\n      } else {\n        span.end();\n        return result;\n      }\n    } catch (error: any) {\n      span.recordException(error);\n      span.setStatus({ code: SpanStatusCode.ERROR, message: error?.message });\n      span.end();\n      throw error;\n    }\n  }\n\n  private _patchEmit(moduleVersion: string) {\n    const self = this;\n    return (original: Function) => {\n      return function (this: any, ev: any, ...args: any[]) {\n        if (!self._config.traceReserved && reservedEvents.includes(ev)) {\n          return original.apply(this, arguments);\n        }\n        if (self._config?.emitIgnoreEventList?.includes(ev)) {\n          return original.apply(this, arguments);\n        }\n        const messagingSystem = 'socket.io';\n        const eventName = ev;\n        const attributes: any = {\n          [SEMATTRS_MESSAGING_SYSTEM]: messagingSystem,\n          [SEMATTRS_MESSAGING_DESTINATION_KIND]:\n            MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n          [SocketIoInstrumentationAttributes.SOCKET_IO_EVENT_NAME]: eventName,\n        };\n\n        const rooms = extractRoomsAttributeValue(this);\n        if (rooms.length) {\n          attributes[SocketIoInstrumentationAttributes.SOCKET_IO_ROOMS] = rooms;\n        }\n        const namespace =\n          this.name || this.adapter?.nsp?.name || this.sockets?.name;\n        if (namespace) {\n          attributes[SocketIoInstrumentationAttributes.SOCKET_IO_NAMESPACE] =\n            namespace;\n          attributes[SEMATTRS_MESSAGING_DESTINATION] = namespace;\n        }\n        const spanRooms = rooms.length ? `[${rooms.join()}]` : '';\n        const span = self.tracer.startSpan(`${namespace}${spanRooms} send`, {\n          kind: SpanKind.PRODUCER,\n          attributes,\n        });\n\n        if (self._config.emitHook) {\n          safeExecuteInTheMiddle(\n            () =>\n              self._config.emitHook?.(span, { moduleVersion, payload: args }),\n            e => {\n              if (e) self._diag.error('emitHook error', e);\n            },\n            true\n          );\n        }\n        try {\n          return context.with(trace.setSpan(context.active(), span), () =>\n            original.apply(this, arguments)\n          );\n        } catch (error: any) {\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error.message,\n          });\n          throw error;\n        } finally {\n          span.end();\n        }\n      };\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26006, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-socket.io/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport const defaultSocketIoPath = '/socket.io/';\n\nexport interface SocketIoHookInfo {\n  moduleVersion?: string;\n  payload: any[];\n}\nexport interface SocketIoHookFunction {\n  (span: Span, hookInfo: SocketIoHookInfo): void;\n}\n\nexport interface SocketIoInstrumentationConfig extends InstrumentationConfig {\n  /** Hook for adding custom attributes before socket.io emits the event */\n  emitHook?: SocketIoHookFunction;\n  /** list of events to ignore tracing on for socket.io emits */\n  emitIgnoreEventList?: string[];\n  /** Hook for adding custom attributes before the event listener (callback) is invoked */\n  onHook?: SocketIoHookFunction;\n  /** list of events to ignore tracing on for socket.io listeners */\n  onIgnoreEventList?: string[];\n  /** Set to `true` if you want to trace socket.io reserved events (see https://socket.io/docs/v4/emit-cheatsheet/#Reserved-events) */\n  traceReserved?: boolean;\n}\n"],"names":[],"mappings":";;;;;AAkBa,QAAA,mBAAmB,GAAG,aAAa,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26017, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-socket.io/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './socket.io';\nexport * from './types';\nexport * from './AttributeNames';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,yJAAA,SAA4B;AAC5B,qJAAA,SAAwB;AACxB,8JAAA,SAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26058, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-tedious/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The span name SHOULD be set to a low cardinality value\n * representing the statement executed on the database.\n *\n * @returns Operation executed on Tedious Connection. Does not map to SQL statement in any way.\n */\nexport function getSpanName(\n  operation: string,\n  db: string | undefined,\n  sql: string | undefined,\n  bulkLoadTable: string | undefined\n): string {\n  if (operation === 'execBulkLoad' && bulkLoadTable && db) {\n    return `${operation} ${bulkLoadTable} ${db}`;\n  }\n  if (operation === 'callProcedure') {\n    // `sql` refers to procedure name with `callProcedure`\n    if (db) {\n      return `${operation} ${sql} ${db}`;\n    }\n    return `${operation} ${sql}`;\n  }\n  // do not use `sql` in general case because of high-cardinality\n  if (db) {\n    return `${operation} ${db}`;\n  }\n  return `${operation}`;\n}\n\nexport const once = (fn: Function) => {\n  let called = false;\n  return (...args: unknown[]) => {\n    if (called) return;\n    called = true;\n    return fn(...args);\n  };\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH;;;;;GAKG,CACH,SAAgB,WAAW,CACzB,SAAiB,EACjB,EAAsB,EACtB,GAAuB,EACvB,aAAiC;IAEjC,IAAI,SAAS,KAAK,cAAc,IAAI,aAAa,IAAI,EAAE,EAAE;QACvD,OAAO,GAAG,SAAS,CAAA,CAAA,EAAI,aAAa,CAAA,CAAA,EAAI,EAAE,EAAE,CAAC;KAC9C;IACD,IAAI,SAAS,KAAK,eAAe,EAAE;QACjC,sDAAsD;QACtD,IAAI,EAAE,EAAE;YACN,OAAO,GAAG,SAAS,CAAA,CAAA,EAAI,GAAG,CAAA,CAAA,EAAI,EAAE,EAAE,CAAC;SACpC;QACD,OAAO,GAAG,SAAS,CAAA,CAAA,EAAI,GAAG,EAAE,CAAC;KAC9B;IACD,+DAA+D;IAC/D,IAAI,EAAE,EAAE;QACN,OAAO,GAAG,SAAS,CAAA,CAAA,EAAI,EAAE,EAAE,CAAC;KAC7B;IACD,OAAO,GAAG,SAAS,EAAE,CAAC;AACxB,CAAC;AArBD,QAAA,WAAA,GAAA,YAqBC;AAEM,MAAM,IAAI,GAAG,CAAC,EAAY,EAAE,EAAE;IACnC,IAAI,MAAM,GAAG,KAAK,CAAC;IACnB,OAAO,CAAC,GAAG,IAAe,EAAE,EAAE;QAC5B,IAAI,MAAM,EAAE,OAAO;QACnB,MAAM,GAAG,IAAI,CAAC;QACd,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC;AACJ,CAAC,CAAC;AAPW,QAAA,IAAI,GAAA,KAOf","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26114, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-tedious/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.13.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-tedious';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26141, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-tedious/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { EventEmitter } from 'events';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport {\n  DBSYSTEMVALUES_MSSQL,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_SQL_TABLE,\n  SEMATTRS_DB_STATEMENT,\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_DB_USER,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_NET_PEER_PORT,\n} from '@opentelemetry/semantic-conventions';\nimport type * as tedious from 'tedious';\nimport { TediousInstrumentationConfig } from './types';\nimport { getSpanName, once } from './utils';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nconst CURRENT_DATABASE = Symbol(\n  'opentelemetry.instrumentation-tedious.current-database'\n);\nconst PATCHED_METHODS = [\n  'callProcedure',\n  'execSql',\n  'execSqlBatch',\n  'execBulkLoad',\n  'prepare',\n  'execute',\n];\n\ntype UnknownFunction = (...args: any[]) => any;\ntype ApproxConnection = EventEmitter & {\n  [CURRENT_DATABASE]: string;\n  config: any;\n};\ntype ApproxRequest = EventEmitter & {\n  sqlTextOrProcedure: string | undefined;\n  callback: any;\n  table: string | undefined;\n  parametersByName: any;\n};\n\nfunction setDatabase(this: ApproxConnection, databaseName: string) {\n  Object.defineProperty(this, CURRENT_DATABASE, {\n    value: databaseName,\n    writable: true,\n  });\n}\n\nexport class TediousInstrumentation extends InstrumentationBase<TediousInstrumentationConfig> {\n  static readonly COMPONENT = 'tedious';\n\n  constructor(config: TediousInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        TediousInstrumentation.COMPONENT,\n        ['>=1.11.0 <20'],\n        (moduleExports: typeof tedious) => {\n          const ConnectionPrototype: any = moduleExports.Connection.prototype;\n          for (const method of PATCHED_METHODS) {\n            if (isWrapped(ConnectionPrototype[method])) {\n              this._unwrap(ConnectionPrototype, method);\n            }\n            this._wrap(\n              ConnectionPrototype,\n              method,\n              this._patchQuery(method) as any\n            );\n          }\n\n          if (isWrapped(ConnectionPrototype.connect)) {\n            this._unwrap(ConnectionPrototype, 'connect');\n          }\n          this._wrap(ConnectionPrototype, 'connect', this._patchConnect);\n\n          return moduleExports;\n        },\n        (moduleExports: typeof tedious) => {\n          if (moduleExports === undefined) return;\n          const ConnectionPrototype: any = moduleExports.Connection.prototype;\n          for (const method of PATCHED_METHODS) {\n            this._unwrap(ConnectionPrototype, method);\n          }\n          this._unwrap(ConnectionPrototype, 'connect');\n        }\n      ),\n    ];\n  }\n\n  private _patchConnect(original: UnknownFunction): UnknownFunction {\n    return function patchedConnect(this: ApproxConnection) {\n      setDatabase.call(this, this.config?.options?.database);\n\n      // remove the listener first in case it's already added\n      this.removeListener('databaseChange', setDatabase);\n      this.on('databaseChange', setDatabase);\n\n      this.once('end', () => {\n        this.removeListener('databaseChange', setDatabase);\n      });\n      return original.apply(this, arguments as unknown as any[]);\n    };\n  }\n\n  private _patchQuery(operation: string) {\n    return (originalMethod: UnknownFunction): UnknownFunction => {\n      const thisPlugin = this;\n\n      function patchedMethod(this: ApproxConnection, request: ApproxRequest) {\n        if (!(request instanceof EventEmitter)) {\n          thisPlugin._diag.warn(\n            `Unexpected invocation of patched ${operation} method. Span not recorded`\n          );\n          return originalMethod.apply(this, arguments as unknown as any[]);\n        }\n        let procCount = 0;\n        let statementCount = 0;\n        const incrementStatementCount = () => statementCount++;\n        const incrementProcCount = () => procCount++;\n        const databaseName = this[CURRENT_DATABASE];\n        const sql = (request => {\n          // Required for <11.0.9\n          if (\n            request.sqlTextOrProcedure === 'sp_prepare' &&\n            request.parametersByName?.stmt?.value\n          ) {\n            return request.parametersByName.stmt.value;\n          }\n          return request.sqlTextOrProcedure;\n        })(request);\n\n        const span = thisPlugin.tracer.startSpan(\n          getSpanName(operation, databaseName, sql, request.table),\n          {\n            kind: api.SpanKind.CLIENT,\n            attributes: {\n              [SEMATTRS_DB_SYSTEM]: DBSYSTEMVALUES_MSSQL,\n              [SEMATTRS_DB_NAME]: databaseName,\n              [SEMATTRS_NET_PEER_PORT]: this.config?.options?.port,\n              [SEMATTRS_NET_PEER_NAME]: this.config?.server,\n              // >=4 uses `authentication` object, older versions just userName and password pair\n              [SEMATTRS_DB_USER]:\n                this.config?.userName ??\n                this.config?.authentication?.options?.userName,\n              [SEMATTRS_DB_STATEMENT]: sql,\n              [SEMATTRS_DB_SQL_TABLE]: request.table,\n            },\n          }\n        );\n\n        const endSpan = once((err?: any) => {\n          request.removeListener('done', incrementStatementCount);\n          request.removeListener('doneInProc', incrementStatementCount);\n          request.removeListener('doneProc', incrementProcCount);\n          request.removeListener('error', endSpan);\n          this.removeListener('end', endSpan);\n\n          span.setAttribute('tedious.procedure_count', procCount);\n          span.setAttribute('tedious.statement_count', statementCount);\n          if (err) {\n            span.setStatus({\n              code: api.SpanStatusCode.ERROR,\n              message: err.message,\n            });\n          }\n          span.end();\n        });\n\n        request.on('done', incrementStatementCount);\n        request.on('doneInProc', incrementStatementCount);\n        request.on('doneProc', incrementProcCount);\n        request.once('error', endSpan);\n        this.on('end', endSpan);\n\n        if (typeof request.callback === 'function') {\n          thisPlugin._wrap(\n            request,\n            'callback',\n            thisPlugin._patchCallbackQuery(endSpan)\n          );\n        } else {\n          thisPlugin._diag.error('Expected request.callback to be a function');\n        }\n\n        return api.context.with(\n          api.trace.setSpan(api.context.active(), span),\n          originalMethod,\n          this,\n          ...arguments\n        );\n      }\n\n      Object.defineProperty(patchedMethod, 'length', {\n        value: originalMethod.length,\n        writable: false,\n      });\n\n      return patchedMethod;\n    };\n  }\n\n  private _patchCallbackQuery(endSpan: Function) {\n    return (originalCallback: Function) => {\n      return function (\n        this: any,\n        err: Error | undefined | null,\n        rowCount?: number,\n        rows?: any\n      ) {\n        endSpan(err);\n        return originalCallback.apply(this, arguments);\n      };\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26311, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-tedious/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport type TediousInstrumentationConfig = InstrumentationConfig;\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26334, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-tedious/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,6JAAA,SAAkC;AAClC,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26374, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-undici/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.5.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-undici';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,OAAO,CAAC;AAC1B,QAAA,YAAY,GAAG,uCAAuC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26401, "column": 0}, "map": {"version":3,"file":"SemanticAttributes.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-undici/src/enums/SemanticAttributes.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport const SemanticAttributes = {\n  /**\n   * State of the HTTP connection in the HTTP connection pool.\n   */\n  HTTP_CONNECTION_STATE: 'http.connection.state',\n\n  /**\n  * Describes a class of error the operation ended with.\n  *\n  * Note: The `error.type` SHOULD be predictable and SHOULD have low cardinality.\nInstrumentations SHOULD document the list of errors they report.\n\nThe cardinality of `error.type` within one instrumentation library SHOULD be low.\nTelemetry consumers that aggregate data from multiple instrumentation libraries and applications\nshould be prepared for `error.type` to have high cardinality at query time when no\nadditional filters are applied.\n\nIf the operation has completed successfully, instrumentations SHOULD NOT set `error.type`.\n\nIf a specific domain defines its own set of error identifiers (such as HTTP or gRPC status codes),\nit&#39;s RECOMMENDED to:\n\n* Use a domain-specific attribute\n* Set `error.type` to capture all errors, regardless of whether they are defined within the domain-specific set or not.\n  */\n  ERROR_TYPE: 'error.type',\n\n  /**\n   * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_REQUEST_BODY_SIZE: 'http.request.body.size',\n\n  /**\n  * HTTP request method.\n  *\n  * Note: HTTP request method value SHOULD be &#34;known&#34; to the instrumentation.\nBy default, this convention defines &#34;known&#34; methods as the ones listed in [RFC9110](https://www.rfc-editor.org/rfc/rfc9110.html#name-methods)\nand the PATCH method defined in [RFC5789](https://www.rfc-editor.org/rfc/rfc5789.html).\n\nIf the HTTP request method is not known to instrumentation, it MUST set the `http.request.method` attribute to `_OTHER`.\n\nIf the HTTP instrumentation could end up converting valid HTTP request methods to `_OTHER`, then it MUST provide a way to override\nthe list of known HTTP methods. If this override is done via environment variable, then the environment variable MUST be named\nOTEL_INSTRUMENTATION_HTTP_KNOWN_METHODS and support a comma-separated list of case-sensitive known HTTP methods\n(this list MUST be a full override of the default known method, it is not a list of known methods in addition to the defaults).\n\nHTTP method names are case-sensitive and `http.request.method` attribute value MUST match a known HTTP method name exactly.\nInstrumentations for specific web frameworks that consider HTTP methods to be case insensitive, SHOULD populate a canonical equivalent.\nTracing instrumentations that do so, MUST also set `http.request.method_original` to the original value.\n  */\n  HTTP_REQUEST_METHOD: 'http.request.method',\n\n  /**\n   * Original HTTP method sent by the client in the request line.\n   */\n  HTTP_REQUEST_METHOD_ORIGINAL: 'http.request.method_original',\n\n  /**\n   * The ordinal number of request resending attempt (for any reason, including redirects).\n   *\n   * Note: The resend count SHOULD be updated each time an HTTP request gets resent by the client, regardless of what was the cause of the resending (e.g. redirection, authorization failure, 503 Server Unavailable, network issues, or any other).\n   */\n  HTTP_REQUEST_RESEND_COUNT: 'http.request.resend_count',\n\n  /**\n   * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_RESPONSE_BODY_SIZE: 'http.response.body.size',\n\n  /**\n   * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n   */\n  HTTP_RESPONSE_STATUS_CODE: 'http.response.status_code',\n\n  /**\n  * The matched route, that is, the path template in the format used by the respective server framework.\n  *\n  * Note: MUST NOT be populated when this is not supported by the HTTP server framework as the route attribute should have low-cardinality and the URI path can NOT substitute it.\nSHOULD include the [application root](/docs/http/http-spans.md#http-server-definitions) if there is one.\n  */\n  HTTP_ROUTE: 'http.route',\n\n  /**\n   * Peer address of the network connection - IP address or Unix domain socket name.\n   */\n  NETWORK_PEER_ADDRESS: 'network.peer.address',\n\n  /**\n   * Peer port number of the network connection.\n   */\n  NETWORK_PEER_PORT: 'network.peer.port',\n\n  /**\n   * [OSI application layer](https://osi-model.com/application-layer/) or non-OSI equivalent.\n   *\n   * Note: The value SHOULD be normalized to lowercase.\n   */\n  NETWORK_PROTOCOL_NAME: 'network.protocol.name',\n\n  /**\n   * Version of the protocol specified in `network.protocol.name`.\n   *\n   * Note: `network.protocol.version` refers to the version of the protocol used and might be different from the protocol client&#39;s version. If the HTTP client has a version of `0.27.2`, but sends HTTP version `1.1`, this attribute should be set to `1.1`.\n   */\n  NETWORK_PROTOCOL_VERSION: 'network.protocol.version',\n\n  /**\n   * Server domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n   *\n   * Note: When observed from the client side, and when communicating through an intermediary, `server.address` SHOULD represent the server address behind any intermediaries, for example proxies, if it&#39;s available.\n   */\n  SERVER_ADDRESS: 'server.address',\n\n  /**\n   * Server port number.\n   *\n   * Note: When observed from the client side, and when communicating through an intermediary, `server.port` SHOULD represent the server port behind any intermediaries, for example proxies, if it&#39;s available.\n   */\n  SERVER_PORT: 'server.port',\n\n  /**\n  * Absolute URL describing a network resource according to [RFC3986](https://www.rfc-editor.org/rfc/rfc3986).\n  *\n  * Note: For network calls, URL usually has `scheme://host[:port][path][?query][#fragment]` format, where the fragment is not transmitted over HTTP, but if it is known, it SHOULD be included nevertheless.\n`url.full` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case username and password SHOULD be redacted and attribute&#39;s value SHOULD be `https://REDACTED:REDACTED@www.example.com/`.\n`url.full` SHOULD capture the absolute URL when it is available (or can be reconstructed) and SHOULD NOT be validated or modified except for sanitizing purposes.\n  */\n  URL_FULL: 'url.full',\n\n  /**\n   * The [URI path](https://www.rfc-editor.org/rfc/rfc3986#section-3.3) component.\n   */\n  URL_PATH: 'url.path',\n\n  /**\n   * The [URI query](https://www.rfc-editor.org/rfc/rfc3986#section-3.4) component.\n   *\n   * Note: Sensitive content provided in query string SHOULD be scrubbed when instrumentations can identify it.\n   */\n  URL_QUERY: 'url.query',\n\n  /**\n   * The [URI scheme](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) component identifying the used protocol.\n   */\n  URL_SCHEME: 'url.scheme',\n\n  /**\n   * Value of the [HTTP User-Agent](https://www.rfc-editor.org/rfc/rfc9110.html#field.user-agent) header sent by the client.\n   */\n  USER_AGENT_ORIGINAL: 'user_agent.original',\n};\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,iHAAiH;AACpG,QAAA,kBAAkB,GAAG;IAChC;;OAEG,CACH,qBAAqB,EAAE,uBAAuB;IAE9C;;;;;;;;;;;;;;;;;;MAkBE,CACF,UAAU,EAAE,YAAY;IAExB;;OAEG,CACH,sBAAsB,EAAE,wBAAwB;IAEhD;;;;;;;;;;;;;;;;;MAiBE,CACF,mBAAmB,EAAE,qBAAqB;IAE1C;;OAEG,CACH,4BAA4B,EAAE,8BAA8B;IAE5D;;;;OAIG,CACH,yBAAyB,EAAE,2BAA2B;IAEtD;;OAEG,CACH,uBAAuB,EAAE,yBAAyB;IAElD;;OAEG,CACH,yBAAyB,EAAE,2BAA2B;IAEtD;;;;;MAKE,CACF,UAAU,EAAE,YAAY;IAExB;;OAEG,CACH,oBAAoB,EAAE,sBAAsB;IAE5C;;OAEG,CACH,iBAAiB,EAAE,mBAAmB;IAEtC;;;;OAIG,CACH,qBAAqB,EAAE,uBAAuB;IAE9C;;;;OAIG,CACH,wBAAwB,EAAE,0BAA0B;IAEpD;;;;OAIG,CACH,cAAc,EAAE,gBAAgB;IAEhC;;;;OAIG,CACH,WAAW,EAAE,aAAa;IAE1B;;;;;;MAME,CACF,QAAQ,EAAE,UAAU;IAEpB;;OAEG,CACH,QAAQ,EAAE,UAAU;IAEpB;;;;OAIG,CACH,SAAS,EAAE,WAAW;IAEtB;;OAEG,CACH,UAAU,EAAE,YAAY;IAExB;;OAEG,CACH,mBAAmB,EAAE,qBAAqB;CAC3C,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26538, "column": 0}, "map": {"version":3,"file":"undici.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-undici/src/undici.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as diagch from 'diagnostics_channel';\nimport { URL } from 'url';\n\nimport {\n  InstrumentationBase,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  Attributes,\n  context,\n  Histogram,\n  HrTime,\n  INVALID_SPAN_CONTEXT,\n  propagation,\n  Span,\n  SpanKind,\n  SpanStatusCode,\n  trace,\n  ValueType,\n} from '@opentelemetry/api';\n\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nimport {\n  ListenerRecord,\n  RequestHeadersMessage,\n  RequestMessage,\n  RequestTrailersMessage,\n  ResponseHeadersMessage,\n} from './internal-types';\nimport { UndiciInstrumentationConfig, UndiciRequest } from './types';\nimport { SemanticAttributes } from './enums/SemanticAttributes';\nimport {\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMilliseconds,\n} from '@opentelemetry/core';\n\ninterface InstrumentationRecord {\n  span: Span;\n  attributes: Attributes;\n  startTime: HrTime;\n}\n\n// A combination of https://github.com/elastic/apm-agent-nodejs and\n// https://github.com/gadget-inc/opentelemetry-instrumentations/blob/main/packages/opentelemetry-instrumentation-undici/src/index.ts\nexport class UndiciInstrumentation extends InstrumentationBase<UndiciInstrumentationConfig> {\n  // Keep ref to avoid https://github.com/nodejs/node/issues/42170 bug and for\n  // unsubscribing.\n  private _channelSubs!: Array<ListenerRecord>;\n  private _recordFromReq = new WeakMap<UndiciRequest, InstrumentationRecord>();\n\n  private _httpClientDurationHistogram!: Histogram;\n  constructor(config: UndiciInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  // No need to instrument files/modules\n  protected override init() {\n    return undefined;\n  }\n\n  override disable(): void {\n    super.disable();\n    this._channelSubs.forEach(sub => sub.channel.unsubscribe(sub.onMessage));\n    this._channelSubs.length = 0;\n  }\n\n  override enable(): void {\n    // \"enabled\" handling is currently a bit messy with InstrumentationBase.\n    // If constructed with `{enabled: false}`, this `.enable()` is still called,\n    // and `this.getConfig().enabled !== this.isEnabled()`, creating confusion.\n    //\n    // For now, this class will setup for instrumenting if `.enable()` is\n    // called, but use `this.getConfig().enabled` to determine if\n    // instrumentation should be generated. This covers the more likely common\n    // case of config being given a construction time, rather than later via\n    // `instance.enable()`, `.disable()`, or `.setConfig()` calls.\n    super.enable();\n\n    // This method is called by the super-class constructor before ours is\n    // called. So we need to ensure the property is initalized.\n    this._channelSubs = this._channelSubs || [];\n\n    // Avoid to duplicate subscriptions\n    if (this._channelSubs.length > 0) {\n      return;\n    }\n\n    this.subscribeToChannel(\n      'undici:request:create',\n      this.onRequestCreated.bind(this)\n    );\n    this.subscribeToChannel(\n      'undici:client:sendHeaders',\n      this.onRequestHeaders.bind(this)\n    );\n    this.subscribeToChannel(\n      'undici:request:headers',\n      this.onResponseHeaders.bind(this)\n    );\n    this.subscribeToChannel('undici:request:trailers', this.onDone.bind(this));\n    this.subscribeToChannel('undici:request:error', this.onError.bind(this));\n  }\n\n  protected override _updateMetricInstruments() {\n    this._httpClientDurationHistogram = this.meter.createHistogram(\n      'http.client.request.duration',\n      {\n        description: 'Measures the duration of outbound HTTP requests.',\n        unit: 's',\n        valueType: ValueType.DOUBLE,\n        advice: {\n          explicitBucketBoundaries: [\n            0.005, 0.01, 0.025, 0.05, 0.075, 0.1, 0.25, 0.5, 0.75, 1, 2.5, 5,\n            7.5, 10,\n          ],\n        },\n      }\n    );\n  }\n\n  private subscribeToChannel(\n    diagnosticChannel: string,\n    onMessage: ListenerRecord['onMessage']\n  ) {\n    const channel = diagch.channel(diagnosticChannel);\n    channel.subscribe(onMessage);\n    this._channelSubs.push({\n      name: diagnosticChannel,\n      channel,\n      onMessage,\n    });\n  }\n\n  // This is the 1st message we receive for each request (fired after request creation). Here we will\n  // create the span and populate some atttributes, then link the span to the request for further\n  // span processing\n  private onRequestCreated({ request }: RequestMessage): void {\n    // Ignore if:\n    // - instrumentation is disabled\n    // - ignored by config\n    // - method is 'CONNECT'\n    const config = this.getConfig();\n    const enabled = config.enabled !== false;\n    const shouldIgnoreReq = safeExecuteInTheMiddle(\n      () =>\n        !enabled ||\n        request.method === 'CONNECT' ||\n        config.ignoreRequestHook?.(request),\n      e => e && this._diag.error('caught ignoreRequestHook error: ', e),\n      true\n    );\n\n    if (shouldIgnoreReq) {\n      return;\n    }\n\n    const startTime = hrTime();\n    const requestUrl = new URL(request.origin + request.path);\n    const urlScheme = requestUrl.protocol.replace(':', '');\n    const requestMethod = this.getRequestMethod(request.method);\n    const attributes: Attributes = {\n      [SemanticAttributes.HTTP_REQUEST_METHOD]: requestMethod,\n      [SemanticAttributes.HTTP_REQUEST_METHOD_ORIGINAL]: request.method,\n      [SemanticAttributes.URL_FULL]: requestUrl.toString(),\n      [SemanticAttributes.URL_PATH]: requestUrl.pathname,\n      [SemanticAttributes.URL_QUERY]: requestUrl.search,\n      [SemanticAttributes.URL_SCHEME]: urlScheme,\n    };\n\n    const schemePorts: Record<string, string> = { https: '443', http: '80' };\n    const serverAddress = requestUrl.hostname;\n    const serverPort = requestUrl.port || schemePorts[urlScheme];\n\n    attributes[SemanticAttributes.SERVER_ADDRESS] = serverAddress;\n    if (serverPort && !isNaN(Number(serverPort))) {\n      attributes[SemanticAttributes.SERVER_PORT] = Number(serverPort);\n    }\n\n    // Get user agent from headers\n    let userAgent;\n    if (Array.isArray(request.headers)) {\n      const idx = request.headers.findIndex(\n        h => h.toLowerCase() === 'user-agent'\n      );\n      if (idx >= 0) {\n        userAgent = request.headers[idx + 1];\n      }\n    } else if (typeof request.headers === 'string') {\n      const headers = request.headers.split('\\r\\n');\n      const uaHeader = headers.find(h =>\n        h.toLowerCase().startsWith('user-agent')\n      );\n      userAgent =\n        uaHeader && uaHeader.substring(uaHeader.indexOf(':') + 1).trim();\n    }\n\n    if (userAgent) {\n      attributes[SemanticAttributes.USER_AGENT_ORIGINAL] = userAgent;\n    }\n\n    // Get attributes from the hook if present\n    const hookAttributes = safeExecuteInTheMiddle(\n      () => config.startSpanHook?.(request),\n      e => e && this._diag.error('caught startSpanHook error: ', e),\n      true\n    );\n    if (hookAttributes) {\n      Object.entries(hookAttributes).forEach(([key, val]) => {\n        attributes[key] = val;\n      });\n    }\n\n    // Check if parent span is required via config and:\n    // - if a parent is required but not present, we use a `NoopSpan` to still\n    //   propagate context without recording it.\n    // - create a span otherwise\n    const activeCtx = context.active();\n    const currentSpan = trace.getSpan(activeCtx);\n    let span: Span;\n\n    if (\n      config.requireParentforSpans &&\n      (!currentSpan || !trace.isSpanContextValid(currentSpan.spanContext()))\n    ) {\n      span = trace.wrapSpanContext(INVALID_SPAN_CONTEXT);\n    } else {\n      span = this.tracer.startSpan(\n        requestMethod === '_OTHER' ? 'HTTP' : requestMethod,\n        {\n          kind: SpanKind.CLIENT,\n          attributes: attributes,\n        },\n        activeCtx\n      );\n    }\n\n    // Execute the request hook if defined\n    safeExecuteInTheMiddle(\n      () => config.requestHook?.(span, request),\n      e => e && this._diag.error('caught requestHook error: ', e),\n      true\n    );\n\n    // Context propagation goes last so no hook can tamper\n    // the propagation headers\n    const requestContext = trace.setSpan(context.active(), span);\n    const addedHeaders: Record<string, string> = {};\n    propagation.inject(requestContext, addedHeaders);\n\n    const headerEntries = Object.entries(addedHeaders);\n\n    for (let i = 0; i < headerEntries.length; i++) {\n      const [k, v] = headerEntries[i];\n\n      if (typeof request.addHeader === 'function') {\n        request.addHeader(k, v);\n      } else if (typeof request.headers === 'string') {\n        request.headers += `${k}: ${v}\\r\\n`;\n      } else if (Array.isArray(request.headers)) {\n        // undici@6.11.0 accidentally, briefly removed `request.addHeader()`.\n        request.headers.push(k, v);\n      }\n    }\n    this._recordFromReq.set(request, { span, attributes, startTime });\n  }\n\n  // This is the 2nd message we receive for each request. It is fired when connection with\n  // the remote is established and about to send the first byte. Here we do have info about the\n  // remote address and port so we can populate some `network.*` attributes into the span\n  private onRequestHeaders({ request, socket }: RequestHeadersMessage): void {\n    const record = this._recordFromReq.get(request as UndiciRequest);\n\n    if (!record) {\n      return;\n    }\n\n    const config = this.getConfig();\n    const { span } = record;\n    const { remoteAddress, remotePort } = socket;\n    const spanAttributes: Attributes = {\n      [SemanticAttributes.NETWORK_PEER_ADDRESS]: remoteAddress,\n      [SemanticAttributes.NETWORK_PEER_PORT]: remotePort,\n    };\n\n    // After hooks have been processed (which may modify request headers)\n    // we can collect the headers based on the configuration\n    if (config.headersToSpanAttributes?.requestHeaders) {\n      const headersToAttribs = new Set(\n        config.headersToSpanAttributes.requestHeaders.map(n => n.toLowerCase())\n      );\n\n      // headers could be in form\n      // ['name: value', ...] for v5\n      // ['name', 'value', ...] for v6\n      const rawHeaders = Array.isArray(request.headers)\n        ? request.headers\n        : request.headers.split('\\r\\n');\n      rawHeaders.forEach((h, idx) => {\n        const sepIndex = h.indexOf(':');\n        const hasSeparator = sepIndex !== -1;\n        const name = (\n          hasSeparator ? h.substring(0, sepIndex) : h\n        ).toLowerCase();\n        const value = hasSeparator\n          ? h.substring(sepIndex + 1)\n          : rawHeaders[idx + 1];\n\n        if (headersToAttribs.has(name)) {\n          spanAttributes[`http.request.header.${name}`] = value.trim();\n        }\n      });\n    }\n\n    span.setAttributes(spanAttributes);\n  }\n\n  // This is the 3rd message we get for each request and it's fired when the server\n  // headers are received, body may not be accessible yet.\n  // From the response headers we can set the status and content length\n  private onResponseHeaders({\n    request,\n    response,\n  }: ResponseHeadersMessage): void {\n    const record = this._recordFromReq.get(request);\n\n    if (!record) {\n      return;\n    }\n\n    const { span, attributes } = record;\n    const spanAttributes: Attributes = {\n      [SemanticAttributes.HTTP_RESPONSE_STATUS_CODE]: response.statusCode,\n    };\n\n    const config = this.getConfig();\n\n    // Execute the response hook if defined\n    safeExecuteInTheMiddle(\n      () => config.responseHook?.(span, { request, response }),\n      e => e && this._diag.error('caught responseHook error: ', e),\n      true\n    );\n\n    const headersToAttribs = new Set();\n\n    if (config.headersToSpanAttributes?.responseHeaders) {\n      config.headersToSpanAttributes?.responseHeaders.forEach(name =>\n        headersToAttribs.add(name.toLowerCase())\n      );\n    }\n\n    for (let idx = 0; idx < response.headers.length; idx = idx + 2) {\n      const name = response.headers[idx].toString().toLowerCase();\n      const value = response.headers[idx + 1];\n\n      if (headersToAttribs.has(name)) {\n        spanAttributes[`http.response.header.${name}`] = value.toString();\n      }\n\n      if (name === 'content-length') {\n        const contentLength = Number(value.toString());\n        if (!isNaN(contentLength)) {\n          spanAttributes['http.response.header.content-length'] = contentLength;\n        }\n      }\n    }\n\n    span.setAttributes(spanAttributes);\n    span.setStatus({\n      code:\n        response.statusCode >= 400\n          ? SpanStatusCode.ERROR\n          : SpanStatusCode.UNSET,\n    });\n    record.attributes = Object.assign(attributes, spanAttributes);\n  }\n\n  // This is the last event we receive if the request went without any errors\n  private onDone({ request }: RequestTrailersMessage): void {\n    const record = this._recordFromReq.get(request);\n\n    if (!record) {\n      return;\n    }\n\n    const { span, attributes, startTime } = record;\n\n    // End the span\n    span.end();\n    this._recordFromReq.delete(request);\n\n    // Record metrics\n    this.recordRequestDuration(attributes, startTime);\n  }\n\n  // This is the event we get when something is wrong in the request like\n  // - invalid options when calling `fetch` global API or any undici method for request\n  // - connectivity errors such as unreachable host\n  // - requests aborted through an `AbortController.signal`\n  // NOTE: server errors are considered valid responses and it's the lib consumer\n  // who should deal with that.\n  private onError({ request, error }: any): void {\n    const record = this._recordFromReq.get(request);\n\n    if (!record) {\n      return;\n    }\n\n    const { span, attributes, startTime } = record;\n\n    // NOTE: in `undici@6.3.0` when request aborted the error type changes from\n    // a custom error (`RequestAbortedError`) to a built-in `DOMException` carrying\n    // some differences:\n    // - `code` is from DOMEXception (ABORT_ERR: 20)\n    // - `message` changes\n    // - stacktrace is smaller and contains node internal frames\n    span.recordException(error);\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message: error.message,\n    });\n    span.end();\n    this._recordFromReq.delete(request);\n\n    // Record metrics (with the error)\n    attributes[SemanticAttributes.ERROR_TYPE] = error.message;\n    this.recordRequestDuration(attributes, startTime);\n  }\n\n  private recordRequestDuration(attributes: Attributes, startTime: HrTime) {\n    // Time to record metrics\n    const metricsAttributes: Attributes = {};\n    // Get the attribs already in span attributes\n    const keysToCopy = [\n      SemanticAttributes.HTTP_RESPONSE_STATUS_CODE,\n      SemanticAttributes.HTTP_REQUEST_METHOD,\n      SemanticAttributes.SERVER_ADDRESS,\n      SemanticAttributes.SERVER_PORT,\n      SemanticAttributes.URL_SCHEME,\n      SemanticAttributes.ERROR_TYPE,\n    ];\n    keysToCopy.forEach(key => {\n      if (key in attributes) {\n        metricsAttributes[key] = attributes[key];\n      }\n    });\n\n    // Take the duration and record it\n    const durationSeconds =\n      hrTimeToMilliseconds(hrTimeDuration(startTime, hrTime())) / 1000;\n    this._httpClientDurationHistogram.record(\n      durationSeconds,\n      metricsAttributes\n    );\n  }\n\n  private getRequestMethod(original: string): string {\n    const knownMethods = {\n      CONNECT: true,\n      OPTIONS: true,\n      HEAD: true,\n      GET: true,\n      POST: true,\n      PUT: true,\n      PATCH: true,\n      DELETE: true,\n      TRACE: true,\n    };\n\n    if (original.toUpperCase() in knownMethods) {\n      return original.toUpperCase();\n    }\n\n    return '_OTHER';\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26913, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-undici/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport type { Attributes, Span } from '@opentelemetry/api';\n\nexport interface UndiciRequest {\n  origin: string;\n  method: string;\n  path: string;\n  /**\n   * Serialized string of headers in the form `name: value\\r\\n` for v5\n   * Array of strings v6\n   */\n  headers: string | string[];\n  /**\n   * Helper method to add headers (from v6)\n   */\n  addHeader: (name: string, value: string) => void;\n  throwOnError: boolean;\n  completed: boolean;\n  aborted: boolean;\n  idempotent: boolean;\n  contentLength: number | null;\n  contentType: string | null;\n  body: any;\n}\n\nexport interface UndiciResponse {\n  headers: Buffer[];\n  statusCode: number;\n  statusText: string;\n}\n\nexport interface IgnoreRequestFunction<T = UndiciRequest> {\n  (request: T): boolean;\n}\n\nexport interface RequestHookFunction<T = UndiciRequest> {\n  (span: Span, request: T): void;\n}\n\nexport interface ResponseHookFunction<\n  RequestType = UndiciResponse,\n  ResponseType = UndiciResponse\n> {\n  (span: Span, info: { request: RequestType; response: ResponseType }): void;\n}\n\nexport interface StartSpanHookFunction<T = UndiciRequest> {\n  (request: T): Attributes;\n}\n\n// This package will instrument HTTP requests made through `undici` or  `fetch` global API\n// so it seems logical to have similar options than the HTTP instrumentation\nexport interface UndiciInstrumentationConfig<\n  RequestType = UndiciRequest,\n  ResponseType = UndiciResponse\n> extends InstrumentationConfig {\n  /** Not trace all outgoing requests that matched with custom function */\n  ignoreRequestHook?: IgnoreRequestFunction<RequestType>;\n  /** Function for adding custom attributes before request is handled */\n  requestHook?: RequestHookFunction<RequestType>;\n  /** Function called once response headers have been received */\n  responseHook?: ResponseHookFunction<RequestType, ResponseType>;\n  /** Function for adding custom attributes before a span is started */\n  startSpanHook?: StartSpanHookFunction<RequestType>;\n  /** Require parent to create span for outgoing requests */\n  requireParentforSpans?: boolean;\n  /** Map the following HTTP headers to span attributes. */\n  headersToSpanAttributes?: {\n    requestHeaders?: string[];\n    responseHeaders?: string[];\n  };\n}\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26922, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-undici/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './undici';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,mJAAA,SAAyB;AACzB,kJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26962, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-winston/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.39.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-winston';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,4DAA4D;AAC/C,QAAA,eAAe,GAAG,QAAQ,CAAC;AAC3B,QAAA,YAAY,GAAG,wCAAwC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 26989, "column": 0}, "map": {"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-winston/src/instrumentation.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, trace, isSpanContextValid, Span } from '@opentelemetry/api';\nimport { SeverityNumber } from '@opentelemetry/api-logs';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport type { WinstonInstrumentationConfig } from './types';\nimport type {\n  Winston2LoggerModule,\n  Winston2LogMethod,\n  Winston3ConfigureMethod,\n  Winston3LogMethod,\n  Winston3Logger,\n} from './internal-types';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nconst winston3Versions = ['>=3 <4'];\nconst winstonPre3Versions = ['>=1 <3'];\n\nexport class WinstonInstrumentation extends InstrumentationBase {\n  constructor(config: WinstonInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  protected init() {\n    const winstons3instrumentationNodeModuleDefinition =\n      new InstrumentationNodeModuleDefinition(\n        'winston',\n        winston3Versions,\n        moduleExports => moduleExports,\n        () => {},\n        [\n          new InstrumentationNodeModuleFile(\n            'winston/lib/winston/logger.js',\n            winston3Versions,\n            (logger: Winston3Logger) => {\n              if (isWrapped(logger.prototype['write'])) {\n                this._unwrap(logger.prototype, 'write');\n              }\n              this._wrap(logger.prototype, 'write', this._getPatchedWrite());\n\n              // Wrap configure\n              if (isWrapped(logger.prototype['configure'])) {\n                this._unwrap(logger.prototype, 'configure');\n              }\n              this._wrap(\n                logger.prototype,\n                'configure',\n                this._getPatchedConfigure()\n              );\n\n              return logger;\n            },\n            (logger: Winston3Logger) => {\n              if (logger === undefined) return;\n              this._unwrap(logger.prototype, 'write');\n              this._unwrap(logger.prototype, 'configure');\n            }\n          ),\n        ]\n      );\n\n    const winstons2instrumentationNodeModuleDefinition =\n      new InstrumentationNodeModuleDefinition(\n        'winston',\n        winstonPre3Versions,\n        moduleExports => moduleExports,\n        () => {},\n        [\n          new InstrumentationNodeModuleFile(\n            'winston/lib/winston/logger.js',\n            winstonPre3Versions,\n            (fileExports: Winston2LoggerModule) => {\n              const proto = fileExports.Logger.prototype;\n\n              if (isWrapped(proto.log)) {\n                this._unwrap(proto, 'log');\n              }\n              this._wrap(proto, 'log', this._getPatchedLog());\n\n              return fileExports;\n            },\n            (fileExports: Winston2LoggerModule) => {\n              if (fileExports === undefined) return;\n              this._unwrap(fileExports.Logger.prototype, 'log');\n            }\n          ),\n        ]\n      );\n    return [\n      winstons3instrumentationNodeModuleDefinition,\n      winstons2instrumentationNodeModuleDefinition,\n    ];\n  }\n\n  override getConfig(): WinstonInstrumentationConfig {\n    return this._config;\n  }\n\n  override setConfig(config: WinstonInstrumentationConfig = {}) {\n    this._config = config;\n  }\n\n  private _callHook(span: Span, record: Record<string, string>) {\n    const hook = this.getConfig().logHook;\n\n    if (!hook) {\n      return;\n    }\n\n    safeExecuteInTheMiddle(\n      () => hook(span, record),\n      err => {\n        if (err) {\n          this._diag.error('error calling logHook', err);\n        }\n      },\n      true\n    );\n  }\n\n  private _getPatchedWrite() {\n    return (original: Winston3LogMethod) => {\n      const instrumentation = this;\n      return function patchedWrite(\n        this: never,\n        ...args: Parameters<typeof original>\n      ) {\n        const record = args[0];\n        instrumentation._handleLogCorrelation(record);\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  private _getPatchedLog() {\n    return (original: Winston2LogMethod) => {\n      const instrumentation = this;\n      return function patchedLog(\n        this: never,\n        ...args: Parameters<typeof original>\n      ) {\n        const record: Record<string, any> = {};\n        instrumentation._handleLogCorrelation(record);\n        // Inject in metadata argument\n        let isDataInjected = false;\n        for (let i = args.length - 1; i >= 0; i--) {\n          if (typeof args[i] === 'object') {\n            args[i] = Object.assign(args[i], record);\n            isDataInjected = true;\n            break;\n          }\n        }\n        if (!isDataInjected) {\n          const insertAt =\n            typeof args[args.length - 1] === 'function'\n              ? args.length - 1\n              : args.length;\n\n          args.splice(insertAt, 0, record);\n        }\n\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  private _getPatchedConfigure() {\n    return (original: Winston3ConfigureMethod) => {\n      const instrumentation = this;\n      return function patchedConfigure(\n        this: never,\n        ...args: Parameters<typeof original>\n      ) {\n        const config = instrumentation.getConfig();\n        if (!config.disableLogSending) {\n          if (args && args.length > 0) {\n            // Try to load Winston transport\n            try {\n              const {\n                OpenTelemetryTransportV3,\n              } = require('@opentelemetry/winston-transport');\n              const originalTransports = args[0].transports;\n              let newTransports = Array.isArray(originalTransports)\n                ? originalTransports\n                : [];\n              let transportOptions = {};\n              if (config.logSeverity) {\n                const winstonLevel = instrumentation._winstonLevelFromSeverity(\n                  config.logSeverity,\n                  args[0].levels\n                );\n                transportOptions = { level: winstonLevel };\n              }\n              const openTelemetryTransport = new OpenTelemetryTransportV3(\n                transportOptions\n              );\n              if (originalTransports && !Array.isArray(originalTransports)) {\n                newTransports = [originalTransports];\n              }\n              newTransports.push(openTelemetryTransport);\n              args[0].transports = newTransports;\n            } catch (err) {\n              instrumentation._diag.warn(\n                '@opentelemetry/winston-transport is not available, log records will not be automatically sent.'\n              );\n            }\n          }\n        }\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  private _handleLogCorrelation(record: Record<string, string>) {\n    if (!this.getConfig().disableLogCorrelation) {\n      const span = trace.getSpan(context.active());\n      if (span) {\n        const spanContext = span.spanContext();\n        if (isSpanContextValid(spanContext)) {\n          const fields = {\n            trace_id: spanContext.traceId,\n            span_id: spanContext.spanId,\n            trace_flags: `0${spanContext.traceFlags.toString(16)}`,\n          };\n          const enhancedRecord = Object.assign(record, fields);\n          this._callHook(span, enhancedRecord);\n          return enhancedRecord;\n        }\n      }\n    }\n    return record;\n  }\n\n  private _winstonLevelFromSeverity(\n    severity: SeverityNumber,\n    winstonLevels: { [key: string]: number } | undefined\n  ): string | undefined {\n    if (winstonLevels) {\n      if (isNpmLevels(winstonLevels)) {\n        if (severity >= SeverityNumber.ERROR) {\n          return 'error';\n        } else if (severity >= SeverityNumber.WARN) {\n          return 'warn';\n        } else if (severity >= SeverityNumber.INFO) {\n          return 'info';\n        } else if (severity >= SeverityNumber.DEBUG3) {\n          return 'http';\n        } else if (severity >= SeverityNumber.DEBUG2) {\n          return 'verbose';\n        } else if (severity >= SeverityNumber.DEBUG) {\n          return 'debug';\n        } else if (severity >= SeverityNumber.TRACE) {\n          return 'silly';\n        }\n      } else if (isCliLevels(winstonLevels)) {\n        if (severity >= SeverityNumber.ERROR) {\n          return 'error';\n        } else if (severity >= SeverityNumber.WARN) {\n          return 'warn';\n        } else if (severity >= SeverityNumber.INFO3) {\n          return 'help';\n        } else if (severity >= SeverityNumber.INFO2) {\n          return 'data';\n        } else if (severity >= SeverityNumber.INFO) {\n          return 'info';\n        } else if (severity >= SeverityNumber.DEBUG) {\n          return 'debug';\n        } else if (severity >= SeverityNumber.TRACE4) {\n          return 'prompt';\n        } else if (severity >= SeverityNumber.TRACE3) {\n          return 'verbose';\n        } else if (severity >= SeverityNumber.TRACE2) {\n          return 'input';\n        } else if (severity >= SeverityNumber.TRACE) {\n          return 'silly';\n        }\n      } else if (isSyslogLevels(winstonLevels)) {\n        if (severity >= SeverityNumber.FATAL2) {\n          return 'emerg';\n        } else if (severity >= SeverityNumber.FATAL) {\n          return 'alert';\n        } else if (severity >= SeverityNumber.ERROR2) {\n          return 'crit';\n        } else if (severity >= SeverityNumber.ERROR) {\n          return 'error';\n        } else if (severity >= SeverityNumber.WARN) {\n          return 'warning';\n        } else if (severity >= SeverityNumber.INFO2) {\n          return 'notice';\n        } else if (severity >= SeverityNumber.INFO) {\n          return 'info';\n        } else if (severity >= SeverityNumber.TRACE) {\n          return 'debug';\n        }\n      }\n      // Unknown level\n      this._diag.warn(\n        'failed to configure severity with existing winston levels'\n      );\n    }\n\n    function isCliLevels(arg: any): boolean {\n      return (\n        arg &&\n        arg.error !== undefined &&\n        arg.warn &&\n        arg.help &&\n        arg.data &&\n        arg.info &&\n        arg.debug &&\n        arg.prompt &&\n        arg.verbose &&\n        arg.input &&\n        arg.silly\n      );\n    }\n\n    function isNpmLevels(arg: any): boolean {\n      return (\n        arg &&\n        arg.error !== undefined &&\n        arg.warn &&\n        arg.info &&\n        arg.http &&\n        arg.verbose &&\n        arg.debug &&\n        arg.silly\n      );\n    }\n\n    function isSyslogLevels(arg: any): boolean {\n      return (\n        arg &&\n        arg.emerg !== undefined &&\n        arg.alert &&\n        arg.crit &&\n        arg.error &&\n        arg.warning &&\n        arg.notice &&\n        arg.info &&\n        arg.debug\n      );\n    }\n\n    return;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27248, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-winston/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span } from '@opentelemetry/api';\nimport { SeverityNumber } from '@opentelemetry/api-logs';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type LogHookFunction = (span: Span, record: Record<string, any>) => void;\n\nexport interface WinstonInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * Whether to disable the automatic sending of log records to the\n   * OpenTelemetry Logs SDK.\n   * @default false\n   */\n  disableLogSending?: boolean;\n\n  /**\n   * Control Log sending severity level, logs will be sent for  specified severity and higher.\n   */\n  logSeverity?: SeverityNumber;\n\n  /**\n   * Whether to disable the injection trace-context fields, and possibly other\n   * fields from `logHook()`, into log records for log correlation.\n   * @default false\n   */\n  disableLogCorrelation?: boolean;\n\n  /**\n   * A function that allows injecting additional fields in log records. It is\n   * called, as `logHook(span, record)`, for each log record emitted in a valid\n   * span context. It requires `disableLogCorrelation` to be false.\n   */\n  logHook?: LogHookFunction;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27271, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/instrumentation-winston/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,6JAAA,SAAkC;AAClC,mJAAA,SAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27311, "column": 0}, "map": {"version":3,"file":"AlibabaCloudEcsDetector.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-alibaba-cloud/src/detectors/AlibabaCloudEcsDetector.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport {\n  DetectorSync,\n  IResource,\n  Resource,\n  ResourceAttributes,\n  ResourceDetectionConfig,\n} from '@opentelemetry/resources';\nimport {\n  CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,\n  CLOUDPROVIDERVALUES_ALIBABA_CLOUD,\n  SEMRESATTRS_CLOUD_ACCOUNT_ID,\n  SEMRESATTRS_CLOUD_AVAILABILITY_ZONE,\n  SEMRESATTRS_CLOUD_PLATFORM,\n  SEMRESATTRS_CLOUD_PROVIDER,\n  SEMRESATTRS_CLOUD_REGION,\n  SEMRESATTRS_HOST_ID,\n  SEMRESATTRS_HOST_NAME,\n  SEMRESATTRS_HOST_TYPE,\n} from '@opentelemetry/semantic-conventions';\n\nimport * as http from 'http';\n\n/**\n * The AlibabaCloudEcsDetector can be used to detect if a process is running in\n * AlibabaCloud ECS and return a {@link Resource} populated with metadata about\n * the ECS instance. Returns an empty Resource if detection fails.\n */\nclass AlibabaCloudEcsDetector implements DetectorSync {\n  /**\n   * See https://www.alibabacloud.com/help/doc-detail/67254.htm for\n   * documentation about the AlibabaCloud instance identity document.\n   */\n  readonly ALIBABA_CLOUD_IDMS_ENDPOINT = '100.100.100.200';\n  readonly ALIBABA_CLOUD_INSTANCE_IDENTITY_DOCUMENT_PATH =\n    '/latest/dynamic/instance-identity/document';\n  readonly ALIBABA_CLOUD_INSTANCE_HOST_DOCUMENT_PATH =\n    '/latest/meta-data/hostname';\n  readonly MILLISECONDS_TIME_OUT = 1000;\n\n  /**\n   * Attempts to connect and obtain an AlibabaCloud instance Identity document.\n   * If the connection is successful it returns a promise containing a\n   * {@link Resource} populated with instance metadata.\n   *\n   * @param config (unused) The resource detection config\n   */\n  detect(_config?: ResourceDetectionConfig): IResource {\n    const attributes = context.with(suppressTracing(context.active()), () =>\n      this._getAttributes()\n    );\n    return new Resource({}, attributes);\n  }\n\n  /** Gets identity and host info and returns them as attribs. Empty object if fails */\n  async _getAttributes(\n    _config?: ResourceDetectionConfig\n  ): Promise<ResourceAttributes> {\n    const {\n      'owner-account-id': accountId,\n      'instance-id': instanceId,\n      'instance-type': instanceType,\n      'region-id': region,\n      'zone-id': availabilityZone,\n    } = await this._fetchIdentity();\n    const hostname = await this._fetchHost();\n\n    return {\n      [SEMRESATTRS_CLOUD_PROVIDER]: CLOUDPROVIDERVALUES_ALIBABA_CLOUD,\n      [SEMRESATTRS_CLOUD_PLATFORM]: CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,\n      [SEMRESATTRS_CLOUD_ACCOUNT_ID]: accountId,\n      [SEMRESATTRS_CLOUD_REGION]: region,\n      [SEMRESATTRS_CLOUD_AVAILABILITY_ZONE]: availabilityZone,\n      [SEMRESATTRS_HOST_ID]: instanceId,\n      [SEMRESATTRS_HOST_TYPE]: instanceType,\n      [SEMRESATTRS_HOST_NAME]: hostname,\n    };\n  }\n\n  /**\n   * Fetch AlibabaCloud instance document url with http requests. If the\n   * application is running on an ECS instance, we should be able to get back a\n   * valid JSON document. Parses that document and stores the identity\n   * properties in a local map.\n   */\n  private async _fetchIdentity(): Promise<any> {\n    const options = {\n      host: this.ALIBABA_CLOUD_IDMS_ENDPOINT,\n      path: this.ALIBABA_CLOUD_INSTANCE_IDENTITY_DOCUMENT_PATH,\n      method: 'GET',\n      timeout: this.MILLISECONDS_TIME_OUT,\n    };\n    const identity = await this._fetchString(options);\n    return JSON.parse(identity);\n  }\n\n  private async _fetchHost(): Promise<string> {\n    const options = {\n      host: this.ALIBABA_CLOUD_IDMS_ENDPOINT,\n      path: this.ALIBABA_CLOUD_INSTANCE_HOST_DOCUMENT_PATH,\n      method: 'GET',\n      timeout: this.MILLISECONDS_TIME_OUT,\n    };\n    return await this._fetchString(options);\n  }\n\n  private async _fetchString(options: http.RequestOptions): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        req.destroy(new Error('ECS metadata api request timed out.'));\n      }, this.MILLISECONDS_TIME_OUT);\n\n      const req = http.request(options, res => {\n        clearTimeout(timeoutId);\n        const { statusCode } = res;\n        if (\n          typeof statusCode !== 'number' ||\n          !(statusCode >= 200 && statusCode < 300)\n        ) {\n          res.destroy();\n          return reject(\n            new Error(`Failed to load page, status code: ${statusCode}`)\n          );\n        }\n\n        res.setEncoding('utf8');\n        let rawData = '';\n        res.on('data', chunk => (rawData += chunk));\n        res.on('error', err => {\n          reject(err);\n        });\n        res.on('end', () => {\n          resolve(rawData);\n        });\n      });\n      req.on('error', err => {\n        clearTimeout(timeoutId);\n        reject(err);\n      });\n      req.end();\n    });\n  }\n}\n\nexport const alibabaCloudEcsDetector = new AlibabaCloudEcsDetector();\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27433, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-alibaba-cloud/src/detectors/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { alibabaCloudEcsDetector } from './AlibabaCloudEcsDetector';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,iEAAoE;AAA3D,OAAA,cAAA,CAAA,SAAA,2BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,0BAAA,uBAAuB;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27464, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-alibaba-cloud/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { alibabaCloudEcsDetector } from './detectors';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,qCAAsD;AAA7C,OAAA,cAAA,CAAA,SAAA,2BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,uBAAuB;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27495, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-container/src/detectors/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const CONTAINER_ID_LENGTH = 64;\nexport const DEFAULT_CGROUP_V1_PATH = '/proc/self/cgroup';\nexport const DEFAULT_CGROUP_V2_PATH = '/proc/self/mountinfo';\nexport const UTF8_UNICODE = 'utf8';\nexport const HOSTNAME = 'hostname';\nexport const MARKING_PREFIX = ['containers', 'overlay-containers'];\nexport const CRIO = 'crio-';\nexport const CRI_CONTAINERD = 'cri-containerd-';\nexport const DOCKER = 'docker-';\nexport const HEX_STRING_REGEX = /^[a-f0-9]+$/i;\n\nexport function truncatePrefix(lastSection: string, prefix: string): string {\n  return lastSection.substring(prefix.length);\n}\n\nexport function extractContainerIdFromLine(line: string): string | undefined {\n  if (!line) {\n    return undefined;\n  }\n  const sections = line.split('/');\n  if (sections.length <= 1) {\n    return undefined;\n  }\n  let lastSection = sections[sections.length - 1];\n\n  // Handle containerd v1.5.0+ format with systemd cgroup driver\n  const colonIndex = lastSection.lastIndexOf(':');\n  if (colonIndex !== -1) {\n    lastSection = lastSection.substring(colonIndex + 1);\n  }\n\n  // Truncate known prefixes from the last section\n  if (lastSection.startsWith(CRIO)) {\n    lastSection = truncatePrefix(lastSection, CRIO);\n  } else if (lastSection.startsWith(DOCKER)) {\n    lastSection = truncatePrefix(lastSection, DOCKER);\n  } else if (lastSection.startsWith(CRI_CONTAINERD)) {\n    lastSection = truncatePrefix(lastSection, CRI_CONTAINERD);\n  }\n  // Remove anything after the first period\n  if (lastSection.includes('.')) {\n    lastSection = lastSection.split('.')[0];\n  }\n  // Check if the remaining string is a valid hex string\n  if (HEX_STRING_REGEX.test(lastSection)) {\n    return lastSection;\n  }\n  return undefined;\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACU,QAAA,mBAAmB,GAAG,EAAE,CAAC;AACzB,QAAA,sBAAsB,GAAG,mBAAmB,CAAC;AAC7C,QAAA,sBAAsB,GAAG,sBAAsB,CAAC;AAChD,QAAA,YAAY,GAAG,MAAM,CAAC;AACtB,QAAA,QAAQ,GAAG,UAAU,CAAC;AACtB,QAAA,cAAc,GAAG;IAAC,YAAY;IAAE,oBAAoB;CAAC,CAAC;AACtD,QAAA,IAAI,GAAG,OAAO,CAAC;AACf,QAAA,cAAc,GAAG,iBAAiB,CAAC;AACnC,QAAA,MAAM,GAAG,SAAS,CAAC;AACnB,QAAA,gBAAgB,GAAG,cAAc,CAAC;AAE/C,SAAgB,cAAc,CAAC,WAAmB,EAAE,MAAc;IAChE,OAAO,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9C,CAAC;AAFD,QAAA,cAAA,GAAA,eAEC;AAED,SAAgB,0BAA0B,CAAC,IAAY;IACrD,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,SAAS,CAAC;KAClB;IACD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;QACxB,OAAO,SAAS,CAAC;KAClB;IACD,IAAI,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAEhD,8DAA8D;IAC9D,MAAM,UAAU,GAAG,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAChD,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;QACrB,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;KACrD;IAED,gDAAgD;IAChD,IAAI,WAAW,CAAC,UAAU,CAAC,QAAA,IAAI,CAAC,EAAE;QAChC,WAAW,GAAG,cAAc,CAAC,WAAW,EAAE,QAAA,IAAI,CAAC,CAAC;KACjD,MAAM,IAAI,WAAW,CAAC,UAAU,CAAC,QAAA,MAAM,CAAC,EAAE;QACzC,WAAW,GAAG,cAAc,CAAC,WAAW,EAAE,QAAA,MAAM,CAAC,CAAC;KACnD,MAAM,IAAI,WAAW,CAAC,UAAU,CAAC,QAAA,cAAc,CAAC,EAAE;QACjD,WAAW,GAAG,cAAc,CAAC,WAAW,EAAE,QAAA,cAAc,CAAC,CAAC;KAC3D;IACD,yCAAyC;IACzC,IAAI,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC7B,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACzC;IACD,sDAAsD;IACtD,IAAI,QAAA,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;QACtC,OAAO,WAAW,CAAC;KACpB;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAjCD,QAAA,0BAAA,GAAA,2BAiCC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27569, "column": 0}, "map": {"version":3,"file":"ContainerDetector.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-container/src/detectors/ContainerDetector.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  DetectorSync,\n  IResource,\n  Resource,\n  ResourceAttributes,\n  ResourceDetectionConfig,\n} from '@opentelemetry/resources';\n\nimport { SEMRESATTRS_CONTAINER_ID } from '@opentelemetry/semantic-conventions';\n\nimport * as fs from 'fs';\nimport * as util from 'util';\nimport { context, diag } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport { extractContainerIdFromLine } from './utils';\n\nexport class ContainerDetector implements DetectorSync {\n  readonly CONTAINER_ID_LENGTH = 64;\n  readonly DEFAULT_CGROUP_V1_PATH = '/proc/self/cgroup';\n  readonly DEFAULT_CGROUP_V2_PATH = '/proc/self/mountinfo';\n  readonly UTF8_UNICODE = 'utf8';\n  readonly HOSTNAME = 'hostname';\n  readonly MARKING_PREFIX = ['containers', 'overlay-containers'];\n  readonly CRIO = 'crio-';\n  readonly CRI_CONTAINERD = 'cri-containerd-';\n  readonly DOCKER = 'docker-';\n  readonly HEX_STRING_REGEX: RegExp = /^[a-f0-9]+$/i;\n\n  private static readFileAsync = util.promisify(fs.readFile);\n\n  detect(_config?: ResourceDetectionConfig): IResource {\n    const attributes = context.with(suppressTracing(context.active()), () =>\n      this._getAttributes()\n    );\n    return new Resource({}, attributes);\n  }\n\n  /**\n   * Attempts to obtain the container ID from the file system. If the\n   * file read is successful it returns a promise containing a {@link ResourceAttributes}\n   * object with the container ID. Returns a promise containing an\n   * empty {@link ResourceAttributes} if the paths do not exist or fail\n   * to read.\n   */\n  async _getAttributes(): Promise<ResourceAttributes> {\n    try {\n      const containerId = await this._getContainerId();\n      return !containerId\n        ? {}\n        : {\n            [SEMRESATTRS_CONTAINER_ID]: containerId,\n          };\n    } catch (e) {\n      diag.debug(\n        'Container Detector did not identify running inside a supported container, no container attributes will be added to resource: ',\n        e\n      );\n      return {};\n    }\n  }\n\n  private async _getContainerIdV1(): Promise<string | undefined> {\n    const rawData = await ContainerDetector.readFileAsync(\n      this.DEFAULT_CGROUP_V1_PATH,\n      this.UTF8_UNICODE\n    );\n    const splitData = rawData.trim().split('\\n');\n\n    for (const line of splitData) {\n      const containerID = extractContainerIdFromLine(line);\n      if (containerID) {\n        return containerID;\n      }\n    }\n    return undefined;\n  }\n\n  private async _getContainerIdV2() {\n    const rawData = await ContainerDetector.readFileAsync(\n      this.DEFAULT_CGROUP_V2_PATH,\n      this.UTF8_UNICODE\n    );\n    const str = rawData\n      .trim()\n      .split('\\n')\n      .find(s => s.includes(this.HOSTNAME));\n\n    if (!str) return '';\n\n    const strArray = str?.split('/') ?? [];\n    for (let i = 0; i < strArray.length - 1; i++) {\n      if (\n        this.MARKING_PREFIX.includes(strArray[i]) &&\n        strArray[i + 1]?.length === this.CONTAINER_ID_LENGTH\n      ) {\n        return strArray[i + 1];\n      }\n    }\n    return '';\n  }\n\n  /*\n    cgroupv1 path would still exist in case of container running on v2\n    but the cgroupv1 path would no longer have the container id and would\n    fallback on the cgroupv2 implementation.\n  */\n  private async _getContainerId(): Promise<string | undefined> {\n    try {\n      const containerIdV1 = await this._getContainerIdV1();\n      if (containerIdV1) {\n        return containerIdV1; // If containerIdV1 is a non-empty string, return it.\n      }\n      const containerIdV2 = await this._getContainerIdV2();\n      if (containerIdV2) {\n        return containerIdV2; // If containerIdV2 is a non-empty string, return it.\n      }\n    } catch (e) {\n      if (e instanceof Error) {\n        const errorMessage = e.message;\n        diag.debug(\n          'Container Detector failed to read the Container ID: ',\n          errorMessage\n        );\n      }\n    }\n    return undefined; // Explicitly return undefined if neither ID is found.\n  }\n}\n\nexport const containerDetector = new ContainerDetector();\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27687, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-container/src/detectors/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './ContainerDetector';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,6KAAA,SAAoC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27726, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-container/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './detectors';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,iKAAA,SAA4B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27765, "column": 0}, "map": {"version":3,"file":"GcpDetector.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-gcp/src/detectors/GcpDetector.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as gcpMetadata from 'gcp-metadata';\nimport { context, diag } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport {\n  DetectorSync,\n  ResourceDetectionConfig,\n  Resource,\n  ResourceAttributes,\n  IResource,\n} from '@opentelemetry/resources';\nimport { getEnv } from '@opentelemetry/core';\nimport {\n  CLOUDPROVIDERVALUES_GCP,\n  SEMRESATTRS_CLOUD_ACCOUNT_ID,\n  SEMRESATTRS_CLOUD_AVAILABILITY_ZONE,\n  SEMRESATTRS_CLOUD_PROVIDER,\n  SEMRESATTRS_CONTAINER_NAME,\n  SEMRESATTRS_HOST_ID,\n  SEMRESATTRS_HOST_NAME,\n  SEMRESATTRS_K8S_CLUSTER_NAME,\n  SEMRESATTRS_K8S_NAMESPACE_NAME,\n  SEMRESATTRS_K8S_POD_NAME,\n} from '@opentelemetry/semantic-conventions';\n\n/**\n * The GcpDetector can be used to detect if a process is running in the Google\n * Cloud Platform and return a {@link Resource} populated with metadata about\n * the instance. Returns an empty Resource if detection fails.\n */\nclass GcpDetector implements DetectorSync {\n  detect(_config?: ResourceDetectionConfig): IResource {\n    const attributes = context.with(suppressTracing(context.active()), () =>\n      this._getAttributes()\n    );\n    return new Resource({}, attributes);\n  }\n\n  /**\n   * Attempts to connect and obtain instance configuration data from the GCP metadata service.\n   * If the connection is successful it returns a promise containing a {@link ResourceAttributes}\n   * object with instance metadata. Returns a promise containing an\n   * empty {@link ResourceAttributes} if the connection or parsing of the metadata fails.\n   */\n  private async _getAttributes(): Promise<ResourceAttributes> {\n    if (!(await gcpMetadata.isAvailable())) {\n      diag.debug('GcpDetector failed: GCP Metadata unavailable.');\n      return {};\n    }\n\n    const [projectId, instanceId, zoneId, clusterName, hostname] =\n      await Promise.all([\n        this._getProjectId(),\n        this._getInstanceId(),\n        this._getZone(),\n        this._getClusterName(),\n        this._getHostname(),\n      ]);\n\n    const attributes: ResourceAttributes = {};\n    attributes[SEMRESATTRS_CLOUD_ACCOUNT_ID] = projectId;\n    attributes[SEMRESATTRS_HOST_ID] = instanceId;\n    attributes[SEMRESATTRS_HOST_NAME] = hostname;\n    attributes[SEMRESATTRS_CLOUD_AVAILABILITY_ZONE] = zoneId;\n    attributes[SEMRESATTRS_CLOUD_PROVIDER] = CLOUDPROVIDERVALUES_GCP;\n\n    if (getEnv().KUBERNETES_SERVICE_HOST)\n      this._addK8sAttributes(attributes, clusterName);\n\n    return attributes;\n  }\n\n  /** Add resource attributes for K8s */\n  private _addK8sAttributes(\n    attributes: ResourceAttributes,\n    clusterName: string\n  ): void {\n    const env = getEnv();\n\n    attributes[SEMRESATTRS_K8S_CLUSTER_NAME] = clusterName;\n    attributes[SEMRESATTRS_K8S_NAMESPACE_NAME] = env.NAMESPACE;\n    attributes[SEMRESATTRS_K8S_POD_NAME] = env.HOSTNAME;\n    attributes[SEMRESATTRS_CONTAINER_NAME] = env.CONTAINER_NAME;\n  }\n\n  /** Gets project id from GCP project metadata. */\n  private async _getProjectId(): Promise<string> {\n    try {\n      return await gcpMetadata.project('project-id');\n    } catch {\n      return '';\n    }\n  }\n\n  /** Gets instance id from GCP instance metadata. */\n  private async _getInstanceId(): Promise<string> {\n    try {\n      const id = await gcpMetadata.instance('id');\n      return id.toString();\n    } catch {\n      return '';\n    }\n  }\n\n  /** Gets zone from GCP instance metadata. */\n  private async _getZone(): Promise<string> {\n    try {\n      const zoneId = await gcpMetadata.instance('zone');\n      if (zoneId) {\n        return zoneId.split('/').pop();\n      }\n      return '';\n    } catch {\n      return '';\n    }\n  }\n\n  /** Gets cluster name from GCP instance metadata. */\n  private async _getClusterName(): Promise<string> {\n    try {\n      return await gcpMetadata.instance('attributes/cluster-name');\n    } catch {\n      return '';\n    }\n  }\n\n  /** Gets hostname from GCP instance metadata. */\n  private async _getHostname(): Promise<string> {\n    try {\n      return await gcpMetadata.instance('hostname');\n    } catch {\n      return '';\n    }\n  }\n}\n\nexport const gcpDetector = new GcpDetector();\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAA4C;AAC5C,MAAA,sCAAmD;AACnD,MAAA,wCAAsD;AACtD,MAAA,kDAMkC;AAClC,MAAA,wCAA6C;AAC7C,MAAA,wEAW6C;AAE7C;;;;GAIG,CACH,MAAM,WAAW;IACf,MAAM,CAAC,OAAiC,EAAA;QACtC,MAAM,UAAU,GAAG,MAAA,OAAO,CAAC,IAAI,CAAC,CAAA,GAAA,OAAA,eAAe,EAAC,MAAA,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CACpE,CADsE,GAClE,CAAC,cAAc,EAAE,CACtB,CAAC;QACF,OAAO,IAAI,YAAA,QAAQ,CAAC,CAAA,CAAE,EAAE,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;;OAKG,CACK,KAAK,CAAC,cAAc,GAAA;QAC1B,IAAI,CAAC,AAAC,MAAM,WAAW,CAAC,WAAW,EAAE,CAAC,CAAE;YACtC,MAAA,IAAI,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;YAC5D,OAAO,CAAA,CAAE,CAAC;SACX;QAED,MAAM,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC,GAC1D,MAAM,OAAO,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,YAAY,EAAE;SACpB,CAAC,CAAC;QAEL,MAAM,UAAU,GAAuB,CAAA,CAAE,CAAC;QAC1C,UAAU,CAAC,uBAAA,4BAA4B,CAAC,GAAG,SAAS,CAAC;QACrD,UAAU,CAAC,uBAAA,mBAAmB,CAAC,GAAG,UAAU,CAAC;QAC7C,UAAU,CAAC,uBAAA,qBAAqB,CAAC,GAAG,QAAQ,CAAC;QAC7C,UAAU,CAAC,uBAAA,mCAAmC,CAAC,GAAG,MAAM,CAAC;QACzD,UAAU,CAAC,uBAAA,0BAA0B,CAAC,GAAG,uBAAA,uBAAuB,CAAC;QAEjE,IAAI,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC,uBAAuB,EAClC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QAElD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,oCAAA,EAAsC,CAC9B,iBAAiB,CACvB,UAA8B,EAC9B,WAAmB,EAAA;QAEnB,MAAM,GAAG,GAAG,CAAA,GAAA,OAAA,MAAM,GAAE,CAAC;QAErB,UAAU,CAAC,uBAAA,4BAA4B,CAAC,GAAG,WAAW,CAAC;QACvD,UAAU,CAAC,uBAAA,8BAA8B,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC;QAC3D,UAAU,CAAC,uBAAA,wBAAwB,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC;QACpD,UAAU,CAAC,uBAAA,0BAA0B,CAAC,GAAG,GAAG,CAAC,cAAc,CAAC;IAC9D,CAAC;IAED,+CAAA,EAAiD,CACzC,KAAK,CAAC,aAAa,GAAA;QACzB,IAAI;YACF,OAAO,MAAM,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAChD,CAAC,OAAA,IAAM;YACN,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,iDAAA,EAAmD,CAC3C,KAAK,CAAC,cAAc,GAAA;QAC1B,IAAI;YACF,MAAM,EAAE,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;SACtB,CAAC,OAAA,IAAM;YACN,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,0CAAA,EAA4C,CACpC,KAAK,CAAC,QAAQ,GAAA;QACpB,IAAI;YACF,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAClD,IAAI,MAAM,EAAE;gBACV,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;aAChC;YACD,OAAO,EAAE,CAAC;SACX,CAAC,OAAA,IAAM;YACN,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,kDAAA,EAAoD,CAC5C,KAAK,CAAC,eAAe,GAAA;QAC3B,IAAI;YACF,OAAO,MAAM,WAAW,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;SAC9D,CAAC,OAAA,IAAM;YACN,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,8CAAA,EAAgD,CACxC,KAAK,CAAC,YAAY,GAAA;QACxB,IAAI;YACF,OAAO,MAAM,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;SAC/C,CAAC,OAAA,IAAM;YACN,OAAO,EAAE,CAAC;SACX;IACH,CAAC;CACF;AAEY,QAAA,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27879, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-gcp/src/detectors/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './GcpDetector';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;AAEH,iKAAA,SAA8B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27918, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-gcp/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './detectors';\n\n// Internal - used for tests only\nexport { resetIsAvailableCache } from 'gcp-metadata';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;;AAEH,2JAAA,SAA4B;AAE5B,iCAAiC;AACjC,IAAA,yCAAqD;AAA5C,OAAA,cAAA,CAAA,SAAA,yBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,qBAAqB;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27966, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-azure/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const AZURE_APP_SERVICE_STAMP_RESOURCE_ATTRIBUTE =\n  'azure.app.service.stamp';\nexport const CLOUD_RESOURCE_ID_RESOURCE_ATTRIBUTE = 'cloud.resource_id';\nexport const REGION_NAME = 'REGION_NAME';\nexport const WEBSITE_HOME_STAMPNAME = 'WEBSITE_HOME_STAMPNAME';\nexport const WEBSITE_HOSTNAME = 'WEBSITE_HOSTNAME';\nexport const WEBSITE_INSTANCE_ID = 'WEBSITE_INSTANCE_ID';\nexport const WEBSITE_OWNER_NAME = 'WEBSITE_OWNER_NAME';\nexport const WEBSITE_RESOURCE_GROUP = 'WEBSITE_RESOURCE_GROUP';\nexport const WEBSITE_SITE_NAME = 'WEBSITE_SITE_NAME';\nexport const WEBSITE_SLOT_NAME = 'WEBSITE_SLOT_NAME';\nexport const WEBSITE_SKU = 'WEBSITE_SKU';\n\nexport const FUNCTIONS_VERSION = 'FUNCTIONS_EXTENSION_VERSION';\nexport const FUNCTIONS_MEM_LIMIT = 'WEBSITE_MEMORY_LIMIT_MB';\n\nexport const AZURE_VM_METADATA_HOST = '169.254.169.254';\nexport const AZURE_VM_METADATA_PATH =\n  '/metadata/instance/compute?api-version=2021-12-13&format=json';\nexport const AZURE_VM_SCALE_SET_NAME_ATTRIBUTE = 'azure.vm.scaleset.name';\nexport const AZURE_VM_SKU_ATTRIBUTE = 'azure.vm.sku';\n\nexport interface AzureVmMetadata {\n  azEnvironment?: string;\n  additionalCapabilities?: {\n    hibernationEnabled?: string;\n  };\n  hostGroup?: {\n    id?: string;\n  };\n  host?: {\n    id?: string;\n  };\n  extendedLocation?: {\n    type?: string;\n    name?: string;\n  };\n  evictionPolicy?: string;\n  isHostCompatibilityLayerVm?: string;\n  licenseType?: string;\n  location: string;\n  name: string;\n  offer?: string;\n  osProfile?: {\n    adminUsername?: string;\n    computerName?: string;\n    disablePasswordAuthentication?: string;\n  };\n  osType?: string;\n  placementGroupId?: string;\n  plan?: {\n    name?: string;\n    product?: string;\n    publisher?: string;\n  };\n  platformFaultDomain?: string;\n  platformSubFaultDomain?: string;\n  platformUpdateDomain?: string;\n  priority?: string;\n  provider?: string;\n  publicKeys?: [\n    {\n      keyData?: string;\n      path?: string;\n    },\n    {\n      keyData?: string;\n      path?: string;\n    }\n  ];\n  publisher?: string;\n  resourceGroupName?: string;\n  resourceId: string;\n  securityProfile?: {\n    secureBootEnabled?: string;\n    virtualTpmEnabled?: string;\n    encryptionAtHost?: string;\n    securityType?: string;\n  };\n  sku: string;\n  storageProfile?: {\n    dataDisks?: [\n      {\n        bytesPerSecondThrottle?: string;\n        caching?: string;\n        createOption?: string;\n        diskCapacityBytes?: string;\n        diskSizeGB?: string;\n        image?: {\n          uri?: string;\n        };\n        isSharedDisk?: string;\n        isUltraDisk?: string;\n        lun?: string;\n        managedDisk?: {\n          id?: string;\n          storageAccountType?: string;\n        };\n        name: string;\n        opsPerSecondThrottle?: string;\n        vhd?: {\n          uri?: string;\n        };\n        writeAcceleratorEnabled?: string;\n      }\n    ];\n    imageReference?: {\n      id?: string;\n      offer?: string;\n      publisher?: string;\n      sku?: string;\n      version?: string;\n    };\n    osDisk?: {\n      caching?: string;\n      createOption?: string;\n      diskSizeGB?: string;\n      diffDiskSettings?: {\n        option?: string;\n      };\n      encryptionSettings?: {\n        enabled?: string;\n        diskEncryptionKey?: {\n          sourceVault?: {\n            id?: string;\n          };\n          secretUrl?: string;\n        };\n        keyEncryptionKey?: {\n          sourceVault?: {\n            id?: string;\n          };\n          keyUrl?: string;\n        };\n      };\n      image?: {\n        uri?: string;\n      };\n      managedDisk?: {\n        id?: string;\n        storageAccountType?: string;\n      };\n      name?: string;\n      osType?: string;\n      vhd?: {\n        uri?: string;\n      };\n      writeAcceleratorEnabled?: string;\n    };\n    resourceDisk?: {\n      size?: string;\n    };\n  };\n  subscriptionId?: string;\n  tags?: string;\n  tagsList?: object[];\n  customData?: string;\n  userData?: string;\n  version: string;\n  virtualMachineScaleSet?: {\n    id?: string;\n  };\n  vmId: string;\n  vmScaleSetName: string;\n  vmSize: string;\n  zone?: string;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEU,QAAA,0CAA0C,GACrD,yBAAyB,CAAC;AACf,QAAA,oCAAoC,GAAG,mBAAmB,CAAC;AAC3D,QAAA,WAAW,GAAG,aAAa,CAAC;AAC5B,QAAA,sBAAsB,GAAG,wBAAwB,CAAC;AAClD,QAAA,gBAAgB,GAAG,kBAAkB,CAAC;AACtC,QAAA,mBAAmB,GAAG,qBAAqB,CAAC;AAC5C,QAAA,kBAAkB,GAAG,oBAAoB,CAAC;AAC1C,QAAA,sBAAsB,GAAG,wBAAwB,CAAC;AAClD,QAAA,iBAAiB,GAAG,mBAAmB,CAAC;AACxC,QAAA,iBAAiB,GAAG,mBAAmB,CAAC;AACxC,QAAA,WAAW,GAAG,aAAa,CAAC;AAE5B,QAAA,iBAAiB,GAAG,6BAA6B,CAAC;AAClD,QAAA,mBAAmB,GAAG,yBAAyB,CAAC;AAEhD,QAAA,sBAAsB,GAAG,iBAAiB,CAAC;AAC3C,QAAA,sBAAsB,GACjC,+DAA+D,CAAC;AACrD,QAAA,iCAAiC,GAAG,wBAAwB,CAAC;AAC7D,QAAA,sBAAsB,GAAG,cAAc,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28007, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-azure/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FUNCTIONS_VERSION,\n  WEBSITE_OWNER_NAME,\n  WEBSITE_RESOURCE_GROUP,\n  WEBSITE_SKU,\n} from './types';\n\nexport function getAzureResourceUri(\n  websiteSiteName: string\n): string | undefined {\n  const websiteResourceGroup = process.env[WEBSITE_RESOURCE_GROUP];\n  const websiteOwnerName = process.env[WEBSITE_OWNER_NAME];\n\n  let subscriptionId = websiteOwnerName;\n  if (websiteOwnerName && websiteOwnerName.indexOf('+') !== -1) {\n    subscriptionId = websiteOwnerName.split('+')[0];\n  }\n\n  if (!subscriptionId && !websiteOwnerName) {\n    return undefined;\n  }\n\n  return `/subscriptions/${subscriptionId}/resourceGroups/${websiteResourceGroup}/providers/Microsoft.Web/sites/${websiteSiteName}`;\n}\n\nexport function isAzureFunction(): boolean {\n  return !!(\n    process.env[FUNCTIONS_VERSION] ||\n    process.env[WEBSITE_SKU] === 'FlexConsumption'\n  );\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,6BAKiB;AAEjB,SAAgB,mBAAmB,CACjC,eAAuB;IAEvB,MAAM,oBAAoB,GAAG,OAAO,CAAC,GAAG,CAAC,QAAA,sBAAsB,CAAC,CAAC;IACjE,MAAM,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,QAAA,kBAAkB,CAAC,CAAC;IAEzD,IAAI,cAAc,GAAG,gBAAgB,CAAC;IACtC,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5D,cAAc,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACjD;IAED,IAAI,CAAC,cAAc,IAAI,CAAC,gBAAgB,EAAE;QACxC,OAAO,SAAS,CAAC;KAClB;IAED,OAAO,CAAA,eAAA,EAAkB,cAAc,CAAA,gBAAA,EAAmB,oBAAoB,CAAA,+BAAA,EAAkC,eAAe,EAAE,CAAC;AACpI,CAAC;AAhBD,QAAA,mBAAA,GAAA,oBAgBC;AAED,SAAgB,eAAe;IAC7B,OAAO,CAAC,CAAC,CACP,OAAO,CAAC,GAAG,CAAC,QAAA,iBAAiB,CAAC,IAC9B,OAAO,CAAC,GAAG,CAAC,QAAA,WAAW,CAAC,KAAK,iBAAiB,CAC/C,CAAC;AACJ,CAAC;AALD,QAAA,eAAA,GAAA,gBAKC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28049, "column": 0}, "map": {"version":3,"file":"AzureAppServiceDetector.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-azure/src/detectors/AzureAppServiceDetector.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DetectorSync, IResource, Resource } from '@opentelemetry/resources';\nimport {\n  AZURE_APP_SERVICE_STAMP_RESOURCE_ATTRIBUTE,\n  REGION_NAME,\n  WEBSITE_HOME_STAMPNAME,\n  WEBSITE_HOSTNAME,\n  WEBSITE_INSTANCE_ID,\n  WEBSITE_SITE_NAME,\n  WEBSITE_SLOT_NAME,\n  CLOUD_RESOURCE_ID_RESOURCE_ATTRIBUTE,\n} from '../types';\nimport {\n  SEMRESATTRS_CLOUD_REGION,\n  SEMRESATTRS_DEPLOYMENT_ENVIRONMENT,\n  SEMRESATTRS_HOST_ID,\n  SEMRESATTRS_SERVICE_INSTANCE_ID,\n  SEMRESATTRS_SERVICE_NAME,\n  SEMRESATTRS_CLOUD_PROVIDER,\n  SEMRESATTRS_CLOUD_PLATFORM,\n  CLOUDPROVIDERVALUES_AZURE,\n  CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,\n} from '@opentelemetry/semantic-conventions';\nimport { getAzureResourceUri, isAzureFunction } from '../utils';\n\nconst APP_SERVICE_ATTRIBUTE_ENV_VARS = {\n  [SEMRESATTRS_CLOUD_REGION]: REGION_NAME,\n  [SEMRESATTRS_DEPLOYMENT_ENVIRONMENT]: WEBSITE_SLOT_NAME,\n  [SEMRESATTRS_HOST_ID]: WEBSITE_HOSTNAME,\n  [SEMRESATTRS_SERVICE_INSTANCE_ID]: WEBSITE_INSTANCE_ID,\n  [AZURE_APP_SERVICE_STAMP_RESOURCE_ATTRIBUTE]: WEBSITE_HOME_STAMPNAME,\n};\n\n/**\n * The AzureAppServiceDetector can be used to detect if a process is running in an Azure App Service\n * @returns a {@link Resource} populated with data about the environment or an empty Resource if detection fails.\n */\nclass AzureAppServiceDetector implements DetectorSync {\n  detect(): IResource {\n    let attributes = {};\n    const websiteSiteName = process.env[WEBSITE_SITE_NAME];\n    if (websiteSiteName && !isAzureFunction()) {\n      attributes = {\n        ...attributes,\n        [SEMRESATTRS_SERVICE_NAME]: websiteSiteName,\n      };\n      attributes = {\n        ...attributes,\n        [SEMRESATTRS_CLOUD_PROVIDER]: CLOUDPROVIDERVALUES_AZURE,\n      };\n      attributes = {\n        ...attributes,\n        [SEMRESATTRS_CLOUD_PLATFORM]: CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,\n      };\n\n      const azureResourceUri = getAzureResourceUri(websiteSiteName);\n      if (azureResourceUri) {\n        attributes = {\n          ...attributes,\n          ...{ [CLOUD_RESOURCE_ID_RESOURCE_ATTRIBUTE]: azureResourceUri },\n        };\n      }\n\n      for (const [key, value] of Object.entries(\n        APP_SERVICE_ATTRIBUTE_ENV_VARS\n      )) {\n        const envVar = process.env[value];\n        if (envVar) {\n          attributes = { ...attributes, ...{ [key]: envVar } };\n        }\n      }\n    }\n    return new Resource(attributes);\n  }\n}\n\nexport const azureAppServiceDetector = new AzureAppServiceDetector();\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,kDAA6E;AAC7E,MAAA,8BASkB;AAClB,MAAA,wEAU6C;AAC7C,MAAA,8BAAgE;AAEhE,MAAM,8BAA8B,GAAG;IACrC,CAAC,uBAAA,wBAAwB,CAAC,EAAE,QAAA,WAAW;IACvC,CAAC,uBAAA,kCAAkC,CAAC,EAAE,QAAA,iBAAiB;IACvD,CAAC,uBAAA,mBAAmB,CAAC,EAAE,QAAA,gBAAgB;IACvC,CAAC,uBAAA,+BAA+B,CAAC,EAAE,QAAA,mBAAmB;IACtD,CAAC,QAAA,0CAA0C,CAAC,EAAE,QAAA,sBAAsB;CACrE,CAAC;AAEF;;;GAGG,CACH,MAAM,uBAAuB;IAC3B,MAAM,GAAA;QACJ,IAAI,UAAU,GAAG,CAAA,CAAE,CAAC;QACpB,MAAM,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,QAAA,iBAAiB,CAAC,CAAC;QACvD,IAAI,eAAe,IAAI,CAAC,CAAA,GAAA,QAAA,eAAe,GAAE,EAAE;YACzC,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,UAAU,GAAA;gBACb,CAAC,uBAAA,wBAAwB,CAAC,EAAE,eAAe;YAAA,EAC5C,CAAC;YACF,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,UAAU,GAAA;gBACb,CAAC,uBAAA,0BAA0B,CAAC,EAAE,uBAAA,yBAAyB;YAAA,EACxD,CAAC;YACF,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,UAAU,GAAA;gBACb,CAAC,uBAAA,0BAA0B,CAAC,EAAE,uBAAA,qCAAqC;YAAA,EACpE,CAAC;YAEF,MAAM,gBAAgB,GAAG,CAAA,GAAA,QAAA,mBAAmB,EAAC,eAAe,CAAC,CAAC;YAC9D,IAAI,gBAAgB,EAAE;gBACpB,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,UAAU,GACV;oBAAE,CAAC,QAAA,oCAAoC,CAAC,EAAE,gBAAgB;gBAAA,CAAE,CAChE,CAAC;aACH;YAED,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CACvC,8BAA8B,CAC/B,CAAE;gBACD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAClC,IAAI,MAAM,EAAE;oBACV,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GAAQ,UAAU,GAAK;wBAAE,CAAC,GAAG,CAAC,EAAE,MAAM;oBAAA,CAAE,CAAE,CAAC;iBACtD;aACF;SACF;QACD,OAAO,IAAI,YAAA,QAAQ,CAAC,UAAU,CAAC,CAAC;IAClC,CAAC;CACF;AAEY,QAAA,uBAAuB,GAAG,IAAI,uBAAuB,EAAE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28120, "column": 0}, "map": {"version":3,"file":"AzureFunctionsDetector.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-azure/src/detectors/AzureFunctionsDetector.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DetectorSync, IResource, Resource } from '@opentelemetry/resources';\n\nimport {\n  SEMRESATTRS_FAAS_MAX_MEMORY,\n  SEMRESATTRS_FAAS_INSTANCE,\n  SEMRESATTRS_CLOUD_PROVIDER,\n  SEMRESATTRS_CLOUD_PLATFORM,\n  SEMRESATTRS_CLOUD_REGION,\n  CLOUDPROVIDERVALUES_AZURE,\n  CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,\n  SEMRESATTRS_SERVICE_NAME,\n  SEMRESATTRS_PROCESS_PID,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  WEBSITE_SITE_NAME,\n  WEBSITE_INSTANCE_ID,\n  FUNCTIONS_MEM_LIMIT,\n  REGION_NAME,\n  CLOUD_RESOURCE_ID_RESOURCE_ATTRIBUTE,\n} from '../types';\nimport { getAzureResourceUri, isAzureFunction } from '../utils';\n\nconst AZURE_FUNCTIONS_ATTRIBUTE_ENV_VARS = {\n  [SEMRESATTRS_SERVICE_NAME]: WEBSITE_SITE_NAME,\n  [SEMRESATTRS_FAAS_INSTANCE]: WEBSITE_INSTANCE_ID,\n  [SEMRESATTRS_FAAS_MAX_MEMORY]: FUNCTIONS_MEM_LIMIT,\n};\n\n/**\n * The AzureFunctionsDetector can be used to detect if a process is running in Azure Functions\n * @returns a {@link Resource} populated with data about the environment or an empty Resource if detection fails.\n */\nclass AzureFunctionsDetector implements DetectorSync {\n  detect(): IResource {\n    let attributes = {};\n    const serviceName = process.env[WEBSITE_SITE_NAME];\n\n    /**\n     * Checks that we are operating within an Azure Function using the function version since WEBSITE_SITE_NAME\n     * will exist in Azure App Service as well and detectors should be mutually exclusive.\n     * If the function version is not present, we check for the website sku to determine if it is a function.\n     */\n    if (serviceName && isAzureFunction()) {\n      const functionInstance = process.env[WEBSITE_INSTANCE_ID];\n      const functionMemLimit = process.env[FUNCTIONS_MEM_LIMIT];\n\n      attributes = {\n        [SEMRESATTRS_CLOUD_PROVIDER]: CLOUDPROVIDERVALUES_AZURE,\n        [SEMRESATTRS_CLOUD_PLATFORM]: CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,\n        [SEMRESATTRS_CLOUD_REGION]: process.env[REGION_NAME],\n        [SEMRESATTRS_PROCESS_PID]: process.pid,\n      };\n\n      if (serviceName) {\n        attributes = {\n          ...attributes,\n          [SEMRESATTRS_SERVICE_NAME]: serviceName,\n        };\n      }\n      if (functionInstance) {\n        attributes = {\n          ...attributes,\n          [SEMRESATTRS_FAAS_INSTANCE]: functionInstance,\n        };\n      }\n      if (functionMemLimit) {\n        attributes = {\n          ...attributes,\n          [SEMRESATTRS_FAAS_MAX_MEMORY]: functionMemLimit,\n        };\n      }\n      const azureResourceUri = getAzureResourceUri(serviceName);\n      if (azureResourceUri) {\n        attributes = {\n          ...attributes,\n          ...{ [CLOUD_RESOURCE_ID_RESOURCE_ATTRIBUTE]: azureResourceUri },\n        };\n      }\n\n      for (const [key, value] of Object.entries(\n        AZURE_FUNCTIONS_ATTRIBUTE_ENV_VARS\n      )) {\n        const envVar = process.env[value];\n        if (envVar) {\n          attributes = { ...attributes, ...{ [key]: envVar } };\n        }\n      }\n    }\n    return new Resource(attributes);\n  }\n}\n\nexport const azureFunctionsDetector = new AzureFunctionsDetector();\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,kDAA6E;AAE7E,MAAA,wEAU6C;AAC7C,MAAA,8BAMkB;AAClB,MAAA,8BAAgE;AAEhE,MAAM,kCAAkC,GAAG;IACzC,CAAC,uBAAA,wBAAwB,CAAC,EAAE,QAAA,iBAAiB;IAC7C,CAAC,uBAAA,yBAAyB,CAAC,EAAE,QAAA,mBAAmB;IAChD,CAAC,uBAAA,2BAA2B,CAAC,EAAE,QAAA,mBAAmB;CACnD,CAAC;AAEF;;;GAGG,CACH,MAAM,sBAAsB;IAC1B,MAAM,GAAA;QACJ,IAAI,UAAU,GAAG,CAAA,CAAE,CAAC;QACpB,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,QAAA,iBAAiB,CAAC,CAAC;QAEnD;;;;WAIG,CACH,IAAI,WAAW,IAAI,CAAA,GAAA,QAAA,eAAe,GAAE,EAAE;YACpC,MAAM,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,QAAA,mBAAmB,CAAC,CAAC;YAC1D,MAAM,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,QAAA,mBAAmB,CAAC,CAAC;YAE1D,UAAU,GAAG;gBACX,CAAC,uBAAA,0BAA0B,CAAC,EAAE,uBAAA,yBAAyB;gBACvD,CAAC,uBAAA,0BAA0B,CAAC,EAAE,uBAAA,mCAAmC;gBACjE,CAAC,uBAAA,wBAAwB,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,QAAA,WAAW,CAAC;gBACpD,CAAC,uBAAA,uBAAuB,CAAC,EAAE,OAAO,CAAC,GAAG;aACvC,CAAC;YAEF,IAAI,WAAW,EAAE;gBACf,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,UAAU,GAAA;oBACb,CAAC,uBAAA,wBAAwB,CAAC,EAAE,WAAW;gBAAA,EACxC,CAAC;aACH;YACD,IAAI,gBAAgB,EAAE;gBACpB,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,UAAU,GAAA;oBACb,CAAC,uBAAA,yBAAyB,CAAC,EAAE,gBAAgB;gBAAA,EAC9C,CAAC;aACH;YACD,IAAI,gBAAgB,EAAE;gBACpB,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,UAAU,GAAA;oBACb,CAAC,uBAAA,2BAA2B,CAAC,EAAE,gBAAgB;gBAAA,EAChD,CAAC;aACH;YACD,MAAM,gBAAgB,GAAG,CAAA,GAAA,QAAA,mBAAmB,EAAC,WAAW,CAAC,CAAC;YAC1D,IAAI,gBAAgB,EAAE;gBACpB,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,UAAU,GACV;oBAAE,CAAC,QAAA,oCAAoC,CAAC,EAAE,gBAAgB;gBAAA,CAAE,CAChE,CAAC;aACH;YAED,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CACvC,kCAAkC,CACnC,CAAE;gBACD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAClC,IAAI,MAAM,EAAE;oBACV,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GAAQ,UAAU,GAAK;wBAAE,CAAC,GAAG,CAAC,EAAE,MAAM;oBAAA,CAAE,CAAE,CAAC;iBACtD;aACF;SACF;QACD,OAAO,IAAI,YAAA,QAAQ,CAAC,UAAU,CAAC,CAAC;IAClC,CAAC;CACF;AAEY,QAAA,sBAAsB,GAAG,IAAI,sBAAsB,EAAE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28207, "column": 0}, "map": {"version":3,"file":"AzureVmDetector.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-azure/src/detectors/AzureVmDetector.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as http from 'http';\n\nimport { context } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport {\n  DetectorSync,\n  IResource,\n  Resource,\n  ResourceAttributes,\n} from '@opentelemetry/resources';\nimport {\n  CLOUDPLATFORMVALUES_AZURE_VM,\n  CLOUDPROVIDERVALUES_AZURE,\n  SEMRESATTRS_CLOUD_PLATFORM,\n  SEMRESATTRS_CLOUD_PROVIDER,\n  SEMRESATTRS_CLOUD_REGION,\n  SEMRESATTRS_HOST_ID,\n  SEMRESATTRS_HOST_NAME,\n  SEMRESATTRS_HOST_TYPE,\n  SEMRESATTRS_OS_VERSION,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  CLOUD_RESOURCE_ID_RESOURCE_ATTRIBUTE,\n  AZURE_VM_METADATA_HOST,\n  AZURE_VM_METADATA_PATH,\n  AZURE_VM_SCALE_SET_NAME_ATTRIBUTE,\n  AZURE_VM_SKU_ATTRIBUTE,\n  AzureVmMetadata,\n} from '../types';\n\n/**\n * The AzureVmDetector can be used to detect if a process is running in an Azure VM.\n * @returns a {@link Resource} populated with data about the environment or an empty Resource if detection fails.\n */\nclass AzureVmResourceDetector implements DetectorSync {\n  detect(): IResource {\n    const attributes = context.with(suppressTracing(context.active()), () =>\n      this.getAzureVmMetadata()\n    );\n    return new Resource({}, attributes);\n  }\n\n  async getAzureVmMetadata(): Promise<ResourceAttributes> {\n    const options = {\n      host: AZURE_VM_METADATA_HOST,\n      path: AZURE_VM_METADATA_PATH,\n      method: 'GET',\n      timeout: 5000,\n      headers: {\n        Metadata: 'True',\n      },\n    };\n    const metadata: AzureVmMetadata = await new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        req.destroy();\n        reject(new Error('Azure metadata service request timed out.'));\n      }, 1000);\n\n      const req = http.request(options, res => {\n        clearTimeout(timeoutId);\n        const { statusCode } = res;\n        res.setEncoding('utf8');\n        let rawData = '';\n        res.on('data', chunk => (rawData += chunk));\n        res.on('end', () => {\n          if (statusCode && statusCode >= 200 && statusCode < 300) {\n            try {\n              resolve(JSON.parse(rawData));\n            } catch (error) {\n              reject(error);\n            }\n          } else {\n            reject(\n              new Error('Failed to load page, status code: ' + statusCode)\n            );\n          }\n        });\n      });\n      req.on('error', err => {\n        clearTimeout(timeoutId);\n        reject(err);\n      });\n      req.end();\n    });\n\n    const attributes = {\n      [AZURE_VM_SCALE_SET_NAME_ATTRIBUTE]: metadata['vmScaleSetName'],\n      [AZURE_VM_SKU_ATTRIBUTE]: metadata['sku'],\n      [SEMRESATTRS_CLOUD_PLATFORM]: CLOUDPLATFORMVALUES_AZURE_VM,\n      [SEMRESATTRS_CLOUD_PROVIDER]: CLOUDPROVIDERVALUES_AZURE,\n      [SEMRESATTRS_CLOUD_REGION]: metadata['location'],\n      [CLOUD_RESOURCE_ID_RESOURCE_ATTRIBUTE]: metadata['resourceId'],\n      [SEMRESATTRS_HOST_ID]: metadata['vmId'],\n      [SEMRESATTRS_HOST_NAME]: metadata['name'],\n      [SEMRESATTRS_HOST_TYPE]: metadata['vmSize'],\n      [SEMRESATTRS_OS_VERSION]: metadata['version'],\n    };\n    return attributes;\n  }\n}\n\nexport const azureVmDetector = new AzureVmResourceDetector();\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,uBAA6B;AAE7B,MAAA,sCAA6C;AAC7C,MAAA,wCAAsD;AACtD,MAAA,kDAKkC;AAClC,MAAA,wEAU6C;AAC7C,MAAA,8BAOkB;AAElB;;;GAGG,CACH,MAAM,uBAAuB;IAC3B,MAAM,GAAA;QACJ,MAAM,UAAU,GAAG,MAAA,OAAO,CAAC,IAAI,CAAC,CAAA,GAAA,OAAA,eAAe,EAAC,MAAA,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CACpE,CADsE,GAClE,CAAC,kBAAkB,EAAE,CAC1B,CAAC;QACF,OAAO,IAAI,YAAA,QAAQ,CAAC,CAAA,CAAE,EAAE,UAAU,CAAC,CAAC;IACtC,CAAC;IAED,KAAK,CAAC,kBAAkB,GAAA;QACtB,MAAM,OAAO,GAAG;YACd,IAAI,EAAE,QAAA,sBAAsB;YAC5B,IAAI,EAAE,QAAA,sBAAsB;YAC5B,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,IAAI;YACb,OAAO,EAAE;gBACP,QAAQ,EAAE,MAAM;aACjB;SACF,CAAC;QACF,MAAM,QAAQ,GAAoB,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACtE,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE;gBAChC,GAAG,CAAC,OAAO,EAAE,CAAC;gBACd,MAAM,CAAC,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC,CAAC;YACjE,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAE,GAAG,CAAC,EAAE;gBACtC,YAAY,CAAC,SAAS,CAAC,CAAC;gBACxB,MAAM,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;gBAC3B,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBACxB,IAAI,OAAO,GAAG,EAAE,CAAC;gBACjB,GAAG,CAAC,EAAE,CAAC,MAAM,GAAE,KAAK,CAAC,EAAE,AAAE,CAAD,MAAQ,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC5C,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;oBACjB,IAAI,UAAU,IAAI,UAAU,IAAI,GAAG,IAAI,UAAU,GAAG,GAAG,EAAE;wBACvD,IAAI;4BACF,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;yBAC9B,CAAC,OAAO,KAAK,EAAE;4BACd,MAAM,CAAC,KAAK,CAAC,CAAC;yBACf;qBACF,MAAM;wBACL,MAAM,CACJ,IAAI,KAAK,CAAC,oCAAoC,GAAG,UAAU,CAAC,CAC7D,CAAC;qBACH;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,GAAG,CAAC,EAAE,CAAC,OAAO,GAAE,GAAG,CAAC,EAAE;gBACpB,YAAY,CAAC,SAAS,CAAC,CAAC;gBACxB,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;YACH,GAAG,CAAC,GAAG,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;QAEH,MAAM,UAAU,GAAG;YACjB,CAAC,QAAA,iCAAiC,CAAC,EAAE,QAAQ,CAAC,gBAAgB,CAAC;YAC/D,CAAC,QAAA,sBAAsB,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC;YACzC,CAAC,uBAAA,0BAA0B,CAAC,EAAE,uBAAA,4BAA4B;YAC1D,CAAC,uBAAA,0BAA0B,CAAC,EAAE,uBAAA,yBAAyB;YACvD,CAAC,uBAAA,wBAAwB,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC;YAChD,CAAC,QAAA,oCAAoC,CAAC,EAAE,QAAQ,CAAC,YAAY,CAAC;YAC9D,CAAC,uBAAA,mBAAmB,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC;YACvC,CAAC,uBAAA,qBAAqB,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC;YACzC,CAAC,uBAAA,qBAAqB,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC;YAC3C,CAAC,uBAAA,sBAAsB,CAAC,EAAE,QAAQ,CAAC,SAAS,CAAC;SAC9C,CAAC;QACF,OAAO,UAAU,CAAC;IACpB,CAAC;CACF;AAEY,QAAA,eAAe,GAAG,IAAI,uBAAuB,EAAE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28300, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-azure/src/detectors/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { azureAppServiceDetector } from './AzureAppServiceDetector';\nexport { azureFunctionsDetector } from './AzureFunctionsDetector';\nexport { azureVmDetector } from './AzureVmDetector';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,iEAAoE;AAA3D,OAAA,cAAA,CAAA,SAAA,2BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,0BAAA,uBAAuB;IAAA;AAAA,GAAA;AAChC,IAAA,+DAAkE;AAAzD,OAAA,cAAA,CAAA,SAAA,0BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,yBAAA,sBAAsB;IAAA;AAAA,GAAA;AAC/B,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,mBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,kBAAA,eAAe;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28345, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/resource-detector-azure/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  azureAppServiceDetector,\n  azureFunctionsDetector,\n  azureVmDetector,\n} from './detectors';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,qCAIqB;AAHnB,OAAA,cAAA,CAAA,SAAA,2BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,uBAAuB;IAAA;AAAA,GAAA;AACvB,OAAA,cAAA,CAAA,SAAA,0BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,sBAAsB;IAAA;AAAA,GAAA;AACtB,OAAA,cAAA,CAAA,SAAA,mBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,eAAe;IAAA;AAAA,GAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28388, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/auto-instrumentations-node/src/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { Instrumentation } from '@opentelemetry/instrumentation';\n\nimport { AmqplibInstrumentation } from '@opentelemetry/instrumentation-amqplib';\nimport { AwsLambdaInstrumentation } from '@opentelemetry/instrumentation-aws-lambda';\nimport { AwsInstrumentation } from '@opentelemetry/instrumentation-aws-sdk';\nimport { BunyanInstrumentation } from '@opentelemetry/instrumentation-bunyan';\nimport { CassandraDriverInstrumentation } from '@opentelemetry/instrumentation-cassandra-driver';\nimport { ConnectInstrumentation } from '@opentelemetry/instrumentation-connect';\nimport { CucumberInstrumentation } from '@opentelemetry/instrumentation-cucumber';\nimport { DataloaderInstrumentation } from '@opentelemetry/instrumentation-dataloader';\nimport { DnsInstrumentation } from '@opentelemetry/instrumentation-dns';\nimport { ExpressInstrumentation } from '@opentelemetry/instrumentation-express';\nimport { FastifyInstrumentation } from '@opentelemetry/instrumentation-fastify';\nimport { FsInstrumentation } from '@opentelemetry/instrumentation-fs';\nimport { GenericPoolInstrumentation } from '@opentelemetry/instrumentation-generic-pool';\nimport { GraphQLInstrumentation } from '@opentelemetry/instrumentation-graphql';\nimport { GrpcInstrumentation } from '@opentelemetry/instrumentation-grpc';\nimport { HapiInstrumentation } from '@opentelemetry/instrumentation-hapi';\nimport { HttpInstrumentation } from '@opentelemetry/instrumentation-http';\nimport { IORedisInstrumentation } from '@opentelemetry/instrumentation-ioredis';\nimport { KafkaJsInstrumentation } from '@opentelemetry/instrumentation-kafkajs';\nimport { KnexInstrumentation } from '@opentelemetry/instrumentation-knex';\nimport { KoaInstrumentation } from '@opentelemetry/instrumentation-koa';\nimport { LruMemoizerInstrumentation } from '@opentelemetry/instrumentation-lru-memoizer';\nimport { MemcachedInstrumentation } from '@opentelemetry/instrumentation-memcached';\nimport { MongoDBInstrumentation } from '@opentelemetry/instrumentation-mongodb';\nimport { MongooseInstrumentation } from '@opentelemetry/instrumentation-mongoose';\nimport { MySQL2Instrumentation } from '@opentelemetry/instrumentation-mysql2';\nimport { MySQLInstrumentation } from '@opentelemetry/instrumentation-mysql';\nimport { NestInstrumentation } from '@opentelemetry/instrumentation-nestjs-core';\nimport { NetInstrumentation } from '@opentelemetry/instrumentation-net';\nimport { PgInstrumentation } from '@opentelemetry/instrumentation-pg';\nimport { PinoInstrumentation } from '@opentelemetry/instrumentation-pino';\nimport { RedisInstrumentation as RedisInstrumentationV2 } from '@opentelemetry/instrumentation-redis';\nimport { RedisInstrumentation as RedisInstrumentationV4 } from '@opentelemetry/instrumentation-redis-4';\nimport { RestifyInstrumentation } from '@opentelemetry/instrumentation-restify';\nimport { RouterInstrumentation } from '@opentelemetry/instrumentation-router';\nimport { SocketIoInstrumentation } from '@opentelemetry/instrumentation-socket.io';\nimport { TediousInstrumentation } from '@opentelemetry/instrumentation-tedious';\nimport { UndiciInstrumentation } from '@opentelemetry/instrumentation-undici';\nimport { WinstonInstrumentation } from '@opentelemetry/instrumentation-winston';\n\nimport { alibabaCloudEcsDetector } from '@opentelemetry/resource-detector-alibaba-cloud';\nimport {\n  awsBeanstalkDetector,\n  awsEc2Detector,\n  awsEcsDetector,\n  awsEksDetector,\n  awsLambdaDetector,\n} from '@opentelemetry/resource-detector-aws';\nimport { containerDetector } from '@opentelemetry/resource-detector-container';\nimport { gcpDetector } from '@opentelemetry/resource-detector-gcp';\nimport {\n  Detector,\n  DetectorSync,\n  envDetectorSync,\n  hostDetectorSync,\n  osDetectorSync,\n  processDetectorSync,\n  serviceInstanceIdDetectorSync,\n} from '@opentelemetry/resources';\nimport {\n  azureAppServiceDetector,\n  azureFunctionsDetector,\n  azureVmDetector,\n} from '@opentelemetry/resource-detector-azure';\n\nconst RESOURCE_DETECTOR_CONTAINER = 'container';\nconst RESOURCE_DETECTOR_ENVIRONMENT = 'env';\nconst RESOURCE_DETECTOR_HOST = 'host';\nconst RESOURCE_DETECTOR_OS = 'os';\nconst RESOURCE_DETECTOR_SERVICE_INSTANCE_ID = 'serviceinstance';\nconst RESOURCE_DETECTOR_PROCESS = 'process';\nconst RESOURCE_DETECTOR_ALIBABA = 'alibaba';\nconst RESOURCE_DETECTOR_AWS = 'aws';\nconst RESOURCE_DETECTOR_AZURE = 'azure';\nconst RESOURCE_DETECTOR_GCP = 'gcp';\n\nconst InstrumentationMap = {\n  '@opentelemetry/instrumentation-amqplib': AmqplibInstrumentation,\n  '@opentelemetry/instrumentation-aws-lambda': AwsLambdaInstrumentation,\n  '@opentelemetry/instrumentation-aws-sdk': AwsInstrumentation,\n  '@opentelemetry/instrumentation-bunyan': BunyanInstrumentation,\n  '@opentelemetry/instrumentation-cassandra-driver':\n    CassandraDriverInstrumentation,\n  '@opentelemetry/instrumentation-connect': ConnectInstrumentation,\n  '@opentelemetry/instrumentation-cucumber': CucumberInstrumentation,\n  '@opentelemetry/instrumentation-dataloader': DataloaderInstrumentation,\n  '@opentelemetry/instrumentation-dns': DnsInstrumentation,\n  '@opentelemetry/instrumentation-express': ExpressInstrumentation,\n  '@opentelemetry/instrumentation-fastify': FastifyInstrumentation,\n  '@opentelemetry/instrumentation-fs': FsInstrumentation,\n  '@opentelemetry/instrumentation-generic-pool': GenericPoolInstrumentation,\n  '@opentelemetry/instrumentation-graphql': GraphQLInstrumentation,\n  '@opentelemetry/instrumentation-grpc': GrpcInstrumentation,\n  '@opentelemetry/instrumentation-hapi': HapiInstrumentation,\n  '@opentelemetry/instrumentation-http': HttpInstrumentation,\n  '@opentelemetry/instrumentation-ioredis': IORedisInstrumentation,\n  '@opentelemetry/instrumentation-kafkajs': KafkaJsInstrumentation,\n  '@opentelemetry/instrumentation-knex': KnexInstrumentation,\n  '@opentelemetry/instrumentation-koa': KoaInstrumentation,\n  '@opentelemetry/instrumentation-lru-memoizer': LruMemoizerInstrumentation,\n  '@opentelemetry/instrumentation-memcached': MemcachedInstrumentation,\n  '@opentelemetry/instrumentation-mongodb': MongoDBInstrumentation,\n  '@opentelemetry/instrumentation-mongoose': MongooseInstrumentation,\n  '@opentelemetry/instrumentation-mysql2': MySQL2Instrumentation,\n  '@opentelemetry/instrumentation-mysql': MySQLInstrumentation,\n  '@opentelemetry/instrumentation-nestjs-core': NestInstrumentation,\n  '@opentelemetry/instrumentation-net': NetInstrumentation,\n  '@opentelemetry/instrumentation-pg': PgInstrumentation,\n  '@opentelemetry/instrumentation-pino': PinoInstrumentation,\n  '@opentelemetry/instrumentation-redis': RedisInstrumentationV2,\n  '@opentelemetry/instrumentation-redis-4': RedisInstrumentationV4,\n  '@opentelemetry/instrumentation-restify': RestifyInstrumentation,\n  '@opentelemetry/instrumentation-router': RouterInstrumentation,\n  '@opentelemetry/instrumentation-socket.io': SocketIoInstrumentation,\n  '@opentelemetry/instrumentation-tedious': TediousInstrumentation,\n  '@opentelemetry/instrumentation-undici': UndiciInstrumentation,\n  '@opentelemetry/instrumentation-winston': WinstonInstrumentation,\n};\n\n// Config types inferred automatically from the first argument of the constructor\ntype ConfigArg<T> = T extends new (...args: infer U) => unknown ? U[0] : never;\nexport type InstrumentationConfigMap = {\n  [Name in keyof typeof InstrumentationMap]?: ConfigArg<\n    (typeof InstrumentationMap)[Name]\n  >;\n};\n\nexport function getNodeAutoInstrumentations(\n  inputConfigs: InstrumentationConfigMap = {}\n): Instrumentation[] {\n  checkManuallyProvidedInstrumentationNames(Object.keys(inputConfigs));\n  const enabledInstrumentationsFromEnv = getEnabledInstrumentationsFromEnv();\n  const disabledInstrumentationsFromEnv = getDisabledInstrumentationsFromEnv();\n\n  const instrumentations: Instrumentation[] = [];\n\n  for (const name of Object.keys(InstrumentationMap) as Array<\n    keyof typeof InstrumentationMap\n  >) {\n    const Instance = InstrumentationMap[name];\n    // Defaults are defined by the instrumentation itself\n    const userConfig: any = inputConfigs[name] ?? {};\n\n    if (\n      userConfig.enabled === false ||\n      !enabledInstrumentationsFromEnv.includes(name) ||\n      disabledInstrumentationsFromEnv.includes(name)\n    ) {\n      diag.debug(`Disabling instrumentation for ${name}`);\n      continue;\n    }\n\n    try {\n      diag.debug(`Loading instrumentation for ${name}`);\n      instrumentations.push(new Instance(userConfig));\n    } catch (e: any) {\n      diag.error(e);\n    }\n  }\n\n  return instrumentations;\n}\n\nfunction checkManuallyProvidedInstrumentationNames(\n  manuallyProvidedInstrumentationNames: string[]\n) {\n  for (const name of manuallyProvidedInstrumentationNames) {\n    if (!Object.prototype.hasOwnProperty.call(InstrumentationMap, name)) {\n      diag.error(`Provided instrumentation name \"${name}\" not found`);\n    }\n  }\n}\n\nfunction getInstrumentationsFromEnv(envVar: string): string[] {\n  const envVarValue = process.env[envVar];\n  if (envVarValue == null) {\n    return [];\n  }\n\n  const instrumentationsFromEnv = envVarValue\n    ?.split(',')\n    .map(\n      instrumentationPkgSuffix =>\n        `@opentelemetry/instrumentation-${instrumentationPkgSuffix.trim()}`\n    );\n  checkManuallyProvidedInstrumentationNames(instrumentationsFromEnv);\n  return instrumentationsFromEnv;\n}\n\n/**\n * Returns the list of instrumentations that are enabled based on the environment variable.\n */\nfunction getEnabledInstrumentationsFromEnv() {\n  if (!process.env.OTEL_NODE_ENABLED_INSTRUMENTATIONS) {\n    return Object.keys(InstrumentationMap);\n  }\n\n  const instrumentationsFromEnv = getInstrumentationsFromEnv(\n    'OTEL_NODE_ENABLED_INSTRUMENTATIONS'\n  );\n  return instrumentationsFromEnv;\n}\n\n/**\n * Returns the list of instrumentations that are disabled based on the environment variable.\n */\nfunction getDisabledInstrumentationsFromEnv() {\n  if (!process.env.OTEL_NODE_DISABLED_INSTRUMENTATIONS) {\n    return [];\n  }\n\n  const instrumentationsFromEnv = getInstrumentationsFromEnv(\n    'OTEL_NODE_DISABLED_INSTRUMENTATIONS'\n  );\n  return instrumentationsFromEnv;\n}\n\nexport function getResourceDetectorsFromEnv(): Array<Detector | DetectorSync> {\n  const resourceDetectors = new Map<\n    string,\n    Detector | DetectorSync | Detector[] | DetectorSync[]\n  >([\n    [RESOURCE_DETECTOR_CONTAINER, containerDetector],\n    [RESOURCE_DETECTOR_ENVIRONMENT, envDetectorSync],\n    [RESOURCE_DETECTOR_HOST, hostDetectorSync],\n    [RESOURCE_DETECTOR_OS, osDetectorSync],\n    [RESOURCE_DETECTOR_SERVICE_INSTANCE_ID, serviceInstanceIdDetectorSync],\n    [RESOURCE_DETECTOR_PROCESS, processDetectorSync],\n    [RESOURCE_DETECTOR_ALIBABA, alibabaCloudEcsDetector],\n    [RESOURCE_DETECTOR_GCP, gcpDetector],\n    [\n      RESOURCE_DETECTOR_AWS,\n      [\n        awsEc2Detector,\n        awsEcsDetector,\n        awsEksDetector,\n        awsBeanstalkDetector,\n        awsLambdaDetector,\n      ],\n    ],\n    [\n      RESOURCE_DETECTOR_AZURE,\n      [azureAppServiceDetector, azureFunctionsDetector, azureVmDetector],\n    ],\n  ]);\n\n  const resourceDetectorsFromEnv =\n    process.env.OTEL_NODE_RESOURCE_DETECTORS?.split(',') ?? ['all'];\n\n  if (resourceDetectorsFromEnv.includes('all')) {\n    return [...resourceDetectors.values()].flat();\n  }\n\n  if (resourceDetectorsFromEnv.includes('none')) {\n    return [];\n  }\n\n  return resourceDetectorsFromEnv.flatMap(detector => {\n    const resourceDetector = resourceDetectors.get(detector);\n    if (!resourceDetector) {\n      diag.error(\n        `Invalid resource detector \"${detector}\" specified in the environment variable OTEL_NODE_RESOURCE_DETECTORS`\n      );\n    }\n    return resourceDetector || [];\n  });\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28641, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40opentelemetry/auto-instrumentations-node/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  getNodeAutoInstrumentations,\n  getResourceDetectorsFromEnv as getResourceDetectors,\n  InstrumentationConfigMap,\n} from './utils';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,6BAIiB;AAHf,OAAA,cAAA,CAAA,SAAA,+BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,2BAA2B;IAAA;AAAA,GAAA;AAC3B,OAAA,cAAA,CAAA,SAAA,wBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,2BAA2B;IAAA;AAAA,GAAwB","ignoreList":[0],"debugId":null}}]
}