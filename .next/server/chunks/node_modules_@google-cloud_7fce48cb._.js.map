{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/promisify/build/src/index.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable prefer-rest-params */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.promisify = promisify;\nexports.promisifyAll = promisifyAll;\nexports.callbackify = callbackify;\nexports.callbackifyAll = callbackifyAll;\n/**\n * Wraps a callback style function to conditionally return a promise.\n *\n * @param {function} originalMethod - The method to promisify.\n * @param {object=} options - Promise options.\n * @param {boolean} options.singular - Resolve the promise with single arg instead of an array.\n * @return {function} wrapped\n */\nfunction promisify(originalMethod, options) {\n    if (originalMethod.promisified_) {\n        return originalMethod;\n    }\n    options = options || {};\n    const slice = Array.prototype.slice;\n    // tslint:disable-next-line:no-any\n    const wrapper = function () {\n        let last;\n        for (last = arguments.length - 1; last >= 0; last--) {\n            const arg = arguments[last];\n            if (typeof arg === 'undefined') {\n                continue; // skip trailing undefined.\n            }\n            if (typeof arg !== 'function') {\n                break; // non-callback last argument found.\n            }\n            return originalMethod.apply(this, arguments);\n        }\n        // peel trailing undefined.\n        const args = slice.call(arguments, 0, last + 1);\n        // tslint:disable-next-line:variable-name\n        let PromiseCtor = Promise;\n        // Because dedupe will likely create a single install of\n        // @google-cloud/common to be shared amongst all modules, we need to\n        // localize it at the Service level.\n        if (this && this.Promise) {\n            PromiseCtor = this.Promise;\n        }\n        return new PromiseCtor((resolve, reject) => {\n            // tslint:disable-next-line:no-any\n            args.push((...args) => {\n                const callbackArgs = slice.call(args);\n                const err = callbackArgs.shift();\n                if (err) {\n                    return reject(err);\n                }\n                if (options.singular && callbackArgs.length === 1) {\n                    resolve(callbackArgs[0]);\n                }\n                else {\n                    resolve(callbackArgs);\n                }\n            });\n            originalMethod.apply(this, args);\n        });\n    };\n    wrapper.promisified_ = true;\n    return wrapper;\n}\n/**\n * Promisifies certain Class methods. This will not promisify private or\n * streaming methods.\n *\n * @param {module:common/service} Class - Service class.\n * @param {object=} options - Configuration object.\n */\n// tslint:disable-next-line:variable-name\nfunction promisifyAll(Class, options) {\n    const exclude = (options && options.exclude) || [];\n    const ownPropertyNames = Object.getOwnPropertyNames(Class.prototype);\n    const methods = ownPropertyNames.filter(methodName => {\n        // clang-format off\n        return (!exclude.includes(methodName) &&\n            typeof Class.prototype[methodName] === 'function' && // is it a function?\n            !/(^_|(Stream|_)|promise$)|^constructor$/.test(methodName) // is it promisable?\n        );\n        // clang-format on\n    });\n    methods.forEach(methodName => {\n        const originalMethod = Class.prototype[methodName];\n        if (!originalMethod.promisified_) {\n            Class.prototype[methodName] = exports.promisify(originalMethod, options);\n        }\n    });\n}\n/**\n * Wraps a promisy type function to conditionally call a callback function.\n *\n * @param {function} originalMethod - The method to callbackify.\n * @param {object=} options - Callback options.\n * @param {boolean} options.singular - Pass to the callback a single arg instead of an array.\n * @return {function} wrapped\n */\nfunction callbackify(originalMethod) {\n    if (originalMethod.callbackified_) {\n        return originalMethod;\n    }\n    // tslint:disable-next-line:no-any\n    const wrapper = function () {\n        if (typeof arguments[arguments.length - 1] !== 'function') {\n            return originalMethod.apply(this, arguments);\n        }\n        const cb = Array.prototype.pop.call(arguments);\n        originalMethod.apply(this, arguments).then(\n        // tslint:disable-next-line:no-any\n        (res) => {\n            res = Array.isArray(res) ? res : [res];\n            cb(null, ...res);\n        }, (err) => cb(err));\n    };\n    wrapper.callbackified_ = true;\n    return wrapper;\n}\n/**\n * Callbackifies certain Class methods. This will not callbackify private or\n * streaming methods.\n *\n * @param {module:common/service} Class - Service class.\n * @param {object=} options - Configuration object.\n */\nfunction callbackifyAll(\n// tslint:disable-next-line:variable-name\nClass, options) {\n    const exclude = (options && options.exclude) || [];\n    const ownPropertyNames = Object.getOwnPropertyNames(Class.prototype);\n    const methods = ownPropertyNames.filter(methodName => {\n        // clang-format off\n        return (!exclude.includes(methodName) &&\n            typeof Class.prototype[methodName] === 'function' && // is it a function?\n            !/^_|(Stream|_)|^constructor$/.test(methodName) // is it callbackifyable?\n        );\n        // clang-format on\n    });\n    methods.forEach(methodName => {\n        const originalMethod = Class.prototype[methodName];\n        if (!originalMethod.callbackified_) {\n            Class.prototype[methodName] = exports.callbackify(originalMethod);\n        }\n    });\n}\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/projectify/build/src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MissingProjectIdError = exports.replaceProjectIdToken = void 0;\nconst stream_1 = require(\"stream\");\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Populate the `{{projectId}}` placeholder.\n *\n * @throws {Error} If a projectId is required, but one is not provided.\n *\n * @param {*} - Any input value that may contain a placeholder. Arrays and objects will be looped.\n * @param {string} projectId - A projectId. If not provided\n * @return {*} - The original argument with all placeholders populated.\n */\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nfunction replaceProjectIdToken(value, projectId) {\n    if (Array.isArray(value)) {\n        value = value.map(v => replaceProjectIdToken(v, projectId));\n    }\n    if (value !== null &&\n        typeof value === 'object' &&\n        !(value instanceof Buffer) &&\n        !(value instanceof stream_1.Stream) &&\n        typeof value.hasOwnProperty === 'function') {\n        for (const opt in value) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (value.hasOwnProperty(opt)) {\n                value[opt] = replaceProjectIdToken(value[opt], projectId);\n            }\n        }\n    }\n    if (typeof value === 'string' &&\n        value.indexOf('{{projectId}}') > -1) {\n        if (!projectId || projectId === '{{projectId}}') {\n            throw new MissingProjectIdError();\n        }\n        value = value.replace(/{{projectId}}/g, projectId);\n    }\n    return value;\n}\nexports.replaceProjectIdToken = replaceProjectIdToken;\n/**\n * Custom error type for missing project ID errors.\n */\nclass MissingProjectIdError extends Error {\n    constructor() {\n        super(...arguments);\n        this.message = `Sorry, we cannot connect to Cloud Services without a project\n    ID. You may specify one with an environment variable named\n    \"GOOGLE_CLOUD_PROJECT\".`.replace(/ +/g, ' ');\n    }\n}\nexports.MissingProjectIdError = MissingProjectIdError;\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,qBAAqB,GAAG,QAAQ,qBAAqB,GAAG,KAAK;AACrE,MAAM;AACN,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC;;;;;;;;CAQC,GACD,+DAA+D;AAC/D,SAAS,sBAAsB,KAAK,EAAE,SAAS;IAC3C,IAAI,MAAM,OAAO,CAAC,QAAQ;QACtB,QAAQ,MAAM,GAAG,CAAC,CAAA,IAAK,sBAAsB,GAAG;IACpD;IACA,IAAI,UAAU,QACV,OAAO,UAAU,YACjB,CAAC,CAAC,iBAAiB,MAAM,KACzB,CAAC,CAAC,iBAAiB,SAAS,MAAM,KAClC,OAAO,MAAM,cAAc,KAAK,YAAY;QAC5C,IAAK,MAAM,OAAO,MAAO;YACrB,iDAAiD;YACjD,IAAI,MAAM,cAAc,CAAC,MAAM;gBAC3B,KAAK,CAAC,IAAI,GAAG,sBAAsB,KAAK,CAAC,IAAI,EAAE;YACnD;QACJ;IACJ;IACA,IAAI,OAAO,UAAU,YACjB,MAAM,OAAO,CAAC,mBAAmB,CAAC,GAAG;QACrC,IAAI,CAAC,aAAa,cAAc,iBAAiB;YAC7C,MAAM,IAAI;QACd;QACA,QAAQ,MAAM,OAAO,CAAC,kBAAkB;IAC5C;IACA,OAAO;AACX;AACA,QAAQ,qBAAqB,GAAG;AAChC;;CAEC,GACD,MAAM,8BAA8B;IAChC,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,OAAO,GAAG,CAAC;;2BAEG,CAAC,CAAC,OAAO,CAAC,OAAO;IACxC;AACJ;AACA,QAAQ,qBAAqB,GAAG,uBAChC,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/common/build/src/service.js"],"sourcesContent":["\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Service = exports.DEFAULT_PROJECT_ID_TOKEN = void 0;\n/*!\n * @module common/service\n */\nconst arrify = require(\"arrify\");\nconst extend = require(\"extend\");\nconst util_1 = require(\"./util\");\nexports.DEFAULT_PROJECT_ID_TOKEN = '{{projectId}}';\nclass Service {\n    /**\n     * Service is a base class, meant to be inherited from by a \"service,\" like\n     * BigQuery or Storage.\n     *\n     * This handles making authenticated requests by exposing a `makeReq_`\n     * function.\n     *\n     * @constructor\n     * @alias module:common/service\n     *\n     * @param {object} config - Configuration object.\n     * @param {string} config.baseUrl - The base URL to make API requests to.\n     * @param {string[]} config.scopes - The scopes required for the request.\n     * @param {object=} options - [Configuration object](#/docs).\n     */\n    constructor(config, options = {}) {\n        this.baseUrl = config.baseUrl;\n        this.apiEndpoint = config.apiEndpoint;\n        this.timeout = options.timeout;\n        this.globalInterceptors = arrify(options.interceptors_);\n        this.interceptors = [];\n        this.packageJson = config.packageJson;\n        this.projectId = options.projectId || exports.DEFAULT_PROJECT_ID_TOKEN;\n        this.projectIdRequired = config.projectIdRequired !== false;\n        this.providedUserAgent = options.userAgent;\n        const reqCfg = extend({}, config, {\n            projectIdRequired: this.projectIdRequired,\n            projectId: this.projectId,\n            authClient: options.authClient,\n            credentials: options.credentials,\n            keyFile: options.keyFilename,\n            email: options.email,\n            token: options.token,\n        });\n        this.makeAuthenticatedRequest =\n            util_1.util.makeAuthenticatedRequestFactory(reqCfg);\n        this.authClient = this.makeAuthenticatedRequest.authClient;\n        this.getCredentials = this.makeAuthenticatedRequest.getCredentials;\n        const isCloudFunctionEnv = !!process.env.FUNCTION_NAME;\n        if (isCloudFunctionEnv) {\n            this.interceptors.push({\n                request(reqOpts) {\n                    reqOpts.forever = false;\n                    return reqOpts;\n                },\n            });\n        }\n    }\n    /**\n     * Return the user's custom request interceptors.\n     */\n    getRequestInterceptors() {\n        // Interceptors should be returned in the order they were assigned.\n        return [].slice\n            .call(this.globalInterceptors)\n            .concat(this.interceptors)\n            .filter(interceptor => typeof interceptor.request === 'function')\n            .map(interceptor => interceptor.request);\n    }\n    getProjectId(callback) {\n        if (!callback) {\n            return this.getProjectIdAsync();\n        }\n        this.getProjectIdAsync().then(p => callback(null, p), callback);\n    }\n    async getProjectIdAsync() {\n        const projectId = await this.authClient.getProjectId();\n        if (this.projectId === exports.DEFAULT_PROJECT_ID_TOKEN && projectId) {\n            this.projectId = projectId;\n        }\n        return this.projectId;\n    }\n    request_(reqOpts, callback) {\n        reqOpts = extend(true, {}, reqOpts, { timeout: this.timeout });\n        const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n        const uriComponents = [this.baseUrl];\n        if (this.projectIdRequired) {\n            if (reqOpts.projectId) {\n                uriComponents.push('projects');\n                uriComponents.push(reqOpts.projectId);\n            }\n            else {\n                uriComponents.push('projects');\n                uriComponents.push(this.projectId);\n            }\n        }\n        uriComponents.push(reqOpts.uri);\n        if (isAbsoluteUrl) {\n            uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n        }\n        reqOpts.uri = uriComponents\n            .map(uriComponent => {\n            const trimSlashesRegex = /^\\/*|\\/*$/g;\n            return uriComponent.replace(trimSlashesRegex, '');\n        })\n            .join('/')\n            // Some URIs have colon separators.\n            // Bad: https://.../projects/:list\n            // Good: https://.../projects:list\n            .replace(/\\/:/g, ':');\n        const requestInterceptors = this.getRequestInterceptors();\n        arrify(reqOpts.interceptors_).forEach(interceptor => {\n            if (typeof interceptor.request === 'function') {\n                requestInterceptors.push(interceptor.request);\n            }\n        });\n        requestInterceptors.forEach(requestInterceptor => {\n            reqOpts = requestInterceptor(reqOpts);\n        });\n        delete reqOpts.interceptors_;\n        const pkg = this.packageJson;\n        let userAgent = util_1.util.getUserAgentFromPackageJson(pkg);\n        if (this.providedUserAgent) {\n            userAgent = `${this.providedUserAgent} ${userAgent}`;\n        }\n        reqOpts.headers = extend({}, reqOpts.headers, {\n            'User-Agent': userAgent,\n            'x-goog-api-client': `gl-node/${process.versions.node} gccl/${pkg.version}`,\n        });\n        if (reqOpts.shouldReturnStream) {\n            return this.makeAuthenticatedRequest(reqOpts);\n        }\n        else {\n            this.makeAuthenticatedRequest(reqOpts, callback);\n        }\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     * @param {function} callback - The callback function passed to `request`.\n     */\n    request(reqOpts, callback) {\n        Service.prototype.request_.call(this, reqOpts, callback);\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     */\n    requestStream(reqOpts) {\n        const opts = extend(true, reqOpts, { shouldReturnStream: true });\n        return Service.prototype.request_.call(this, opts);\n    }\n}\nexports.Service = Service;\n//# sourceMappingURL=service.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/common/build/src/util.js"],"sourcesContent":["\"use strict\";\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.util = exports.Util = exports.PartialFailureError = exports.ApiError = void 0;\n/*!\n * @module common/util\n */\nconst projectify_1 = require(\"@google-cloud/projectify\");\nconst htmlEntities = require(\"html-entities\");\nconst extend = require(\"extend\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst retryRequest = require(\"retry-request\");\nconst stream_1 = require(\"stream\");\nconst teeny_request_1 = require(\"teeny-request\");\nconst service_1 = require(\"./service\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst duplexify = require('duplexify');\nconst requestDefaults = {\n    timeout: 60000,\n    gzip: true,\n    forever: true,\n    pool: {\n        maxSockets: Infinity,\n    },\n};\n/**\n * Default behavior: Automatically retry retriable server errors.\n *\n * @const {boolean}\n * @private\n */\nconst AUTO_RETRY_DEFAULT = true;\n/**\n * Default behavior: Only attempt to retry retriable errors 3 times.\n *\n * @const {number}\n * @private\n */\nconst MAX_RETRY_DEFAULT = 3;\n/**\n * Custom error type for API errors.\n *\n * @param {object} errorBody - Error object.\n */\nclass ApiError extends Error {\n    constructor(errorBodyOrMessage) {\n        super();\n        if (typeof errorBodyOrMessage !== 'object') {\n            this.message = errorBodyOrMessage || '';\n            return;\n        }\n        const errorBody = errorBodyOrMessage;\n        this.code = errorBody.code;\n        this.errors = errorBody.errors;\n        this.response = errorBody.response;\n        try {\n            this.errors = JSON.parse(this.response.body).error.errors;\n        }\n        catch (e) {\n            this.errors = errorBody.errors;\n        }\n        this.message = ApiError.createMultiErrorMessage(errorBody, this.errors);\n        Error.captureStackTrace(this);\n    }\n    /**\n     * Pieces together an error message by combining all unique error messages\n     * returned from a single GoogleError\n     *\n     * @private\n     *\n     * @param {GoogleErrorBody} err The original error.\n     * @param {GoogleInnerError[]} [errors] Inner errors, if any.\n     * @returns {string}\n     */\n    static createMultiErrorMessage(err, errors) {\n        const messages = new Set();\n        if (err.message) {\n            messages.add(err.message);\n        }\n        if (errors && errors.length) {\n            errors.forEach(({ message }) => messages.add(message));\n        }\n        else if (err.response && err.response.body) {\n            messages.add(htmlEntities.decode(err.response.body.toString()));\n        }\n        else if (!err.message) {\n            messages.add('A failure occurred during this request.');\n        }\n        let messageArr = Array.from(messages);\n        if (messageArr.length > 1) {\n            messageArr = messageArr.map((message, i) => `    ${i + 1}. ${message}`);\n            messageArr.unshift('Multiple errors occurred during the request. Please see the `errors` array for complete details.\\n');\n            messageArr.push('\\n');\n        }\n        return messageArr.join('\\n');\n    }\n}\nexports.ApiError = ApiError;\n/**\n * Custom error type for partial errors returned from the API.\n *\n * @param {object} b - Error object.\n */\nclass PartialFailureError extends Error {\n    constructor(b) {\n        super();\n        const errorObject = b;\n        this.errors = errorObject.errors;\n        this.name = 'PartialFailureError';\n        this.response = errorObject.response;\n        this.message = ApiError.createMultiErrorMessage(errorObject, this.errors);\n    }\n}\nexports.PartialFailureError = PartialFailureError;\nclass Util {\n    constructor() {\n        this.ApiError = ApiError;\n        this.PartialFailureError = PartialFailureError;\n    }\n    /**\n     * No op.\n     *\n     * @example\n     * function doSomething(callback) {\n     *   callback = callback || noop;\n     * }\n     */\n    noop() { }\n    /**\n     * Uniformly process an API response.\n     *\n     * @param {*} err - Error value.\n     * @param {*} resp - Response value.\n     * @param {*} body - Body value.\n     * @param {function} callback - The callback function.\n     */\n    handleResp(err, resp, body, callback) {\n        callback = callback || util.noop;\n        const parsedResp = extend(true, { err: err || null }, resp && util.parseHttpRespMessage(resp), body && util.parseHttpRespBody(body));\n        // Assign the parsed body to resp.body, even if { json: false } was passed\n        // as a request option.\n        // We assume that nobody uses the previously unparsed value of resp.body.\n        if (!parsedResp.err && resp && typeof parsedResp.body === 'object') {\n            parsedResp.resp.body = parsedResp.body;\n        }\n        if (parsedResp.err && resp) {\n            parsedResp.err.response = resp;\n        }\n        callback(parsedResp.err, parsedResp.body, parsedResp.resp);\n    }\n    /**\n     * Sniff an incoming HTTP response message for errors.\n     *\n     * @param {object} httpRespMessage - An incoming HTTP response message from `request`.\n     * @return {object} parsedHttpRespMessage - The parsed response.\n     * @param {?error} parsedHttpRespMessage.err - An error detected.\n     * @param {object} parsedHttpRespMessage.resp - The original response object.\n     */\n    parseHttpRespMessage(httpRespMessage) {\n        const parsedHttpRespMessage = {\n            resp: httpRespMessage,\n        };\n        if (httpRespMessage.statusCode < 200 || httpRespMessage.statusCode > 299) {\n            // Unknown error. Format according to ApiError standard.\n            parsedHttpRespMessage.err = new ApiError({\n                errors: new Array(),\n                code: httpRespMessage.statusCode,\n                message: httpRespMessage.statusMessage,\n                response: httpRespMessage,\n            });\n        }\n        return parsedHttpRespMessage;\n    }\n    /**\n     * Parse the response body from an HTTP request.\n     *\n     * @param {object} body - The response body.\n     * @return {object} parsedHttpRespMessage - The parsed response.\n     * @param {?error} parsedHttpRespMessage.err - An error detected.\n     * @param {object} parsedHttpRespMessage.body - The original body value provided\n     *     will try to be JSON.parse'd. If it's successful, the parsed value will\n     * be returned here, otherwise the original value and an error will be returned.\n     */\n    parseHttpRespBody(body) {\n        const parsedHttpRespBody = {\n            body,\n        };\n        if (typeof body === 'string') {\n            try {\n                parsedHttpRespBody.body = JSON.parse(body);\n            }\n            catch (err) {\n                parsedHttpRespBody.body = body;\n            }\n        }\n        if (parsedHttpRespBody.body && parsedHttpRespBody.body.error) {\n            // Error from JSON API.\n            parsedHttpRespBody.err = new ApiError(parsedHttpRespBody.body.error);\n        }\n        return parsedHttpRespBody;\n    }\n    /**\n     * Take a Duplexify stream, fetch an authenticated connection header, and\n     * create an outgoing writable stream.\n     *\n     * @param {Duplexify} dup - Duplexify stream.\n     * @param {object} options - Configuration object.\n     * @param {module:common/connection} options.connection - A connection instance used to get a token with and send the request through.\n     * @param {object} options.metadata - Metadata to send at the head of the request.\n     * @param {object} options.request - Request object, in the format of a standard Node.js http.request() object.\n     * @param {string=} options.request.method - Default: \"POST\".\n     * @param {string=} options.request.qs.uploadType - Default: \"multipart\".\n     * @param {string=} options.streamContentType - Default: \"application/octet-stream\".\n     * @param {function} onComplete - Callback, executed after the writable Request stream has completed.\n     */\n    makeWritableStream(dup, options, onComplete) {\n        onComplete = onComplete || util.noop;\n        const writeStream = new ProgressStream();\n        writeStream.on('progress', evt => dup.emit('progress', evt));\n        dup.setWritable(writeStream);\n        const defaultReqOpts = {\n            method: 'POST',\n            qs: {\n                uploadType: 'multipart',\n            },\n            timeout: 0,\n            maxRetries: 0,\n        };\n        const metadata = options.metadata || {};\n        const reqOpts = extend(true, defaultReqOpts, options.request, {\n            multipart: [\n                {\n                    'Content-Type': 'application/json',\n                    body: JSON.stringify(metadata),\n                },\n                {\n                    'Content-Type': metadata.contentType || 'application/octet-stream',\n                    body: writeStream,\n                },\n            ],\n        });\n        options.makeAuthenticatedRequest(reqOpts, {\n            onAuthenticated(err, authenticatedReqOpts) {\n                if (err) {\n                    dup.destroy(err);\n                    return;\n                }\n                const request = teeny_request_1.teenyRequest.defaults(requestDefaults);\n                request(authenticatedReqOpts, (err, resp, body) => {\n                    util.handleResp(err, resp, body, (err, data) => {\n                        if (err) {\n                            dup.destroy(err);\n                            return;\n                        }\n                        dup.emit('response', resp);\n                        onComplete(data);\n                    });\n                });\n            },\n        });\n    }\n    /**\n     * Returns true if the API request should be retried, given the error that was\n     * given the first time the request was attempted. This is used for rate limit\n     * related errors as well as intermittent server errors.\n     *\n     * @param {error} err - The API error to check if it is appropriate to retry.\n     * @return {boolean} True if the API request should be retried, false otherwise.\n     */\n    shouldRetryRequest(err) {\n        if (err) {\n            if ([408, 429, 500, 502, 503, 504].indexOf(err.code) !== -1) {\n                return true;\n            }\n            if (err.errors) {\n                for (const e of err.errors) {\n                    const reason = e.reason;\n                    if (reason === 'rateLimitExceeded') {\n                        return true;\n                    }\n                    if (reason === 'userRateLimitExceeded') {\n                        return true;\n                    }\n                    if (reason && reason.includes('EAI_AGAIN')) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Get a function for making authenticated requests.\n     *\n     * @param {object} config - Configuration object.\n     * @param {boolean=} config.autoRetry - Automatically retry requests if the\n     *     response is related to rate limits or certain intermittent server\n     * errors. We will exponentially backoff subsequent requests by default.\n     * (default: true)\n     * @param {object=} config.credentials - Credentials object.\n     * @param {boolean=} config.customEndpoint - If true, just return the provided request options. Default: false.\n     * @param {boolean=} config.useAuthWithCustomEndpoint - If true, will authenticate when using a custom endpoint. Default: false.\n     * @param {string=} config.email - Account email address, required for PEM/P12 usage.\n     * @param {number=} config.maxRetries - Maximum number of automatic retries attempted before returning the error. (default: 3)\n     * @param {string=} config.keyFile - Path to a .json, .pem, or .p12 keyfile.\n     * @param {array} config.scopes - Array of scopes required for the API.\n     */\n    makeAuthenticatedRequestFactory(config) {\n        const googleAutoAuthConfig = extend({}, config);\n        if (googleAutoAuthConfig.projectId === service_1.DEFAULT_PROJECT_ID_TOKEN) {\n            delete googleAutoAuthConfig.projectId;\n        }\n        let authClient;\n        if (googleAutoAuthConfig.authClient instanceof google_auth_library_1.GoogleAuth) {\n            // Use an existing `GoogleAuth`\n            authClient = googleAutoAuthConfig.authClient;\n        }\n        else {\n            // Pass an `AuthClient` to `GoogleAuth`, if available\n            const config = {\n                ...googleAutoAuthConfig,\n                authClient: googleAutoAuthConfig.authClient,\n            };\n            authClient = new google_auth_library_1.GoogleAuth(config);\n        }\n        function makeAuthenticatedRequest(reqOpts, optionsOrCallback) {\n            let stream;\n            let projectId;\n            const reqConfig = extend({}, config);\n            let activeRequest_;\n            if (!optionsOrCallback) {\n                stream = duplexify();\n                reqConfig.stream = stream;\n            }\n            const options = typeof optionsOrCallback === 'object' ? optionsOrCallback : undefined;\n            const callback = typeof optionsOrCallback === 'function' ? optionsOrCallback : undefined;\n            async function setProjectId() {\n                projectId = await authClient.getProjectId();\n            }\n            const onAuthenticated = async (err, authenticatedReqOpts) => {\n                const authLibraryError = err;\n                const autoAuthFailed = err &&\n                    err.message.indexOf('Could not load the default credentials') > -1;\n                if (autoAuthFailed) {\n                    // Even though authentication failed, the API might not actually\n                    // care.\n                    authenticatedReqOpts = reqOpts;\n                }\n                if (!err || autoAuthFailed) {\n                    try {\n                        // Try with existing `projectId` value\n                        authenticatedReqOpts = util.decorateRequest(authenticatedReqOpts, projectId);\n                        err = null;\n                    }\n                    catch (e) {\n                        if (e instanceof projectify_1.MissingProjectIdError) {\n                            // A `projectId` was required, but we don't have one.\n                            try {\n                                // Attempt to get the `projectId`\n                                await setProjectId();\n                                authenticatedReqOpts = util.decorateRequest(authenticatedReqOpts, projectId);\n                                err = null;\n                            }\n                            catch (e) {\n                                // Re-use the \"Could not load the default credentials error\" if\n                                // auto auth failed.\n                                err = err || e;\n                            }\n                        }\n                        else {\n                            // Some other error unrelated to missing `projectId`\n                            err = err || e;\n                        }\n                    }\n                }\n                if (err) {\n                    if (stream) {\n                        stream.destroy(err);\n                    }\n                    else {\n                        const fn = options && options.onAuthenticated\n                            ? options.onAuthenticated\n                            : callback;\n                        fn(err);\n                    }\n                    return;\n                }\n                if (options && options.onAuthenticated) {\n                    options.onAuthenticated(null, authenticatedReqOpts);\n                }\n                else {\n                    activeRequest_ = util.makeRequest(authenticatedReqOpts, reqConfig, (apiResponseError, ...params) => {\n                        if (apiResponseError &&\n                            apiResponseError.code === 401 &&\n                            authLibraryError) {\n                            // Re-use the \"Could not load the default credentials error\" if\n                            // the API request failed due to missing credentials.\n                            apiResponseError = authLibraryError;\n                        }\n                        callback(apiResponseError, ...params);\n                    });\n                }\n            };\n            const prepareRequest = async () => {\n                try {\n                    const getProjectId = async () => {\n                        if (config.projectId &&\n                            config.projectId !== service_1.DEFAULT_PROJECT_ID_TOKEN) {\n                            // The user provided a project ID. We don't need to check with the\n                            // auth client, it could be incorrect.\n                            return config.projectId;\n                        }\n                        if (config.projectIdRequired === false) {\n                            // A projectId is not required. Return the default.\n                            return service_1.DEFAULT_PROJECT_ID_TOKEN;\n                        }\n                        return setProjectId();\n                    };\n                    const authorizeRequest = async () => {\n                        if (reqConfig.customEndpoint &&\n                            !reqConfig.useAuthWithCustomEndpoint) {\n                            // Using a custom API override. Do not use `google-auth-library` for\n                            // authentication. (ex: connecting to a local Datastore server)\n                            return reqOpts;\n                        }\n                        else {\n                            return authClient.authorizeRequest(reqOpts);\n                        }\n                    };\n                    const [_projectId, authorizedReqOpts] = await Promise.all([\n                        getProjectId(),\n                        authorizeRequest(),\n                    ]);\n                    if (_projectId) {\n                        projectId = _projectId;\n                    }\n                    return onAuthenticated(null, authorizedReqOpts);\n                }\n                catch (e) {\n                    return onAuthenticated(e);\n                }\n            };\n            prepareRequest();\n            if (stream) {\n                return stream;\n            }\n            return {\n                abort() {\n                    setImmediate(() => {\n                        if (activeRequest_) {\n                            activeRequest_.abort();\n                            activeRequest_ = null;\n                        }\n                    });\n                },\n            };\n        }\n        const mar = makeAuthenticatedRequest;\n        mar.getCredentials = authClient.getCredentials.bind(authClient);\n        mar.authClient = authClient;\n        return mar;\n    }\n    /**\n     * Make a request through the `retryRequest` module with built-in error\n     * handling and exponential back off.\n     *\n     * @param {object} reqOpts - Request options in the format `request` expects.\n     * @param {object=} config - Configuration object.\n     * @param {boolean=} config.autoRetry - Automatically retry requests if the\n     *     response is related to rate limits or certain intermittent server\n     * errors. We will exponentially backoff subsequent requests by default.\n     * (default: true)\n     * @param {number=} config.maxRetries - Maximum number of automatic retries\n     *     attempted before returning the error. (default: 3)\n     * @param {object=} config.request - HTTP module for request calls.\n     * @param {function} callback - The callback function.\n     */\n    makeRequest(reqOpts, config, callback) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let autoRetryValue = AUTO_RETRY_DEFAULT;\n        if (config.autoRetry !== undefined &&\n            ((_a = config.retryOptions) === null || _a === void 0 ? void 0 : _a.autoRetry) !== undefined) {\n            throw new ApiError('autoRetry is deprecated. Use retryOptions.autoRetry instead.');\n        }\n        else if (config.autoRetry !== undefined) {\n            autoRetryValue = config.autoRetry;\n        }\n        else if (((_b = config.retryOptions) === null || _b === void 0 ? void 0 : _b.autoRetry) !== undefined) {\n            autoRetryValue = config.retryOptions.autoRetry;\n        }\n        let maxRetryValue = MAX_RETRY_DEFAULT;\n        if (config.maxRetries && ((_c = config.retryOptions) === null || _c === void 0 ? void 0 : _c.maxRetries)) {\n            throw new ApiError('maxRetries is deprecated. Use retryOptions.maxRetries instead.');\n        }\n        else if (config.maxRetries) {\n            maxRetryValue = config.maxRetries;\n        }\n        else if ((_d = config.retryOptions) === null || _d === void 0 ? void 0 : _d.maxRetries) {\n            maxRetryValue = config.retryOptions.maxRetries;\n        }\n        const options = {\n            request: teeny_request_1.teenyRequest.defaults(requestDefaults),\n            retries: autoRetryValue !== false ? maxRetryValue : 0,\n            noResponseRetries: autoRetryValue !== false ? maxRetryValue : 0,\n            shouldRetryFn(httpRespMessage) {\n                var _a, _b;\n                const err = util.parseHttpRespMessage(httpRespMessage).err;\n                if ((_a = config.retryOptions) === null || _a === void 0 ? void 0 : _a.retryableErrorFn) {\n                    return err && ((_b = config.retryOptions) === null || _b === void 0 ? void 0 : _b.retryableErrorFn(err));\n                }\n                return err && util.shouldRetryRequest(err);\n            },\n            maxRetryDelay: (_e = config.retryOptions) === null || _e === void 0 ? void 0 : _e.maxRetryDelay,\n            retryDelayMultiplier: (_f = config.retryOptions) === null || _f === void 0 ? void 0 : _f.retryDelayMultiplier,\n            totalTimeout: (_g = config.retryOptions) === null || _g === void 0 ? void 0 : _g.totalTimeout,\n        };\n        if (typeof reqOpts.maxRetries === 'number') {\n            options.retries = reqOpts.maxRetries;\n        }\n        if (!config.stream) {\n            return retryRequest(reqOpts, options, (err, response, body) => {\n                util.handleResp(err, response, body, callback);\n            });\n        }\n        const dup = config.stream;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let requestStream;\n        const isGetRequest = (reqOpts.method || 'GET').toUpperCase() === 'GET';\n        if (isGetRequest) {\n            requestStream = retryRequest(reqOpts, options);\n            dup.setReadable(requestStream);\n        }\n        else {\n            // Streaming writable HTTP requests cannot be retried.\n            requestStream = options.request(reqOpts);\n            dup.setWritable(requestStream);\n        }\n        // Replay the Request events back to the stream.\n        requestStream\n            .on('error', dup.destroy.bind(dup))\n            .on('response', dup.emit.bind(dup, 'response'))\n            .on('complete', dup.emit.bind(dup, 'complete'));\n        dup.abort = requestStream.abort;\n        return dup;\n    }\n    /**\n     * Decorate the options about to be made in a request.\n     *\n     * @param {object} reqOpts - The options to be passed to `request`.\n     * @param {string} projectId - The project ID.\n     * @return {object} reqOpts - The decorated reqOpts.\n     */\n    decorateRequest(reqOpts, projectId) {\n        delete reqOpts.autoPaginate;\n        delete reqOpts.autoPaginateVal;\n        delete reqOpts.objectMode;\n        if (reqOpts.qs !== null && typeof reqOpts.qs === 'object') {\n            delete reqOpts.qs.autoPaginate;\n            delete reqOpts.qs.autoPaginateVal;\n            reqOpts.qs = (0, projectify_1.replaceProjectIdToken)(reqOpts.qs, projectId);\n        }\n        if (Array.isArray(reqOpts.multipart)) {\n            reqOpts.multipart = reqOpts.multipart.map(part => {\n                return (0, projectify_1.replaceProjectIdToken)(part, projectId);\n            });\n        }\n        if (reqOpts.json !== null && typeof reqOpts.json === 'object') {\n            delete reqOpts.json.autoPaginate;\n            delete reqOpts.json.autoPaginateVal;\n            reqOpts.json = (0, projectify_1.replaceProjectIdToken)(reqOpts.json, projectId);\n        }\n        reqOpts.uri = (0, projectify_1.replaceProjectIdToken)(reqOpts.uri, projectId);\n        return reqOpts;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isCustomType(unknown, module) {\n        function getConstructorName(obj) {\n            return obj.constructor && obj.constructor.name.toLowerCase();\n        }\n        const moduleNameParts = module.split('/');\n        const parentModuleName = moduleNameParts[0] && moduleNameParts[0].toLowerCase();\n        const subModuleName = moduleNameParts[1] && moduleNameParts[1].toLowerCase();\n        if (subModuleName && getConstructorName(unknown) !== subModuleName) {\n            return false;\n        }\n        let walkingModule = unknown;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            if (getConstructorName(walkingModule) === parentModuleName) {\n                return true;\n            }\n            walkingModule = walkingModule.parent;\n            if (!walkingModule) {\n                return false;\n            }\n        }\n    }\n    /**\n     * Create a properly-formatted User-Agent string from a package.json file.\n     *\n     * @param {object} packageJson - A module's package.json file.\n     * @return {string} userAgent - The formatted User-Agent string.\n     */\n    getUserAgentFromPackageJson(packageJson) {\n        const hyphenatedPackageName = packageJson.name\n            .replace('@google-cloud', 'gcloud-node') // For legacy purposes.\n            .replace('/', '-'); // For UA spec-compliance purposes.\n        return hyphenatedPackageName + '/' + packageJson.version;\n    }\n    /**\n     * Given two parameters, figure out if this is either:\n     *  - Just a callback function\n     *  - An options object, and then a callback function\n     * @param optionsOrCallback An options object or callback.\n     * @param cb A potentially undefined callback.\n     */\n    maybeOptionsOrCallback(optionsOrCallback, cb) {\n        return typeof optionsOrCallback === 'function'\n            ? [{}, optionsOrCallback]\n            : [optionsOrCallback, cb];\n    }\n}\nexports.Util = Util;\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\nclass ProgressStream extends stream_1.Transform {\n    constructor() {\n        super(...arguments);\n        this.bytesRead = 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _transform(chunk, encoding, callback) {\n        this.bytesRead += chunk.length;\n        this.emit('progress', { bytesWritten: this.bytesRead, contentLength: '*' });\n        this.push(chunk);\n        callback();\n    }\n}\nconst util = new Util();\nexports.util = util;\n//# sourceMappingURL=util.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1016, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/common/build/src/service-object.js"],"sourcesContent":["\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceObject = void 0;\n/*!\n * @module common/service-object\n */\nconst promisify_1 = require(\"@google-cloud/promisify\");\nconst arrify = require(\"arrify\");\nconst events_1 = require(\"events\");\nconst extend = require(\"extend\");\nconst util_1 = require(\"./util\");\n/**\n * ServiceObject is a base class, meant to be inherited from by a \"service\n * object,\" like a BigQuery dataset or Storage bucket.\n *\n * Most of the time, these objects share common functionality; they can be\n * created or deleted, and you can get or set their metadata.\n *\n * By inheriting from this class, a service object will be extended with these\n * shared behaviors. Note that any method can be overridden when the service\n * object requires specific behavior.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass ServiceObject extends events_1.EventEmitter {\n    /*\n     * @constructor\n     * @alias module:common/service-object\n     *\n     * @private\n     *\n     * @param {object} config - Configuration object.\n     * @param {string} config.baseUrl - The base URL to make API requests to.\n     * @param {string} config.createMethod - The method which creates this object.\n     * @param {string=} config.id - The identifier of the object. For example, the\n     *     name of a Storage bucket or Pub/Sub topic.\n     * @param {object=} config.methods - A map of each method name that should be inherited.\n     * @param {object} config.methods[].reqOpts - Default request options for this\n     *     particular method. A common use case is when `setMetadata` requires a\n     *     `PUT` method to override the default `PATCH`.\n     * @param {object} config.parent - The parent service instance. For example, an\n     *     instance of Storage if the object is Bucket.\n     */\n    constructor(config) {\n        super();\n        this.metadata = {};\n        this.baseUrl = config.baseUrl;\n        this.parent = config.parent; // Parent class.\n        this.id = config.id; // Name or ID (e.g. dataset ID, bucket name, etc).\n        this.createMethod = config.createMethod;\n        this.methods = config.methods || {};\n        this.interceptors = [];\n        this.pollIntervalMs = config.pollIntervalMs;\n        this.projectId = config.projectId;\n        if (config.methods) {\n            // This filters the ServiceObject instance (e.g. a \"File\") to only have\n            // the configured methods. We make a couple of exceptions for core-\n            // functionality (\"request()\" and \"getRequestInterceptors()\")\n            Object.getOwnPropertyNames(ServiceObject.prototype)\n                .filter(methodName => {\n                return (\n                // All ServiceObjects need `request` and `getRequestInterceptors`.\n                // clang-format off\n                !/^request/.test(methodName) &&\n                    !/^getRequestInterceptors/.test(methodName) &&\n                    // clang-format on\n                    // The ServiceObject didn't redefine the method.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this[methodName] ===\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        ServiceObject.prototype[methodName] &&\n                    // This method isn't wanted.\n                    !config.methods[methodName]);\n            })\n                .forEach(methodName => {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this[methodName] = undefined;\n            });\n        }\n    }\n    create(optionsOrCallback, callback) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        const args = [this.id];\n        if (typeof optionsOrCallback === 'function') {\n            callback = optionsOrCallback;\n        }\n        if (typeof optionsOrCallback === 'object') {\n            args.push(optionsOrCallback);\n        }\n        // Wrap the callback to return *this* instance of the object, not the\n        // newly-created one.\n        // tslint: disable-next-line no-any\n        function onCreate(...args) {\n            const [err, instance] = args;\n            if (!err) {\n                self.metadata = instance.metadata;\n                args[1] = self; // replace the created `instance` with this one.\n            }\n            callback(...args);\n        }\n        args.push(onCreate);\n        // eslint-disable-next-line prefer-spread\n        this.createMethod.apply(null, args);\n    }\n    delete(optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const ignoreNotFound = options.ignoreNotFound;\n        delete options.ignoreNotFound;\n        const methodConfig = (typeof this.methods.delete === 'object' && this.methods.delete) || {};\n        const reqOpts = extend(true, {\n            method: 'DELETE',\n            uri: '',\n        }, methodConfig.reqOpts, {\n            qs: options,\n        });\n        // The `request` method may have been overridden to hold any special\n        // behavior. Ensure we call the original `request` method.\n        ServiceObject.prototype.request.call(this, reqOpts, (err, ...args) => {\n            if (err) {\n                if (err.code === 404 && ignoreNotFound) {\n                    err = null;\n                }\n            }\n            callback(err, ...args);\n        });\n    }\n    exists(optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        this.get(options, err => {\n            if (err) {\n                if (err.code === 404) {\n                    callback(null, false);\n                }\n                else {\n                    callback(err);\n                }\n                return;\n            }\n            callback(null, true);\n        });\n    }\n    get(optionsOrCallback, cb) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        const [opts, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const options = Object.assign({}, opts);\n        const autoCreate = options.autoCreate && typeof this.create === 'function';\n        delete options.autoCreate;\n        function onCreate(err, instance, apiResponse) {\n            if (err) {\n                if (err.code === 409) {\n                    self.get(options, callback);\n                    return;\n                }\n                callback(err, null, apiResponse);\n                return;\n            }\n            callback(null, instance, apiResponse);\n        }\n        this.getMetadata(options, (err, metadata) => {\n            if (err) {\n                if (err.code === 404 && autoCreate) {\n                    const args = [];\n                    if (Object.keys(options).length > 0) {\n                        args.push(options);\n                    }\n                    args.push(onCreate);\n                    self.create(...args);\n                    return;\n                }\n                callback(err, null, metadata);\n                return;\n            }\n            callback(null, self, metadata);\n        });\n    }\n    getMetadata(optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const methodConfig = (typeof this.methods.getMetadata === 'object' &&\n            this.methods.getMetadata) ||\n            {};\n        const reqOpts = extend(true, {\n            uri: '',\n        }, methodConfig.reqOpts, {\n            qs: options,\n        });\n        // The `request` method may have been overridden to hold any special\n        // behavior. Ensure we call the original `request` method.\n        ServiceObject.prototype.request.call(this, reqOpts, (err, body, res) => {\n            this.metadata = body;\n            callback(err, this.metadata, res);\n        });\n    }\n    /**\n     * Return the user's custom request interceptors.\n     */\n    getRequestInterceptors() {\n        // Interceptors should be returned in the order they were assigned.\n        const localInterceptors = this.interceptors\n            .filter(interceptor => typeof interceptor.request === 'function')\n            .map(interceptor => interceptor.request);\n        return this.parent.getRequestInterceptors().concat(localInterceptors);\n    }\n    setMetadata(metadata, optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const methodConfig = (typeof this.methods.setMetadata === 'object' &&\n            this.methods.setMetadata) ||\n            {};\n        const reqOpts = extend(true, {}, {\n            method: 'PATCH',\n            uri: '',\n        }, methodConfig.reqOpts, {\n            json: metadata,\n            qs: options,\n        });\n        // The `request` method may have been overridden to hold any special\n        // behavior. Ensure we call the original `request` method.\n        ServiceObject.prototype.request.call(this, reqOpts, (err, body, res) => {\n            this.metadata = body;\n            callback(err, this.metadata, res);\n        });\n    }\n    request_(reqOpts, callback) {\n        reqOpts = extend(true, {}, reqOpts);\n        if (this.projectId) {\n            reqOpts.projectId = this.projectId;\n        }\n        const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n        const uriComponents = [this.baseUrl, this.id || '', reqOpts.uri];\n        if (isAbsoluteUrl) {\n            uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n        }\n        reqOpts.uri = uriComponents\n            .filter(x => x.trim()) // Limit to non-empty strings.\n            .map(uriComponent => {\n            const trimSlashesRegex = /^\\/*|\\/*$/g;\n            return uriComponent.replace(trimSlashesRegex, '');\n        })\n            .join('/');\n        const childInterceptors = arrify(reqOpts.interceptors_);\n        const localInterceptors = [].slice.call(this.interceptors);\n        reqOpts.interceptors_ = childInterceptors.concat(localInterceptors);\n        if (reqOpts.shouldReturnStream) {\n            return this.parent.requestStream(reqOpts);\n        }\n        this.parent.request(reqOpts, callback);\n    }\n    request(reqOpts, callback) {\n        this.request_(reqOpts, callback);\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     */\n    requestStream(reqOpts) {\n        const opts = extend(true, reqOpts, { shouldReturnStream: true });\n        return this.request_(opts);\n    }\n}\nexports.ServiceObject = ServiceObject;\n(0, promisify_1.promisifyAll)(ServiceObject, { exclude: ['getRequestInterceptors'] });\n//# sourceMappingURL=service-object.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1290, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/common/build/src/operation.js"],"sourcesContent":["\"use strict\";\n// Copyright 2016 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Operation = void 0;\n/*!\n * @module common/operation\n */\nconst service_object_1 = require(\"./service-object\");\nconst util_1 = require(\"util\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass Operation extends service_object_1.ServiceObject {\n    /**\n     * An Operation object allows you to interact with APIs that take longer to\n     * process things.\n     *\n     * @constructor\n     * @alias module:common/operation\n     *\n     * @param {object} config - Configuration object.\n     * @param {module:common/service|module:common/serviceObject|module:common/grpcService|module:common/grpcServiceObject} config.parent - The parent object.\n     */\n    constructor(config) {\n        const methods = {\n            /**\n             * Checks to see if an operation exists.\n             */\n            exists: true,\n            /**\n             * Retrieves the operation.\n             */\n            get: true,\n            /**\n             * Retrieves metadata for the operation.\n             */\n            getMetadata: {\n                reqOpts: {\n                    name: config.id,\n                },\n            },\n        };\n        config = Object.assign({\n            baseUrl: '',\n        }, config);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        config.methods = (config.methods || methods);\n        super(config);\n        this.completeListeners = 0;\n        this.hasActiveListeners = false;\n        this.listenForEvents_();\n    }\n    /**\n     * Wraps the `complete` and `error` events in a Promise.\n     *\n     * @return {Promise}\n     */\n    promise() {\n        return new Promise((resolve, reject) => {\n            this.on('error', reject).on('complete', (metadata) => {\n                resolve([metadata]);\n            });\n        });\n    }\n    /**\n     * Begin listening for events on the operation. This method keeps track of how\n     * many \"complete\" listeners are registered and removed, making sure polling\n     * is handled automatically.\n     *\n     * As long as there is one active \"complete\" listener, the connection is open.\n     * When there are no more listeners, the polling stops.\n     *\n     * @private\n     */\n    listenForEvents_() {\n        this.on('newListener', (event) => {\n            if (event === 'complete') {\n                this.completeListeners++;\n                if (!this.hasActiveListeners) {\n                    this.hasActiveListeners = true;\n                    this.startPolling_();\n                }\n            }\n        });\n        this.on('removeListener', (event) => {\n            if (event === 'complete' && --this.completeListeners === 0) {\n                this.hasActiveListeners = false;\n            }\n        });\n    }\n    /**\n     * Poll for a status update. Returns null for an incomplete\n     * status, and metadata for a complete status.\n     *\n     * @private\n     */\n    poll_(callback) {\n        this.getMetadata((err, body) => {\n            if (err || body.error) {\n                callback(err || body.error);\n                return;\n            }\n            if (!body.done) {\n                callback(null);\n                return;\n            }\n            callback(null, body);\n        });\n    }\n    /**\n     * Poll `getMetadata` to check the operation's status. This runs a loop to\n     * ping the API on an interval.\n     *\n     * Note: This method is automatically called once a \"complete\" event handler\n     * is registered on the operation.\n     *\n     * @private\n     */\n    async startPolling_() {\n        if (!this.hasActiveListeners) {\n            return;\n        }\n        try {\n            const metadata = await (0, util_1.promisify)(this.poll_.bind(this))();\n            if (!metadata) {\n                setTimeout(this.startPolling_.bind(this), this.pollIntervalMs || 500);\n                return;\n            }\n            this.emit('complete', metadata);\n        }\n        catch (err) {\n            this.emit('error', err);\n        }\n    }\n}\nexports.Operation = Operation;\n//# sourceMappingURL=operation.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,SAAS,GAAG,KAAK;AACzB;;CAEC,GACD,MAAM;AACN,MAAM;AACN,8DAA8D;AAC9D,MAAM,kBAAkB,iBAAiB,aAAa;IAClD;;;;;;;;;KASC,GACD,YAAY,MAAM,CAAE;QAChB,MAAM,UAAU;YACZ;;aAEC,GACD,QAAQ;YACR;;aAEC,GACD,KAAK;YACL;;aAEC,GACD,aAAa;gBACT,SAAS;oBACL,MAAM,OAAO,EAAE;gBACnB;YACJ;QACJ;QACA,SAAS,OAAO,MAAM,CAAC;YACnB,SAAS;QACb,GAAG;QACH,8DAA8D;QAC9D,OAAO,OAAO,GAAI,OAAO,OAAO,IAAI;QACpC,KAAK,CAAC;QACN,IAAI,CAAC,iBAAiB,GAAG;QACzB,IAAI,CAAC,kBAAkB,GAAG;QAC1B,IAAI,CAAC,gBAAgB;IACzB;IACA;;;;KAIC,GACD,UAAU;QACN,OAAO,IAAI,QAAQ,CAAC,SAAS;YACzB,IAAI,CAAC,EAAE,CAAC,SAAS,QAAQ,EAAE,CAAC,YAAY,CAAC;gBACrC,QAAQ;oBAAC;iBAAS;YACtB;QACJ;IACJ;IACA;;;;;;;;;KASC,GACD,mBAAmB;QACf,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC;YACpB,IAAI,UAAU,YAAY;gBACtB,IAAI,CAAC,iBAAiB;gBACtB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;oBAC1B,IAAI,CAAC,kBAAkB,GAAG;oBAC1B,IAAI,CAAC,aAAa;gBACtB;YACJ;QACJ;QACA,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC;YACvB,IAAI,UAAU,cAAc,EAAE,IAAI,CAAC,iBAAiB,KAAK,GAAG;gBACxD,IAAI,CAAC,kBAAkB,GAAG;YAC9B;QACJ;IACJ;IACA;;;;;KAKC,GACD,MAAM,QAAQ,EAAE;QACZ,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK;YACnB,IAAI,OAAO,KAAK,KAAK,EAAE;gBACnB,SAAS,OAAO,KAAK,KAAK;gBAC1B;YACJ;YACA,IAAI,CAAC,KAAK,IAAI,EAAE;gBACZ,SAAS;gBACT;YACJ;YACA,SAAS,MAAM;QACnB;IACJ;IACA;;;;;;;;KAQC,GACD,MAAM,gBAAgB;QAClB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC1B;QACJ;QACA,IAAI;YACA,MAAM,WAAW,MAAM,CAAC,GAAG,OAAO,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;YACjE,IAAI,CAAC,UAAU;gBACX,WAAW,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,IAAI;gBACjE;YACJ;YACA,IAAI,CAAC,IAAI,CAAC,YAAY;QAC1B,EACA,OAAO,KAAK;YACR,IAAI,CAAC,IAAI,CAAC,SAAS;QACvB;IACJ;AACJ;AACA,QAAQ,SAAS,GAAG,WACpB,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1435, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/common/build/src/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2016 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.util = exports.ApiError = exports.ServiceObject = exports.Service = exports.Operation = void 0;\n/**\n * @type {module:common/operation}\n * @private\n */\nvar operation_1 = require(\"./operation\");\nObject.defineProperty(exports, \"Operation\", { enumerable: true, get: function () { return operation_1.Operation; } });\n/**\n * @type {module:common/service}\n * @private\n */\nvar service_1 = require(\"./service\");\nObject.defineProperty(exports, \"Service\", { enumerable: true, get: function () { return service_1.Service; } });\n/**\n * @type {module:common/serviceObject}\n * @private\n */\nvar service_object_1 = require(\"./service-object\");\nObject.defineProperty(exports, \"ServiceObject\", { enumerable: true, get: function () { return service_object_1.ServiceObject; } });\n/**\n * @type {module:common/util}\n * @private\n */\nvar util_1 = require(\"./util\");\nObject.defineProperty(exports, \"ApiError\", { enumerable: true, get: function () { return util_1.ApiError; } });\nObject.defineProperty(exports, \"util\", { enumerable: true, get: function () { return util_1.util; } });\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,IAAI,GAAG,QAAQ,QAAQ,GAAG,QAAQ,aAAa,GAAG,QAAQ,OAAO,GAAG,QAAQ,SAAS,GAAG,KAAK;AACrG;;;CAGC,GACD,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,aAAa;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,YAAY,SAAS;IAAE;AAAE;AACnH;;;CAGC,GACD,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,WAAW;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,UAAU,OAAO;IAAE;AAAE;AAC7G;;;CAGC,GACD,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,iBAAiB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,iBAAiB,aAAa;IAAE;AAAE;AAChI;;;CAGC,GACD,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,YAAY;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,OAAO,QAAQ;IAAE;AAAE;AAC5G,OAAO,cAAc,CAAC,SAAS,QAAQ;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,OAAO,IAAI;IAAE;AAAE,IACpG,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1504, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/paginator/build/src/resource-stream.js"],"sourcesContent":["\"use strict\";\n/*!\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResourceStream = void 0;\nconst stream_1 = require(\"stream\");\nclass ResourceStream extends stream_1.Transform {\n    constructor(args, requestFn) {\n        const options = Object.assign({ objectMode: true }, args.streamOptions);\n        super(options);\n        this._ended = false;\n        this._maxApiCalls = args.maxApiCalls === -1 ? Infinity : args.maxApiCalls;\n        this._nextQuery = args.query;\n        this._reading = false;\n        this._requestFn = requestFn;\n        this._requestsMade = 0;\n        this._resultsToSend = args.maxResults === -1 ? Infinity : args.maxResults;\n        this._otherArgs = [];\n    }\n    /* eslint-disable  @typescript-eslint/no-explicit-any */\n    end(...args) {\n        this._ended = true;\n        return super.end(...args);\n    }\n    _read() {\n        if (this._reading) {\n            return;\n        }\n        this._reading = true;\n        // Wrap in a try/catch to catch input linting errors, e.g.\n        // an invalid BigQuery query. These errors are thrown in an\n        // async fashion, which makes them un-catchable by the user.\n        try {\n            this._requestFn(this._nextQuery, (err, results, nextQuery, ...otherArgs) => {\n                if (err) {\n                    this.destroy(err);\n                    return;\n                }\n                this._otherArgs = otherArgs;\n                this._nextQuery = nextQuery;\n                if (this._resultsToSend !== Infinity) {\n                    results = results.splice(0, this._resultsToSend);\n                    this._resultsToSend -= results.length;\n                }\n                let more = true;\n                for (const result of results) {\n                    if (this._ended) {\n                        break;\n                    }\n                    more = this.push(result);\n                }\n                const isFinished = !this._nextQuery || this._resultsToSend < 1;\n                const madeMaxCalls = ++this._requestsMade >= this._maxApiCalls;\n                if (isFinished || madeMaxCalls) {\n                    this.end();\n                }\n                if (more && !this._ended) {\n                    setImmediate(() => this._read());\n                }\n                this._reading = false;\n            });\n        }\n        catch (e) {\n            this.destroy(e);\n        }\n    }\n}\nexports.ResourceStream = ResourceStream;\n//# sourceMappingURL=resource-stream.js.map"],"names":[],"mappings":"AAAA;AACA;;;;;;;;;;;;;;CAcC,GACD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN,MAAM,uBAAuB,SAAS,SAAS;IAC3C,YAAY,IAAI,EAAE,SAAS,CAAE;QACzB,MAAM,UAAU,OAAO,MAAM,CAAC;YAAE,YAAY;QAAK,GAAG,KAAK,aAAa;QACtE,KAAK,CAAC;QACN,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,YAAY,GAAG,KAAK,WAAW,KAAK,CAAC,IAAI,WAAW,KAAK,WAAW;QACzE,IAAI,CAAC,UAAU,GAAG,KAAK,KAAK;QAC5B,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,cAAc,GAAG,KAAK,UAAU,KAAK,CAAC,IAAI,WAAW,KAAK,UAAU;QACzE,IAAI,CAAC,UAAU,GAAG,EAAE;IACxB;IACA,sDAAsD,GACtD,IAAI,GAAG,IAAI,EAAE;QACT,IAAI,CAAC,MAAM,GAAG;QACd,OAAO,KAAK,CAAC,OAAO;IACxB;IACA,QAAQ;QACJ,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf;QACJ;QACA,IAAI,CAAC,QAAQ,GAAG;QAChB,0DAA0D;QAC1D,2DAA2D;QAC3D,4DAA4D;QAC5D,IAAI;YACA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,SAAS,WAAW,GAAG;gBAC1D,IAAI,KAAK;oBACL,IAAI,CAAC,OAAO,CAAC;oBACb;gBACJ;gBACA,IAAI,CAAC,UAAU,GAAG;gBAClB,IAAI,CAAC,UAAU,GAAG;gBAClB,IAAI,IAAI,CAAC,cAAc,KAAK,UAAU;oBAClC,UAAU,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,cAAc;oBAC/C,IAAI,CAAC,cAAc,IAAI,QAAQ,MAAM;gBACzC;gBACA,IAAI,OAAO;gBACX,KAAK,MAAM,UAAU,QAAS;oBAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;wBACb;oBACJ;oBACA,OAAO,IAAI,CAAC,IAAI,CAAC;gBACrB;gBACA,MAAM,aAAa,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,cAAc,GAAG;gBAC7D,MAAM,eAAe,EAAE,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY;gBAC9D,IAAI,cAAc,cAAc;oBAC5B,IAAI,CAAC,GAAG;gBACZ;gBACA,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACtB,aAAa,IAAM,IAAI,CAAC,KAAK;gBACjC;gBACA,IAAI,CAAC,QAAQ,GAAG;YACpB;QACJ,EACA,OAAO,GAAG;YACN,IAAI,CAAC,OAAO,CAAC;QACjB;IACJ;AACJ;AACA,QAAQ,cAAc,GAAG,gBACzB,2CAA2C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1591, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/paginator/build/src/index.js"],"sourcesContent":["\"use strict\";\n/*!\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResourceStream = exports.paginator = exports.Paginator = void 0;\n/*!\n * @module common/paginator\n */\nconst arrify = require(\"arrify\");\nconst extend = require(\"extend\");\nconst resource_stream_1 = require(\"./resource-stream\");\nObject.defineProperty(exports, \"ResourceStream\", { enumerable: true, get: function () { return resource_stream_1.ResourceStream; } });\n/*! Developer Documentation\n *\n * paginator is used to auto-paginate `nextQuery` methods as well as\n * streamifying them.\n *\n * Before:\n *\n *   search.query('done=true', function(err, results, nextQuery) {\n *     search.query(nextQuery, function(err, results, nextQuery) {});\n *   });\n *\n * After:\n *\n *   search.query('done=true', function(err, results) {});\n *\n * Methods to extend should be written to accept callbacks and return a\n * `nextQuery`.\n */\nclass Paginator {\n    /**\n     * Cache the original method, then overwrite it on the Class's prototype.\n     *\n     * @param {function} Class - The parent class of the methods to extend.\n     * @param {string|string[]} methodNames - Name(s) of the methods to extend.\n     */\n    // tslint:disable-next-line:variable-name\n    extend(Class, methodNames) {\n        methodNames = arrify(methodNames);\n        methodNames.forEach(methodName => {\n            const originalMethod = Class.prototype[methodName];\n            // map the original method to a private member\n            Class.prototype[methodName + '_'] = originalMethod;\n            // overwrite the original to auto-paginate\n            /* eslint-disable  @typescript-eslint/no-explicit-any */\n            Class.prototype[methodName] = function (...args) {\n                const parsedArguments = paginator.parseArguments_(args);\n                return paginator.run_(parsedArguments, originalMethod.bind(this));\n            };\n        });\n    }\n    /**\n     * Wraps paginated API calls in a readable object stream.\n     *\n     * This method simply calls the nextQuery recursively, emitting results to a\n     * stream. The stream ends when `nextQuery` is null.\n     *\n     * `maxResults` will act as a cap for how many results are fetched and emitted\n     * to the stream.\n     *\n     * @param {string} methodName - Name of the method to streamify.\n     * @return {function} - Wrapped function.\n     */\n    /* eslint-disable  @typescript-eslint/no-explicit-any */\n    streamify(methodName) {\n        return function (\n        /* eslint-disable  @typescript-eslint/no-explicit-any */\n        ...args) {\n            const parsedArguments = paginator.parseArguments_(args);\n            const originalMethod = this[methodName + '_'] || this[methodName];\n            return paginator.runAsStream_(parsedArguments, originalMethod.bind(this));\n        };\n    }\n    /**\n     * Parse a pseudo-array `arguments` for a query and callback.\n     *\n     * @param {array} args - The original `arguments` pseduo-array that the original\n     *     method received.\n     */\n    /* eslint-disable  @typescript-eslint/no-explicit-any */\n    parseArguments_(args) {\n        let query;\n        let autoPaginate = true;\n        let maxApiCalls = -1;\n        let maxResults = -1;\n        let callback;\n        const firstArgument = args[0];\n        const lastArgument = args[args.length - 1];\n        if (typeof firstArgument === 'function') {\n            callback = firstArgument;\n        }\n        else {\n            query = firstArgument;\n        }\n        if (typeof lastArgument === 'function') {\n            callback = lastArgument;\n        }\n        if (typeof query === 'object') {\n            query = extend(true, {}, query);\n            // Check if the user only asked for a certain amount of results.\n            if (query.maxResults && typeof query.maxResults === 'number') {\n                // `maxResults` is used API-wide.\n                maxResults = query.maxResults;\n            }\n            else if (typeof query.pageSize === 'number') {\n                // `pageSize` is Pub/Sub's `maxResults`.\n                maxResults = query.pageSize;\n            }\n            if (query.maxApiCalls && typeof query.maxApiCalls === 'number') {\n                maxApiCalls = query.maxApiCalls;\n                delete query.maxApiCalls;\n            }\n            // maxResults is the user specified limit.\n            if (maxResults !== -1 || query.autoPaginate === false) {\n                autoPaginate = false;\n            }\n        }\n        const parsedArguments = {\n            query: query || {},\n            autoPaginate,\n            maxApiCalls,\n            maxResults,\n            callback,\n        };\n        parsedArguments.streamOptions = extend(true, {}, parsedArguments.query);\n        delete parsedArguments.streamOptions.autoPaginate;\n        delete parsedArguments.streamOptions.maxResults;\n        delete parsedArguments.streamOptions.pageSize;\n        return parsedArguments;\n    }\n    /**\n     * This simply checks to see if `autoPaginate` is set or not, if it's true\n     * then we buffer all results, otherwise simply call the original method.\n     *\n     * @param {array} parsedArguments - Parsed arguments from the original method\n     *     call.\n     * @param {object=|string=} parsedArguments.query - Query object. This is most\n     *     commonly an object, but to make the API more simple, it can also be a\n     *     string in some places.\n     * @param {function=} parsedArguments.callback - Callback function.\n     * @param {boolean} parsedArguments.autoPaginate - Auto-pagination enabled.\n     * @param {boolean} parsedArguments.maxApiCalls - Maximum API calls to make.\n     * @param {number} parsedArguments.maxResults - Maximum results to return.\n     * @param {function} originalMethod - The cached method that accepts a callback\n     *     and returns `nextQuery` to receive more results.\n     */\n    run_(parsedArguments, originalMethod) {\n        const query = parsedArguments.query;\n        const callback = parsedArguments.callback;\n        if (!parsedArguments.autoPaginate) {\n            return originalMethod(query, callback);\n        }\n        const results = new Array();\n        let otherArgs = [];\n        const promise = new Promise((resolve, reject) => {\n            const stream = paginator.runAsStream_(parsedArguments, originalMethod);\n            stream\n                .on('error', reject)\n                .on('data', (data) => results.push(data))\n                .on('end', () => {\n                otherArgs = stream._otherArgs || [];\n                resolve(results);\n            });\n        });\n        if (!callback) {\n            return promise.then(results => [results, query, ...otherArgs]);\n        }\n        promise.then(results => callback(null, results, query, ...otherArgs), (err) => callback(err));\n    }\n    /**\n     * This method simply calls the nextQuery recursively, emitting results to a\n     * stream. The stream ends when `nextQuery` is null.\n     *\n     * `maxResults` will act as a cap for how many results are fetched and emitted\n     * to the stream.\n     *\n     * @param {object=|string=} parsedArguments.query - Query object. This is most\n     *     commonly an object, but to make the API more simple, it can also be a\n     *     string in some places.\n     * @param {function=} parsedArguments.callback - Callback function.\n     * @param {boolean} parsedArguments.autoPaginate - Auto-pagination enabled.\n     * @param {boolean} parsedArguments.maxApiCalls - Maximum API calls to make.\n     * @param {number} parsedArguments.maxResults - Maximum results to return.\n     * @param {function} originalMethod - The cached method that accepts a callback\n     *     and returns `nextQuery` to receive more results.\n     * @return {stream} - Readable object stream.\n     */\n    /* eslint-disable  @typescript-eslint/no-explicit-any */\n    runAsStream_(parsedArguments, originalMethod) {\n        return new resource_stream_1.ResourceStream(parsedArguments, originalMethod);\n    }\n}\nexports.Paginator = Paginator;\nconst paginator = new Paginator();\nexports.paginator = paginator;\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1797, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/logging-winston/build/src/common.js"],"sourcesContent":["\"use strict\";\n// Copyright 2016 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingCommon = exports.NODEJS_WINSTON_DEFAULT_LIBRARY_VERSION = exports.LOGGING_SAMPLED_KEY = exports.LOGGING_SPAN_KEY = exports.LOGGING_TRACE_KEY = void 0;\nexports.getCurrentTraceFromAgent = getCurrentTraceFromAgent;\nexports.getNodejsLibraryVersion = getNodejsLibraryVersion;\nconst util = require(\"util\");\nconst logging_1 = require(\"@google-cloud/logging\");\nconst instrumentation_1 = require(\"@google-cloud/logging/build/src/utils/instrumentation\");\nconst mapValues = require(\"lodash.mapvalues\");\n// Map of npm output levels to Cloud Logging levels.\n// See https://github.com/winstonjs/winston#logging-levels for more info.\nconst NPM_LEVEL_NAME_TO_CODE = {\n    error: 3,\n    warn: 4,\n    info: 6,\n    http: 6,\n    verbose: 7,\n    debug: 7,\n    silly: 7,\n};\n// Map of Cloud Logging levels.\nconst CLOUD_LOGGING_LEVEL_CODE_TO_NAME = {\n    0: 'emergency',\n    1: 'alert',\n    2: 'critical',\n    3: 'error',\n    4: 'warning',\n    5: 'notice',\n    6: 'info',\n    7: 'debug',\n};\n/*!\n * Log entry data key to allow users to indicate a trace for the request.\n */\nexports.LOGGING_TRACE_KEY = 'logging.googleapis.com/trace';\n/*!\n * Log entry data key to allow users to indicate a spanId for the request.\n */\nexports.LOGGING_SPAN_KEY = 'logging.googleapis.com/spanId';\n/*!\n * Log entry data key to allow users to indicate a traceSampled flag for the request.\n */\nexports.LOGGING_SAMPLED_KEY = 'logging.googleapis.com/trace_sampled';\n/**\n * Default library version to be used\n * Using release-please annotations to update DEFAULT_INSTRUMENTATION_VERSION with latest version.\n * See https://github.com/googleapis/release-please/blob/main/docs/customizing.md#updating-arbitrary-files\n */\nexports.NODEJS_WINSTON_DEFAULT_LIBRARY_VERSION = '6.0.1'; // {x-release-please-version}\n/*!\n * Gets the current fully qualified trace ID when available from the\n * @google-cloud/trace-agent library in the LogEntry.trace field format of:\n * \"projects/[PROJECT-ID]/traces/[TRACE-ID]\".\n */\nfunction getCurrentTraceFromAgent() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const agent = global._google_trace_agent;\n    if (!agent || !agent.getCurrentContextId || !agent.getWriterProjectId) {\n        return null;\n    }\n    const traceId = agent.getCurrentContextId();\n    if (!traceId) {\n        return null;\n    }\n    const traceProjectId = agent.getWriterProjectId();\n    if (!traceProjectId) {\n        return null;\n    }\n    return `projects/${traceProjectId}/traces/${traceId}`;\n}\nclass LoggingCommon {\n    constructor(options) {\n        var _a, _b;\n        options = Object.assign({\n            scopes: ['https://www.googleapis.com/auth/logging.write'],\n        }, options);\n        this.logName = options.logName || 'winston_log';\n        this.inspectMetadata = options.inspectMetadata === true;\n        this.levels = options.levels || NPM_LEVEL_NAME_TO_CODE;\n        this.redirectToStdout = (_a = options.redirectToStdout) !== null && _a !== void 0 ? _a : false;\n        if (!this.redirectToStdout) {\n            this.cloudLog = new logging_1.Logging(options).log(this.logName, {\n                removeCircular: true,\n                // See: https://cloud.google.com/logging/quotas, a log size of\n                // 250,000 has been chosen to keep us comfortably within the\n                // 256,000 limit.\n                maxEntrySize: options.maxEntrySize || 250000,\n            });\n        }\n        else {\n            const logSyncOptions = {\n                useMessageField: (_b = options.useMessageField) !== null && _b !== void 0 ? _b : true,\n            };\n            this.cloudLog = new logging_1.Logging(options).logSync(this.logName, undefined, logSyncOptions);\n        }\n        this.resource = options.resource;\n        this.serviceContext = options.serviceContext;\n        this.prefix = options.prefix;\n        this.labels = options.labels;\n        this.defaultCallback = options.defaultCallback;\n    }\n    log(level, message, metadata, callback) {\n        metadata = metadata || {};\n        // First create instrumentation record if it is never written before\n        let instrumentationEntry;\n        if (!(0, instrumentation_1.setInstrumentationStatus)(true)) {\n            instrumentationEntry = (0, instrumentation_1.createDiagnosticEntry)('nodejs-winston', getNodejsLibraryVersion());\n            // Update instrumentation record resource, logName and timestamp\n            instrumentationEntry.metadata.resource = this.resource;\n            instrumentationEntry.metadata.logName = metadata.logName;\n            instrumentationEntry.metadata.timestamp = metadata.timestamp;\n        }\n        message = message || '';\n        const hasMetadata = Object.keys(metadata).length;\n        if (this.levels[level] === undefined) {\n            throw new Error('Unknown log level: ' + level);\n        }\n        const levelCode = this.levels[level];\n        const cloudLevel = CLOUD_LOGGING_LEVEL_CODE_TO_NAME[levelCode];\n        const data = {};\n        // Cloud Logs Viewer picks up the summary line from the `message`\n        // property of the jsonPayload.\n        // https://cloud.google.com/logging/docs/view/logs_viewer_v2#expanding.\n        //\n        // For error messages at severity 'error' and higher,\n        // Error Reporting will pick up error messages if the full stack trace is\n        // included in the textPayload or the message property of the jsonPayload.\n        // https://cloud.google.com/error-reporting/docs/formatting-error-messages\n        // We prefer to format messages as jsonPayload (by putting it as a message\n        // property on an object) as that works and is accepted by Error Reporting\n        // in far more resource types.\n        //\n        if (metadata.stack) {\n            message += (message ? ' ' : '') + metadata.stack;\n            data.serviceContext = this.serviceContext;\n        }\n        data.message = this.prefix ? `[${this.prefix}] ` : '';\n        data.message += message;\n        const entryMetadata = {\n            resource: this.resource,\n        };\n        // If the metadata contains a logName property, promote it to the entry\n        // metadata.\n        if (metadata.logName) {\n            entryMetadata.logName = metadata.logName;\n        }\n        // If the metadata contains a httpRequest property, promote it to the\n        // entry metadata. This allows Cloud Logging to use request log formatting.\n        // https://cloud.google.com/logging/docs/reference/v2/rpc/google.logging.type#google.logging.type.HttpRequest\n        // Note that the httpRequest field must properly validate as HttpRequest\n        // proto message, or the log entry would be rejected by the API. We no do\n        // validation here.\n        if (metadata.httpRequest) {\n            entryMetadata.httpRequest = metadata.httpRequest;\n        }\n        // If the metadata contains a timestamp property, promote it to the entry\n        // metadata. As Winston 3 buffers logs when a transport (such as this one)\n        // invokes its log callback asynchronously, a timestamp assigned at log time\n        // is more accurate than one assigned in a transport.\n        if (metadata.timestamp instanceof Date) {\n            entryMetadata.timestamp = metadata.timestamp;\n        }\n        // If the metadata contains a labels property, promote it to the entry\n        // metadata.\n        // https://cloud.google.com/logging/docs/reference/v2/rpc/google.logging.v2#logentry\n        if (this.labels || metadata.labels) {\n            entryMetadata.labels = !this.labels\n                ? metadata.labels\n                : Object.assign({}, this.labels, metadata.labels);\n        }\n        const trace = metadata[exports.LOGGING_TRACE_KEY] || getCurrentTraceFromAgent();\n        if (trace) {\n            entryMetadata.trace = trace;\n        }\n        const spanId = metadata[exports.LOGGING_SPAN_KEY];\n        if (spanId) {\n            entryMetadata.spanId = spanId;\n        }\n        if (exports.LOGGING_SAMPLED_KEY in metadata) {\n            entryMetadata.traceSampled = metadata[exports.LOGGING_SAMPLED_KEY] === true;\n        }\n        // we have tests that assert that metadata is always passed.\n        // not sure if its correct but for now we always set it even if it has\n        // nothing in it\n        data.metadata = this.inspectMetadata\n            ? mapValues(metadata, util.inspect)\n            : metadata;\n        if (hasMetadata) {\n            // clean entryMetadata props\n            delete data.metadata[exports.LOGGING_TRACE_KEY];\n            delete data.metadata[exports.LOGGING_SPAN_KEY];\n            delete data.metadata[exports.LOGGING_SAMPLED_KEY];\n            delete data.metadata.httpRequest;\n            delete data.metadata.labels;\n            delete data.metadata.timestamp;\n            delete data.metadata.logName;\n        }\n        const entries = [];\n        entries.push(this.entry(entryMetadata, data));\n        // Check if instrumentation entry needs to be added as well\n        if (instrumentationEntry) {\n            // Make sure instrumentation entry is updated by underlying logger\n            instrumentationEntry = this.entry(instrumentationEntry.metadata, instrumentationEntry.data);\n            if (levelCode !== NPM_LEVEL_NAME_TO_CODE.info) {\n                // We using info level for diagnostic records\n                this.cloudLog[CLOUD_LOGGING_LEVEL_CODE_TO_NAME[NPM_LEVEL_NAME_TO_CODE.info]]([instrumentationEntry], this.defaultCallback);\n            }\n            else\n                entries.push(instrumentationEntry);\n        }\n        // Make sure that both callbacks are called in case if provided\n        const newCallback = (err, apiResponse) => {\n            let callbackError;\n            if (callback) {\n                try {\n                    callback(err, apiResponse);\n                }\n                catch (error) {\n                    callbackError = error;\n                }\n            }\n            if (this.defaultCallback) {\n                this.defaultCallback(err, apiResponse);\n            }\n            // In case if original error was null and callback thrown exception, rethrow it to make sure\n            // we do not swallow it since upon success the exceptions normally should not be thrown. Also\n            // we should retrhrow callbackError when defaultCallback was not provided to keep\n            // prevous behaviour intact\n            if ((!this.defaultCallback || err === null) && callbackError) {\n                throw callbackError;\n            }\n        };\n        this.cloudLog[cloudLevel](entries, newCallback);\n        // The LogSync class does not supports callback. However Writable class always\n        // provides onwrite() callback which needs to be called after each log is written,\n        // so the stream would remove writing state. Since this.defaultCallback can also be set, we\n        // should call it explicitly as well.\n        if (this.redirectToStdout) {\n            newCallback(null, undefined);\n        }\n    }\n    entry(metadata, data) {\n        if (this.redirectToStdout) {\n            return this.cloudLog.entry(metadata, data);\n        }\n        return this.cloudLog.entry(metadata, data);\n    }\n}\nexports.LoggingCommon = LoggingCommon;\n// LOGGING_TRACE_KEY is Cloud Logging specific and has the format:\n// logging.googleapis.com/trace\nLoggingCommon.LOGGING_TRACE_KEY = exports.LOGGING_TRACE_KEY;\n// LOGGING_TRACE_KEY is Cloud Logging specific and has the format:\n// logging.googleapis.com/spanId\nLoggingCommon.LOGGING_SPAN_KEY = exports.LOGGING_SPAN_KEY;\nfunction getNodejsLibraryVersion() {\n    return exports.NODEJS_WINSTON_DEFAULT_LIBRARY_VERSION;\n}\n//# sourceMappingURL=common.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2066, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/logging-winston/build/src/middleware/make-child-logger.js"],"sourcesContent":["\"use strict\";\n// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeChildLogger = makeChildLogger;\nconst index_1 = require(\"../index\");\nfunction makeChildLogger(logger, trace, span, sampled) {\n    return logger.child({\n        [index_1.LOGGING_TRACE_KEY]: trace,\n        [index_1.LOGGING_SPAN_KEY]: span,\n        [index_1.LOGGING_SAMPLED_KEY]: sampled,\n    });\n}\n//# sourceMappingURL=make-child-logger.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG;AAC1B,MAAM;AACN,SAAS,gBAAgB,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO;IACjD,OAAO,OAAO,KAAK,CAAC;QAChB,CAAC,QAAQ,iBAAiB,CAAC,EAAE;QAC7B,CAAC,QAAQ,gBAAgB,CAAC,EAAE;QAC5B,CAAC,QAAQ,mBAAmB,CAAC,EAAE;IACnC;AACJ,EACA,6CAA6C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2097, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/logging-winston/build/src/middleware/express.js"],"sourcesContent":["\"use strict\";\n// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REQUEST_LOG_SUFFIX = void 0;\nexports.makeMiddleware = makeMiddleware;\nconst logging_1 = require(\"@google-cloud/logging\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst common_1 = require(\"../common\");\nconst index_1 = require(\"../index\");\nconst make_child_logger_1 = require(\"./make-child-logger\");\nexports.REQUEST_LOG_SUFFIX = '_reqlog';\nasync function makeMiddleware(logger, optionsOrTransport, skipParentEntryForCloudRun) {\n    let transport;\n    // If no custom transports are provided, use default or instantiate one.\n    const cloudTransport = logger.transports.find(t => t instanceof index_1.LoggingWinston);\n    // If user provides a custom transport, always add it to the logger.\n    if (optionsOrTransport instanceof index_1.LoggingWinston) {\n        transport = optionsOrTransport;\n        logger.add(transport);\n    }\n    else if (cloudTransport && !optionsOrTransport) {\n        // Check if logger already contains a Cloud transport\n        transport = cloudTransport;\n    }\n    else {\n        const options = { logName: 'winston_log', ...optionsOrTransport };\n        transport = new index_1.LoggingWinston(options);\n        logger.add(transport);\n    }\n    const auth = (transport.common.redirectToStdout\n        ? transport.common.cloudLog\n        : transport.common.cloudLog).logging.auth;\n    const [env, projectId] = await Promise.all([\n        auth.getEnv(),\n        auth.getProjectId(),\n    ]);\n    // Unless we are running on Google App Engine or Cloud Functions, generate a\n    // parent request log entry that all the request specific logs (\"app logs\")\n    // will nest under. GAE and GCF generate the parent request logs\n    // automatically.\n    // Cloud Run also generates the parent request log automatically, but skipping\n    // the parent request entry has to be explicity enabled until the next major\n    // release in which we can change the default behavior.\n    let emitRequestLogEntry;\n    if (env !== google_auth_library_1.GCPEnv.APP_ENGINE &&\n        env !== google_auth_library_1.GCPEnv.CLOUD_FUNCTIONS &&\n        (env !== google_auth_library_1.GCPEnv.CLOUD_RUN || !skipParentEntryForCloudRun)) {\n        const requestLogName = logging_1.Log.formatName_(projectId, `${transport.common.logName}${exports.REQUEST_LOG_SUFFIX}`);\n        emitRequestLogEntry = (httpRequest, trace, span, sampled) => {\n            logger.info({\n                // The request logs must have a log name distinct from the app logs\n                // for log correlation to work.\n                logName: requestLogName,\n                [common_1.LOGGING_TRACE_KEY]: trace,\n                [common_1.LOGGING_SPAN_KEY]: span,\n                [common_1.LOGGING_SAMPLED_KEY]: sampled,\n                httpRequest,\n                message: httpRequest.requestUrl || 'http request',\n            });\n        };\n    }\n    return logging_1.middleware.express.makeMiddleware(projectId, (trace, span, sampled) => (0, make_child_logger_1.makeChildLogger)(logger, trace, span, sampled), emitRequestLogEntry);\n}\n//# sourceMappingURL=express.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,kBAAkB,GAAG,KAAK;AAClC,QAAQ,cAAc,GAAG;AACzB,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,QAAQ,kBAAkB,GAAG;AAC7B,eAAe,eAAe,MAAM,EAAE,kBAAkB,EAAE,0BAA0B;IAChF,IAAI;IACJ,wEAAwE;IACxE,MAAM,iBAAiB,OAAO,UAAU,CAAC,IAAI,CAAC,CAAA,IAAK,aAAa,QAAQ,cAAc;IACtF,oEAAoE;IACpE,IAAI,8BAA8B,QAAQ,cAAc,EAAE;QACtD,YAAY;QACZ,OAAO,GAAG,CAAC;IACf,OACK,IAAI,kBAAkB,CAAC,oBAAoB;QAC5C,qDAAqD;QACrD,YAAY;IAChB,OACK;QACD,MAAM,UAAU;YAAE,SAAS;YAAe,GAAG,kBAAkB;QAAC;QAChE,YAAY,IAAI,QAAQ,cAAc,CAAC;QACvC,OAAO,GAAG,CAAC;IACf;IACA,MAAM,OAAO,CAAC,UAAU,MAAM,CAAC,gBAAgB,GACzC,UAAU,MAAM,CAAC,QAAQ,GACzB,UAAU,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI;IAC7C,MAAM,CAAC,KAAK,UAAU,GAAG,MAAM,QAAQ,GAAG,CAAC;QACvC,KAAK,MAAM;QACX,KAAK,YAAY;KACpB;IACD,4EAA4E;IAC5E,2EAA2E;IAC3E,gEAAgE;IAChE,iBAAiB;IACjB,8EAA8E;IAC9E,4EAA4E;IAC5E,uDAAuD;IACvD,IAAI;IACJ,IAAI,QAAQ,sBAAsB,MAAM,CAAC,UAAU,IAC/C,QAAQ,sBAAsB,MAAM,CAAC,eAAe,IACpD,CAAC,QAAQ,sBAAsB,MAAM,CAAC,SAAS,IAAI,CAAC,0BAA0B,GAAG;QACjF,MAAM,iBAAiB,UAAU,GAAG,CAAC,WAAW,CAAC,WAAW,GAAG,UAAU,MAAM,CAAC,OAAO,GAAG,QAAQ,kBAAkB,EAAE;QACtH,sBAAsB,CAAC,aAAa,OAAO,MAAM;YAC7C,OAAO,IAAI,CAAC;gBACR,mEAAmE;gBACnE,+BAA+B;gBAC/B,SAAS;gBACT,CAAC,SAAS,iBAAiB,CAAC,EAAE;gBAC9B,CAAC,SAAS,gBAAgB,CAAC,EAAE;gBAC7B,CAAC,SAAS,mBAAmB,CAAC,EAAE;gBAChC;gBACA,SAAS,YAAY,UAAU,IAAI;YACvC;QACJ;IACJ;IACA,OAAO,UAAU,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,MAAM,UAAY,CAAC,GAAG,oBAAoB,eAAe,EAAE,QAAQ,OAAO,MAAM,UAAU;AACpK,EACA,mCAAmC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2176, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/logging-winston/build/src/default-metadata.js"],"sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultMetadataForTracing = getDefaultMetadataForTracing;\nconst common_1 = require(\"./common\");\n/**\n * Returns an object that can be passed to Winston.createLogger as defaultMeta\n * to allow log-trace correlation with Winston 3. Log-trace correlation with\n * Winston 3 is broken because the trace ID to be correlated with a log isn't\n * evaluated when the log function is called, but rather when the log is\n * written, which happens at some future point where the trace ID may no longer\n * be accurate. To circumvent this, we take advantage of the fact that\n * defaultMeta is copied when a log function is called, and use a dynamic\n * property getter to evaluate the trace ID upon that copy.\n *\n * We apply the same principle for timestamps, which is not strictly necessary\n * for tracing but allows for more accurate timestamps in general.\n *\n * If there are other default metadata fields with which the return value of\n * this function must be merged, this object MUST be the base object. In other\n * words, do not use the return value of this function as the non-first argument\n * to Object.assign, or it will not work.\n *\n * See https://github.com/googleapis/nodejs-logging-winston/issues/287 for\n * more information.\n */\nfunction getDefaultMetadataForTracing() {\n    const agent = global._google_trace_agent;\n    // Enable log-trace correlation if the Trace Agent API is compatible.\n    const enableThunkAgent = !!(agent &&\n        agent.getCurrentContextId &&\n        agent.getWriterProjectId);\n    const defaultMeta = {};\n    // Make defaultMeta.timestamp return the current timestamp any time it's\n    // accessed.\n    Object.defineProperty(defaultMeta, 'timestamp', {\n        enumerable: true,\n        get: () => new Date(),\n    });\n    if (enableThunkAgent) {\n        // Make defaultMeta[LOGGING_TRACE_KEY] return the current trace ID any time\n        // it's accessed.\n        const loggingTraceKey = common_1.LOGGING_TRACE_KEY;\n        Object.defineProperty(defaultMeta, loggingTraceKey, {\n            enumerable: true,\n            get: () => {\n                const traceId = agent.getCurrentContextId();\n                if (!traceId) {\n                    return null;\n                }\n                const traceProjectId = agent.getWriterProjectId();\n                if (!traceProjectId) {\n                    return null;\n                }\n                return `projects/${traceProjectId}/traces/${traceId}`;\n            },\n        });\n    }\n    return defaultMeta;\n}\n//# sourceMappingURL=default-metadata.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,4BAA4B,GAAG;AACvC,MAAM;AACN;;;;;;;;;;;;;;;;;;;;CAoBC,GACD,SAAS;IACL,MAAM,QAAQ,OAAO,mBAAmB;IACxC,qEAAqE;IACrE,MAAM,mBAAmB,CAAC,CAAC,CAAC,SACxB,MAAM,mBAAmB,IACzB,MAAM,kBAAkB;IAC5B,MAAM,cAAc,CAAC;IACrB,wEAAwE;IACxE,YAAY;IACZ,OAAO,cAAc,CAAC,aAAa,aAAa;QAC5C,YAAY;QACZ,KAAK,IAAM,IAAI;IACnB;IACA,IAAI,kBAAkB;QAClB,2EAA2E;QAC3E,iBAAiB;QACjB,MAAM,kBAAkB,SAAS,iBAAiB;QAClD,OAAO,cAAc,CAAC,aAAa,iBAAiB;YAChD,YAAY;YACZ,KAAK;gBACD,MAAM,UAAU,MAAM,mBAAmB;gBACzC,IAAI,CAAC,SAAS;oBACV,OAAO;gBACX;gBACA,MAAM,iBAAiB,MAAM,kBAAkB;gBAC/C,IAAI,CAAC,gBAAgB;oBACjB,OAAO;gBACX;gBACA,OAAO,CAAC,SAAS,EAAE,eAAe,QAAQ,EAAE,SAAS;YACzD;QACJ;IACJ;IACA,OAAO;AACX,EACA,4CAA4C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2252, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/logging-winston/build/src/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LOGGING_SAMPLED_KEY = exports.LOGGING_SPAN_KEY = exports.LOGGING_TRACE_KEY = exports.LoggingWinston = exports.getCurrentTraceFromAgent = exports.getDefaultMetadataForTracing = exports.express = void 0;\nconst TransportStream = require(\"winston-transport\");\nconst common_1 = require(\"./common\");\nObject.defineProperty(exports, \"getCurrentTraceFromAgent\", { enumerable: true, get: function () { return common_1.getCurrentTraceFromAgent; } });\nconst express = require(\"./middleware/express\");\nexports.express = express;\nconst default_metadata_1 = require(\"./default-metadata\");\nObject.defineProperty(exports, \"getDefaultMetadataForTracing\", { enumerable: true, get: function () { return default_metadata_1.getDefaultMetadataForTracing; } });\nconst LEVEL = Symbol.for('level');\n/**\n * This module provides support for streaming your winston logs to\n * [Cloud Logging](https://cloud.google.com/logging).\n *\n * @class\n *\n * @param {object} [options]\n * @param {object} [options.level] The default log level. Winston will filter\n *     messages with a severity lower than this.\n * @param {object} [options.levels] Custom logging levels as supported by\n *     winston. This list is used to translate your log level to the Cloud\n *     Logging level. Each property should have an integer value between 0 (most\n *     severe) and 7 (least severe). If you are passing a list of levels to your\n *     winston logger, you should provide the same list here.\n * @param {boolean} [options.inspectMetadata=false] Serialize winston-provided log\n *     metadata using `util.inspect`.\n * @param {string} [options.logName=winston_log] The name of the log that will receive\n *     messages written to this transport.\n * @param {object} [options.resource] The monitored resource that the transport\n *     corresponds to. On Google Cloud Platform, this is detected automatically,\n *     but you may optionally specify a specific monitored resource. For more\n *     information see the\n *     [official documentation]{@link\n * https://cloud.google.com/logging/docs/api/reference/rest/v2/MonitoredResource}.\n * @param {object} [options.serviceContext] For logged errors, we provide this\n *     as the service context. For more information see\n *     [this guide]{@link\n * https://cloud.google.com/error-reporting/docs/formatting-error-messages} and\n * the [official documentation]{@link\n * https://cloud.google.com/error-reporting/reference/rest/v1beta1/ServiceContext}.\n * @param {string} [options.serviceContext.service] An identifier of the\n *     service, such as the name of the executable, job, or Google App Engine\n *     service name.\n * @param {string} [options.serviceContext.version] Represents the version of\n *     the service.\n * @param {string} [options.projectId] The project ID from the Google Cloud\n *     Console, e.g. 'grape-spaceship-123'. We will also check the environment\n *     variable `GCLOUD_PROJECT` for your project ID. If your app is running in\n *     an environment which supports {@link\n * https://cloud.google.com/docs/authentication/production#providing_credentials_to_your_application\n * Application Default Credentials}, your project ID will be detected\n * automatically.\n * @param {string} [options.keyFilename] Full path to the a .json, .pem, or .p12\n *     key downloaded from the Google Cloud Console. If you provide a path\n *     to a JSON file, the `projectId` option above is not necessary. NOTE: .pem\n *     and .p12 require you to specify the `email` option as well.\n * @param {string} [options.email] Account email address. Required when using a\n *     .pem or .p12 keyFilename.\n * @param {object} [options.credentials] Credentials object.\n * @param {string} [options.credentials.client_email]\n * @param {string} [options.credentials.private_key]\n * @param {boolean} [options.autoRetry=true] Automatically retry requests if the\n *     response is related to rate limits or certain intermittent server errors.\n *     We will exponentially backoff subsequent requests by default.\n * @param {number} [options.maxRetries=3] Maximum number of automatic retries\n *     attempted before returning the error.\n * @param {constructor} [options.promise] Custom promise module to use instead\n *     of native Promises.\n *\n * @example <caption>Import the client library</caption>\n * const {LoggingWinston} = require('@google-cloud/logging-winston');\n *\n * @example <caption>Create a client that uses <a\n * href=\"https://cloud.google.com/docs/authentication/production#providing_credentials_to_your_application\">Application\n * Default Credentials (ADC)</a>:</caption> const loggingWinston = new\n * LoggingWinston();\n *\n * @example <caption>Create a client with <a\n * href=\"https://cloud.google.com/docs/authentication/production#obtaining_and_providing_service_account_credentials_manually\">explicit\n * credentials</a>:</caption> const loggingWinston = new LoggingWinston({\n *   projectId: 'your-project-id',\n *   keyFilename: '/path/to/keyfile.json'\n * });\n *\n * @example <caption>include:samples/quickstart.js</caption>\n * region_tag:logging_winston_quickstart\n * Full quickstart example:\n */\nclass LoggingWinston extends TransportStream {\n    constructor(options) {\n        options = options || {};\n        super({\n            level: options.level,\n            format: options.format,\n            silent: options.silent,\n            handleExceptions: options.handleExceptions,\n            handleRejections: options.handleRejections,\n        });\n        this.common = new common_1.LoggingCommon(options);\n    }\n    // eslint-disable-next-line\n    log(info, callback) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { message, level, splat, stack, ...metadata } = info;\n        // If the whole message is an error we have to manually copy the stack into\n        // metadata. Errors dont have enumerable properties so they don't\n        // destructure.\n        if (stack)\n            metadata.stack = stack;\n        this.common.log(info[LEVEL] || level, message, metadata || {}, callback);\n    }\n}\nexports.LoggingWinston = LoggingWinston;\nLoggingWinston.LOGGING_TRACE_KEY = common_1.LOGGING_TRACE_KEY;\nLoggingWinston.LOGGING_SPAN_KEY = common_1.LOGGING_SPAN_KEY;\nLoggingWinston.LOGGING_SAMPLED_KEY = common_1.LOGGING_SAMPLED_KEY;\n// LOGGING_TRACE_KEY is Cloud Logging specific and has the format:\n// logging.googleapis.com/trace\n// For more information, see: https://cloud.google.com/logging/docs/reference/v2/rpc/google.logging.v2#logentry\nexports.LOGGING_TRACE_KEY = common_1.LOGGING_TRACE_KEY;\n// LOGGING_SPAN_KEY is Cloud Logging specific and has the format:\n// logging.googleapis.com/spanId\n// For more information, see: https://cloud.google.com/logging/docs/reference/v2/rpc/google.logging.v2#logentry\nexports.LOGGING_SPAN_KEY = common_1.LOGGING_SPAN_KEY;\n// LOGGING_SAMPLED_KEY is Cloud Logging specific and has the format:\n// logging.googleapis.com/trace_sampled\n// The value of this field must be either true or false. For more information,\n// see traceSampled on the LogEntry page:\thttps://cloud.google.com/logging/docs/reference/v2/rpc/google.logging.v2#logentry\nexports.LOGGING_SAMPLED_KEY = common_1.LOGGING_SAMPLED_KEY;\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,QAAQ,gBAAgB,GAAG,QAAQ,iBAAiB,GAAG,QAAQ,cAAc,GAAG,QAAQ,wBAAwB,GAAG,QAAQ,4BAA4B,GAAG,QAAQ,OAAO,GAAG,KAAK;AAC/M,MAAM;AACN,MAAM;AACN,OAAO,cAAc,CAAC,SAAS,4BAA4B;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,SAAS,wBAAwB;IAAE;AAAE;AAC9I,MAAM;AACN,QAAQ,OAAO,GAAG;AAClB,MAAM;AACN,OAAO,cAAc,CAAC,SAAS,gCAAgC;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,mBAAmB,4BAA4B;IAAE;AAAE;AAChK,MAAM,QAAQ,OAAO,GAAG,CAAC;AACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA6EC,GACD,MAAM,uBAAuB;IACzB,YAAY,OAAO,CAAE;QACjB,UAAU,WAAW,CAAC;QACtB,KAAK,CAAC;YACF,OAAO,QAAQ,KAAK;YACpB,QAAQ,QAAQ,MAAM;YACtB,QAAQ,QAAQ,MAAM;YACtB,kBAAkB,QAAQ,gBAAgB;YAC1C,kBAAkB,QAAQ,gBAAgB;QAC9C;QACA,IAAI,CAAC,MAAM,GAAG,IAAI,SAAS,aAAa,CAAC;IAC7C;IACA,2BAA2B;IAC3B,IAAI,IAAI,EAAE,QAAQ,EAAE;QAChB,6DAA6D;QAC7D,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,UAAU,GAAG;QACtD,2EAA2E;QAC3E,iEAAiE;QACjE,eAAe;QACf,IAAI,OACA,SAAS,KAAK,GAAG;QACrB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,SAAS,YAAY,CAAC,GAAG;IACnE;AACJ;AACA,QAAQ,cAAc,GAAG;AACzB,eAAe,iBAAiB,GAAG,SAAS,iBAAiB;AAC7D,eAAe,gBAAgB,GAAG,SAAS,gBAAgB;AAC3D,eAAe,mBAAmB,GAAG,SAAS,mBAAmB;AACjE,kEAAkE;AAClE,+BAA+B;AAC/B,+GAA+G;AAC/G,QAAQ,iBAAiB,GAAG,SAAS,iBAAiB;AACtD,iEAAiE;AACjE,gCAAgC;AAChC,+GAA+G;AAC/G,QAAQ,gBAAgB,GAAG,SAAS,gBAAgB;AACpD,oEAAoE;AACpE,uCAAuC;AACvC,8EAA8E;AAC9E,2HAA2H;AAC3H,QAAQ,mBAAmB,GAAG,SAAS,mBAAmB,EAC1D,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2410, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-monitoring-exporter/build/src/external-types.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=external-types.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK,IAC3D,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2432, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-monitoring-exporter/build/src/types.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueType = exports.MetricKind = void 0;\n/**\n * The kind of measurement. It describes how the data is reported.\n */\nvar MetricKind;\n(function (MetricKind) {\n    MetricKind[\"UNSPECIFIED\"] = \"METRIC_KIND_UNSPECIFIED\";\n    MetricKind[\"GAUGE\"] = \"GAUGE\";\n    MetricKind[\"DELTA\"] = \"DELTA\";\n    MetricKind[\"CUMULATIVE\"] = \"CUMULATIVE\";\n})(MetricKind = exports.MetricKind || (exports.MetricKind = {}));\n/** The value type of a metric. */\nvar ValueType;\n(function (ValueType) {\n    ValueType[\"VALUE_TYPE_UNSPECIFIED\"] = \"VALUE_TYPE_UNSPECIFIED\";\n    ValueType[\"INT64\"] = \"INT64\";\n    ValueType[\"DOUBLE\"] = \"DOUBLE\";\n    ValueType[\"DISTRIBUTION\"] = \"DISTRIBUTION\";\n})(ValueType = exports.ValueType || (exports.ValueType = {}));\n//# sourceMappingURL=types.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,SAAS,GAAG,QAAQ,UAAU,GAAG,KAAK;AAC9C;;CAEC,GACD,IAAI;AACJ,CAAC,SAAU,UAAU;IACjB,UAAU,CAAC,cAAc,GAAG;IAC5B,UAAU,CAAC,QAAQ,GAAG;IACtB,UAAU,CAAC,QAAQ,GAAG;IACtB,UAAU,CAAC,aAAa,GAAG;AAC/B,CAAC,EAAE,aAAa,QAAQ,UAAU,IAAI,CAAC,QAAQ,UAAU,GAAG,CAAC,CAAC;AAC9D,gCAAgC,GAChC,IAAI;AACJ,CAAC,SAAU,SAAS;IAChB,SAAS,CAAC,yBAAyB,GAAG;IACtC,SAAS,CAAC,QAAQ,GAAG;IACrB,SAAS,CAAC,SAAS,GAAG;IACtB,SAAS,CAAC,eAAe,GAAG;AAChC,CAAC,EAAE,YAAY,QAAQ,SAAS,IAAI,CAAC,QAAQ,SAAS,GAAG,CAAC,CAAC,IAC3D,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2471, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-monitoring-exporter/build/src/utils.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numbersToStrings = exports.exp2 = exports.mountProjectIdPath = exports.partitionList = void 0;\n/** Returns the minimum number of arrays of max size chunkSize, partitioned from the given array. */\nfunction partitionList(list, chunkSize) {\n    const listCopy = [...list];\n    const results = [];\n    while (listCopy.length) {\n        results.push(listCopy.splice(0, chunkSize));\n    }\n    return results;\n}\nexports.partitionList = partitionList;\n/** Mounts the GCP project id path */\nfunction mountProjectIdPath(projectId) {\n    return `projects/${projectId}`;\n}\nexports.mountProjectIdPath = mountProjectIdPath;\n/**\n * Returns the result of 2^value\n */\nfunction exp2(value) {\n    return Math.pow(2, value);\n}\nexports.exp2 = exp2;\n/**\n * Map array of numbers to strings\n *\n * @param values an array of numbers\n * @returns a list of strings for those integers\n */\nfunction numbersToStrings(values) {\n    return values.map(value => value.toString());\n}\nexports.numbersToStrings = numbersToStrings;\n//# sourceMappingURL=utils.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,gBAAgB,GAAG,QAAQ,IAAI,GAAG,QAAQ,kBAAkB,GAAG,QAAQ,aAAa,GAAG,KAAK;AACpG,kGAAkG,GAClG,SAAS,cAAc,IAAI,EAAE,SAAS;IAClC,MAAM,WAAW;WAAI;KAAK;IAC1B,MAAM,UAAU,EAAE;IAClB,MAAO,SAAS,MAAM,CAAE;QACpB,QAAQ,IAAI,CAAC,SAAS,MAAM,CAAC,GAAG;IACpC;IACA,OAAO;AACX;AACA,QAAQ,aAAa,GAAG;AACxB,mCAAmC,GACnC,SAAS,mBAAmB,SAAS;IACjC,OAAO,CAAC,SAAS,EAAE,WAAW;AAClC;AACA,QAAQ,kBAAkB,GAAG;AAC7B;;CAEC,GACD,SAAS,KAAK,KAAK;IACf,OAAO,KAAK,GAAG,CAAC,GAAG;AACvB;AACA,QAAQ,IAAI,GAAG;AACf;;;;;CAKC,GACD,SAAS,iBAAiB,MAAM;IAC5B,OAAO,OAAO,GAAG,CAAC,CAAA,QAAS,MAAM,QAAQ;AAC7C;AACA,QAAQ,gBAAgB,GAAG,kBAC3B,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2524, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-monitoring-exporter/build/src/transform.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._TEST_ONLY = exports.createTimeSeries = exports.transformMetricDescriptor = void 0;\nconst sdk_metrics_1 = require(\"@opentelemetry/sdk-metrics\");\nconst api_1 = require(\"@opentelemetry/api\");\nconst types_1 = require(\"./types\");\nconst utils_1 = require(\"./utils\");\nconst path = require(\"path\");\nconst precise_date_1 = require(\"@google-cloud/precise-date\");\n/**\n *\n * @param metric the MetricData to create a descriptor for\n * @param metricPrefix prefix to add to metric names\n * @param displayNamePrefix prefix to add to display name in the descriptor\n * @returns the GCM MetricDescriptor or null if the MetricData was empty\n */\nfunction transformMetricDescriptor(metric, metricPrefix) {\n    const { descriptor: { name, description, unit }, } = metric;\n    return {\n        type: transformMetricType(metricPrefix, name),\n        description,\n        displayName: name,\n        metricKind: transformMetricKind(metric),\n        valueType: transformValueType(metric),\n        unit,\n        labels: transformLabelDescriptors(metric),\n    };\n}\nexports.transformMetricDescriptor = transformMetricDescriptor;\nfunction transformLabelDescriptors(metric) {\n    if (metric.dataPoints.length === 0) {\n        return [];\n    }\n    const attrs = metric.dataPoints[0].attributes;\n    return Object.keys(attrs).map(key => ({\n        key: normalizeLabelKey(key),\n        description: '',\n    }));\n}\n/** Transforms Metric type. */\nfunction transformMetricType(metricPrefix, name) {\n    return path.posix.join(metricPrefix, name);\n}\n/** Transforms a OpenTelemetry instrument type to a GCM MetricKind. */\nfunction transformMetricKind(metric) {\n    switch (metric.dataPointType) {\n        case sdk_metrics_1.DataPointType.SUM:\n            return metric.isMonotonic ? types_1.MetricKind.CUMULATIVE : types_1.MetricKind.GAUGE;\n        case sdk_metrics_1.DataPointType.GAUGE:\n            return types_1.MetricKind.GAUGE;\n        case sdk_metrics_1.DataPointType.HISTOGRAM:\n        case sdk_metrics_1.DataPointType.EXPONENTIAL_HISTOGRAM:\n            return types_1.MetricKind.CUMULATIVE;\n        default:\n            exhaust(metric);\n            // No logging needed as it will be done in transformPoints()\n            return types_1.MetricKind.UNSPECIFIED;\n    }\n}\n/** Transforms a OpenTelemetry ValueType to a GCM ValueType. */\nfunction transformValueType(metric) {\n    const { dataPointType, descriptor: { valueType }, } = metric;\n    switch (dataPointType) {\n        case sdk_metrics_1.DataPointType.HISTOGRAM:\n        case sdk_metrics_1.DataPointType.EXPONENTIAL_HISTOGRAM:\n            return types_1.ValueType.DISTRIBUTION;\n        case sdk_metrics_1.DataPointType.GAUGE:\n        case sdk_metrics_1.DataPointType.SUM:\n            // handle below\n            break;\n        default:\n            exhaust(dataPointType);\n            // No logging needed as it will be done in transformPoints()\n            return types_1.ValueType.VALUE_TYPE_UNSPECIFIED;\n    }\n    switch (valueType) {\n        case api_1.ValueType.DOUBLE:\n            return types_1.ValueType.DOUBLE;\n        case api_1.ValueType.INT:\n            return types_1.ValueType.INT64;\n        default:\n            exhaust(valueType);\n            api_1.diag.info('Encountered unexpected value type %s', valueType);\n            return types_1.ValueType.VALUE_TYPE_UNSPECIFIED;\n    }\n}\n/**\n * Converts metric's timeseries to a TimeSeries, so that metric can be\n * uploaded to GCM.\n */\nfunction createTimeSeries(metric, resource, metricPrefix) {\n    const metricKind = transformMetricKind(metric);\n    const valueType = transformValueType(metric);\n    return transformPoints(metric, metricPrefix).map(({ point, metric }) => ({\n        metric,\n        resource,\n        metricKind,\n        valueType,\n        points: [point],\n    }));\n}\nexports.createTimeSeries = createTimeSeries;\nfunction transformMetric(point, instrumentDescriptor, metricPrefix) {\n    const type = transformMetricType(metricPrefix, instrumentDescriptor.name);\n    const labels = {};\n    Object.keys(point.attributes).forEach(key => {\n        labels[normalizeLabelKey(key)] = `${point.attributes[key]}`;\n    });\n    return { type, labels };\n}\n/**\n * Transform timeseries's point, so that metric can be uploaded to GCM.\n */\nfunction transformPoints(metric, metricPrefix) {\n    switch (metric.dataPointType) {\n        case sdk_metrics_1.DataPointType.SUM:\n        case sdk_metrics_1.DataPointType.GAUGE:\n            return metric.dataPoints.map(dataPoint => ({\n                metric: transformMetric(dataPoint, metric.descriptor, metricPrefix),\n                point: {\n                    value: transformNumberValue(metric.descriptor.valueType, dataPoint.value),\n                    interval: {\n                        // Add start time for non-gauge points\n                        ...(metric.dataPointType === sdk_metrics_1.DataPointType.SUM && metric.isMonotonic\n                            ? {\n                                startTime: new precise_date_1.PreciseDate(dataPoint.startTime).toISOString(),\n                            }\n                            : null),\n                        endTime: new precise_date_1.PreciseDate(dataPoint.endTime).toISOString(),\n                    },\n                },\n            }));\n        case sdk_metrics_1.DataPointType.HISTOGRAM:\n            return metric.dataPoints.map(dataPoint => ({\n                metric: transformMetric(dataPoint, metric.descriptor, metricPrefix),\n                point: {\n                    value: transformHistogramValue(dataPoint.value),\n                    interval: {\n                        startTime: new precise_date_1.PreciseDate(dataPoint.startTime).toISOString(),\n                        endTime: new precise_date_1.PreciseDate(dataPoint.endTime).toISOString(),\n                    },\n                },\n            }));\n        case sdk_metrics_1.DataPointType.EXPONENTIAL_HISTOGRAM:\n            return metric.dataPoints.map(dataPoint => ({\n                metric: transformMetric(dataPoint, metric.descriptor, metricPrefix),\n                point: {\n                    value: transformExponentialHistogramValue(dataPoint.value),\n                    interval: {\n                        startTime: new precise_date_1.PreciseDate(dataPoint.startTime).toISOString(),\n                        endTime: new precise_date_1.PreciseDate(dataPoint.endTime).toISOString(),\n                    },\n                },\n            }));\n        default:\n            exhaust(metric);\n            api_1.diag.info('Encountered unexpected dataPointType=%s, dropping %s points', metric.dataPointType, metric.dataPoints.length);\n            break;\n    }\n    return [];\n}\n/** Transforms a OpenTelemetry Point's value to a GCM Point value. */\nfunction transformNumberValue(valueType, value) {\n    if (valueType === api_1.ValueType.INT) {\n        return { int64Value: value.toString() };\n    }\n    else if (valueType === api_1.ValueType.DOUBLE) {\n        return { doubleValue: value };\n    }\n    exhaust(valueType);\n    throw Error(`unsupported value type: ${valueType}`);\n}\nfunction transformHistogramValue(value) {\n    return {\n        distributionValue: {\n            // sumOfSquaredDeviation param not aggregated\n            count: value.count.toString(),\n            mean: value.count && value.sum ? value.sum / value.count : 0,\n            bucketOptions: {\n                explicitBuckets: { bounds: value.buckets.boundaries },\n            },\n            bucketCounts: (0, utils_1.numbersToStrings)(value.buckets.counts),\n        },\n    };\n}\nfunction transformExponentialHistogramValue(value) {\n    // Adapated from reference impl in Go which has more explanatory comments\n    // https://github.com/GoogleCloudPlatform/opentelemetry-operations-go/blob/v1.8.0/exporter/collector/metrics.go#L582\n    const underflow = value.zeroCount +\n        value.negative.bucketCounts.reduce((prev, current) => prev + current, 0);\n    const bucketCounts = [\n        underflow,\n        ...value.positive.bucketCounts,\n        0, // overflow bucket is always empty\n    ];\n    let bucketOptions;\n    if (value.positive.bucketCounts.length === 0) {\n        bucketOptions = {\n            explicitBuckets: { bounds: [] },\n        };\n    }\n    else {\n        const growthFactor = (0, utils_1.exp2)((0, utils_1.exp2)(-value.scale));\n        const scale = Math.pow(growthFactor, value.positive.offset);\n        bucketOptions = {\n            exponentialBuckets: {\n                growthFactor,\n                scale,\n                numFiniteBuckets: bucketCounts.length - 2,\n            },\n        };\n    }\n    const mean = value.sum === undefined || value.count === 0 ? 0 : value.sum / value.count;\n    return {\n        distributionValue: {\n            // sumOfSquaredDeviation param not aggregated\n            count: value.count.toString(),\n            mean,\n            bucketOptions,\n            bucketCounts: (0, utils_1.numbersToStrings)(bucketCounts),\n        },\n    };\n}\nfunction normalizeLabelKey(key) {\n    // Replace characters which are not Letter or Decimal_Number unicode category with \"_\", see\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Unicode_Property_Escapes\n    //\n    // Reimplementation of reference impl in Go:\n    // https://github.com/GoogleCloudPlatform/opentelemetry-operations-go/blob/e955c204f4f2bfdc92ff0ad52786232b975efcc2/exporter/metric/metric.go#L595-L604\n    let sanitized = key.replace(/[^\\p{Letter}\\p{Decimal_Number}_]/gu, '_');\n    if (sanitized[0].match(/\\p{Decimal_Number}/u)) {\n        sanitized = 'key_' + sanitized;\n    }\n    return sanitized;\n}\n/**\n * Assert switch case is exhaustive\n */\nfunction exhaust(switchValue) {\n    return switchValue;\n}\nexports._TEST_ONLY = {\n    normalizeLabelKey,\n};\n//# sourceMappingURL=transform.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2787, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-monitoring-exporter/build/src/version.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// Autogenerated by scripts/version-update.js during compilation. Check this\n// file in.\nexports.VERSION = '0.19.0';\n//# sourceMappingURL=version.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,OAAO,GAAG,KAAK;AACvB,4EAA4E;AAC5E,WAAW;AACX,QAAQ,OAAO,GAAG,UAClB,mCAAmC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2813, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-monitoring-exporter/build/src/monitoring.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MetricExporter = void 0;\nconst core_1 = require(\"@opentelemetry/core\");\nconst google_auth_library_1 = require(\"google-auth-library\");\n// Import directly from this module instead of googleapis to improve bundler tree shaking\nconst monitoring_1 = require(\"googleapis/build/src/apis/monitoring\");\nconst transform_1 = require(\"./transform\");\nconst utils_1 = require(\"./utils\");\nconst api_1 = require(\"@opentelemetry/api\");\nconst opentelemetry_resource_util_1 = require(\"@google-cloud/opentelemetry-resource-util\");\nconst version_1 = require(\"./version\");\n// Stackdriver Monitoring v3 only accepts up to 200 TimeSeries per\n// CreateTimeSeries call.\nconst MAX_BATCH_EXPORT_SIZE = 200;\nconst OT_USER_AGENTS = [\n    {\n        product: 'opentelemetry-js',\n        version: core_1.VERSION,\n    },\n    {\n        product: 'google-cloud-metric-exporter',\n        version: version_1.VERSION,\n    },\n];\nconst OT_REQUEST_HEADER = {\n    'x-opentelemetry-outgoing-request': 0x1,\n};\n/**\n * Format and sends metrics information to Google Cloud Monitoring.\n */\nclass MetricExporter {\n    constructor(options = {}) {\n        var _a;\n        /**\n         * Set of OTel metric names that have already had their metric descriptors successfully\n         * created\n         */\n        this.createdMetricDescriptors = new Set();\n        this._metricPrefix = (_a = options.prefix) !== null && _a !== void 0 ? _a : MetricExporter.DEFAULT_METRIC_PREFIX;\n        this._disableCreateMetricDescriptors =\n            !!options.disableCreateMetricDescriptors;\n        this._auth = new google_auth_library_1.GoogleAuth({\n            credentials: options.credentials,\n            keyFile: options.keyFile,\n            keyFilename: options.keyFilename,\n            projectId: options.projectId,\n            scopes: ['https://www.googleapis.com/auth/cloud-platform'],\n        });\n        this._monitoring = (0, monitoring_1.monitoring)({\n            version: 'v3',\n            rootUrl: 'https://' + (options.apiEndpoint || 'monitoring.googleapis.com:443'),\n            headers: OT_REQUEST_HEADER,\n            userAgentDirectives: OT_USER_AGENTS.concat(options.userAgent ? [options.userAgent] : []),\n        });\n        // Start this async process as early as possible. It will be\n        // awaited on the first export because constructors are synchronous\n        this._projectId = this._auth.getProjectId().catch(err => {\n            api_1.diag.error(err);\n        });\n    }\n    /**\n     * Implementation for {@link PushMetricExporter.export}.\n     * Calls the async wrapper method {@link _exportAsync} and\n     * assures no rejected promises bubble up to the caller.\n     *\n     * @param metrics Metrics to be sent to the Google Cloud Monitoring backend\n     * @param resultCallback result callback to be called on finish\n     */\n    export(metrics, resultCallback) {\n        this._exportAsync(metrics).then(resultCallback, err => {\n            api_1.diag.error(err.message);\n            resultCallback({ code: core_1.ExportResultCode.FAILED, error: err });\n        });\n    }\n    async shutdown() { }\n    async forceFlush() { }\n    /**\n     * Asnyc wrapper for the {@link export} implementation.\n     * Writes the current values of all exported {@link MetricRecord}s\n     * to the Google Cloud Monitoring backend.\n     *\n     * @param resourceMetrics Metrics to be sent to the Google Cloud Monitoring backend\n     */\n    async _exportAsync(resourceMetrics) {\n        if (this._projectId instanceof Promise) {\n            this._projectId = await this._projectId;\n        }\n        if (!this._projectId) {\n            const error = new Error('expecting a non-blank ProjectID');\n            api_1.diag.error(error.message);\n            return { code: core_1.ExportResultCode.FAILED, error };\n        }\n        api_1.diag.debug('Google Cloud Monitoring export');\n        const resource = (0, opentelemetry_resource_util_1.mapOtelResourceToMonitoredResource)(resourceMetrics.resource);\n        const timeSeries = [];\n        for (const scopeMetric of resourceMetrics.scopeMetrics) {\n            for (const metric of scopeMetric.metrics) {\n                const isRegistered = this._disableCreateMetricDescriptors ||\n                    (await this._registerMetricDescriptor(metric));\n                if (isRegistered) {\n                    timeSeries.push(...(0, transform_1.createTimeSeries)(metric, resource, this._metricPrefix));\n                }\n            }\n        }\n        let failure = {\n            sendFailed: false,\n        };\n        for (const batchedTimeSeries of (0, utils_1.partitionList)(timeSeries, MAX_BATCH_EXPORT_SIZE)) {\n            try {\n                await this._sendTimeSeries(batchedTimeSeries);\n            }\n            catch (e) {\n                const err = asError(e);\n                err.message = `Send TimeSeries failed: ${err.message}`;\n                failure = { sendFailed: true, error: err };\n                api_1.diag.error(err.message);\n            }\n        }\n        if (failure.sendFailed) {\n            return { code: core_1.ExportResultCode.FAILED, error: failure.error };\n        }\n        return { code: core_1.ExportResultCode.SUCCESS };\n    }\n    /**\n     * Returns true if the given metricDescriptor is successfully registered to\n     * Google Cloud Monitoring, or the exact same metric has already been\n     * registered. Returns false otherwise and should be skipped.\n     *\n     * @param metric The OpenTelemetry MetricData.\n     */\n    async _registerMetricDescriptor(metric) {\n        const isDescriptorCreated = this.createdMetricDescriptors.has(metric.descriptor.name);\n        if (isDescriptorCreated) {\n            return true;\n        }\n        const res = await this._createMetricDescriptorIfNeeded(metric);\n        if (res) {\n            this.createdMetricDescriptors.add(metric.descriptor.name);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Returns true if a descriptor already exists within the requested GCP project id;\n     * @param descriptor The metric descriptor to check\n     * @param projectIdPath The GCP project id path\n     * @param authClient The authenticated client which will be used to make the request\n     * @returns {boolean}\n     */\n    async _checkIfDescriptorExists(descriptor, projectIdPath, authClient) {\n        try {\n            await this._monitoring.projects.metricDescriptors.get({\n                name: `${projectIdPath}/metricDescriptors/${descriptor.type}`,\n                auth: authClient,\n            });\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    /**\n     * Calls CreateMetricDescriptor in the GCM API for the given InstrumentDescriptor if needed\n     * @param metric The OpenTelemetry MetricData.\n     * @returns whether or not the descriptor was successfully created\n     */\n    async _createMetricDescriptorIfNeeded(metric) {\n        const authClient = await this._authorize();\n        const descriptor = (0, transform_1.transformMetricDescriptor)(metric, this._metricPrefix);\n        const projectIdPath = (0, utils_1.mountProjectIdPath)(this._projectId);\n        try {\n            const descriptorExists = await this._checkIfDescriptorExists(descriptor, projectIdPath, authClient);\n            if (!descriptorExists) {\n                await this._monitoring.projects.metricDescriptors.create({\n                    name: projectIdPath,\n                    requestBody: descriptor,\n                    auth: authClient,\n                });\n                api_1.diag.debug('sent metric descriptor', descriptor);\n            }\n            return true;\n        }\n        catch (e) {\n            const err = asError(e);\n            api_1.diag.error('Failed to create metric descriptor: %s', err.message);\n            return false;\n        }\n    }\n    async _sendTimeSeries(timeSeries) {\n        if (timeSeries.length === 0) {\n            return Promise.resolve();\n        }\n        const authClient = await this._authorize();\n        await this._monitoring.projects.timeSeries.create({\n            name: (0, utils_1.mountProjectIdPath)(this._projectId),\n            requestBody: { timeSeries },\n            auth: authClient,\n        });\n        api_1.diag.debug('sent time series', timeSeries);\n    }\n    /**\n     * Gets the Google Application Credentials from the environment variables\n     * and authenticates the client.\n     */\n    async _authorize() {\n        return (await this._auth.getClient());\n    }\n}\nexports.MetricExporter = MetricExporter;\nMetricExporter.DEFAULT_METRIC_PREFIX = 'workload.googleapis.com';\nfunction asError(error) {\n    if (error instanceof Error) {\n        return error;\n    }\n    return new Error(String(error));\n}\n//# sourceMappingURL=monitoring.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3057, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-monitoring-exporter/build/src/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./external-types\"), exports);\n__exportStar(require(\"./monitoring\"), exports);\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAS,CAAC,EAAE,QAAO;IACjE,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAS,IAAI,gBAAgB,UAAS,GAAG;AAC3H;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,2KAA0C;AAC1C,uKAAsC,UACtC,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3100, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/precise-date/build/src/index.js"],"sourcesContent":["\"use strict\";\n/*!\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PreciseDate = void 0;\nconst FULL_ISO_REG = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{4,9}Z/;\nconst NO_BIG_INT = 'BigInt only available in Node >= v10.7. Consider using getFullTimeString instead.';\nvar Sign;\n(function (Sign) {\n    Sign[Sign[\"NEGATIVE\"] = -1] = \"NEGATIVE\";\n    Sign[Sign[\"POSITIVE\"] = 1] = \"POSITIVE\";\n    Sign[Sign[\"ZERO\"] = 0] = \"ZERO\";\n})(Sign || (Sign = {}));\n/**\n * The native Date object.\n * @external Date\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date}\n */\n/**\n * @typedef {array} DateTuple\n * @property {number} 0 Represents seconds of UTC time since Unix epoch\n *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n *     9999-12-31T23:59:59Z inclusive.\n * @property {number} 1 Non-negative fractions of a second at nanosecond\n *     resolution. Negative second values with fractions must still have\n *     non-negative nanos values that count forward in time. Must be from 0 to\n *     999,999,999 inclusive.\n */\n/**\n * @typedef {object} DateStruct\n * @property {number} seconds Represents seconds of UTC time since Unix epoch\n *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n *     9999-12-31T23:59:59Z inclusive.\n * @property {number} nanos Non-negative fractions of a second at nanosecond\n *     resolution. Negative second values with fractions must still have\n *     non-negative nanos values that count forward in time. Must be from 0 to\n *     999,999,999 inclusive.\n */\n/**\n * Date object with nanosecond precision. Supports all standard Date arguments\n * in addition to several custom types as noted below.\n *\n * @class\n * @extends external:Date\n *\n * @param {number|string|bigint|Date|DateTuple|DateStruct} [time] The time\n *     value.\n * @param {...number} [dateFields] Additional date fields (month, date, hours,\n *     minutes, seconds, milliseconds, microseconds, nanoseconds).\n *\n * @example <caption>With a RFC 3339 formatted string.</caption>\n * const date = new PreciseDate('2019-02-08T10:34:29.481145231Z');\n *\n * @example <caption>With a nanosecond timestamp string.</caption>\n * const date = new PreciseDate('1549622069481320032');\n *\n * @example <caption>With a BigInt (requires Node >= v10.7)</caption>\n * const date = new PreciseDate(1549622069481320032n);\n *\n * @example <caption>With a tuple containing seconds and nanoseconds.</caption>\n * const date = new PreciseDate([1549622069, 481320032]);\n *\n * @example <caption>With an object containing `seconds` and `nanos`</caption>\n * const date = new PreciseDate({seconds: 1549622069, nanos: 481320032});\n *\n * @example <caption>Specifiying date fields</caption>\n * const date = new PreciseDate(2018, 5, 14, 41, 11, 34, 123, 874, 321);\n */\nclass PreciseDate extends Date {\n    constructor(time) {\n        super();\n        this._micros = 0;\n        this._nanos = 0;\n        if (time && typeof time !== 'number' && !(time instanceof Date)) {\n            this.setFullTime(PreciseDate.parseFull(time));\n            return;\n        }\n        // eslint-disable-next-line prefer-rest-params\n        const args = Array.from(arguments);\n        const dateFields = args.slice(0, 7);\n        const date = new Date(...dateFields);\n        const nanos = args.length === 9 ? args.pop() : 0;\n        const micros = args.length === 8 ? args.pop() : 0;\n        this.setTime(date.getTime());\n        this.setMicroseconds(micros);\n        this.setNanoseconds(nanos);\n    }\n    /**\n     * Returns the specified date represented in nanoseconds according to\n     * universal time.\n     *\n     * **NOTE:** Because this method returns a `BigInt` it requires Node >= v10.7.\n     * Use {@link PreciseDate#getFullTimeString} to get the time as a string.\n     *\n     * @see {@link https://github.com/tc39/proposal-bigint|BigInt}\n     *\n     * @throws {error} If `BigInt` is unavailable.\n     * @returns {bigint}\n     *\n     * @example\n     * const date = new PreciseDate('2019-02-08T10:34:29.481145231Z');\n     *\n     * console.log(date.getFullTime());\n     * // expected output: 1549622069481145231n\n     */\n    getFullTime() {\n        if (typeof BigInt !== 'function') {\n            throw new Error(NO_BIG_INT);\n        }\n        return BigInt(this.getFullTimeString());\n    }\n    /**\n     * Returns a string of the specified date represented in nanoseconds according\n     * to universal time.\n     *\n     * @returns {string}\n     *\n     * @example\n     * const date = new PreciseDate('2019-02-08T10:34:29.481145231Z');\n     *\n     * console.log(date.getFullTimeString());\n     * // expected output: \"1549622069481145231\"\n     */\n    getFullTimeString() {\n        const seconds = this._getSeconds();\n        let nanos = this._getNanos();\n        if (nanos && Math.sign(seconds) === Sign.NEGATIVE) {\n            nanos = 1e9 - nanos;\n        }\n        return `${seconds}${padLeft(nanos, 9)}`;\n    }\n    /**\n     * Returns the microseconds in the specified date according to universal time.\n     *\n     * @returns {number}\n     *\n     * @example\n     * const date = new PreciseDate('2019-02-08T10:34:29.481145Z');\n     *\n     * console.log(date.getMicroseconds());\n     * // expected output: 145\n     */\n    getMicroseconds() {\n        return this._micros;\n    }\n    /**\n     * Returns the nanoseconds in the specified date according to universal time.\n     *\n     * @returns {number}\n     *\n     * @example\n     * const date = new PreciseDate('2019-02-08T10:34:29.481145231Z');\n     *\n     * console.log(date.getNanoseconds());\n     * // expected output: 231\n     */\n    getNanoseconds() {\n        return this._nanos;\n    }\n    /**\n     * Sets the microseconds for a specified date according to universal time.\n     *\n     * @param {number} microseconds A number representing the microseconds.\n     * @returns {string} Returns a string representing the nanoseconds in the\n     *     specified date according to universal time.\n     *\n     * @example\n     * const date = new PreciseDate();\n     *\n     * date.setMicroseconds(149);\n     *\n     * console.log(date.getMicroseconds());\n     * // expected output: 149\n     */\n    setMicroseconds(micros) {\n        const abs = Math.abs(micros);\n        let millis = this.getUTCMilliseconds();\n        if (abs >= 1000) {\n            millis += Math.floor(abs / 1000) * Math.sign(micros);\n            micros %= 1000;\n        }\n        if (Math.sign(micros) === Sign.NEGATIVE) {\n            millis -= 1;\n            micros += 1000;\n        }\n        this._micros = micros;\n        this.setUTCMilliseconds(millis);\n        return this.getFullTimeString();\n    }\n    /**\n     * Sets the nanoseconds for a specified date according to universal time.\n     *\n     * @param {number} nanoseconds A number representing the nanoseconds.\n     * @returns {string} Returns a string representing the nanoseconds in the\n     *     specified date according to universal time.\n     *\n     * @example\n     * const date = new PreciseDate();\n     *\n     * date.setNanoseconds(231);\n     *\n     * console.log(date.getNanoseconds());\n     * // expected output: 231\n     */\n    setNanoseconds(nanos) {\n        const abs = Math.abs(nanos);\n        let micros = this._micros;\n        if (abs >= 1000) {\n            micros += Math.floor(abs / 1000) * Math.sign(nanos);\n            nanos %= 1000;\n        }\n        if (Math.sign(nanos) === Sign.NEGATIVE) {\n            micros -= 1;\n            nanos += 1000;\n        }\n        this._nanos = nanos;\n        return this.setMicroseconds(micros);\n    }\n    /**\n     * Sets the PreciseDate object to the time represented by a number of\n     * nanoseconds since January 1, 1970, 00:00:00 UTC.\n     *\n     * @param {bigint|number|string} time Value representing the number of\n     *     nanoseconds since January 1, 1970, 00:00:00 UTC.\n     * @returns {string} Returns a string representing the nanoseconds in the\n     *     specified date according to universal time (effectively, the value of\n     *     the argument).\n     *\n     * @see {@link https://github.com/tc39/proposal-bigint|BigInt}\n     *\n     * @example <caption>With a nanosecond string.</caption>\n     * const date = new PreciseDate();\n     * date.setFullTime('1549622069481145231');\n     *\n     * @example <caption>With a BigInt</caption>\n     * date.setFullTime(1549622069481145231n);\n     */\n    setFullTime(time) {\n        if (typeof time !== 'string') {\n            time = time.toString();\n        }\n        const sign = Math.sign(Number(time));\n        time = time.replace(/^-/, '');\n        const seconds = Number(time.substr(0, time.length - 9)) * sign;\n        const nanos = Number(time.substr(-9)) * sign;\n        this.setTime(seconds * 1000);\n        return this.setNanoseconds(nanos);\n    }\n    /**\n     * Sets the PreciseDate object to the time represented by a number of\n     * milliseconds since January 1, 1970, 00:00:00 UTC. Calling this method will\n     * reset both the microseconds and nanoseconds to 0.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime|Date#setTime}\n     *\n     * @param {number} time Value representing the number of milliseconds since\n     *     January 1, 1970, 00:00:00 UTC.\n     * @returns {string} The number of milliseconds between January 1, 1970,\n     *     00:00:00 UTC and the updated date (effectively, the value of the\n     *     argument).\n     */\n    setTime(time) {\n        this._micros = 0;\n        this._nanos = 0;\n        return super.setTime(time);\n    }\n    /**\n     * Returns a string in RFC 3339 format. Unlike the native `Date#toISOString`,\n     * this will return 9 digits to represent sub-second precision.\n     *\n     * @see {@link https://tools.ietf.org/html/rfc3339|RFC 3339}\n     *\n     * @returns {string}\n     *\n     * @example\n     * const date = new PreciseDate(1549622069481145231n);\n     *\n     * console.log(date.toISOString());\n     * // expected output: \"2019-02-08T10:34:29.481145231Z\"\n     */\n    toISOString() {\n        const micros = padLeft(this._micros, 3);\n        const nanos = padLeft(this._nanos, 3);\n        return super.toISOString().replace(/z$/i, `${micros}${nanos}Z`);\n    }\n    /**\n     * Returns an object representing the specified date according to universal\n     * time.\n     *\n     * @see {@link https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#timestamp|google.protobuf.Timestamp}\n     *\n     * @returns {DateStruct}\n     *\n     * @example\n     * const date = new PreciseDate('2019-02-08T10:34:29.481145231Z');\n     *\n     * console.log(date.toStruct());\n     * // expected output: {seconds: 1549622069, nanos: 481145231}\n     */\n    toStruct() {\n        let seconds = this._getSeconds();\n        const nanos = this._getNanos();\n        const sign = Math.sign(seconds);\n        // These objects are essentially a mirror of protobuf timestamps.\n        // `nanos` must always count forward in time, even if the date is <= Unix\n        // epoch. To do this we just need to count backwards 1 second and return the\n        // nanoseconds as is.\n        if (sign === Sign.NEGATIVE && nanos) {\n            seconds -= 1;\n        }\n        return { seconds, nanos };\n    }\n    /**\n     * Returns a tuple representing the specified date according to universal\n     * time.\n     *\n     * @returns {DateTuple}\n     *\n     * @example\n     * const date = new PreciseDate('2019-02-08T10:34:29.481145231Z');\n     *\n     * console.log(date.toTuple());\n     * // expected output: [1549622069, 481145231]\n     */\n    toTuple() {\n        const { seconds, nanos } = this.toStruct();\n        return [seconds, nanos];\n    }\n    /**\n     * Returns the total number of seconds in the specified date since Unix epoch.\n     * Numbers representing < epoch will be negative.\n     *\n     * @private\n     *\n     * @returns {number}\n     */\n    _getSeconds() {\n        const time = this.getTime();\n        const sign = Math.sign(time);\n        return Math.floor(Math.abs(time) / 1000) * sign;\n    }\n    /**\n     * Returns the sub-second precision of the specified date. This will always be\n     * a positive number.\n     *\n     * @private\n     *\n     * @returns {number}\n     */\n    _getNanos() {\n        const msInNanos = this.getUTCMilliseconds() * 1e6;\n        const microsInNanos = this._micros * 1000;\n        return this._nanos + msInNanos + microsInNanos;\n    }\n    /**\n     * Parses a precise time.\n     *\n     * @static\n     *\n     * @param {string|bigint|DateTuple|DateStruct} time The precise time value.\n     * @returns {string} Returns a string representing the nanoseconds in the\n     *     specified date according to universal time.\n     *\n     * @example <caption>From a RFC 3339 formatted string.</caption>\n     * const time = PreciseDate.parseFull('2019-02-08T10:34:29.481145231Z');\n     * console.log(time); // expected output: \"1549622069481145231\"\n     *\n     * @example <caption>From a nanosecond timestamp string.</caption>\n     * const time = PreciseDate.parseFull('1549622069481145231');\n     * console.log(time); // expected output: \"1549622069481145231\"\n     *\n     * @example <caption>From a BigInt (requires Node >= v10.7)</caption>\n     * const time = PreciseDate.parseFull(1549622069481145231n);\n     * console.log(time); // expected output: \"1549622069481145231\"\n     *\n     * @example <caption>From a tuple.</caption>\n     * const time = PreciseDate.parseFull([1549622069, 481145231]);\n     * console.log(time); // expected output: \"1549622069481145231\"\n     *\n     * @example <caption>From an object.</caption>\n     * const struct = {seconds: 1549622069, nanos: 481145231};\n     * const time = PreciseDate.parseFull(struct);\n     * console.log(time); // expected output: \"1549622069481145231\"\n     */\n    static parseFull(time) {\n        const date = new PreciseDate();\n        if (Array.isArray(time)) {\n            const [seconds, nanos] = time;\n            time = { seconds, nanos };\n        }\n        if (isFullTime(time)) {\n            date.setFullTime(time);\n        }\n        else if (isStruct(time)) {\n            const { seconds, nanos } = parseProto(time);\n            date.setTime(seconds * 1000);\n            date.setNanoseconds(nanos);\n        }\n        else if (isFullISOString(time)) {\n            date.setFullTime(parseFullISO(time));\n        }\n        else {\n            date.setTime(new Date(time).getTime());\n        }\n        return date.getFullTimeString();\n    }\n    /**\n     * Accepts the same number parameters as the PreciseDate constructor, but\n     * treats them as UTC. It returns a string that represents the number of\n     * nanoseconds since January 1, 1970, 00:00:00 UTC.\n     *\n     * **NOTE:** Because this method returns a `BigInt` it requires Node >= v10.7.\n     *\n     * @see {@link https://github.com/tc39/proposal-bigint|BigInt}\n     *\n     * @static\n     *\n     * @throws {error} If `BigInt` is unavailable.\n     *\n     * @param {...number} [dateFields] The date fields.\n     * @returns {bigint}\n     *\n     * @example\n     * const time = PreciseDate.fullUTC(2019, 1, 8, 10, 34, 29, 481, 145, 231);\n     * console.log(time); // expected output: 1549622069481145231n\n     */\n    static fullUTC(...args) {\n        if (typeof BigInt !== 'function') {\n            throw new Error(NO_BIG_INT);\n        }\n        return BigInt(PreciseDate.fullUTCString(...args));\n    }\n    /**\n     * Accepts the same number parameters as the PreciseDate constructor, but\n     * treats them as UTC. It returns a string that represents the number of\n     * nanoseconds since January 1, 1970, 00:00:00 UTC.\n     *\n     * @static\n     *\n     * @param {...number} [dateFields] The date fields.\n     * @returns {string}\n     *\n     * @example\n     * const time = PreciseDate.fullUTCString(2019, 1, 8, 10, 34, 29, 481, 145,\n     * 231); console.log(time); // expected output: '1549622069481145231'\n     */\n    static fullUTCString(...args) {\n        const milliseconds = Date.UTC(...args.slice(0, 7));\n        const date = new PreciseDate(milliseconds);\n        if (args.length === 9) {\n            date.setNanoseconds(args.pop());\n        }\n        if (args.length === 8) {\n            date.setMicroseconds(args.pop());\n        }\n        return date.getFullTimeString();\n    }\n}\nexports.PreciseDate = PreciseDate;\n/**\n * Parses a RFC 3339 formatted string representation of the date, and returns\n * a string representing the nanoseconds since January 1, 1970, 00:00:00.\n *\n * @private\n *\n * @param {string} time The RFC 3339 formatted string.\n * @returns {string}\n */\nfunction parseFullISO(time) {\n    let digits = '0';\n    time = time.replace(/\\.(\\d+)/, ($0, $1) => {\n        digits = $1;\n        return '.000';\n    });\n    const nanos = Number(padRight(digits, 9));\n    const date = new PreciseDate(time);\n    return date.setNanoseconds(nanos);\n}\n/**\n * Normalizes a {@link google.protobuf.Timestamp} object.\n *\n * @private\n *\n * @param {google.protobuf.Timestamp} timestamp The timestamp object.\n * @returns {DateStruct}\n */\nfunction parseProto({ seconds = 0, nanos = 0 }) {\n    if (typeof seconds.toNumber === 'function') {\n        seconds = seconds.toNumber();\n    }\n    seconds = Number(seconds);\n    nanos = Number(nanos);\n    return { seconds, nanos };\n}\n/**\n * Checks to see if time value is specified in nanoseconds. We assume that all\n * BigInt and string timestamps represent nanoseconds.\n *\n * @private\n *\n * @param {*} time The time to check.\n * @returns {boolean}\n */\nfunction isFullTime(time) {\n    return (typeof time === 'bigint' || (typeof time === 'string' && /^\\d+$/.test(time)));\n}\n/**\n * Checks to see if time value is a {@link DateStruct}.\n *\n * @private\n *\n * @param {*} time The time to check.\n * @returns {boolean}\n */\nfunction isStruct(time) {\n    return ((typeof time === 'object' &&\n        typeof time.seconds !== 'undefined') ||\n        typeof time.nanos === 'number');\n}\n/**\n * Checks to see if the time value is a RFC 3339 formatted string.\n *\n * @private\n *\n * @param {*} time The time to check.\n * @returns {boolean}\n */\nfunction isFullISOString(time) {\n    return typeof time === 'string' && FULL_ISO_REG.test(time);\n}\n/**\n * Pads a number/string with \"0\" to the left.\n *\n * @private\n *\n * @param {string|number} n The number/string to pad.\n * @param {number} min The min size of the padded string.\n * @returns {string}\n */\nfunction padLeft(n, min) {\n    const padding = getPadding(n, min);\n    return `${padding}${n}`;\n}\n/**\n * Pads a number/string with \"0\" to the right.\n *\n * @private\n *\n * @param {string|number} n The number/string to pad.\n * @param {number} min The min size of the padded string.\n * @returns {string}\n */\nfunction padRight(n, min) {\n    const padding = getPadding(n, min);\n    return `${n}${padding}`;\n}\n/**\n * Creates padding based on current size and min size needed.\n *\n * @private\n *\n * @param {string|number} n The number/string to pad.\n * @param {number} [min=3] The min size of the padded string.\n * @returns {string}\n */\nfunction getPadding(n, min) {\n    const size = Math.max(min - n.toString().length, 0);\n    return '0'.repeat(size);\n}\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3667, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-resource-util/build/src/detector/faas.js"],"sourcesContent":["\"use strict\";\n// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.faasCloudRegion = exports.faasInstance = exports.faasVersion = exports.faasName = exports.onCloudFunctions = exports.onCloudRun = void 0;\n/**\n * Implementation in this file copied from\n * https://github.com/GoogleCloudPlatform/opentelemetry-operations-go/blob/v1.8.0/detectors/gcp/faas.go\n */\nconst metadata = require(\"gcp-metadata\");\nconst ID_METADATA_ATTR = 'id';\nconst CLOUD_RUN_CONFIG_ENV = 'K_CONFIGURATION';\nconst CLOUD_FUNCTION_TARGET_ENV = 'FUNCTION_TARGET';\nconst FAAS_SERVICE_ENV = 'K_SERVICE';\nconst FAAS_REVISION_ENV = 'K_REVISION';\nconst REGION_METADATA_ATTR = 'region';\nasync function onCloudRun() {\n    return process.env[CLOUD_RUN_CONFIG_ENV] !== undefined;\n}\nexports.onCloudRun = onCloudRun;\nasync function onCloudFunctions() {\n    return process.env[CLOUD_FUNCTION_TARGET_ENV] !== undefined;\n}\nexports.onCloudFunctions = onCloudFunctions;\n/**\n * The name of the Cloud Run or Cloud Function. Check that {@link onCloudRun()} or {@link\n * onCloudFunctions()} is true before calling this, or it may throw exceptions.\n */\nasync function faasName() {\n    return lookupEnv(FAAS_SERVICE_ENV);\n}\nexports.faasName = faasName;\n/**\n * The version/revision of the Cloud Run or Cloud Function. Check that {@link onCloudRun()} or\n * {@link onCloudFunctions()} is true before calling this, or it may throw exceptions.\n */\nasync function faasVersion() {\n    return lookupEnv(FAAS_REVISION_ENV);\n}\nexports.faasVersion = faasVersion;\n/**\n * The ID for the running instance of a Cloud Run or Cloud Function. Check that {@link\n * onCloudRun()} or {@link onCloudFunctions()} is true before calling this, or it may throw\n * exceptions.\n */\nasync function faasInstance() {\n    // May be a bignumber.js BigNumber which can just be converted with toString(). See\n    // https://github.com/googleapis/gcp-metadata#take-care-with-large-number-valued-properties\n    const id = await metadata.instance(ID_METADATA_ATTR);\n    return id.toString();\n}\nexports.faasInstance = faasInstance;\n/**\n * The cloud region where the running instance of a Cloud Run or Cloud Function is located.\n * Check that {@link onCloudRun()} or {@link onCloudFunctions()} is true before calling this,\n * or it may throw exceptions.\n */\nasync function faasCloudRegion() {\n    const region = await metadata.instance(REGION_METADATA_ATTR);\n    return region.slice(region.lastIndexOf('/') + 1);\n}\nexports.faasCloudRegion = faasCloudRegion;\nfunction lookupEnv(key) {\n    const val = process.env[key];\n    if (val === undefined) {\n        throw new Error(`Environment variable ${key} not found`);\n    }\n    return val;\n}\n//# sourceMappingURL=faas.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,mDAAmD;AACnD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG,QAAQ,YAAY,GAAG,QAAQ,WAAW,GAAG,QAAQ,QAAQ,GAAG,QAAQ,gBAAgB,GAAG,QAAQ,UAAU,GAAG,KAAK;AAC/I;;;CAGC,GACD,MAAM;AACN,MAAM,mBAAmB;AACzB,MAAM,uBAAuB;AAC7B,MAAM,4BAA4B;AAClC,MAAM,mBAAmB;AACzB,MAAM,oBAAoB;AAC1B,MAAM,uBAAuB;AAC7B,eAAe;IACX,OAAO,QAAQ,GAAG,CAAC,qBAAqB,KAAK;AACjD;AACA,QAAQ,UAAU,GAAG;AACrB,eAAe;IACX,OAAO,QAAQ,GAAG,CAAC,0BAA0B,KAAK;AACtD;AACA,QAAQ,gBAAgB,GAAG;AAC3B;;;CAGC,GACD,eAAe;IACX,OAAO,UAAU;AACrB;AACA,QAAQ,QAAQ,GAAG;AACnB;;;CAGC,GACD,eAAe;IACX,OAAO,UAAU;AACrB;AACA,QAAQ,WAAW,GAAG;AACtB;;;;CAIC,GACD,eAAe;IACX,mFAAmF;IACnF,2FAA2F;IAC3F,MAAM,KAAK,MAAM,SAAS,QAAQ,CAAC;IACnC,OAAO,GAAG,QAAQ;AACtB;AACA,QAAQ,YAAY,GAAG;AACvB;;;;CAIC,GACD,eAAe;IACX,MAAM,SAAS,MAAM,SAAS,QAAQ,CAAC;IACvC,OAAO,OAAO,KAAK,CAAC,OAAO,WAAW,CAAC,OAAO;AAClD;AACA,QAAQ,eAAe,GAAG;AAC1B,SAAS,UAAU,GAAG;IAClB,MAAM,MAAM,QAAQ,GAAG,CAAC,IAAI;IAC5B,IAAI,QAAQ,WAAW;QACnB,MAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE,IAAI,UAAU,CAAC;IAC3D;IACA,OAAO;AACX,EACA,gCAAgC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3749, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-resource-util/build/src/detector/gce.js"],"sourcesContent":["\"use strict\";\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.availabilityZoneAndRegion = exports.hostName = exports.hostId = exports.hostType = exports.onGce = void 0;\n/**\n * Implementation in this file copied from\n * https://github.com/GoogleCloudPlatform/opentelemetry-operations-go/blob/v1.8.0/detectors/gcp/gce.go\n */\nconst api_1 = require(\"@opentelemetry/api\");\nconst metadata = require(\"gcp-metadata\");\nconst MACHINE_TYPE_METADATA_ATTR = 'machine-type';\nconst ID_METADATA_ATTR = 'id';\nconst HOST_NAME_METADATA_ATTR = 'name';\nconst ZONE_METADATA_ATTR = 'zone';\nasync function onGce() {\n    try {\n        await metadata.instance(MACHINE_TYPE_METADATA_ATTR);\n        return true;\n    }\n    catch (err) {\n        api_1.diag.debug('Could not fetch metadata attribute %s, assuming not on GCE. Error was %s', MACHINE_TYPE_METADATA_ATTR, err);\n        return false;\n    }\n}\nexports.onGce = onGce;\n/**\n * The machine type of the instance on which this program is running. Check that {@link\n * onGce()} is true before calling this, or it may throw exceptions.\n */\nasync function hostType() {\n    return metadata.instance(MACHINE_TYPE_METADATA_ATTR);\n}\nexports.hostType = hostType;\n/**\n * The instance ID of the instance on which this program is running. Check that {@link onGce()}\n * is true before calling this, or it may throw exceptions.\n */\nasync function hostId() {\n    // May be a bignumber.js BigNumber which can just be converted with toString(). See\n    // https://github.com/googleapis/gcp-metadata#take-care-with-large-number-valued-properties\n    const id = await metadata.instance(ID_METADATA_ATTR);\n    return id.toString();\n}\nexports.hostId = hostId;\n/**\n * The instance ID of the instance on which this program is running. Check that {@link onGce()}\n * is true before calling this, or it may throw exceptions.\n */\nasync function hostName() {\n    return metadata.instance(HOST_NAME_METADATA_ATTR);\n}\nexports.hostName = hostName;\n/**\n * The zone and region in which this program is running. Check that {@link onGce()} is true\n * before calling this, or it may throw exceptions.\n */\nasync function availabilityZoneAndRegion() {\n    var _a, _b;\n    const fullZone = await metadata.instance(ZONE_METADATA_ATTR);\n    // Format described in\n    // https://cloud.google.com/compute/docs/metadata/default-metadata-values#vm_instance_metadata\n    const re = /projects\\/\\d+\\/zones\\/(?<zone>(?<region>\\w+-\\w+)-\\w+)/;\n    const { zone, region } = (_b = (_a = fullZone.match(re)) === null || _a === void 0 ? void 0 : _a.groups) !== null && _b !== void 0 ? _b : {};\n    if (!zone || !region) {\n        throw new Error(`zone was not in the expected format: projects/PROJECT_NUM/zones/COUNTRY-REGION-ZONE. Got ${fullZone}`);\n    }\n    return { zone, region };\n}\nexports.availabilityZoneAndRegion = availabilityZoneAndRegion;\n//# sourceMappingURL=gce.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,mDAAmD;AACnD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,yBAAyB,GAAG,QAAQ,QAAQ,GAAG,QAAQ,MAAM,GAAG,QAAQ,QAAQ,GAAG,QAAQ,KAAK,GAAG,KAAK;AAChH;;;CAGC,GACD,MAAM;AACN,MAAM;AACN,MAAM,6BAA6B;AACnC,MAAM,mBAAmB;AACzB,MAAM,0BAA0B;AAChC,MAAM,qBAAqB;AAC3B,eAAe;IACX,IAAI;QACA,MAAM,SAAS,QAAQ,CAAC;QACxB,OAAO;IACX,EACA,OAAO,KAAK;QACR,MAAM,IAAI,CAAC,KAAK,CAAC,4EAA4E,4BAA4B;QACzH,OAAO;IACX;AACJ;AACA,QAAQ,KAAK,GAAG;AAChB;;;CAGC,GACD,eAAe;IACX,OAAO,SAAS,QAAQ,CAAC;AAC7B;AACA,QAAQ,QAAQ,GAAG;AACnB;;;CAGC,GACD,eAAe;IACX,mFAAmF;IACnF,2FAA2F;IAC3F,MAAM,KAAK,MAAM,SAAS,QAAQ,CAAC;IACnC,OAAO,GAAG,QAAQ;AACtB;AACA,QAAQ,MAAM,GAAG;AACjB;;;CAGC,GACD,eAAe;IACX,OAAO,SAAS,QAAQ,CAAC;AAC7B;AACA,QAAQ,QAAQ,GAAG;AACnB;;;CAGC,GACD,eAAe;IACX,IAAI,IAAI;IACR,MAAM,WAAW,MAAM,SAAS,QAAQ,CAAC;IACzC,sBAAsB;IACtB,8FAA8F;IAC9F,MAAM,KAAK;IACX,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,SAAS,KAAK,CAAC,GAAG,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,MAAM,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,CAAC;IAC3I,IAAI,CAAC,QAAQ,CAAC,QAAQ;QAClB,MAAM,IAAI,MAAM,CAAC,yFAAyF,EAAE,UAAU;IAC1H;IACA,OAAO;QAAE;QAAM;IAAO;AAC1B;AACA,QAAQ,yBAAyB,GAAG,2BACpC,+BAA+B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3834, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-resource-util/build/src/detector/gae.js"],"sourcesContent":["\"use strict\";\n// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.standardCloudRegion = exports.standardAvailabilityZone = exports.flexAvailabilityZoneAndRegion = exports.serviceInstance = exports.serviceVersion = exports.serviceName = exports.onAppEngine = exports.onAppEngineStandard = void 0;\n/**\n * Implementation in this file copied from\n * https://github.com/GoogleCloudPlatform/opentelemetry-operations-go/blob/v1.8.0/detectors/gcp/app_engine.go\n */\nconst metadata = require(\"gcp-metadata\");\nconst gce = require(\"./gce\");\nconst faas = require(\"./faas\");\nconst GAE_SERVICE_ENV = 'GAE_SERVICE';\nconst GAE_VERSION_ENV = 'GAE_VERSION';\nconst GAE_INSTANCE_ENV = 'GAE_INSTANCE';\nconst GAE_ENV = 'GAE_ENV';\nconst GAE_STANDARD = 'standard';\nconst ZONE_METADATA_ATTR = 'zone';\nasync function onAppEngineStandard() {\n    return process.env[GAE_ENV] === GAE_STANDARD;\n}\nexports.onAppEngineStandard = onAppEngineStandard;\nasync function onAppEngine() {\n    return process.env[GAE_SERVICE_ENV] !== undefined;\n}\nexports.onAppEngine = onAppEngine;\n/**\n * The service name of the app engine service. Check that {@link onAppEngine()} is true before\n * calling this, or it may throw exceptions.\n */\nasync function serviceName() {\n    return lookupEnv(GAE_SERVICE_ENV);\n}\nexports.serviceName = serviceName;\n/**\n * The service version of the app engine service. Check that {@link onAppEngine()} is true\n * before calling this, or it may throw exceptions.\n */\nasync function serviceVersion() {\n    return lookupEnv(GAE_VERSION_ENV);\n}\nexports.serviceVersion = serviceVersion;\n/**\n * The service instance of the app engine service. Check that {@link onAppEngine()} is true\n * before calling this, or it may throw exceptions.\n */\nasync function serviceInstance() {\n    return lookupEnv(GAE_INSTANCE_ENV);\n}\nexports.serviceInstance = serviceInstance;\n/**\n * The zone and region in which this program is running. Check that {@link onAppEngine()} is\n * true before calling this, or it may throw exceptions.\n */\nasync function flexAvailabilityZoneAndRegion() {\n    return await gce.availabilityZoneAndRegion();\n}\nexports.flexAvailabilityZoneAndRegion = flexAvailabilityZoneAndRegion;\n/**\n * The zone the app engine service is running in. Check that {@link onAppEngineStandard()} is\n * true before calling this, or it may throw exceptions.\n */\nasync function standardAvailabilityZone() {\n    const zone = await metadata.instance(ZONE_METADATA_ATTR);\n    // zone is of the form \"projects/233510669999/zones/us15\"\n    return zone.slice(zone.lastIndexOf('/') + 1);\n}\nexports.standardAvailabilityZone = standardAvailabilityZone;\n/**\n * The region the app engine service is running in. Check that {@link onAppEngineStandard()} is\n * true before calling this, or it may throw exceptions.\n */\nasync function standardCloudRegion() {\n    return await faas.faasCloudRegion();\n}\nexports.standardCloudRegion = standardCloudRegion;\nfunction lookupEnv(key) {\n    const val = process.env[key];\n    if (val === undefined) {\n        throw new Error(`Environment variable ${key} not found`);\n    }\n    return val;\n}\n//# sourceMappingURL=gae.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,mDAAmD;AACnD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,QAAQ,wBAAwB,GAAG,QAAQ,6BAA6B,GAAG,QAAQ,eAAe,GAAG,QAAQ,cAAc,GAAG,QAAQ,WAAW,GAAG,QAAQ,WAAW,GAAG,QAAQ,mBAAmB,GAAG,KAAK;AAC3O;;;CAGC,GACD,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM,kBAAkB;AACxB,MAAM,kBAAkB;AACxB,MAAM,mBAAmB;AACzB,MAAM,UAAU;AAChB,MAAM,eAAe;AACrB,MAAM,qBAAqB;AAC3B,eAAe;IACX,OAAO,QAAQ,GAAG,CAAC,QAAQ,KAAK;AACpC;AACA,QAAQ,mBAAmB,GAAG;AAC9B,eAAe;IACX,OAAO,QAAQ,GAAG,CAAC,gBAAgB,KAAK;AAC5C;AACA,QAAQ,WAAW,GAAG;AACtB;;;CAGC,GACD,eAAe;IACX,OAAO,UAAU;AACrB;AACA,QAAQ,WAAW,GAAG;AACtB;;;CAGC,GACD,eAAe;IACX,OAAO,UAAU;AACrB;AACA,QAAQ,cAAc,GAAG;AACzB;;;CAGC,GACD,eAAe;IACX,OAAO,UAAU;AACrB;AACA,QAAQ,eAAe,GAAG;AAC1B;;;CAGC,GACD,eAAe;IACX,OAAO,MAAM,IAAI,yBAAyB;AAC9C;AACA,QAAQ,6BAA6B,GAAG;AACxC;;;CAGC,GACD,eAAe;IACX,MAAM,OAAO,MAAM,SAAS,QAAQ,CAAC;IACrC,yDAAyD;IACzD,OAAO,KAAK,KAAK,CAAC,KAAK,WAAW,CAAC,OAAO;AAC9C;AACA,QAAQ,wBAAwB,GAAG;AACnC;;;CAGC,GACD,eAAe;IACX,OAAO,MAAM,KAAK,eAAe;AACrC;AACA,QAAQ,mBAAmB,GAAG;AAC9B,SAAS,UAAU,GAAG;IAClB,MAAM,MAAM,QAAQ,GAAG,CAAC,IAAI;IAC5B,IAAI,QAAQ,WAAW;QACnB,MAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE,IAAI,UAAU,CAAC;IAC3D;IACA,OAAO;AACX,EACA,+BAA+B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3928, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-resource-util/build/src/detector/gke.js"],"sourcesContent":["\"use strict\";\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.availabilityZoneOrRegion = exports.clusterName = exports.hostId = exports.onGke = void 0;\n/**\n * Implementation in this file copied from\n * https://github.com/GoogleCloudPlatform/opentelemetry-operations-go/blob/v1.8.0/detectors/gcp/gke.go\n */\nconst metadata = require(\"gcp-metadata\");\nconst gce = require(\"./gce\");\nconst KUBERNETES_SERVICE_HOST_ENV = 'KUBERNETES_SERVICE_HOST';\nconst CLUSTER_NAME_METADATA_ATTR = 'attributes/cluster-name';\nconst CLUSTER_LOCATION_METADATA_ATTR = 'attributes/cluster-location';\nasync function onGke() {\n    return process.env[KUBERNETES_SERVICE_HOST_ENV] !== undefined;\n}\nexports.onGke = onGke;\n/**\n * The instance ID of the instance on which this program is running. Check that {@link onGke()}\n * is true before calling this, or it may throw exceptions.\n */\nasync function hostId() {\n    return await gce.hostId();\n}\nexports.hostId = hostId;\n/**\n * The name of the GKE cluster in which this program is running. Check that {@link onGke()} is\n * true before calling this, or it may throw exceptions.\n */\nasync function clusterName() {\n    return metadata.instance(CLUSTER_NAME_METADATA_ATTR);\n}\nexports.clusterName = clusterName;\n/**\n * The location of the cluster and whether the cluster is zonal or regional. Check that {@link\n * onGke()} is true before calling this, or it may throw exceptions.\n */\nasync function availabilityZoneOrRegion() {\n    const clusterLocation = await metadata.instance(CLUSTER_LOCATION_METADATA_ATTR);\n    switch (countChar(clusterLocation, '-')) {\n        case 1:\n            return { type: 'region', value: clusterLocation };\n        case 2:\n            return { type: 'zone', value: clusterLocation };\n        default:\n            throw new Error(`unrecognized format for cluster location: ${clusterLocation}`);\n    }\n}\nexports.availabilityZoneOrRegion = availabilityZoneOrRegion;\nfunction countChar(s, char) {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === char) {\n            count += 1;\n        }\n    }\n    return count;\n}\n//# sourceMappingURL=gke.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,mDAAmD;AACnD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,wBAAwB,GAAG,QAAQ,WAAW,GAAG,QAAQ,MAAM,GAAG,QAAQ,KAAK,GAAG,KAAK;AAC/F;;;CAGC,GACD,MAAM;AACN,MAAM;AACN,MAAM,8BAA8B;AACpC,MAAM,6BAA6B;AACnC,MAAM,iCAAiC;AACvC,eAAe;IACX,OAAO,QAAQ,GAAG,CAAC,4BAA4B,KAAK;AACxD;AACA,QAAQ,KAAK,GAAG;AAChB;;;CAGC,GACD,eAAe;IACX,OAAO,MAAM,IAAI,MAAM;AAC3B;AACA,QAAQ,MAAM,GAAG;AACjB;;;CAGC,GACD,eAAe;IACX,OAAO,SAAS,QAAQ,CAAC;AAC7B;AACA,QAAQ,WAAW,GAAG;AACtB;;;CAGC,GACD,eAAe;IACX,MAAM,kBAAkB,MAAM,SAAS,QAAQ,CAAC;IAChD,OAAQ,UAAU,iBAAiB;QAC/B,KAAK;YACD,OAAO;gBAAE,MAAM;gBAAU,OAAO;YAAgB;QACpD,KAAK;YACD,OAAO;gBAAE,MAAM;gBAAQ,OAAO;YAAgB;QAClD;YACI,MAAM,IAAI,MAAM,CAAC,0CAA0C,EAAE,iBAAiB;IACtF;AACJ;AACA,QAAQ,wBAAwB,GAAG;AACnC,SAAS,UAAU,CAAC,EAAE,IAAI;IACtB,IAAI,QAAQ;IACZ,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAAK;QAC/B,IAAI,CAAC,CAAC,EAAE,KAAK,MAAM;YACf,SAAS;QACb;IACJ;IACA,OAAO;AACX,EACA,+BAA+B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4007, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-resource-util/build/src/detector/detector.js"],"sourcesContent":["\"use strict\";\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GcpDetectorSync = exports.GcpDetector = void 0;\nconst semantic_conventions_1 = require(\"@opentelemetry/semantic-conventions\");\nconst resources_1 = require(\"@opentelemetry/resources\");\nconst metadata = require(\"gcp-metadata\");\nconst faas = require(\"./faas\");\nconst gae = require(\"./gae\");\nconst gce = require(\"./gce\");\nconst gke = require(\"./gke\");\nasync function detect() {\n    if (!(await metadata.isAvailable())) {\n        return resources_1.Resource.EMPTY;\n    }\n    // Note the order of these if checks is significant with more specific resources coming\n    // first. E.g. Cloud Functions gen2 are executed in Cloud Run so it must be checked first.\n    if (await gke.onGke()) {\n        return await gkeResource();\n    }\n    else if (await faas.onCloudFunctions()) {\n        return await cloudFunctionsResource();\n    }\n    else if (await faas.onCloudRun()) {\n        return await cloudRunResource();\n    }\n    else if (await gae.onAppEngine()) {\n        return await gaeResource();\n    }\n    else if (await gce.onGce()) {\n        return await gceResource();\n    }\n    return resources_1.Resource.EMPTY;\n}\nasync function gkeResource() {\n    const [zoneOrRegion, k8sClusterName, hostId] = await Promise.all([\n        gke.availabilityZoneOrRegion(),\n        gke.clusterName(),\n        gke.hostId(),\n    ]);\n    return await makeResource({\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_PLATFORM]: semantic_conventions_1.CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE,\n        [zoneOrRegion.type === 'zone'\n            ? semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE\n            : semantic_conventions_1.SEMRESATTRS_CLOUD_REGION]: zoneOrRegion.value,\n        [semantic_conventions_1.SEMRESATTRS_K8S_CLUSTER_NAME]: k8sClusterName,\n        [semantic_conventions_1.SEMRESATTRS_HOST_ID]: hostId,\n    });\n}\nasync function cloudRunResource() {\n    const [faasName, faasVersion, faasInstance, faasCloudRegion] = await Promise.all([\n        faas.faasName(),\n        faas.faasVersion(),\n        faas.faasInstance(),\n        faas.faasCloudRegion(),\n    ]);\n    return await makeResource({\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_PLATFORM]: semantic_conventions_1.CLOUDPLATFORMVALUES_GCP_CLOUD_RUN,\n        [semantic_conventions_1.SEMRESATTRS_FAAS_NAME]: faasName,\n        [semantic_conventions_1.SEMRESATTRS_FAAS_VERSION]: faasVersion,\n        [semantic_conventions_1.SEMRESATTRS_FAAS_INSTANCE]: faasInstance,\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_REGION]: faasCloudRegion,\n    });\n}\nasync function cloudFunctionsResource() {\n    const [faasName, faasVersion, faasInstance, faasCloudRegion] = await Promise.all([\n        faas.faasName(),\n        faas.faasVersion(),\n        faas.faasInstance(),\n        faas.faasCloudRegion(),\n    ]);\n    return await makeResource({\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_PLATFORM]: semantic_conventions_1.CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS,\n        [semantic_conventions_1.SEMRESATTRS_FAAS_NAME]: faasName,\n        [semantic_conventions_1.SEMRESATTRS_FAAS_VERSION]: faasVersion,\n        [semantic_conventions_1.SEMRESATTRS_FAAS_INSTANCE]: faasInstance,\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_REGION]: faasCloudRegion,\n    });\n}\nasync function gaeResource() {\n    let zone, region;\n    if (await gae.onAppEngineStandard()) {\n        [zone, region] = await Promise.all([\n            gae.standardAvailabilityZone(),\n            gae.standardCloudRegion(),\n        ]);\n    }\n    else {\n        ({ zone, region } = await gce.availabilityZoneAndRegion());\n    }\n    const [faasName, faasVersion, faasInstance] = await Promise.all([\n        gae.serviceName(),\n        gae.serviceVersion(),\n        gae.serviceInstance(),\n    ]);\n    return await makeResource({\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_PLATFORM]: semantic_conventions_1.CLOUDPLATFORMVALUES_GCP_APP_ENGINE,\n        [semantic_conventions_1.SEMRESATTRS_FAAS_NAME]: faasName,\n        [semantic_conventions_1.SEMRESATTRS_FAAS_VERSION]: faasVersion,\n        [semantic_conventions_1.SEMRESATTRS_FAAS_INSTANCE]: faasInstance,\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE]: zone,\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_REGION]: region,\n    });\n}\nasync function gceResource() {\n    const [zoneAndRegion, hostType, hostId, hostName] = await Promise.all([\n        gce.availabilityZoneAndRegion(),\n        gce.hostType(),\n        gce.hostId(),\n        gce.hostName(),\n    ]);\n    return await makeResource({\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_PLATFORM]: semantic_conventions_1.CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE,\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE]: zoneAndRegion.zone,\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_REGION]: zoneAndRegion.region,\n        [semantic_conventions_1.SEMRESATTRS_HOST_TYPE]: hostType,\n        [semantic_conventions_1.SEMRESATTRS_HOST_ID]: hostId,\n        [semantic_conventions_1.SEMRESATTRS_HOST_NAME]: hostName,\n    });\n}\nasync function makeResource(attrs) {\n    const project = await metadata.project('project-id');\n    return new resources_1.Resource({\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_PROVIDER]: semantic_conventions_1.CLOUDPROVIDERVALUES_GCP,\n        [semantic_conventions_1.SEMRESATTRS_CLOUD_ACCOUNT_ID]: project,\n        ...attrs,\n    });\n}\n/**\n * Async Google Cloud resource detector which populates attributes based the on environment\n * this process is running in. If not on GCP, returns an empty resource.\n *\n * @deprecated Async resource detectors are deprecated. Please use {@link GcpDetectorSync} instead.\n */\nclass GcpDetector {\n    constructor() {\n        this.detect = detect;\n    }\n}\nexports.GcpDetector = GcpDetector;\n/**\n * Google Cloud resource detector which populates attributes based on the environment this\n * process is running in. If not on GCP, returns an empty resource.\n */\nclass GcpDetectorSync {\n    async _asyncAttributes() {\n        return (await detect()).attributes;\n    }\n    detect() {\n        return new resources_1.Resource({}, this._asyncAttributes());\n    }\n}\nexports.GcpDetectorSync = GcpDetectorSync;\n//# sourceMappingURL=detector.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4170, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-resource-util/build/src/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GcpDetectorSync = exports.GcpDetector = exports.mapOtelResourceToMonitoredResource = void 0;\nconst semantic_conventions_1 = require(\"@opentelemetry/semantic-conventions\");\nconst AWS_ACCOUNT = 'aws_account';\nconst AWS_EC2_INSTANCE = 'aws_ec2_instance';\nconst CLOUD_FUNCTION = 'cloud_function';\nconst CLOUD_RUN_REVISION = 'cloud_run_revision';\nconst CLUSTER_NAME = 'cluster_name';\nconst CONFIGURATION_NAME = 'configuration_name';\nconst CONTAINER_NAME = 'container_name';\nconst FUNCTION_NAME = 'function_name';\nconst GAE_INSTANCE = 'gae_instance';\nconst GAE_MODULE_ID = 'module_id';\nconst GAE_VERSION_ID = 'version_id';\nconst GCE_INSTANCE = 'gce_instance';\nconst GENERIC_NODE = 'generic_node';\nconst GENERIC_TASK = 'generic_task';\nconst INSTANCE_ID = 'instance_id';\nconst JOB = 'job';\nconst K8S_CLUSTER = 'k8s_cluster';\nconst K8S_CONTAINER = 'k8s_container';\nconst K8S_NODE = 'k8s_node';\nconst K8S_POD = 'k8s_pod';\nconst LOCATION = 'location';\nconst NAMESPACE = 'namespace';\nconst NAMESPACE_NAME = 'namespace_name';\nconst NODE_ID = 'node_id';\nconst NODE_NAME = 'node_name';\nconst POD_NAME = 'pod_name';\nconst REGION = 'region';\nconst REVISION_NAME = 'revision_name';\nconst SERVICE_NAME = 'service_name';\nconst TASK_ID = 'task_id';\nconst ZONE = 'zone';\nconst UNKNOWN_SERVICE_PREFIX = 'unknown_service';\n/**\n * Mappings of GCM resource label keys onto mapping config from OTel resource for a given\n * monitored resource type. Copied from Go impl:\n * https://github.com/GoogleCloudPlatform/opentelemetry-operations-go/blob/v1.8.0/internal/resourcemapping/resourcemapping.go#L51\n */\nconst MAPPINGS = {\n    [GCE_INSTANCE]: {\n        [ZONE]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE],\n        },\n        [INSTANCE_ID]: { otelKeys: [semantic_conventions_1.SEMRESATTRS_HOST_ID] },\n    },\n    [K8S_CONTAINER]: {\n        [LOCATION]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE, semantic_conventions_1.SEMRESATTRS_CLOUD_REGION],\n        },\n        [CLUSTER_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_K8S_CLUSTER_NAME],\n        },\n        [NAMESPACE_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_K8S_NAMESPACE_NAME],\n        },\n        [POD_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_K8S_POD_NAME],\n        },\n        [CONTAINER_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_K8S_CONTAINER_NAME],\n        },\n    },\n    [K8S_POD]: {\n        [LOCATION]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE, semantic_conventions_1.SEMRESATTRS_CLOUD_REGION],\n        },\n        [CLUSTER_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_K8S_CLUSTER_NAME],\n        },\n        [NAMESPACE_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_K8S_NAMESPACE_NAME],\n        },\n        [POD_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_K8S_POD_NAME],\n        },\n    },\n    [K8S_NODE]: {\n        [LOCATION]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE, semantic_conventions_1.SEMRESATTRS_CLOUD_REGION],\n        },\n        [CLUSTER_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_K8S_CLUSTER_NAME],\n        },\n        [NODE_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_K8S_NODE_NAME],\n        },\n    },\n    [K8S_CLUSTER]: {\n        [LOCATION]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE, semantic_conventions_1.SEMRESATTRS_CLOUD_REGION],\n        },\n        [CLUSTER_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_K8S_CLUSTER_NAME],\n        },\n    },\n    [AWS_EC2_INSTANCE]: {\n        [INSTANCE_ID]: { otelKeys: [semantic_conventions_1.SEMRESATTRS_HOST_ID] },\n        [REGION]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE, semantic_conventions_1.SEMRESATTRS_CLOUD_REGION],\n        },\n        [AWS_ACCOUNT]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_ACCOUNT_ID],\n        },\n    },\n    [CLOUD_RUN_REVISION]: {\n        [LOCATION]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_REGION],\n        },\n        [SERVICE_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_FAAS_NAME],\n        },\n        [CONFIGURATION_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_FAAS_NAME],\n        },\n        [REVISION_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_FAAS_VERSION],\n        },\n    },\n    [CLOUD_FUNCTION]: {\n        [REGION]: { otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_REGION] },\n        [FUNCTION_NAME]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_FAAS_NAME],\n        },\n    },\n    [GAE_INSTANCE]: {\n        [LOCATION]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE, semantic_conventions_1.SEMRESATTRS_CLOUD_REGION],\n        },\n        [GAE_MODULE_ID]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_FAAS_NAME],\n        },\n        [GAE_VERSION_ID]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_FAAS_VERSION],\n        },\n        [INSTANCE_ID]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_FAAS_INSTANCE],\n        },\n    },\n    [GENERIC_TASK]: {\n        [LOCATION]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE, semantic_conventions_1.SEMRESATTRS_CLOUD_REGION],\n            fallback: 'global',\n        },\n        [NAMESPACE]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_SERVICE_NAMESPACE],\n        },\n        [JOB]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_SERVICE_NAME, semantic_conventions_1.SEMRESATTRS_FAAS_NAME],\n        },\n        [TASK_ID]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_SERVICE_INSTANCE_ID, semantic_conventions_1.SEMRESATTRS_FAAS_INSTANCE],\n        },\n    },\n    [GENERIC_NODE]: {\n        [LOCATION]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE, semantic_conventions_1.SEMRESATTRS_CLOUD_REGION],\n            fallback: 'global',\n        },\n        [NAMESPACE]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_SERVICE_NAMESPACE],\n        },\n        [NODE_ID]: {\n            otelKeys: [semantic_conventions_1.SEMRESATTRS_HOST_ID, semantic_conventions_1.SEMRESATTRS_HOST_NAME],\n        },\n    },\n};\nfunction mapOtelResourceToMonitoredResource(resource, includeUnsupportedResources = false) {\n    const attrs = resource.attributes;\n    const platform = attrs[semantic_conventions_1.SEMRESATTRS_CLOUD_PLATFORM];\n    let mr;\n    if (platform === semantic_conventions_1.CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE) {\n        mr = createMonitoredResource(GCE_INSTANCE, attrs);\n    }\n    else if (platform === semantic_conventions_1.CLOUDPLATFORMVALUES_GCP_APP_ENGINE) {\n        mr = createMonitoredResource(GAE_INSTANCE, attrs);\n    }\n    else if (platform === semantic_conventions_1.CLOUDPLATFORMVALUES_AWS_EC2) {\n        mr = createMonitoredResource(AWS_EC2_INSTANCE, attrs);\n    }\n    // Cloud Run and Cloud Functions are not writeable for custom metrics yet\n    else if (includeUnsupportedResources &&\n        platform === semantic_conventions_1.CLOUDPLATFORMVALUES_GCP_CLOUD_RUN) {\n        mr = createMonitoredResource(CLOUD_RUN_REVISION, attrs);\n    }\n    else if (includeUnsupportedResources &&\n        platform === semantic_conventions_1.CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS) {\n        mr = createMonitoredResource(CLOUD_FUNCTION, attrs);\n    }\n    else if (semantic_conventions_1.SEMRESATTRS_K8S_CLUSTER_NAME in attrs) {\n        // if k8s.cluster.name is set, pattern match for various k8s resources.\n        // this will also match non-cloud k8s platforms like minikube.\n        if (semantic_conventions_1.SEMRESATTRS_K8S_CONTAINER_NAME in attrs) {\n            mr = createMonitoredResource(K8S_CONTAINER, attrs);\n        }\n        else if (semantic_conventions_1.SEMRESATTRS_K8S_POD_NAME in attrs) {\n            mr = createMonitoredResource(K8S_POD, attrs);\n        }\n        else if (semantic_conventions_1.SEMRESATTRS_K8S_NODE_NAME in attrs) {\n            mr = createMonitoredResource(K8S_NODE, attrs);\n        }\n        else {\n            mr = createMonitoredResource(K8S_CLUSTER, attrs);\n        }\n    }\n    else if ((semantic_conventions_1.SEMRESATTRS_SERVICE_NAME in attrs || semantic_conventions_1.SEMRESATTRS_FAAS_NAME in attrs) &&\n        (semantic_conventions_1.SEMRESATTRS_SERVICE_INSTANCE_ID in attrs ||\n            semantic_conventions_1.SEMRESATTRS_FAAS_INSTANCE in attrs)) {\n        // fallback to generic_task\n        mr = createMonitoredResource(GENERIC_TASK, attrs);\n    }\n    else {\n        // If not possible, finally fallback to generic_node\n        mr = createMonitoredResource(GENERIC_NODE, attrs);\n    }\n    return mr;\n}\nexports.mapOtelResourceToMonitoredResource = mapOtelResourceToMonitoredResource;\nfunction createMonitoredResource(monitoredResourceType, resourceAttrs) {\n    const mapping = MAPPINGS[monitoredResourceType];\n    const labels = {};\n    Object.entries(mapping).map(([mrKey, mapConfig]) => {\n        var _a, _b, _c;\n        let mrValue;\n        const test = undefined;\n        for (const otelKey of mapConfig.otelKeys) {\n            if (otelKey in resourceAttrs &&\n                !((_b = (_a = resourceAttrs[otelKey]) === null || _a === void 0 ? void 0 : _a.toString()) === null || _b === void 0 ? void 0 : _b.startsWith(UNKNOWN_SERVICE_PREFIX))) {\n                mrValue = resourceAttrs[otelKey];\n                break;\n            }\n        }\n        if (mrValue === undefined &&\n            mapConfig.otelKeys.includes(semantic_conventions_1.SEMRESATTRS_SERVICE_NAME)) {\n            // The service name started with unknown_service, was ignored above, and we couldn't find\n            // a better value for mrValue.\n            mrValue = resourceAttrs[semantic_conventions_1.SEMRESATTRS_SERVICE_NAME];\n        }\n        if (mrValue === undefined) {\n            mrValue = (_c = mapConfig.fallback) !== null && _c !== void 0 ? _c : '';\n        }\n        // OTel attribute values can be any of string, boolean, number, or array of any of them.\n        // Encode any non-strings as json string\n        if (typeof mrValue !== 'string') {\n            mrValue = JSON.stringify(mrValue);\n        }\n        labels[mrKey] = mrValue;\n    });\n    return {\n        type: monitoredResourceType,\n        labels,\n    };\n}\nvar detector_1 = require(\"./detector/detector\");\nObject.defineProperty(exports, \"GcpDetector\", { enumerable: true, get: function () { return detector_1.GcpDetector; } });\nObject.defineProperty(exports, \"GcpDetectorSync\", { enumerable: true, get: function () { return detector_1.GcpDetectorSync; } });\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4529, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-trace-exporter/build/src/external-types.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=external-types.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK,IAC3D,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4551, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-trace-exporter/build/src/types.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpanKind = exports.Code = exports.LinkType = exports.Type = void 0;\nvar Type;\n(function (Type) {\n    Type[Type[\"TYPE_UNSPECIFIED\"] = 0] = \"TYPE_UNSPECIFIED\";\n    Type[Type[\"SENT\"] = 1] = \"SENT\";\n    Type[Type[\"RECEIVED\"] = 2] = \"RECEIVED\";\n})(Type = exports.Type || (exports.Type = {}));\nvar LinkType;\n(function (LinkType) {\n    LinkType[LinkType[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n    LinkType[LinkType[\"CHILD_LINKED_SPAN\"] = 1] = \"CHILD_LINKED_SPAN\";\n    LinkType[LinkType[\"PARENT_LINKED_SPAN\"] = 2] = \"PARENT_LINKED_SPAN\";\n})(LinkType = exports.LinkType || (exports.LinkType = {}));\n/**\n * A google.rpc.Code\n */\nvar Code;\n(function (Code) {\n    // These are the only two we care about mapping to\n    Code[Code[\"OK\"] = 0] = \"OK\";\n    Code[Code[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n})(Code = exports.Code || (exports.Code = {}));\n/**\n * See https://github.com/googleapis/googleapis/blob/8cd4d12c0a02872469176659603451d84c0fbee7/google/devtools/cloudtrace/v2/trace.proto#L182\n */\nvar SpanKind;\n(function (SpanKind) {\n    // Unspecified. Do NOT use as default.\n    // Implementations MAY assume SpanKind.INTERNAL to be default.\n    SpanKind[SpanKind[\"SPAN_KIND_UNSPECIFIED\"] = 0] = \"SPAN_KIND_UNSPECIFIED\";\n    // Indicates that the span is used internally. Default value.\n    SpanKind[SpanKind[\"INTERNAL\"] = 1] = \"INTERNAL\";\n    // Indicates that the span covers server-side handling of an RPC or other\n    // remote network request.\n    SpanKind[SpanKind[\"SERVER\"] = 2] = \"SERVER\";\n    // Indicates that the span covers the client-side wrapper around an RPC or\n    // other remote request.\n    SpanKind[SpanKind[\"CLIENT\"] = 3] = \"CLIENT\";\n    // Indicates that the span describes producer sending a message to a broker.\n    // Unlike client and  server, there is no direct critical path latency\n    // relationship between producer and consumer spans (e.g. publishing a\n    // message to a pubsub service).\n    SpanKind[SpanKind[\"PRODUCER\"] = 4] = \"PRODUCER\";\n    // Indicates that the span describes consumer receiving a message from a\n    // broker. Unlike client and  server, there is no direct critical path\n    // latency relationship between producer and consumer spans (e.g. receiving\n    // a message from a pubsub service subscription).\n    SpanKind[SpanKind[\"CONSUMER\"] = 5] = \"CONSUMER\";\n})(SpanKind = exports.SpanKind || (exports.SpanKind = {}));\n//# sourceMappingURL=types.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,QAAQ,GAAG,QAAQ,IAAI,GAAG,QAAQ,QAAQ,GAAG,QAAQ,IAAI,GAAG,KAAK;AACzE,IAAI;AACJ,CAAC,SAAU,IAAI;IACX,IAAI,CAAC,IAAI,CAAC,mBAAmB,GAAG,EAAE,GAAG;IACrC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,GAAG;IACzB,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,GAAG;AACjC,CAAC,EAAE,OAAO,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,CAAC;AAC5C,IAAI;AACJ,CAAC,SAAU,QAAQ;IACf,QAAQ,CAAC,QAAQ,CAAC,cAAc,GAAG,EAAE,GAAG;IACxC,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,GAAG,EAAE,GAAG;IAC9C,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,GAAG,EAAE,GAAG;AACnD,CAAC,EAAE,WAAW,QAAQ,QAAQ,IAAI,CAAC,QAAQ,QAAQ,GAAG,CAAC,CAAC;AACxD;;CAEC,GACD,IAAI;AACJ,CAAC,SAAU,IAAI;IACX,kDAAkD;IAClD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG;IACvB,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,GAAG;AAChC,CAAC,EAAE,OAAO,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,CAAC;AAC5C;;CAEC,GACD,IAAI;AACJ,CAAC,SAAU,QAAQ;IACf,sCAAsC;IACtC,8DAA8D;IAC9D,QAAQ,CAAC,QAAQ,CAAC,wBAAwB,GAAG,EAAE,GAAG;IAClD,6DAA6D;IAC7D,QAAQ,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,GAAG;IACrC,yEAAyE;IACzE,0BAA0B;IAC1B,QAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,EAAE,GAAG;IACnC,0EAA0E;IAC1E,wBAAwB;IACxB,QAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,EAAE,GAAG;IACnC,4EAA4E;IAC5E,sEAAsE;IACtE,sEAAsE;IACtE,gCAAgC;IAChC,QAAQ,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,GAAG;IACrC,wEAAwE;IACxE,sEAAsE;IACtE,2EAA2E;IAC3E,iDAAiD;IACjD,QAAQ,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,GAAG;AACzC,CAAC,EAAE,WAAW,QAAQ,QAAQ,IAAI,CAAC,QAAQ,QAAQ,GAAG,CAAC,CAAC,IACxD,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4620, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-trace-exporter/build/src/version.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// Autogenerated by scripts/version-update.js during compilation. Check this\n// file in.\nexports.VERSION = '2.4.1';\n//# sourceMappingURL=version.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,OAAO,GAAG,KAAK;AACvB,4EAA4E;AAC5E,WAAW;AACX,QAAQ,OAAO,GAAG,SAClB,mCAAmC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4646, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-trace-exporter/build/src/transform.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getReadableSpanTransformer = void 0;\nconst ot = require(\"@opentelemetry/api\");\nconst core_1 = require(\"@opentelemetry/core\");\nconst types_1 = require(\"./types\");\nconst opentelemetry_resource_util_1 = require(\"@google-cloud/opentelemetry-resource-util\");\nconst version_1 = require(\"./version\");\nconst AGENT_LABEL_KEY = 'g.co/agent';\nconst AGENT_LABEL_VALUE = `opentelemetry-js ${core_1.VERSION}; google-cloud-trace-exporter ${version_1.VERSION}`;\nfunction getReadableSpanTransformer(projectId, resourceFilter, stringifyArrayAttributes) {\n    return span => {\n        // @todo get dropped attribute count from sdk ReadableSpan\n        const attributes = mergeAttributes(transformAttributes({\n            ...span.attributes,\n            [AGENT_LABEL_KEY]: AGENT_LABEL_VALUE,\n        }, stringifyArrayAttributes), \n        // Add in special g.co/r resource labels\n        transformResourceToAttributes(span.resource, projectId, resourceFilter, stringifyArrayAttributes));\n        const out = {\n            attributes,\n            displayName: stringToTruncatableString(span.name),\n            links: {\n                link: span.links.map(getLinkTransformer(stringifyArrayAttributes)),\n            },\n            endTime: transformTime(span.endTime),\n            startTime: transformTime(span.startTime),\n            name: `projects/${projectId}/traces/${span.spanContext().traceId}/spans/${span.spanContext().spanId}`,\n            spanKind: transformKind(span.kind),\n            spanId: span.spanContext().spanId,\n            sameProcessAsParentSpan: { value: !span.spanContext().isRemote },\n            status: transformStatus(span.status),\n            timeEvents: {\n                timeEvent: span.events.map(e => {\n                    var _a;\n                    return ({\n                        time: transformTime(e.time),\n                        annotation: {\n                            attributes: transformAttributes((_a = e.attributes) !== null && _a !== void 0 ? _a : {}, stringifyArrayAttributes),\n                            description: stringToTruncatableString(e.name),\n                        },\n                    });\n                }),\n            },\n        };\n        if (span.parentSpanId) {\n            out.parentSpanId = span.parentSpanId;\n        }\n        return out;\n    };\n}\nexports.getReadableSpanTransformer = getReadableSpanTransformer;\nfunction transformStatus(status) {\n    switch (status.code) {\n        case ot.SpanStatusCode.UNSET:\n            return undefined;\n        case ot.SpanStatusCode.OK:\n            return { code: types_1.Code.OK };\n        case ot.SpanStatusCode.ERROR:\n            return { code: types_1.Code.UNKNOWN, message: status.message };\n        default: {\n            exhaust(status.code);\n            // TODO: log failed mapping\n            return { code: types_1.Code.UNKNOWN, message: status.message };\n        }\n    }\n}\nfunction transformKind(kind) {\n    switch (kind) {\n        case ot.SpanKind.INTERNAL:\n            return types_1.SpanKind.INTERNAL;\n        case ot.SpanKind.SERVER:\n            return types_1.SpanKind.SERVER;\n        case ot.SpanKind.CLIENT:\n            return types_1.SpanKind.CLIENT;\n        case ot.SpanKind.PRODUCER:\n            return types_1.SpanKind.PRODUCER;\n        case ot.SpanKind.CONSUMER:\n            return types_1.SpanKind.CONSUMER;\n        default: {\n            exhaust(kind);\n            // TODO: log failed mapping\n            return types_1.SpanKind.SPAN_KIND_UNSPECIFIED;\n        }\n    }\n}\n/**\n * Assert switch case is exhaustive\n */\nfunction exhaust(switchValue) {\n    return switchValue;\n}\nfunction transformTime(time) {\n    return {\n        seconds: time[0],\n        nanos: time[1],\n    };\n}\nfunction getLinkTransformer(stringifyArrayAttributes) {\n    return link => {\n        var _a;\n        return ({\n            attributes: transformAttributes((_a = link.attributes) !== null && _a !== void 0 ? _a : {}, stringifyArrayAttributes),\n            spanId: link.context.spanId,\n            traceId: link.context.traceId,\n            type: types_1.LinkType.UNSPECIFIED,\n        });\n    };\n}\nfunction transformAttributes(attributes, stringifyArrayAttributes) {\n    const changedAttributes = transformAttributeNames(attributes);\n    return spanAttributesToGCTAttributes(changedAttributes, stringifyArrayAttributes);\n}\nfunction spanAttributesToGCTAttributes(attributes, stringifyArrayAttributes) {\n    const attributeMap = transformAttributeValues(attributes, stringifyArrayAttributes);\n    return {\n        attributeMap,\n        droppedAttributesCount: Object.keys(attributes).length - Object.keys(attributeMap).length,\n    };\n}\nfunction mergeAttributes(...attributeList) {\n    const attributesOut = {\n        attributeMap: {},\n        droppedAttributesCount: 0,\n    };\n    attributeList.forEach(attributes => {\n        var _a;\n        Object.assign(attributesOut.attributeMap, attributes.attributeMap);\n        attributesOut.droppedAttributesCount +=\n            (_a = attributes.droppedAttributesCount) !== null && _a !== void 0 ? _a : 0;\n    });\n    return attributesOut;\n}\nfunction transformResourceToAttributes(resource, projectId, resourceFilter, stringifyArrayAttributes) {\n    const monitoredResource = (0, opentelemetry_resource_util_1.mapOtelResourceToMonitoredResource)(resource);\n    const attributes = {};\n    if (resourceFilter) {\n        Object.keys(resource.attributes)\n            .filter(key => resourceFilter.test(key))\n            .forEach(key => {\n            attributes[key] = resource.attributes[key];\n        });\n    }\n    // global is the \"default\" so just skip\n    if (monitoredResource.type !== 'global') {\n        Object.keys(monitoredResource.labels).forEach(labelKey => {\n            const key = `g.co/r/${monitoredResource.type}/${labelKey}`;\n            attributes[key] = monitoredResource.labels[labelKey];\n        });\n    }\n    return spanAttributesToGCTAttributes(attributes, stringifyArrayAttributes);\n}\nfunction transformAttributeValues(attributes, stringifyArrayAttributes) {\n    const out = {};\n    for (const [key, value] of Object.entries(attributes)) {\n        if (value === undefined) {\n            continue;\n        }\n        const attributeValue = valueToAttributeValue(value, stringifyArrayAttributes);\n        if (attributeValue !== undefined) {\n            out[key] = attributeValue;\n        }\n    }\n    return out;\n}\nfunction stringToTruncatableString(value) {\n    return { value };\n}\nfunction valueToAttributeValue(value, stringifyArrayAttributes) {\n    switch (typeof value) {\n        case 'number':\n            // TODO: Consider to change to doubleValue when available in V2 API.\n            return { intValue: String(Math.round(value)) };\n        case 'boolean':\n            return { boolValue: value };\n        case 'string':\n            return { stringValue: stringToTruncatableString(value) };\n        default:\n            if (stringifyArrayAttributes) {\n                return { stringValue: stringToTruncatableString(JSON.stringify(value)) };\n            }\n            // TODO: Handle array types without stringification once API level support is added\n            return undefined;\n    }\n}\nconst HTTP_ATTRIBUTE_MAPPING = {\n    'http.method': '/http/method',\n    'http.url': '/http/url',\n    'http.host': '/http/host',\n    'http.scheme': '/http/client_protocol',\n    'http.status_code': '/http/status_code',\n    'http.user_agent': '/http/user_agent',\n    'http.request_content_length': '/http/request/size',\n    'http.response_content_length': '/http/response/size',\n    'http.route': '/http/route',\n};\nfunction transformAttributeNames(attributes) {\n    const out = {};\n    for (const [key, value] of Object.entries(attributes)) {\n        if (HTTP_ATTRIBUTE_MAPPING[key]) {\n            out[HTTP_ATTRIBUTE_MAPPING[key]] = value;\n        }\n        else {\n            out[key] = value;\n        }\n    }\n    return out;\n}\n//# sourceMappingURL=transform.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4895, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-trace-exporter/build/src/trace.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceExporter = void 0;\nconst core_1 = require(\"@opentelemetry/core\");\nconst api_1 = require(\"@opentelemetry/api\");\nconst protoloader = require(\"@grpc/proto-loader\");\nconst grpc = require(\"@grpc/grpc-js\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst util_1 = require(\"util\");\nconst transform_1 = require(\"./transform\");\nconst version_1 = require(\"./version\");\nconst protoJson = require(\"../protos/protos.json\");\nconst OT_REQUEST_HEADER = 'x-opentelemetry-outgoing-request';\nconst TRACE_USER_AGENT = `opentelemetry-js ${core_1.VERSION}; google-cloud-trace-exporter ${version_1.VERSION}`;\nconst OPTIONS = {\n    'grpc.primary_user_agent': TRACE_USER_AGENT,\n};\n/**\n * Format and sends span information to Google Cloud Trace.\n */\nclass TraceExporter {\n    constructor(options = {}) {\n        var _a;\n        this._traceServiceClient = undefined;\n        this._resourceFilter = undefined;\n        this._apiEndpoint = 'cloudtrace.googleapis.com:443';\n        this._resourceFilter = options.resourceFilter;\n        this._stringifyArrayAttributes = (_a = options.stringifyArrayAttributes) !== null && _a !== void 0 ? _a : false;\n        this._auth = new google_auth_library_1.GoogleAuth({\n            credentials: options.credentials,\n            keyFile: options.keyFile,\n            keyFilename: options.keyFilename,\n            projectId: options.projectId,\n            scopes: ['https://www.googleapis.com/auth/cloud-platform'],\n        });\n        // Start this async process as early as possible. It will be\n        // awaited on the first export because constructors are synchronous\n        this._projectId = this._auth.getProjectId().catch(err => {\n            api_1.diag.error(err);\n        });\n        if (options.apiEndpoint) {\n            this._apiEndpoint = options.apiEndpoint;\n        }\n    }\n    /**\n     * Publishes a list of spans to Google Cloud Trace.\n     * @param spans The list of spans to transmit to Google Cloud Trace\n     */\n    async export(spans, resultCallback) {\n        if (this._projectId instanceof Promise) {\n            this._projectId = await this._projectId;\n        }\n        if (!this._projectId) {\n            return resultCallback({\n                code: core_1.ExportResultCode.FAILED,\n                error: new Error('Was not able to determine GCP project ID'),\n            });\n        }\n        api_1.diag.debug('Google Cloud Trace export');\n        const namedSpans = {\n            name: `projects/${this._projectId}`,\n            spans: spans.map((0, transform_1.getReadableSpanTransformer)(this._projectId, this._resourceFilter, this._stringifyArrayAttributes)),\n        };\n        const result = await this._batchWriteSpans(namedSpans);\n        resultCallback(result);\n    }\n    async shutdown() { }\n    /**\n     * Sends new spans to new or existing traces in the Google Cloud Trace format to the\n     * service.\n     * @param spans\n     */\n    async _batchWriteSpans(spans) {\n        api_1.diag.debug('Google Cloud Trace batch writing traces');\n        try {\n            this._traceServiceClient = await this._getClient();\n        }\n        catch (e) {\n            const error = asError(e);\n            error.message = `failed to create client: ${error.message}`;\n            api_1.diag.error(error.message);\n            return { code: core_1.ExportResultCode.FAILED, error };\n        }\n        const metadata = new grpc.Metadata();\n        metadata.add(OT_REQUEST_HEADER, '1');\n        metadata.add('user-agent', TRACE_USER_AGENT);\n        const batchWriteSpans = (0, util_1.promisify)(this._traceServiceClient.BatchWriteSpans).bind(this._traceServiceClient);\n        try {\n            await batchWriteSpans(spans, metadata);\n            api_1.diag.debug('batchWriteSpans successfully');\n            return { code: core_1.ExportResultCode.SUCCESS };\n        }\n        catch (e) {\n            const error = asError(e);\n            error.message = `batchWriteSpans error: ${error.message}`;\n            api_1.diag.error(error.message);\n            return { code: core_1.ExportResultCode.FAILED, error };\n        }\n    }\n    /**\n     * If the rpc client is not already initialized,\n     * authenticates with google credentials and initializes the rpc client\n     */\n    async _getClient() {\n        if (this._traceServiceClient) {\n            return this._traceServiceClient;\n        }\n        api_1.diag.debug('Google Cloud Trace authenticating');\n        const creds = await this._auth.getClient();\n        api_1.diag.debug('Google Cloud Trace got authentication. Initializaing rpc client');\n        const packageDefinition = protoloader.fromJSON(protoJson);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const { google } = grpc.loadPackageDefinition(packageDefinition);\n        const traceService = google.devtools.cloudtrace.v2.TraceService;\n        const sslCreds = grpc.credentials.createSsl();\n        const callCreds = grpc.credentials.createFromGoogleCredential(creds);\n        return new traceService(this._apiEndpoint, grpc.credentials.combineChannelCredentials(sslCreds, callCreds), OPTIONS);\n    }\n}\nexports.TraceExporter = TraceExporter;\nfunction asError(error) {\n    if (error instanceof Error) {\n        return error;\n    }\n    return new Error(String(error));\n}\n//# sourceMappingURL=trace.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5045, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/alvi/IOMS/IOMS_V1_POS_Working_main_20_08_2025/node_modules/%40google-cloud/opentelemetry-cloud-trace-exporter/build/src/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./external-types\"), exports);\n__exportStar(require(\"./trace\"), exports);\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAS,CAAC,EAAE,QAAO;IACjE,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAS,IAAI,gBAAgB,UAAS,GAAG;AAC3H;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,sKAA0C;AAC1C,6JAAiC,UACjC,iCAAiC","ignoreList":[0],"debugId":null}}]
}